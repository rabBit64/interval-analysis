; ModuleID = '/tmp/tmp.ll'
source_filename = "c/dancer-xml-0.8.2.1.c"
target datalayout = "e-m:o-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-apple-macosx10.15.0"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, i8*, i8*, i8*, i8*, i32, i32, [24 x i8] }
%struct._IO_marker = type { %struct._IO_marker*, %struct._IO_FILE*, i32 }
%struct.dxml_element = type { i8*, i32, %struct.dxml_attribute*, %struct.dxml_element*, %struct.dxml_element* }
%struct.dxml_attribute = type { i8*, i8*, %struct.dxml_attribute* }

@.str = private unnamed_addr constant [7 x i8] c"letter\00", align 1
@.str.1 = private unnamed_addr constant [7 x i8] c"report\00", align 1
@.str.2 = private unnamed_addr constant [2 x i8] c"p\00", align 1
@.str.3 = private unnamed_addr constant [8 x i8] c"jreport\00", align 1
@.str.4 = private unnamed_addr constant [4 x i8] c"a4j\00", align 1
@stderr = external global %struct._IO_FILE*, align 8
@.str.5 = private unnamed_addr constant [25 x i8] c"Unknown option -%c used\0A\00", align 1
@.str.6 = private unnamed_addr constant [6 x i8] c"%s%s\0A\00", align 1
@.str.7 = private unnamed_addr constant [29 x i8] c"%%Generated by dxml-db2latex\00", align 1
@.str.8 = private unnamed_addr constant [8 x i8] c"0.8.2.1\00", align 1
@stdin = external global %struct._IO_FILE*, align 8
@.str.9 = private unnamed_addr constant [62 x i8] c"\\documentclass[%s]{%s}\0A\\usepackage{moreverb}\0A\\date{}\0A\\author{\00", align 1
@.str.10 = private unnamed_addr constant [33 x i8] c"book/bookinfo/authorgroup/author\00", align 1
@.str.11 = private unnamed_addr constant [3 x i8] c", \00", align 1
@.str.12 = private unnamed_addr constant [17 x i8] c"author/firstname\00", align 1
@.str.13 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.14 = private unnamed_addr constant [15 x i8] c"author/surname\00", align 1
@.str.15 = private unnamed_addr constant [7 x i8] c"author\00", align 1
@.str.16 = private unnamed_addr constant [3 x i8] c"}\0A\00", align 1
@.str.17 = private unnamed_addr constant [8 x i8] c"\\title{\00", align 1
@.str.18 = private unnamed_addr constant [11 x i8] c"book/title\00", align 1
@.str.19 = private unnamed_addr constant [20 x i8] c"book/bookinfo/title\00", align 1
@.str.20 = private unnamed_addr constant [48 x i8] c"}\0A\\begin{document}\0A\\maketitle\0A\\tableofcontents\0A\00", align 1
@.str.21 = private unnamed_addr constant [5 x i8] c"book\00", align 1
@.str.22 = private unnamed_addr constant [16 x i8] c"\\end{document}\0A\00", align 1
@.str.23 = private unnamed_addr constant [28 x i8] c"Something wicked happened!\0A\00", align 1
@.str.24 = private unnamed_addr constant [40 x i8] c"Garbage is loaded in read_xml prologue\0A\00", align 1
@.str.25 = private unnamed_addr constant [36 x i8] c"loadxml, internal error: e is NULL\0A\00", align 1
@.str.26 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@counter_chapter = global [5 x i32] zeroinitializer, align 16, !dbg !0
@c_chapter = constant i32 0, align 4, !dbg !100
@c_sect1 = constant i32 1, align 4, !dbg !104
@c_sect2 = constant i32 2, align 4, !dbg !106
@c_sect3 = constant i32 3, align 4, !dbg !108
@.str.27 = private unnamed_addr constant [5 x i8] c"\\${}\00", align 1
@.str.28 = private unnamed_addr constant [14 x i8] c"\\underline{ }\00", align 1
@.str.29 = private unnamed_addr constant [9 x i8] c"\\verb'\\'\00", align 1
@.str.30 = private unnamed_addr constant [9 x i8] c"\\verb!^!\00", align 1
@.str.31 = private unnamed_addr constant [5 x i8] c"\\~\\ \00", align 1
@.str.32 = private unnamed_addr constant [5 x i8] c"\\\\%%\00", align 1
@.str.33 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.34 = private unnamed_addr constant [9 x i8] c"$\\sharp$\00", align 1
@.str.35 = private unnamed_addr constant [6 x i8] c"{}[{}\00", align 1
@.str.36 = private unnamed_addr constant [6 x i8] c"{}]{}\00", align 1
@.str.37 = private unnamed_addr constant [17 x i8] c"Unterminated & \0A\00", align 1
@stdout = external global %struct._IO_FILE*, align 8
@.str.38 = private unnamed_addr constant [3 x i8] c"gt\00", align 1
@.str.39 = private unnamed_addr constant [3 x i8] c"lt\00", align 1
@.str.40 = private unnamed_addr constant [4 x i8] c"amp\00", align 1
@.str.41 = private unnamed_addr constant [19 x i8] c"unknown entity %s\0A\00", align 1
@.str.42 = private unnamed_addr constant [5 x i8] c"\\&{}\00", align 1
@.str.43 = private unnamed_addr constant [4 x i8] c"$<$\00", align 1
@.str.44 = private unnamed_addr constant [4 x i8] c"$>$\00", align 1
@.str.45 = private unnamed_addr constant [8 x i8] c"chapter\00", align 1
@.str.46 = private unnamed_addr constant [11 x i8] c"\0A\\chapter{\00", align 1
@.str.47 = private unnamed_addr constant [6 x i8] c"title\00", align 1
@.str.48 = private unnamed_addr constant [4 x i8] c"}\0A\0A\00", align 1
@.str.49 = private unnamed_addr constant [3 x i8] c"id\00", align 1
@.str.50 = private unnamed_addr constant [12 x i8] c"\\label{%s}\0A\00", align 1
@.str.51 = private unnamed_addr constant [30 x i8] c"element type for b was wrong\0A\00", align 1
@.str.52 = private unnamed_addr constant [6 x i8] c"sect1\00", align 1
@.str.53 = private unnamed_addr constant [8 x i8] c"section\00", align 1
@.str.54 = private unnamed_addr constant [6 x i8] c"sect2\00", align 1
@.str.55 = private unnamed_addr constant [6 x i8] c"sect3\00", align 1
@.str.56 = private unnamed_addr constant [5 x i8] c"para\00", align 1
@.str.57 = private unnamed_addr constant [13 x i8] c"itemizedlist\00", align 1
@.str.58 = private unnamed_addr constant [6 x i8] c"table\00", align 1
@.str.59 = private unnamed_addr constant [17 x i8] c"Unknown tag: %s\0A\00", align 1
@.str.60 = private unnamed_addr constant [3 x i8] c"\0A\0A\00", align 1
@.str.61 = private unnamed_addr constant [17 x i8] c"\0A\\subsubsection{\00", align 1
@.str.62 = private unnamed_addr constant [14 x i8] c"\0A\\subsection{\00", align 1
@.str.63 = private unnamed_addr constant [11 x i8] c"\0A\\section{\00", align 1
@.str.64 = private unnamed_addr constant [7 x i8] c"screen\00", align 1
@.str.65 = private unnamed_addr constant [5 x i8] c"\0A\0A\0A\0A\00", align 1
@.str.66 = private unnamed_addr constant [8 x i8] c"{\\tt %\0A\00", align 1
@.str.67 = private unnamed_addr constant [2 x i8] c"}\00", align 1
@.str.68 = private unnamed_addr constant [7 x i8] c"tgroup\00", align 1
@.str.69 = private unnamed_addr constant [5 x i8] c"cols\00", align 1
@.str.70 = private unnamed_addr constant [28 x i8] c"\\begin{table}\0A\\caption{%s}\0A\00", align 1
@.str.71 = private unnamed_addr constant [24 x i8] c"\\begin{tabular}{p{%icm}\00", align 1
@.str.72 = private unnamed_addr constant [9 x i8] c"|p{%icm}\00", align 1
@.str.73 = private unnamed_addr constant [17 x i8] c"}\0A\\hline\0A\\hline\0A\00", align 1
@.str.74 = private unnamed_addr constant [17 x i8] c"tgroup/tbody/row\00", align 1
@.str.75 = private unnamed_addr constant [4 x i8] c" & \00", align 1
@.str.76 = private unnamed_addr constant [4 x i8] c"\\\\\0A\00", align 1
@.str.77 = private unnamed_addr constant [41 x i8] c"\\hline\0A\\hline\0A\\end{tabular}\0A\\end{table}\0A\00", align 1
@.str.78 = private unnamed_addr constant [17 x i8] c"\\begin{itemize}\0A\00", align 1
@.str.79 = private unnamed_addr constant [9 x i8] c"listitem\00", align 1
@.str.80 = private unnamed_addr constant [7 x i8] c"\\item \00", align 1
@.str.81 = private unnamed_addr constant [15 x i8] c"\\end{itemize}\0A\00", align 1
@.str.82 = private unnamed_addr constant [8 x i8] c"command\00", align 1
@.str.83 = private unnamed_addr constant [9 x i8] c"filename\00", align 1
@.str.84 = private unnamed_addr constant [7 x i8] c"keysym\00", align 1
@.str.85 = private unnamed_addr constant [9 x i8] c"keycombo\00", align 1
@.str.86 = private unnamed_addr constant [10 x i8] c"otheraddr\00", align 1
@.str.87 = private unnamed_addr constant [9 x i8] c"function\00", align 1
@.str.88 = private unnamed_addr constant [7 x i8] c"prompt\00", align 1
@.str.89 = private unnamed_addr constant [5 x i8] c"type\00", align 1
@.str.90 = private unnamed_addr constant [12 x i8] c"productname\00", align 1
@.str.91 = private unnamed_addr constant [8 x i8] c"address\00", align 1
@.str.92 = private unnamed_addr constant [7 x i8] c"option\00", align 1
@.str.93 = private unnamed_addr constant [10 x i8] c"parameter\00", align 1
@.str.94 = private unnamed_addr constant [12 x i8] c"replaceable\00", align 1
@.str.95 = private unnamed_addr constant [9 x i8] c"emphasis\00", align 1
@.str.96 = private unnamed_addr constant [6 x i8] c"quote\00", align 1
@.str.97 = private unnamed_addr constant [9 x i8] c"footnote\00", align 1
@.str.98 = private unnamed_addr constant [5 x i8] c"xref\00", align 1
@.str.99 = private unnamed_addr constant [5 x i8] c"link\00", align 1
@.str.100 = private unnamed_addr constant [6 x i8] c"ulink\00", align 1
@.str.101 = private unnamed_addr constant [6 x i8] c"email\00", align 1
@.str.102 = private unnamed_addr constant [7 x i8] c"({\\tt \00", align 1
@.str.103 = private unnamed_addr constant [4 x i8] c"url\00", align 1
@.str.104 = private unnamed_addr constant [3 x i8] c"})\00", align 1
@.str.105 = private unnamed_addr constant [8 x i8] c"linkend\00", align 1
@.str.106 = private unnamed_addr constant [9 x i8] c"\\ref{%s}\00", align 1
@.str.107 = private unnamed_addr constant [11 x i8] c"\\footnote{\00", align 1
@.str.108 = private unnamed_addr constant [3 x i8] c"} \00", align 1
@.str.109 = private unnamed_addr constant [4 x i8] c" ``\00", align 1
@.str.110 = private unnamed_addr constant [4 x i8] c"'' \00", align 1
@.str.111 = private unnamed_addr constant [5 x i8] c"{\\b \00", align 1
@.str.112 = private unnamed_addr constant [6 x i8] c"{\\it \00", align 1
@.str.113 = private unnamed_addr constant [6 x i8] c"{\\tt \00", align 1
@.str.114 = private unnamed_addr constant [4 x i8] c"<%s\00", align 1
@.str.115 = private unnamed_addr constant [3 x i8] c">\0A\00", align 1
@.str.116 = private unnamed_addr constant [7 x i8] c"</%s>\0A\00", align 1
@.str.117 = private unnamed_addr constant [4 x i8] c"%s\0A\00", align 1
@.str.118 = private unnamed_addr constant [9 x i8] c" %s=\22%s\22\00", align 1
@.str.119 = private unnamed_addr constant [57 x i8] c"Reading element failed due to possibly unclosed braces.\0A\00", align 1
@.str.120 = private unnamed_addr constant [5 x i8] c"> /\09\00", align 1
@.str.121 = private unnamed_addr constant [40 x i8] c"Unexpected EOF found while parsing <%s\0A\00", align 1
@.str.122 = private unnamed_addr constant [16 x i8] c"unexpected EOF\0A\00", align 1
@.str.123 = private unnamed_addr constant [26 x i8] c"Unexpected > in document\0A\00", align 1
@.str.124 = private unnamed_addr constant [6 x i8] c"> \09\0A\0D\00", align 1
@.str.125 = private unnamed_addr constant [57 x i8] c"Bad element name, tag opened with %s and closed with %s\0A\00", align 1
@.str.126 = private unnamed_addr constant [37 x i8] c"Out of memory in initialize_element\0A\00", align 1
@.str.127 = private unnamed_addr constant [32 x i8] c"Premature EOF found reading PI\0A\00", align 1
@.str.128 = private unnamed_addr constant [46 x i8] c"While reading PI, an extra < was encountered\0A\00", align 1
@.str.129 = private unnamed_addr constant [36 x i8] c"Out of memory for realloc in %s %i\0A\00", align 1
@.str.130 = private unnamed_addr constant [63 x i8] c"/home/wslee/benchmarks/textformat/dancer-xml-0.8.2.1/loadxml.c\00", align 1
@.str.131 = private unnamed_addr constant [6 x i8] c"> /\09=\00", align 1
@.str.132 = private unnamed_addr constant [2 x i8] c"\22\00", align 1
@.str.133 = private unnamed_addr constant [2 x i8] c"'\00", align 1
@.str.134 = private unnamed_addr constant [43 x i8] c"Error with startquote, needs to be \22 or '\0A\00", align 1
@.str.135 = private unnamed_addr constant [3 x i8] c"<>\00", align 1
@.str.136 = private unnamed_addr constant [24 x i8] c"Unexpected end-of-file\0A\00", align 1
@.str.137 = private unnamed_addr constant [44 x i8] c"Expected token '%c', but got '%c' instead \0A\00", align 1
@.str.138 = private unnamed_addr constant [36 x i8] c"loadxml, internal error: a is NULL\0A\00", align 1

; Function Attrs: noinline nounwind ssp uwtable
define i32 @main(i32 %argc, i8** %argv) #0 !dbg !119 {
entry:
  call void @llvm.dbg.value(metadata i32 %argc, metadata !125, metadata !DIExpression()), !dbg !126
  call void @llvm.dbg.value(metadata i8** %argv, metadata !127, metadata !DIExpression()), !dbg !126
  call void @llvm.dbg.declare(metadata !124, metadata !128, metadata !DIExpression()), !dbg !129
  call void @llvm.dbg.declare(metadata !124, metadata !130, metadata !DIExpression()), !dbg !131
  call void @llvm.dbg.declare(metadata !124, metadata !132, metadata !DIExpression()), !dbg !133
  call void @llvm.dbg.declare(metadata !124, metadata !134, metadata !DIExpression()), !dbg !135
  call void @llvm.dbg.declare(metadata !124, metadata !136, metadata !DIExpression()), !dbg !137
  call void @llvm.dbg.declare(metadata !124, metadata !138, metadata !DIExpression()), !dbg !139
  call void @llvm.dbg.declare(metadata !124, metadata !140, metadata !DIExpression()), !dbg !141
  call void @llvm.dbg.declare(metadata !124, metadata !142, metadata !DIExpression()), !dbg !143
  call void @llvm.dbg.declare(metadata !124, metadata !144, metadata !DIExpression()), !dbg !145
  call void @llvm.dbg.declare(metadata !124, metadata !146, metadata !DIExpression()), !dbg !147
  call void @llvm.dbg.declare(metadata !124, metadata !148, metadata !DIExpression()), !dbg !149
  call void @llvm.dbg.declare(metadata !124, metadata !150, metadata !DIExpression()), !dbg !151
  call void @llvm.dbg.declare(metadata !124, metadata !152, metadata !DIExpression()), !dbg !153
  call void @llvm.dbg.declare(metadata !124, metadata !154, metadata !DIExpression()), !dbg !155
  call void @llvm.dbg.declare(metadata !124, metadata !156, metadata !DIExpression()), !dbg !157
  call void @llvm.dbg.declare(metadata !124, metadata !158, metadata !DIExpression()), !dbg !159
  call void @llvm.dbg.declare(metadata !124, metadata !160, metadata !DIExpression()), !dbg !161
  call void @llvm.dbg.declare(metadata !124, metadata !162, metadata !DIExpression()), !dbg !163
  call void @llvm.dbg.declare(metadata !124, metadata !164, metadata !DIExpression()), !dbg !165
  call void @llvm.dbg.declare(metadata !124, metadata !166, metadata !DIExpression()), !dbg !167
  call void @llvm.dbg.declare(metadata !124, metadata !168, metadata !DIExpression()), !dbg !169
  call void @llvm.dbg.declare(metadata !124, metadata !170, metadata !DIExpression()), !dbg !171
  call void @llvm.dbg.declare(metadata !124, metadata !172, metadata !DIExpression()), !dbg !173
  call void @llvm.dbg.declare(metadata !124, metadata !174, metadata !DIExpression()), !dbg !175
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i32 0, i32 0), metadata !176, metadata !DIExpression()), !dbg !126
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i32 0, i32 0), metadata !177, metadata !DIExpression()), !dbg !126
  br label %while.body, !dbg !178

while.body:                                       ; preds = %switch_break, %entry
  %papersize.0 = phi i8* [ getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i32 0, i32 0), %entry ], [ getelementptr inbounds ([4 x i8], [4 x i8]* @.str.4, i32 0, i32 0), %switch_break ], !dbg !182
  %articletype.0 = phi i8* [ getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i32 0, i32 0), %entry ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.3, i32 0, i32 0), %switch_break ], !dbg !182
  call void @llvm.dbg.value(metadata i8* %articletype.0, metadata !177, metadata !DIExpression()), !dbg !126
  call void @llvm.dbg.value(metadata i8* %papersize.0, metadata !176, metadata !DIExpression()), !dbg !126
  br label %while_continue___1, !dbg !183

while_continue___1:                               ; preds = %while.body
  br label %while_continue, !dbg !183

while_continue:                                   ; preds = %while_continue___1
  %call = call i32 @getopt(i32 %argc, i8** %argv, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i32 0, i32 0)) #7, !dbg !184
  call void @llvm.dbg.value(metadata i32 %call, metadata !188, metadata !DIExpression()), !dbg !126
  %cmp = icmp ne i32 %call, -1, !dbg !189
  br i1 %cmp, label %if.end, label %if.then, !dbg !191

if.then:                                          ; preds = %while_continue
  br label %while_break, !dbg !192

if.end:                                           ; preds = %while_continue
  %cmp1 = icmp eq i32 %call, 112, !dbg !194
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !197

if.then2:                                         ; preds = %if.end
  br label %case_112, !dbg !198

if.end3:                                          ; preds = %if.end
  %cmp4 = icmp eq i32 %call, 63, !dbg !200
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !202

if.then5:                                         ; preds = %if.end3
  br label %case_63, !dbg !203

if.end6:                                          ; preds = %if.end3
  br label %switch_default, !dbg !205

case_112:                                         ; preds = %if.then2
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.3, i32 0, i32 0), metadata !177, metadata !DIExpression()), !dbg !126
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.4, i32 0, i32 0), metadata !176, metadata !DIExpression()), !dbg !126
  br label %switch_break, !dbg !206

case_63:                                          ; preds = %if.then5
  br label %return, !dbg !207

switch_default:                                   ; preds = %if.end6
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !208
  %call7 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.5, i32 0, i32 0), i32 %call), !dbg !211
  br label %return, !dbg !212

switch_break:                                     ; preds = %case_112
  br label %while.body, !dbg !178, !llvm.loop !213

while_break___1:                                  ; No predecessors!
  br label %while_break, !dbg !215

while_break:                                      ; preds = %while_break___1, %if.then
  %call8 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.6, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.7, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.8, i32 0, i32 0)), !dbg !216
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !219
  %call9 = call %struct.dxml_element* @dxml_read_xml(%struct._IO_FILE* %1), !dbg !221
  call void @llvm.dbg.value(metadata %struct.dxml_element* %call9, metadata !222, metadata !DIExpression()), !dbg !126
  %tobool = icmp ne %struct.dxml_element* %call9, null, !dbg !223
  br i1 %tobool, label %if.then10, label %if.else42, !dbg !225

if.then10:                                        ; preds = %while_break
  call void @llvm.dbg.value(metadata i8* null, metadata !226, metadata !DIExpression()), !dbg !126
  %call11 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.9, i32 0, i32 0), i8* %papersize.0, i8* %articletype.0), !dbg !227
  call void @llvm.dbg.value(metadata i32 0, metadata !231, metadata !DIExpression()), !dbg !126
  %call12 = call %struct.dxml_element* @dxml_get_element_bysimplepath(%struct.dxml_element* %call9, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.10, i32 0, i32 0)), !dbg !232
  call void @llvm.dbg.value(metadata %struct.dxml_element* %call12, metadata !234, metadata !DIExpression()), !dbg !126
  br label %while.body13, !dbg !235

while.body13:                                     ; preds = %if.end20, %if.then10
  %authorlink.0 = phi %struct.dxml_element* [ %call12, %if.then10 ], [ %call26, %if.end20 ], !dbg !238
  %notfirst.0 = phi i32 [ 0, %if.then10 ], [ %notfirst.1, %if.end20 ], !dbg !239
  call void @llvm.dbg.value(metadata i32 %notfirst.0, metadata !231, metadata !DIExpression()), !dbg !126
  call void @llvm.dbg.value(metadata %struct.dxml_element* %authorlink.0, metadata !234, metadata !DIExpression()), !dbg !126
  br label %while_continue___2, !dbg !240

while_continue___2:                               ; preds = %while.body13
  br label %while_continue___0, !dbg !240

while_continue___0:                               ; preds = %while_continue___2
  %tobool14 = icmp ne %struct.dxml_element* %authorlink.0, null, !dbg !241
  br i1 %tobool14, label %if.end16, label %if.then15, !dbg !244

if.then15:                                        ; preds = %while_continue___0
  br label %while_break___0, !dbg !245

if.end16:                                         ; preds = %while_continue___0
  %tobool17 = icmp ne i32 %notfirst.0, 0, !dbg !247
  br i1 %tobool17, label %if.then18, label %if.else, !dbg !249

if.then18:                                        ; preds = %if.end16
  %call19 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.11, i32 0, i32 0)), !dbg !250
  br label %if.end20, !dbg !254

if.else:                                          ; preds = %if.end16
  call void @llvm.dbg.value(metadata i32 1, metadata !231, metadata !DIExpression()), !dbg !126
  br label %if.end20

if.end20:                                         ; preds = %if.else, %if.then18
  %notfirst.1 = phi i32 [ %notfirst.0, %if.then18 ], [ 1, %if.else ], !dbg !238
  call void @llvm.dbg.value(metadata i32 %notfirst.1, metadata !231, metadata !DIExpression()), !dbg !126
  %call21 = call i8* @dxml_get_PCDATA_bysimplepath(%struct.dxml_element* %authorlink.0, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.12, i32 0, i32 0)), !dbg !255
  call void @llvm.dbg.value(metadata i8* %call21, metadata !258, metadata !DIExpression()), !dbg !126
  %call22 = call i32 @convert_print(i8* %call21, i32 0), !dbg !259
  %call23 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.13, i32 0, i32 0)), !dbg !261
  %call24 = call i8* @dxml_get_PCDATA_bysimplepath(%struct.dxml_element* %authorlink.0, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.14, i32 0, i32 0)), !dbg !263
  call void @llvm.dbg.value(metadata i8* %call24, metadata !265, metadata !DIExpression()), !dbg !126
  %call25 = call i32 @convert_print(i8* %call24, i32 0), !dbg !266
  %next = getelementptr inbounds %struct.dxml_element, %struct.dxml_element* %authorlink.0, i32 0, i32 4, !dbg !268
  %2 = load %struct.dxml_element*, %struct.dxml_element** %next, align 8, !dbg !268
  %call26 = call %struct.dxml_element* @dxml_get_element_byname(%struct.dxml_element* %2, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.15, i32 0, i32 0)), !dbg !270
  call void @llvm.dbg.value(metadata %struct.dxml_element* %call26, metadata !234, metadata !DIExpression()), !dbg !126
  br label %while.body13, !dbg !235, !llvm.loop !271

while_break___2:                                  ; No predecessors!
  br label %while_break___0, !dbg !273

while_break___0:                                  ; preds = %while_break___2, %if.then15
  %call27 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.16, i32 0, i32 0)), !dbg !274
  %call28 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.17, i32 0, i32 0)), !dbg !277
  %call29 = call i8* @dxml_get_PCDATA_bysimplepath(%struct.dxml_element* %call9, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.18, i32 0, i32 0)), !dbg !279
  call void @llvm.dbg.value(metadata i8* %call29, metadata !226, metadata !DIExpression()), !dbg !126
  %tobool30 = icmp ne i8* %call29, null, !dbg !281
  br i1 %tobool30, label %if.end33, label %if.then31, !dbg !283

if.then31:                                        ; preds = %while_break___0
  %call32 = call i8* @dxml_get_PCDATA_bysimplepath(%struct.dxml_element* %call9, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.19, i32 0, i32 0)), !dbg !284
  call void @llvm.dbg.value(metadata i8* %call32, metadata !226, metadata !DIExpression()), !dbg !126
  br label %if.end33, !dbg !288

if.end33:                                         ; preds = %if.then31, %while_break___0
  %title.0 = phi i8* [ %call29, %while_break___0 ], [ %call32, %if.then31 ], !dbg !238
  call void @llvm.dbg.value(metadata i8* %title.0, metadata !226, metadata !DIExpression()), !dbg !126
  %tobool34 = icmp ne i8* %title.0, null, !dbg !289
  br i1 %tobool34, label %if.then35, label %if.end37, !dbg !291

if.then35:                                        ; preds = %if.end33
  %call36 = call i32 @convert_print(i8* %title.0, i32 0), !dbg !292
  br label %if.end37, !dbg !296

if.end37:                                         ; preds = %if.then35, %if.end33
  %call38 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.20, i32 0, i32 0)), !dbg !297
  %call39 = call %struct.dxml_element* @dxml_get_element_byname(%struct.dxml_element* %call9, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.21, i32 0, i32 0)), !dbg !300
  call void @llvm.dbg.value(metadata %struct.dxml_element* %call39, metadata !302, metadata !DIExpression()), !dbg !126
  %child = getelementptr inbounds %struct.dxml_element, %struct.dxml_element* %call39, i32 0, i32 3, !dbg !303
  %3 = load %struct.dxml_element*, %struct.dxml_element** %child, align 8, !dbg !303
  %call40 = call i32 @recursebook(%struct.dxml_element* %3), !dbg !305
  %call41 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.22, i32 0, i32 0)), !dbg !306
  br label %if.end44, !dbg !308

if.else42:                                        ; preds = %while_break
  %call43 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.23, i32 0, i32 0)), !dbg !309
  br label %return, !dbg !313

if.end44:                                         ; preds = %if.end37
  br label %return, !dbg !314

return:                                           ; preds = %if.end44, %if.else42, %switch_default, %case_63
  %retval.0 = phi i32 [ 1, %case_63 ], [ 1, %switch_default ], [ 0, %if.end44 ], [ 1, %if.else42 ], !dbg !182
  ret i32 %retval.0, !dbg !315
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: nounwind
declare i32 @getopt(i32, i8**, i8*) #2

declare i32 @fprintf(%struct._IO_FILE*, i8*, ...) #3

declare i32 @printf(i8*, ...) #3

; Function Attrs: noinline nounwind ssp uwtable
define %struct.dxml_element* @dxml_read_xml(%struct._IO_FILE* %f) #0 !dbg !316 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %f, metadata !320, metadata !DIExpression()), !dbg !321
  call void @llvm.dbg.declare(metadata !124, metadata !322, metadata !DIExpression()), !dbg !323
  br label %while.body, !dbg !324

while.body:                                       ; preds = %if.end3, %entry
  br label %while_continue___1, !dbg !328

while_continue___1:                               ; preds = %while.body
  br label %while_continue, !dbg !328

while_continue:                                   ; preds = %while_continue___1
  %call = call i32 @_IO_getc(%struct._IO_FILE* %f), !dbg !329
  call void @llvm.dbg.value(metadata i32 %call, metadata !333, metadata !DIExpression()), !dbg !321
  %cmp = icmp ne i32 %call, 60, !dbg !334
  br i1 %cmp, label %if.end, label %if.then, !dbg !336

if.then:                                          ; preds = %while_continue
  br label %while_break, !dbg !337

if.end:                                           ; preds = %while_continue
  %cmp1 = icmp eq i32 %call, -1, !dbg !339
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !341

if.then2:                                         ; preds = %if.end
  br label %return, !dbg !342

if.end3:                                          ; preds = %if.end
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !344
  %call4 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.24, i32 0, i32 0)), !dbg !347
  br label %while.body, !dbg !324, !llvm.loop !348

while_break___1:                                  ; No predecessors!
  br label %while_break, !dbg !350

while_break:                                      ; preds = %while_break___1, %if.then
  br label %while.body5, !dbg !351

while.body5:                                      ; preds = %if.end13, %while_break
  br label %while_continue___2, !dbg !354

while_continue___2:                               ; preds = %while.body5
  br label %while_continue___0, !dbg !354

while_continue___0:                               ; preds = %while_continue___2
  %call6 = call %struct.dxml_element* @read_element(%struct._IO_FILE* %f), !dbg !355
  call void @llvm.dbg.value(metadata %struct.dxml_element* %call6, metadata !359, metadata !DIExpression()), !dbg !321
  %1 = ptrtoint %struct.dxml_element* %call6 to i64, !dbg !360
  %cmp7 = icmp eq i64 0, %1, !dbg !362
  br i1 %cmp7, label %if.end9, label %if.then8, !dbg !363

if.then8:                                         ; preds = %while_continue___0
  br label %while_break___0, !dbg !364

if.end9:                                          ; preds = %while_continue___0
  %call10 = call i32 @skipwhitechars(%struct._IO_FILE* %f), !dbg !366
  %call11 = call i32 @checkchar(i32 60, %struct._IO_FILE* %f), !dbg !369
  call void @llvm.dbg.value(metadata i32 %call11, metadata !371, metadata !DIExpression()), !dbg !321
  %tobool = icmp ne i32 %call11, 0, !dbg !372
  br i1 %tobool, label %if.then12, label %if.end13, !dbg !374

if.then12:                                        ; preds = %if.end9
  br label %return, !dbg !375

if.end13:                                         ; preds = %if.end9
  br label %while.body5, !dbg !351, !llvm.loop !377

while_break___2:                                  ; No predecessors!
  br label %while_break___0, !dbg !379

while_break___0:                                  ; preds = %while_break___2, %if.then8
  br label %return, !dbg !380

return:                                           ; preds = %while_break___0, %if.then12, %if.then2
  %retval.0 = phi %struct.dxml_element* [ null, %if.then2 ], [ null, %if.then12 ], [ %call6, %while_break___0 ], !dbg !381
  ret %struct.dxml_element* %retval.0, !dbg !382
}

; Function Attrs: noinline nounwind ssp uwtable
define %struct.dxml_element* @dxml_get_element_bysimplepath(%struct.dxml_element* %e, i8* %path) #0 !dbg !383 {
entry:
  call void @llvm.dbg.value(metadata %struct.dxml_element* %e, metadata !387, metadata !DIExpression()), !dbg !388
  call void @llvm.dbg.value(metadata i8* %path, metadata !389, metadata !DIExpression()), !dbg !388
  %call = call noalias i8* @strdup(i8* %path) #7, !dbg !390
  call void @llvm.dbg.value(metadata i8* %call, metadata !394, metadata !DIExpression()), !dbg !388
  call void @llvm.dbg.value(metadata i8* %call, metadata !395, metadata !DIExpression()), !dbg !388
  %tobool = icmp ne i8* %call, null, !dbg !396
  br i1 %tobool, label %if.end, label %if.then, !dbg !398

if.then:                                          ; preds = %entry
  br label %return, !dbg !399

if.end:                                           ; preds = %entry
  %call1 = call %struct.dxml_element* @dxml_get_element_bysimplepath_internal(%struct.dxml_element* %e, i8* %call), !dbg !401
  call void @llvm.dbg.value(metadata %struct.dxml_element* %call1, metadata !404, metadata !DIExpression()), !dbg !388
  call void @free(i8* %call) #7, !dbg !405
  br label %return, !dbg !407

return:                                           ; preds = %if.end, %if.then
  %retval.0 = phi %struct.dxml_element* [ %call1, %if.end ], [ null, %if.then ], !dbg !408
  ret %struct.dxml_element* %retval.0, !dbg !409
}

; Function Attrs: noinline nounwind ssp uwtable
define i8* @dxml_get_PCDATA_bysimplepath(%struct.dxml_element* %e, i8* %path) #0 !dbg !410 {
entry:
  call void @llvm.dbg.value(metadata %struct.dxml_element* %e, metadata !413, metadata !DIExpression()), !dbg !414
  call void @llvm.dbg.value(metadata i8* %path, metadata !415, metadata !DIExpression()), !dbg !414
  %call = call noalias i8* @strdup(i8* %path) #7, !dbg !416
  call void @llvm.dbg.value(metadata i8* %call, metadata !420, metadata !DIExpression()), !dbg !414
  call void @llvm.dbg.value(metadata i8* %call, metadata !421, metadata !DIExpression()), !dbg !414
  %tobool = icmp ne i8* %call, null, !dbg !422
  br i1 %tobool, label %if.end, label %if.then, !dbg !424

if.then:                                          ; preds = %entry
  br label %return, !dbg !425

if.end:                                           ; preds = %entry
  %call1 = call %struct.dxml_element* @dxml_get_element_bysimplepath_internal(%struct.dxml_element* %e, i8* %call), !dbg !427
  call void @llvm.dbg.value(metadata %struct.dxml_element* %call1, metadata !430, metadata !DIExpression()), !dbg !414
  call void @free(i8* %call) #7, !dbg !431
  %tobool2 = icmp ne %struct.dxml_element* %call1, null, !dbg !433
  br i1 %tobool2, label %if.end4, label %if.then3, !dbg !435

if.then3:                                         ; preds = %if.end
  br label %return, !dbg !436

if.end4:                                          ; preds = %if.end
  %child = getelementptr inbounds %struct.dxml_element, %struct.dxml_element* %call1, i32 0, i32 3, !dbg !438
  %0 = load %struct.dxml_element*, %struct.dxml_element** %child, align 8, !dbg !438
  call void @llvm.dbg.value(metadata %struct.dxml_element* %0, metadata !430, metadata !DIExpression()), !dbg !414
  %tobool5 = icmp ne %struct.dxml_element* %0, null, !dbg !439
  br i1 %tobool5, label %if.end7, label %if.then6, !dbg !441

if.then6:                                         ; preds = %if.end4
  br label %return, !dbg !442

if.end7:                                          ; preds = %if.end4
  br label %while.body, !dbg !444

while.body:                                       ; preds = %if.end12, %if.end7
  %e2.0 = phi %struct.dxml_element* [ %0, %if.end7 ], [ %2, %if.end12 ], !dbg !447
  call void @llvm.dbg.value(metadata %struct.dxml_element* %e2.0, metadata !430, metadata !DIExpression()), !dbg !414
  br label %while_continue___0, !dbg !448

while_continue___0:                               ; preds = %while.body
  br label %while_continue, !dbg !448

while_continue:                                   ; preds = %while_continue___0
  %element_type = getelementptr inbounds %struct.dxml_element, %struct.dxml_element* %e2.0, i32 0, i32 1, !dbg !449
  %1 = load i32, i32* %element_type, align 8, !dbg !449
  %cmp = icmp ne i32 %1, 1, !dbg !452
  br i1 %cmp, label %if.then8, label %if.else, !dbg !453

if.then8:                                         ; preds = %while_continue
  %tobool9 = icmp ne %struct.dxml_element* %e2.0, null, !dbg !454
  br i1 %tobool9, label %if.end11, label %if.then10, !dbg !457

if.then10:                                        ; preds = %if.then8
  br label %while_break, !dbg !458

if.end11:                                         ; preds = %if.then8
  br label %if.end12, !dbg !460

if.else:                                          ; preds = %while_continue
  br label %while_break, !dbg !461

if.end12:                                         ; preds = %if.end11
  %next = getelementptr inbounds %struct.dxml_element, %struct.dxml_element* %e2.0, i32 0, i32 4, !dbg !463
  %2 = load %struct.dxml_element*, %struct.dxml_element** %next, align 8, !dbg !463
  call void @llvm.dbg.value(metadata %struct.dxml_element* %2, metadata !430, metadata !DIExpression()), !dbg !414
  br label %while.body, !dbg !444, !llvm.loop !464

while_break___0:                                  ; No predecessors!
  br label %while_break, !dbg !466

while_break:                                      ; preds = %while_break___0, %if.else, %if.then10
  %tobool13 = icmp ne %struct.dxml_element* %e2.0, null, !dbg !467
  br i1 %tobool13, label %if.end15, label %if.then14, !dbg !469

if.then14:                                        ; preds = %while_break
  br label %return, !dbg !470

if.end15:                                         ; preds = %while_break
  %element_name = getelementptr inbounds %struct.dxml_element, %struct.dxml_element* %e2.0, i32 0, i32 0, !dbg !472
  %3 = load i8*, i8** %element_name, align 8, !dbg !472
  br label %return, !dbg !473

return:                                           ; preds = %if.end15, %if.then14, %if.then6, %if.then3, %if.then
  %retval.0 = phi i8* [ %3, %if.end15 ], [ null, %if.then14 ], [ null, %if.then6 ], [ null, %if.then3 ], [ null, %if.then ], !dbg !447
  ret i8* %retval.0, !dbg !474
}

; Function Attrs: noinline nounwind ssp uwtable
define internal i32 @convert_print(i8* %s, i32 %verbatim) #0 !dbg !475 {
entry:
  call void @llvm.dbg.value(metadata i8* %s, metadata !478, metadata !DIExpression()), !dbg !479
  call void @llvm.dbg.value(metadata i32 %verbatim, metadata !480, metadata !DIExpression()), !dbg !479
  call void @llvm.dbg.declare(metadata !124, metadata !481, metadata !DIExpression()), !dbg !482
  call void @llvm.dbg.declare(metadata !124, metadata !483, metadata !DIExpression()), !dbg !484
  call void @llvm.dbg.declare(metadata !124, metadata !485, metadata !DIExpression()), !dbg !486
  call void @llvm.dbg.declare(metadata !124, metadata !487, metadata !DIExpression()), !dbg !488
  call void @llvm.dbg.declare(metadata !124, metadata !489, metadata !DIExpression()), !dbg !490
  call void @llvm.dbg.declare(metadata !124, metadata !491, metadata !DIExpression()), !dbg !492
  call void @llvm.dbg.declare(metadata !124, metadata !493, metadata !DIExpression()), !dbg !494
  call void @llvm.dbg.declare(metadata !124, metadata !495, metadata !DIExpression()), !dbg !496
  call void @llvm.dbg.declare(metadata !124, metadata !497, metadata !DIExpression()), !dbg !498
  call void @llvm.dbg.declare(metadata !124, metadata !499, metadata !DIExpression()), !dbg !500
  call void @llvm.dbg.declare(metadata !124, metadata !501, metadata !DIExpression()), !dbg !502
  call void @llvm.dbg.value(metadata i8* null, metadata !503, metadata !DIExpression()), !dbg !479
  %tobool = icmp ne i8* %s, null, !dbg !504
  br i1 %tobool, label %if.end, label %if.then, !dbg !507

if.then:                                          ; preds = %entry
  br label %return, !dbg !508

if.end:                                           ; preds = %entry
  br label %while.body, !dbg !510

while.body:                                       ; preds = %if.end7, %if.end
  %s.addr.0 = phi i8* [ %s, %if.end ], [ %incdec.ptr, %if.end7 ]
  call void @llvm.dbg.value(metadata i8* %s.addr.0, metadata !478, metadata !DIExpression()), !dbg !479
  br label %while_continue___1, !dbg !513

while_continue___1:                               ; preds = %while.body
  br label %while_continue, !dbg !513

while_continue:                                   ; preds = %while_continue___1
  %0 = load i8, i8* %s.addr.0, align 1, !dbg !514
  %tobool1 = icmp ne i8 %0, 0, !dbg !514
  br i1 %tobool1, label %if.then2, label %if.else, !dbg !517

if.then2:                                         ; preds = %while_continue
  %call = call i16** @__ctype_b_loc() #8, !dbg !518
  call void @llvm.dbg.value(metadata i16** %call, metadata !522, metadata !DIExpression()), !dbg !479
  %1 = load i16*, i16** %call, align 8, !dbg !526
  %2 = load i8, i8* %s.addr.0, align 1, !dbg !528
  %conv = sext i8 %2 to i32, !dbg !529
  %idx.ext = sext i32 %conv to i64, !dbg !530
  %add.ptr = getelementptr inbounds i16, i16* %1, i64 %idx.ext, !dbg !530
  %3 = load i16, i16* %add.ptr, align 2, !dbg !531
  %conv3 = zext i16 %3 to i32, !dbg !532
  %and = and i32 %conv3, 8192, !dbg !533
  %tobool4 = icmp ne i32 %and, 0, !dbg !533
  br i1 %tobool4, label %if.end6, label %if.then5, !dbg !534

if.then5:                                         ; preds = %if.then2
  br label %while_break, !dbg !535

if.end6:                                          ; preds = %if.then2
  br label %if.end7, !dbg !537

if.else:                                          ; preds = %while_continue
  br label %while_break, !dbg !538

if.end7:                                          ; preds = %if.end6
  %incdec.ptr = getelementptr inbounds i8, i8* %s.addr.0, i32 1, !dbg !540
  call void @llvm.dbg.value(metadata i8* %incdec.ptr, metadata !478, metadata !DIExpression()), !dbg !479
  br label %while.body, !dbg !510, !llvm.loop !541

while_break___1:                                  ; No predecessors!
  br label %while_break, !dbg !543

while_break:                                      ; preds = %while_break___1, %if.else, %if.then5
  br label %while.body8, !dbg !544

while.body8:                                      ; preds = %switch_break, %while_break
  %s.addr.1 = phi i8* [ %s.addr.0, %while_break ], [ %incdec.ptr87, %switch_break ]
  call void @llvm.dbg.value(metadata i8* %s.addr.1, metadata !478, metadata !DIExpression()), !dbg !479
  br label %while_continue___2, !dbg !547

while_continue___2:                               ; preds = %while.body8
  br label %while_continue___0, !dbg !547

while_continue___0:                               ; preds = %while_continue___2
  %4 = load i8, i8* %s.addr.1, align 1, !dbg !548
  %tobool9 = icmp ne i8 %4, 0, !dbg !548
  br i1 %tobool9, label %if.end11, label %if.then10, !dbg !551

if.then10:                                        ; preds = %while_continue___0
  br label %while_break___0, !dbg !552

if.end11:                                         ; preds = %while_continue___0
  %5 = load i8, i8* %s.addr.1, align 1, !dbg !554
  %conv12 = sext i8 %5 to i32, !dbg !557
  %cmp = icmp eq i32 %conv12, 36, !dbg !558
  br i1 %cmp, label %if.then14, label %if.end15, !dbg !559

if.then14:                                        ; preds = %if.end11
  br label %case_36, !dbg !560

if.end15:                                         ; preds = %if.end11
  %6 = load i8, i8* %s.addr.1, align 1, !dbg !562
  %conv16 = sext i8 %6 to i32, !dbg !564
  %cmp17 = icmp eq i32 %conv16, 95, !dbg !565
  br i1 %cmp17, label %if.then19, label %if.end20, !dbg !566

if.then19:                                        ; preds = %if.end15
  br label %case_95, !dbg !567

if.end20:                                         ; preds = %if.end15
  %7 = load i8, i8* %s.addr.1, align 1, !dbg !569
  %conv21 = sext i8 %7 to i32, !dbg !571
  %cmp22 = icmp eq i32 %conv21, 92, !dbg !572
  br i1 %cmp22, label %if.then24, label %if.end25, !dbg !573

if.then24:                                        ; preds = %if.end20
  br label %case_92, !dbg !574

if.end25:                                         ; preds = %if.end20
  %8 = load i8, i8* %s.addr.1, align 1, !dbg !576
  %conv26 = sext i8 %8 to i32, !dbg !578
  %cmp27 = icmp eq i32 %conv26, 94, !dbg !579
  br i1 %cmp27, label %if.then29, label %if.end30, !dbg !580

if.then29:                                        ; preds = %if.end25
  br label %case_94, !dbg !581

if.end30:                                         ; preds = %if.end25
  %9 = load i8, i8* %s.addr.1, align 1, !dbg !583
  %conv31 = sext i8 %9 to i32, !dbg !585
  %cmp32 = icmp eq i32 %conv31, 126, !dbg !586
  br i1 %cmp32, label %if.then34, label %if.end35, !dbg !587

if.then34:                                        ; preds = %if.end30
  br label %case_126, !dbg !588

if.end35:                                         ; preds = %if.end30
  %10 = load i8, i8* %s.addr.1, align 1, !dbg !590
  %conv36 = sext i8 %10 to i32, !dbg !592
  %cmp37 = icmp eq i32 %conv36, 10, !dbg !593
  br i1 %cmp37, label %if.then39, label %if.end40, !dbg !594

if.then39:                                        ; preds = %if.end35
  br label %case_10, !dbg !595

if.end40:                                         ; preds = %if.end35
  %11 = load i8, i8* %s.addr.1, align 1, !dbg !597
  %conv41 = sext i8 %11 to i32, !dbg !599
  %cmp42 = icmp eq i32 %conv41, 35, !dbg !600
  br i1 %cmp42, label %if.then44, label %if.end45, !dbg !601

if.then44:                                        ; preds = %if.end40
  br label %case_35, !dbg !602

if.end45:                                         ; preds = %if.end40
  %12 = load i8, i8* %s.addr.1, align 1, !dbg !604
  %conv46 = sext i8 %12 to i32, !dbg !606
  %cmp47 = icmp eq i32 %conv46, 91, !dbg !607
  br i1 %cmp47, label %if.then49, label %if.end50, !dbg !608

if.then49:                                        ; preds = %if.end45
  br label %case_91, !dbg !609

if.end50:                                         ; preds = %if.end45
  %13 = load i8, i8* %s.addr.1, align 1, !dbg !611
  %conv51 = sext i8 %13 to i32, !dbg !613
  %cmp52 = icmp eq i32 %conv51, 93, !dbg !614
  br i1 %cmp52, label %if.then54, label %if.end55, !dbg !615

if.then54:                                        ; preds = %if.end50
  br label %case_93, !dbg !616

if.end55:                                         ; preds = %if.end50
  %14 = load i8, i8* %s.addr.1, align 1, !dbg !618
  %conv56 = sext i8 %14 to i32, !dbg !620
  %cmp57 = icmp eq i32 %conv56, 38, !dbg !621
  br i1 %cmp57, label %if.then59, label %if.end60, !dbg !622

if.then59:                                        ; preds = %if.end55
  br label %case_38, !dbg !623

if.end60:                                         ; preds = %if.end55
  br label %switch_default, !dbg !625

case_36:                                          ; preds = %if.then14
  %call61 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.27, i32 0, i32 0)), !dbg !626
  br label %switch_break, !dbg !629

case_95:                                          ; preds = %if.then19
  %call62 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.28, i32 0, i32 0)), !dbg !630
  br label %switch_break, !dbg !633

case_92:                                          ; preds = %if.then24
  %call63 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.29, i32 0, i32 0)), !dbg !634
  br label %switch_break, !dbg !637

case_94:                                          ; preds = %if.then29
  %call64 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.30, i32 0, i32 0)), !dbg !638
  br label %switch_break, !dbg !641

case_126:                                         ; preds = %if.then34
  %call65 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.31, i32 0, i32 0)), !dbg !642
  br label %switch_break, !dbg !645

case_10:                                          ; preds = %if.then39
  %tobool66 = icmp ne i32 %verbatim, 0, !dbg !646
  br i1 %tobool66, label %if.then67, label %if.end69, !dbg !648

if.then67:                                        ; preds = %case_10
  %call68 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.32, i32 0, i32 0)), !dbg !649
  br label %if.end69, !dbg !653

if.end69:                                         ; preds = %if.then67, %case_10
  %call70 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.33, i32 0, i32 0)), !dbg !654
  br label %switch_break, !dbg !657

case_35:                                          ; preds = %if.then44
  %call71 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.34, i32 0, i32 0)), !dbg !658
  br label %switch_break, !dbg !661

case_91:                                          ; preds = %if.then49
  %call72 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.35, i32 0, i32 0)), !dbg !662
  br label %switch_break, !dbg !665

case_93:                                          ; preds = %if.then54
  %call73 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.36, i32 0, i32 0)), !dbg !666
  br label %switch_break, !dbg !669

case_38:                                          ; preds = %if.then59
  %call74 = call i8* @strchr(i8* %s.addr.1, i32 59) #9, !dbg !670
  call void @llvm.dbg.value(metadata i8* %call74, metadata !673, metadata !DIExpression()), !dbg !479
  call void @llvm.dbg.value(metadata i8* %call74, metadata !503, metadata !DIExpression()), !dbg !479
  %15 = ptrtoint i8* %call74 to i64, !dbg !674
  %cmp75 = icmp ne i64 0, %15, !dbg !676
  br i1 %cmp75, label %if.then77, label %if.else82, !dbg !677

if.then77:                                        ; preds = %case_38
  %add.ptr78 = getelementptr inbounds i8, i8* %s.addr.1, i64 1, !dbg !678
  %sub.ptr.lhs.cast = ptrtoint i8* %call74 to i64, !dbg !682
  %sub.ptr.rhs.cast = ptrtoint i8* %s.addr.1 to i64, !dbg !682
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !682
  %sub = sub nsw i64 %sub.ptr.sub, 1, !dbg !683
  %conv79 = trunc i64 %sub to i32, !dbg !684
  %call80 = call noalias i8* @strndup(i8* %add.ptr78, i32 %conv79) #7, !dbg !685
  call void @llvm.dbg.value(metadata i8* %call80, metadata !686, metadata !DIExpression()), !dbg !479
  %call81 = call i32 @replace_external_entity(i8* %call80), !dbg !687
  call void @free(i8* %call80) #7, !dbg !689
  call void @llvm.dbg.value(metadata i8* %call74, metadata !478, metadata !DIExpression()), !dbg !479
  br label %if.end84, !dbg !691

if.else82:                                        ; preds = %case_38
  %16 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !692
  %call83 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %16, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.37, i32 0, i32 0)), !dbg !696
  call void @exit(i32 1) #10, !dbg !697
  unreachable, !dbg !697

if.end84:                                         ; preds = %if.then77
  br label %switch_break, !dbg !699

switch_default:                                   ; preds = %if.end60
  %17 = load i8, i8* %s.addr.1, align 1, !dbg !700
  %conv85 = sext i8 %17 to i32, !dbg !703
  %18 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !704
  %call86 = call i32 @_IO_putc(i32 %conv85, %struct._IO_FILE* %18), !dbg !705
  br label %switch_break, !dbg !706

switch_break:                                     ; preds = %switch_default, %if.end84, %case_93, %case_91, %case_35, %if.end69, %case_126, %case_94, %case_92, %case_95, %case_36
  %s.addr.2 = phi i8* [ %s.addr.1, %case_36 ], [ %s.addr.1, %case_95 ], [ %s.addr.1, %case_92 ], [ %s.addr.1, %case_94 ], [ %s.addr.1, %case_126 ], [ %s.addr.1, %if.end69 ], [ %s.addr.1, %case_35 ], [ %s.addr.1, %case_91 ], [ %s.addr.1, %case_93 ], [ %call74, %if.end84 ], [ %s.addr.1, %switch_default ]
  call void @llvm.dbg.value(metadata i8* %s.addr.2, metadata !478, metadata !DIExpression()), !dbg !479
  %incdec.ptr87 = getelementptr inbounds i8, i8* %s.addr.2, i32 1, !dbg !707
  call void @llvm.dbg.value(metadata i8* %incdec.ptr87, metadata !478, metadata !DIExpression()), !dbg !479
  br label %while.body8, !dbg !544, !llvm.loop !708

while_break___2:                                  ; No predecessors!
  br label %while_break___0, !dbg !710

while_break___0:                                  ; preds = %while_break___2, %if.then10
  br label %return, !dbg !711

return:                                           ; preds = %while_break___0, %if.then
  %retval.0 = phi i32 [ 0, %while_break___0 ], [ 1, %if.then ], !dbg !712
  ret i32 %retval.0, !dbg !713
}

; Function Attrs: noinline nounwind ssp uwtable
define %struct.dxml_element* @dxml_get_element_byname(%struct.dxml_element* %e, i8* %name) #0 !dbg !714 {
entry:
  call void @llvm.dbg.value(metadata %struct.dxml_element* %e, metadata !715, metadata !DIExpression()), !dbg !716
  call void @llvm.dbg.value(metadata i8* %name, metadata !717, metadata !DIExpression()), !dbg !716
  br label %while.body, !dbg !718

while.body:                                       ; preds = %if.end5, %entry
  %e.addr.0 = phi %struct.dxml_element* [ %e, %entry ], [ %2, %if.end5 ]
  call void @llvm.dbg.value(metadata %struct.dxml_element* %e.addr.0, metadata !715, metadata !DIExpression()), !dbg !716
  br label %while_continue___0, !dbg !722

while_continue___0:                               ; preds = %while.body
  br label %while_continue, !dbg !722

while_continue:                                   ; preds = %while_continue___0
  %tobool = icmp ne %struct.dxml_element* %e.addr.0, null, !dbg !723
  br i1 %tobool, label %if.end, label %if.then, !dbg !726

if.then:                                          ; preds = %while_continue
  br label %while_break, !dbg !727

if.end:                                           ; preds = %while_continue
  %element_type = getelementptr inbounds %struct.dxml_element, %struct.dxml_element* %e.addr.0, i32 0, i32 1, !dbg !729
  %0 = load i32, i32* %element_type, align 8, !dbg !729
  %cmp = icmp eq i32 %0, 0, !dbg !731
  br i1 %cmp, label %if.then1, label %if.end5, !dbg !732

if.then1:                                         ; preds = %if.end
  %element_name = getelementptr inbounds %struct.dxml_element, %struct.dxml_element* %e.addr.0, i32 0, i32 0, !dbg !733
  %1 = load i8*, i8** %element_name, align 8, !dbg !733
  %call = call i32 @strcmp(i8* %1, i8* %name) #9, !dbg !737
  call void @llvm.dbg.value(metadata i32 %call, metadata !738, metadata !DIExpression()), !dbg !716
  %tobool2 = icmp ne i32 %call, 0, !dbg !739
  br i1 %tobool2, label %if.end4, label %if.then3, !dbg !741

if.then3:                                         ; preds = %if.then1
  br label %return, !dbg !742

if.end4:                                          ; preds = %if.then1
  br label %if.end5, !dbg !744

if.end5:                                          ; preds = %if.end4, %if.end
  %next = getelementptr inbounds %struct.dxml_element, %struct.dxml_element* %e.addr.0, i32 0, i32 4, !dbg !745
  %2 = load %struct.dxml_element*, %struct.dxml_element** %next, align 8, !dbg !745
  call void @llvm.dbg.value(metadata %struct.dxml_element* %2, metadata !715, metadata !DIExpression()), !dbg !716
  br label %while.body, !dbg !718, !llvm.loop !746

while_break___0:                                  ; No predecessors!
  br label %while_break, !dbg !748

while_break:                                      ; preds = %while_break___0, %if.then
  br label %return, !dbg !749

return:                                           ; preds = %while_break, %if.then3
  %retval.0 = phi %struct.dxml_element* [ %e.addr.0, %if.then3 ], [ null, %while_break ], !dbg !750
  ret %struct.dxml_element* %retval.0, !dbg !751
}

; Function Attrs: noinline nounwind ssp uwtable
define internal i32 @recursebook(%struct.dxml_element* %b) #0 !dbg !752 {
entry:
  call void @llvm.dbg.value(metadata %struct.dxml_element* %b, metadata !755, metadata !DIExpression()), !dbg !756
  call void @llvm.dbg.declare(metadata !124, metadata !757, metadata !DIExpression()), !dbg !758
  call void @llvm.dbg.declare(metadata !124, metadata !759, metadata !DIExpression()), !dbg !760
  call void @llvm.dbg.declare(metadata !124, metadata !761, metadata !DIExpression()), !dbg !762
  call void @llvm.dbg.declare(metadata !124, metadata !763, metadata !DIExpression()), !dbg !764
  %call = call %struct.dxml_element* @dxml_get_element_byname(%struct.dxml_element* %b, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.45, i32 0, i32 0)), !dbg !765
  call void @llvm.dbg.value(metadata %struct.dxml_element* %call, metadata !769, metadata !DIExpression()), !dbg !756
  br label %while.body, !dbg !770

while.body:                                       ; preds = %if.end, %entry
  %tmp.0 = phi %struct.dxml_element* [ %call, %entry ], [ %2, %if.end ], !dbg !773
  call void @llvm.dbg.value(metadata %struct.dxml_element* %tmp.0, metadata !769, metadata !DIExpression()), !dbg !756
  br label %while_continue___0, !dbg !774

while_continue___0:                               ; preds = %while.body
  br label %while_continue, !dbg !774

while_continue:                                   ; preds = %while_continue___0
  %tobool = icmp ne %struct.dxml_element* %tmp.0, null, !dbg !775
  br i1 %tobool, label %if.end, label %if.then, !dbg !778

if.then:                                          ; preds = %while_continue
  br label %while_break, !dbg !779

if.end:                                           ; preds = %while_continue
  %call1 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.46, i32 0, i32 0)), !dbg !781
  %child = getelementptr inbounds %struct.dxml_element, %struct.dxml_element* %tmp.0, i32 0, i32 3, !dbg !784
  %0 = load %struct.dxml_element*, %struct.dxml_element** %child, align 8, !dbg !784
  %call2 = call i8* @dxml_get_PCDATA_bysimplepath(%struct.dxml_element* %0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.47, i32 0, i32 0)), !dbg !786
  call void @llvm.dbg.value(metadata i8* %call2, metadata !787, metadata !DIExpression()), !dbg !756
  %call3 = call i32 @convert_print(i8* %call2, i32 0), !dbg !788
  %call4 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.48, i32 0, i32 0)), !dbg !790
  %call5 = call i32 @maybe_label(%struct.dxml_element* %tmp.0), !dbg !792
  %child6 = getelementptr inbounds %struct.dxml_element, %struct.dxml_element* %tmp.0, i32 0, i32 3, !dbg !794
  %1 = load %struct.dxml_element*, %struct.dxml_element** %child6, align 8, !dbg !794
  %call7 = call i32 @get_bookchapter(%struct.dxml_element* %1, i32 1), !dbg !796
  %next = getelementptr inbounds %struct.dxml_element, %struct.dxml_element* %tmp.0, i32 0, i32 4, !dbg !797
  %2 = load %struct.dxml_element*, %struct.dxml_element** %next, align 8, !dbg !797
  call void @llvm.dbg.value(metadata %struct.dxml_element* %2, metadata !769, metadata !DIExpression()), !dbg !756
  br label %while.body, !dbg !770, !llvm.loop !798

while_break___0:                                  ; No predecessors!
  br label %while_break, !dbg !800

while_break:                                      ; preds = %while_break___0, %if.then
  ret i32 0, !dbg !801
}

; Function Attrs: noinline nounwind ssp uwtable
define %struct.dxml_element* @dxml_next_notPCDATA(%struct.dxml_element* %e) #0 !dbg !802 {
entry:
  call void @llvm.dbg.value(metadata %struct.dxml_element* %e, metadata !805, metadata !DIExpression()), !dbg !806
  %tobool = icmp ne %struct.dxml_element* %e, null, !dbg !807
  br i1 %tobool, label %if.end, label %if.then, !dbg !810

if.then:                                          ; preds = %entry
  br label %return, !dbg !811

if.end:                                           ; preds = %entry
  %element_type = getelementptr inbounds %struct.dxml_element, %struct.dxml_element* %e, i32 0, i32 1, !dbg !813
  %0 = load i32, i32* %element_type, align 8, !dbg !813
  %cmp = icmp eq i32 %0, 1, !dbg !815
  br i1 %cmp, label %if.then1, label %if.end2, !dbg !816

if.then1:                                         ; preds = %if.end
  %next = getelementptr inbounds %struct.dxml_element, %struct.dxml_element* %e, i32 0, i32 4, !dbg !817
  %1 = load %struct.dxml_element*, %struct.dxml_element** %next, align 8, !dbg !817
  %call = call %struct.dxml_element* @dxml_next_notPCDATA(%struct.dxml_element* %1), !dbg !821
  call void @llvm.dbg.value(metadata %struct.dxml_element* %call, metadata !822, metadata !DIExpression()), !dbg !806
  br label %return, !dbg !823

if.end2:                                          ; preds = %if.end
  br label %return, !dbg !824

return:                                           ; preds = %if.end2, %if.then1, %if.then
  %retval.0 = phi %struct.dxml_element* [ %call, %if.then1 ], [ %e, %if.end2 ], [ null, %if.then ], !dbg !825
  ret %struct.dxml_element* %retval.0, !dbg !826
}

; Function Attrs: nounwind readonly
declare i32 @strcmp(i8*, i8*) #4

; Function Attrs: nounwind
declare noalias i8* @strdup(i8*) #2

; Function Attrs: noinline nounwind ssp uwtable
define internal %struct.dxml_element* @dxml_get_element_bysimplepath_internal(%struct.dxml_element* %e, i8* %path) #0 !dbg !827 {
entry:
  call void @llvm.dbg.value(metadata %struct.dxml_element* %e, metadata !830, metadata !DIExpression()), !dbg !831
  call void @llvm.dbg.value(metadata i8* %path, metadata !832, metadata !DIExpression()), !dbg !831
  %call = call i8* @strchr(i8* %path, i32 47) #9, !dbg !833
  call void @llvm.dbg.value(metadata i8* %call, metadata !837, metadata !DIExpression()), !dbg !831
  call void @llvm.dbg.value(metadata i8* %call, metadata !838, metadata !DIExpression()), !dbg !831
  %0 = ptrtoint i8* %call to i64, !dbg !839
  %1 = ptrtoint i8* %path to i64, !dbg !841
  %cmp = icmp eq i64 %0, %1, !dbg !842
  br i1 %cmp, label %if.then, label %if.else, !dbg !843

if.then:                                          ; preds = %entry
  %add.ptr = getelementptr inbounds i8, i8* %path, i64 1, !dbg !844
  %call1 = call %struct.dxml_element* @dxml_get_element_bysimplepath(%struct.dxml_element* %e, i8* %add.ptr), !dbg !848
  call void @llvm.dbg.value(metadata %struct.dxml_element* %call1, metadata !849, metadata !DIExpression()), !dbg !831
  br label %return, !dbg !850

if.else:                                          ; preds = %entry
  %tobool = icmp ne i8* %call, null, !dbg !851
  br i1 %tobool, label %if.then2, label %if.else11, !dbg !853

if.then2:                                         ; preds = %if.else
  store i8 0, i8* %call, align 1, !dbg !854
  %call3 = call %struct.dxml_element* @dxml_get_element_byname(%struct.dxml_element* %e, i8* %path), !dbg !857
  call void @llvm.dbg.value(metadata %struct.dxml_element* %call3, metadata !830, metadata !DIExpression()), !dbg !831
  %tobool4 = icmp ne %struct.dxml_element* %call3, null, !dbg !859
  br i1 %tobool4, label %if.end, label %if.then5, !dbg !861

if.then5:                                         ; preds = %if.then2
  br label %return, !dbg !862

if.end:                                           ; preds = %if.then2
  %child = getelementptr inbounds %struct.dxml_element, %struct.dxml_element* %call3, i32 0, i32 3, !dbg !864
  %2 = load %struct.dxml_element*, %struct.dxml_element** %child, align 8, !dbg !864
  call void @llvm.dbg.value(metadata %struct.dxml_element* %2, metadata !830, metadata !DIExpression()), !dbg !831
  %tobool6 = icmp ne %struct.dxml_element* %2, null, !dbg !865
  br i1 %tobool6, label %if.end8, label %if.then7, !dbg !867

if.then7:                                         ; preds = %if.end
  br label %return, !dbg !868

if.end8:                                          ; preds = %if.end
  %add.ptr9 = getelementptr inbounds i8, i8* %call, i64 1, !dbg !870
  %call10 = call %struct.dxml_element* @dxml_get_element_bysimplepath(%struct.dxml_element* %2, i8* %add.ptr9), !dbg !873
  call void @llvm.dbg.value(metadata %struct.dxml_element* %call10, metadata !874, metadata !DIExpression()), !dbg !831
  br label %return, !dbg !875

if.else11:                                        ; preds = %if.else
  %call12 = call %struct.dxml_element* @dxml_get_element_byname(%struct.dxml_element* %e, i8* %path), !dbg !876
  call void @llvm.dbg.value(metadata %struct.dxml_element* %call12, metadata !880, metadata !DIExpression()), !dbg !831
  br label %return, !dbg !881

return:                                           ; preds = %if.else11, %if.end8, %if.then7, %if.then5, %if.then
  %retval.0 = phi %struct.dxml_element* [ %call1, %if.then ], [ %call10, %if.end8 ], [ null, %if.then7 ], [ null, %if.then5 ], [ %call12, %if.else11 ], !dbg !882
  ret %struct.dxml_element* %retval.0, !dbg !883
}

; Function Attrs: nounwind
declare void @free(i8*) #2

; Function Attrs: noinline nounwind ssp uwtable
define void @dxml_dump_element(%struct.dxml_element* %e) #0 !dbg !884 {
entry:
  call void @llvm.dbg.value(metadata %struct.dxml_element* %e, metadata !887, metadata !DIExpression()), !dbg !888
  call void @recurse_element(%struct.dxml_element* %e, i32 0), !dbg !889
  ret void, !dbg !893
}

; Function Attrs: noinline nounwind ssp uwtable
define internal void @recurse_element(%struct.dxml_element* %e, i32 %level) #0 !dbg !894 {
entry:
  call void @llvm.dbg.value(metadata %struct.dxml_element* %e, metadata !897, metadata !DIExpression()), !dbg !898
  call void @llvm.dbg.value(metadata i32 %level, metadata !899, metadata !DIExpression()), !dbg !898
  call void @llvm.dbg.declare(metadata !124, metadata !900, metadata !DIExpression()), !dbg !901
  call void @llvm.dbg.declare(metadata !124, metadata !902, metadata !DIExpression()), !dbg !903
  call void @llvm.dbg.declare(metadata !124, metadata !904, metadata !DIExpression()), !dbg !905
  call void @llvm.dbg.declare(metadata !124, metadata !906, metadata !DIExpression()), !dbg !907
  %element_type = getelementptr inbounds %struct.dxml_element, %struct.dxml_element* %e, i32 0, i32 1, !dbg !908
  %0 = load i32, i32* %element_type, align 8, !dbg !908
  %cmp = icmp eq i32 %0, 0, !dbg !911
  br i1 %cmp, label %if.then, label %if.else, !dbg !912

if.then:                                          ; preds = %entry
  call void @space(i32 %level), !dbg !913
  %element_name = getelementptr inbounds %struct.dxml_element, %struct.dxml_element* %e, i32 0, i32 0, !dbg !917
  %1 = load i8*, i8** %element_name, align 8, !dbg !917
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.114, i32 0, i32 0), i8* %1), !dbg !919
  %element_attribute = getelementptr inbounds %struct.dxml_element, %struct.dxml_element* %e, i32 0, i32 2, !dbg !920
  %2 = load %struct.dxml_attribute*, %struct.dxml_attribute** %element_attribute, align 8, !dbg !920
  %tobool = icmp ne %struct.dxml_attribute* %2, null, !dbg !922
  br i1 %tobool, label %if.then1, label %if.end, !dbg !923

if.then1:                                         ; preds = %if.then
  %element_attribute2 = getelementptr inbounds %struct.dxml_element, %struct.dxml_element* %e, i32 0, i32 2, !dbg !924
  %3 = load %struct.dxml_attribute*, %struct.dxml_attribute** %element_attribute2, align 8, !dbg !924
  call void @recurse_attribute(%struct.dxml_attribute* %3), !dbg !928
  br label %if.end, !dbg !929

if.end:                                           ; preds = %if.then1, %if.then
  %call3 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.115, i32 0, i32 0)), !dbg !930
  %child = getelementptr inbounds %struct.dxml_element, %struct.dxml_element* %e, i32 0, i32 3, !dbg !933
  %4 = load %struct.dxml_element*, %struct.dxml_element** %child, align 8, !dbg !933
  %tobool4 = icmp ne %struct.dxml_element* %4, null, !dbg !935
  br i1 %tobool4, label %if.then5, label %if.end7, !dbg !936

if.then5:                                         ; preds = %if.end
  %child6 = getelementptr inbounds %struct.dxml_element, %struct.dxml_element* %e, i32 0, i32 3, !dbg !937
  %5 = load %struct.dxml_element*, %struct.dxml_element** %child6, align 8, !dbg !937
  %add = add nsw i32 %level, 1, !dbg !941
  call void @recurse_element(%struct.dxml_element* %5, i32 %add), !dbg !942
  br label %if.end7, !dbg !943

if.end7:                                          ; preds = %if.then5, %if.end
  call void @space(i32 %level), !dbg !944
  %element_name8 = getelementptr inbounds %struct.dxml_element, %struct.dxml_element* %e, i32 0, i32 0, !dbg !947
  %6 = load i8*, i8** %element_name8, align 8, !dbg !947
  %call9 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.116, i32 0, i32 0), i8* %6), !dbg !949
  br label %if.end12, !dbg !950

if.else:                                          ; preds = %entry
  call void @space(i32 %level), !dbg !951
  %element_name10 = getelementptr inbounds %struct.dxml_element, %struct.dxml_element* %e, i32 0, i32 0, !dbg !955
  %7 = load i8*, i8** %element_name10, align 8, !dbg !955
  %call11 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.117, i32 0, i32 0), i8* %7), !dbg !957
  br label %if.end12

if.end12:                                         ; preds = %if.else, %if.end7
  %next = getelementptr inbounds %struct.dxml_element, %struct.dxml_element* %e, i32 0, i32 4, !dbg !958
  %8 = load %struct.dxml_element*, %struct.dxml_element** %next, align 8, !dbg !958
  %tobool13 = icmp ne %struct.dxml_element* %8, null, !dbg !960
  br i1 %tobool13, label %if.then14, label %if.end16, !dbg !961

if.then14:                                        ; preds = %if.end12
  %next15 = getelementptr inbounds %struct.dxml_element, %struct.dxml_element* %e, i32 0, i32 4, !dbg !962
  %9 = load %struct.dxml_element*, %struct.dxml_element** %next15, align 8, !dbg !962
  call void @recurse_element(%struct.dxml_element* %9, i32 %level), !dbg !966
  br label %if.end16, !dbg !967

if.end16:                                         ; preds = %if.then14, %if.end12
  ret void, !dbg !968
}

declare i32 @_IO_getc(%struct._IO_FILE*) #3

; Function Attrs: noinline nounwind ssp uwtable
define internal %struct.dxml_element* @read_element(%struct._IO_FILE* %f) #0 !dbg !969 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %f, metadata !970, metadata !DIExpression()), !dbg !971
  call void @llvm.dbg.declare(metadata !124, metadata !972, metadata !DIExpression()), !dbg !973
  call void @llvm.dbg.declare(metadata !124, metadata !974, metadata !DIExpression()), !dbg !975
  call void @llvm.dbg.declare(metadata !124, metadata !976, metadata !DIExpression()), !dbg !977
  call void @llvm.dbg.declare(metadata !124, metadata !978, metadata !DIExpression()), !dbg !979
  call void @llvm.dbg.declare(metadata !124, metadata !980, metadata !DIExpression()), !dbg !981
  call void @llvm.dbg.declare(metadata !124, metadata !982, metadata !DIExpression()), !dbg !983
  call void @llvm.dbg.declare(metadata !124, metadata !984, metadata !DIExpression()), !dbg !985
  %call = call %struct.dxml_element* @initialize_element(), !dbg !986
  call void @llvm.dbg.value(metadata %struct.dxml_element* %call, metadata !990, metadata !DIExpression()), !dbg !971
  call void @llvm.dbg.value(metadata %struct.dxml_element* %call, metadata !991, metadata !DIExpression()), !dbg !971
  call void @llvm.dbg.value(metadata %struct.dxml_element* null, metadata !992, metadata !DIExpression()), !dbg !971
  %call1 = call i32 @read_element_start(%struct._IO_FILE* %f), !dbg !993
  call void @llvm.dbg.value(metadata i32 %call1, metadata !995, metadata !DIExpression()), !dbg !971
  %cmp = icmp eq i32 %call1, 0, !dbg !996
  br i1 %cmp, label %if.then, label %if.end, !dbg !999

if.then:                                          ; preds = %entry
  br label %case_0, !dbg !1000

if.end:                                           ; preds = %entry
  %cmp2 = icmp eq i32 %call1, 1, !dbg !1002
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !1004

if.then3:                                         ; preds = %if.end
  br label %case_1, !dbg !1005

if.end4:                                          ; preds = %if.end
  %cmp5 = icmp eq i32 %call1, 2, !dbg !1007
  br i1 %cmp5, label %if.then6, label %if.end7, !dbg !1009

if.then6:                                         ; preds = %if.end4
  br label %case_2, !dbg !1010

if.end7:                                          ; preds = %if.end4
  br label %switch_break, !dbg !1012

case_0:                                           ; preds = %if.then
  %0 = bitcast %struct.dxml_element* %call to i8*, !dbg !1013
  call void @free(i8* %0) #7, !dbg !1016
  br label %return, !dbg !1017

case_1:                                           ; preds = %if.then3
  br label %switch_break, !dbg !1018

case_2:                                           ; preds = %if.then6
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !1019
  %call8 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.119, i32 0, i32 0)), !dbg !1022
  br label %return, !dbg !1023

switch_break:                                     ; preds = %case_1, %if.end7
  %call9 = call i8* @read_character_stream(%struct._IO_FILE* %f, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.120, i32 0, i32 0)), !dbg !1024
  call void @llvm.dbg.value(metadata i8* %call9, metadata !1027, metadata !DIExpression()), !dbg !971
  %element_name = getelementptr inbounds %struct.dxml_element, %struct.dxml_element* %call, i32 0, i32 0, !dbg !1028
  store i8* %call9, i8** %element_name, align 8, !dbg !1029
  %tobool = icmp ne i8* %call9, null, !dbg !1030
  br i1 %tobool, label %if.end11, label %if.then10, !dbg !1032

if.then10:                                        ; preds = %switch_break
  br label %return, !dbg !1033

if.end11:                                         ; preds = %switch_break
  %call12 = call %struct.dxml_attribute* @read_attribute(%struct._IO_FILE* %f), !dbg !1035
  %element_attribute = getelementptr inbounds %struct.dxml_element, %struct.dxml_element* %call, i32 0, i32 2, !dbg !1038
  store %struct.dxml_attribute* %call12, %struct.dxml_attribute** %element_attribute, align 8, !dbg !1039
  %call13 = call i32 @_IO_getc(%struct._IO_FILE* %f), !dbg !1040
  call void @llvm.dbg.value(metadata i32 %call13, metadata !1042, metadata !DIExpression()), !dbg !971
  %cmp14 = icmp eq i32 %call13, -1, !dbg !1043
  br i1 %cmp14, label %if.then15, label %if.end18, !dbg !1045

if.then15:                                        ; preds = %if.end11
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !1046
  %element_name16 = getelementptr inbounds %struct.dxml_element, %struct.dxml_element* %call, i32 0, i32 0, !dbg !1050
  %3 = load i8*, i8** %element_name16, align 8, !dbg !1050
  %call17 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %2, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.121, i32 0, i32 0), i8* %3), !dbg !1051
  br label %return, !dbg !1052

if.end18:                                         ; preds = %if.end11
  %cmp19 = icmp eq i32 %call13, 47, !dbg !1053
  br i1 %cmp19, label %if.then20, label %if.end28, !dbg !1055

if.then20:                                        ; preds = %if.end18
  %call21 = call i32 @checkchar(i32 62, %struct._IO_FILE* %f), !dbg !1056
  call void @llvm.dbg.value(metadata i32 %call21, metadata !1060, metadata !DIExpression()), !dbg !971
  %tobool22 = icmp ne i32 %call21, 0, !dbg !1061
  br i1 %tobool22, label %if.then23, label %if.end26, !dbg !1063

if.then23:                                        ; preds = %if.then20
  %element_name24 = getelementptr inbounds %struct.dxml_element, %struct.dxml_element* %call, i32 0, i32 0, !dbg !1064
  %4 = load i8*, i8** %element_name24, align 8, !dbg !1064
  call void @free(i8* %4) #7, !dbg !1068
  %element_attribute25 = getelementptr inbounds %struct.dxml_element, %struct.dxml_element* %call, i32 0, i32 2, !dbg !1069
  %5 = load %struct.dxml_attribute*, %struct.dxml_attribute** %element_attribute25, align 8, !dbg !1069
  call void @dxml_free_attrib(%struct.dxml_attribute* %5), !dbg !1071
  %6 = bitcast %struct.dxml_element* %call to i8*, !dbg !1072
  call void @free(i8* %6) #7, !dbg !1074
  br label %return, !dbg !1075

if.end26:                                         ; preds = %if.then20
  %call27 = call i32 @skipwhitechars(%struct._IO_FILE* %f), !dbg !1076
  br label %return, !dbg !1079

if.end28:                                         ; preds = %if.end18
  %call29 = call i32 @skipwhitechars(%struct._IO_FILE* %f), !dbg !1080
  br label %while.body, !dbg !1083

while.body:                                       ; preds = %if.end59, %if.end28
  %current_element_bottom.0 = phi %struct.dxml_element* [ null, %if.end28 ], [ %current_element_bottom.2, %if.end59 ], !dbg !1086
  call void @llvm.dbg.value(metadata %struct.dxml_element* %current_element_bottom.0, metadata !992, metadata !DIExpression()), !dbg !971
  br label %while_continue___0, !dbg !1087

while_continue___0:                               ; preds = %while.body
  br label %while_continue, !dbg !1087

while_continue:                                   ; preds = %while_continue___0
  %call30 = call i32 @_IO_getc(%struct._IO_FILE* %f), !dbg !1088
  call void @llvm.dbg.value(metadata i32 %call30, metadata !1042, metadata !DIExpression()), !dbg !971
  %cmp31 = icmp eq i32 %call30, -1, !dbg !1092
  br i1 %cmp31, label %if.then32, label %if.else, !dbg !1094

if.then32:                                        ; preds = %while_continue
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !1095
  %call33 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %7, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.122, i32 0, i32 0)), !dbg !1099
  br label %return, !dbg !1100

if.else:                                          ; preds = %while_continue
  %cmp34 = icmp eq i32 %call30, 60, !dbg !1101
  br i1 %cmp34, label %if.then35, label %if.else42, !dbg !1103

if.then35:                                        ; preds = %if.else
  %call36 = call i32 @_IO_getc(%struct._IO_FILE* %f), !dbg !1104
  call void @llvm.dbg.value(metadata i32 %call36, metadata !1042, metadata !DIExpression()), !dbg !971
  %cmp37 = icmp eq i32 %call36, 47, !dbg !1108
  br i1 %cmp37, label %if.then38, label %if.end39, !dbg !1110

if.then38:                                        ; preds = %if.then35
  br label %while_break, !dbg !1111

if.end39:                                         ; preds = %if.then35
  %call40 = call i32 @ungetc(i32 %call36, %struct._IO_FILE* %f), !dbg !1113
  %call41 = call %struct.dxml_element* @read_element(%struct._IO_FILE* %f), !dbg !1116
  call void @llvm.dbg.value(metadata %struct.dxml_element* %call41, metadata !1118, metadata !DIExpression()), !dbg !971
  br label %if.end50, !dbg !1119

if.else42:                                        ; preds = %if.else
  %cmp43 = icmp eq i32 %call30, 62, !dbg !1120
  br i1 %cmp43, label %if.then44, label %if.else46, !dbg !1122

if.then44:                                        ; preds = %if.else42
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !1123
  %call45 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %8, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.123, i32 0, i32 0)), !dbg !1127
  call void @exit(i32 1) #10, !dbg !1128
  unreachable, !dbg !1128

if.else46:                                        ; preds = %if.else42
  %call47 = call i32 @ungetc(i32 %call30, %struct._IO_FILE* %f), !dbg !1130
  %call48 = call %struct.dxml_element* @read_PCDATA(%struct._IO_FILE* %f), !dbg !1134
  call void @llvm.dbg.value(metadata %struct.dxml_element* %call48, metadata !1118, metadata !DIExpression()), !dbg !971
  br label %if.end49

if.end49:                                         ; preds = %if.else46
  br label %if.end50

if.end50:                                         ; preds = %if.end49, %if.end39
  %tmp_element.0 = phi %struct.dxml_element* [ %call41, %if.end39 ], [ %call48, %if.end49 ], !dbg !1136
  call void @llvm.dbg.value(metadata %struct.dxml_element* %tmp_element.0, metadata !1118, metadata !DIExpression()), !dbg !971
  br label %if.end51

if.end51:                                         ; preds = %if.end50
  %tobool52 = icmp ne %struct.dxml_element* %tmp_element.0, null, !dbg !1137
  br i1 %tobool52, label %if.then53, label %if.end59, !dbg !1139

if.then53:                                        ; preds = %if.end51
  %child = getelementptr inbounds %struct.dxml_element, %struct.dxml_element* %call, i32 0, i32 3, !dbg !1140
  %9 = load %struct.dxml_element*, %struct.dxml_element** %child, align 8, !dbg !1140
  %tobool54 = icmp ne %struct.dxml_element* %9, null, !dbg !1143
  br i1 %tobool54, label %if.then55, label %if.else56, !dbg !1144

if.then55:                                        ; preds = %if.then53
  call void @llvm.dbg.value(metadata %struct.dxml_element* %tmp_element.0, metadata !1145, metadata !DIExpression()), !dbg !971
  %next = getelementptr inbounds %struct.dxml_element, %struct.dxml_element* %current_element_bottom.0, i32 0, i32 4, !dbg !1146
  store %struct.dxml_element* %tmp_element.0, %struct.dxml_element** %next, align 8, !dbg !1148
  call void @llvm.dbg.value(metadata %struct.dxml_element* %tmp_element.0, metadata !992, metadata !DIExpression()), !dbg !971
  br label %if.end58, !dbg !1149

if.else56:                                        ; preds = %if.then53
  call void @llvm.dbg.value(metadata %struct.dxml_element* %tmp_element.0, metadata !1150, metadata !DIExpression()), !dbg !971
  %child57 = getelementptr inbounds %struct.dxml_element, %struct.dxml_element* %call, i32 0, i32 3, !dbg !1151
  store %struct.dxml_element* %tmp_element.0, %struct.dxml_element** %child57, align 8, !dbg !1153
  call void @llvm.dbg.value(metadata %struct.dxml_element* %tmp_element.0, metadata !992, metadata !DIExpression()), !dbg !971
  br label %if.end58

if.end58:                                         ; preds = %if.else56, %if.then55
  call void @llvm.dbg.value(metadata %struct.dxml_element* %tmp_element.0, metadata !992, metadata !DIExpression()), !dbg !971
  br label %if.end59, !dbg !1154

if.end59:                                         ; preds = %if.end58, %if.end51
  %current_element_bottom.2 = phi %struct.dxml_element* [ %tmp_element.0, %if.end58 ], [ %current_element_bottom.0, %if.end51 ], !dbg !1086
  call void @llvm.dbg.value(metadata %struct.dxml_element* %current_element_bottom.2, metadata !992, metadata !DIExpression()), !dbg !971
  br label %while.body, !dbg !1083, !llvm.loop !1155

while_break___0:                                  ; No predecessors!
  br label %while_break, !dbg !1157

while_break:                                      ; preds = %while_break___0, %if.then38
  %call60 = call i8* @read_character_stream(%struct._IO_FILE* %f, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.124, i32 0, i32 0)), !dbg !1158
  call void @llvm.dbg.value(metadata i8* %call60, metadata !1161, metadata !DIExpression()), !dbg !971
  %element_name61 = getelementptr inbounds %struct.dxml_element, %struct.dxml_element* %call, i32 0, i32 0, !dbg !1162
  %10 = load i8*, i8** %element_name61, align 8, !dbg !1162
  %call62 = call i32 @strcmp(i8* %10, i8* %call60) #9, !dbg !1164
  call void @llvm.dbg.value(metadata i32 %call62, metadata !1165, metadata !DIExpression()), !dbg !971
  %tobool63 = icmp ne i32 %call62, 0, !dbg !1166
  br i1 %tobool63, label %if.then64, label %if.end67, !dbg !1168

if.then64:                                        ; preds = %while_break
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !1169
  %element_name65 = getelementptr inbounds %struct.dxml_element, %struct.dxml_element* %call, i32 0, i32 0, !dbg !1173
  %12 = load i8*, i8** %element_name65, align 8, !dbg !1173
  %call66 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %11, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.125, i32 0, i32 0), i8* %12, i8* %call60), !dbg !1174
  br label %return, !dbg !1175

if.end67:                                         ; preds = %while_break
  call void @free(i8* %call60) #7, !dbg !1176
  %call68 = call i32 @skipwhitechars(%struct._IO_FILE* %f), !dbg !1179
  %call69 = call i32 @checkchar(i32 62, %struct._IO_FILE* %f), !dbg !1181
  call void @llvm.dbg.value(metadata i32 %call69, metadata !1183, metadata !DIExpression()), !dbg !971
  %tobool70 = icmp ne i32 %call69, 0, !dbg !1184
  br i1 %tobool70, label %if.then71, label %if.end72, !dbg !1186

if.then71:                                        ; preds = %if.end67
  call void @dxml_free_xml(%struct.dxml_element* %call), !dbg !1187
  br label %return, !dbg !1191

if.end72:                                         ; preds = %if.end67
  %call73 = call i32 @skipwhitechars(%struct._IO_FILE* %f), !dbg !1192
  br label %return, !dbg !1195

return:                                           ; preds = %if.end72, %if.then71, %if.then64, %if.then32, %if.end26, %if.then23, %if.then15, %if.then10, %case_2, %case_0
  %retval.0 = phi %struct.dxml_element* [ null, %case_0 ], [ null, %if.then15 ], [ null, %if.then23 ], [ %call, %if.end26 ], [ null, %if.then32 ], [ null, %if.then64 ], [ null, %if.then71 ], [ %call, %if.end72 ], [ null, %if.then10 ], [ null, %case_2 ], !dbg !1086
  ret %struct.dxml_element* %retval.0, !dbg !1196
}

; Function Attrs: noinline nounwind ssp uwtable
define internal i32 @skipwhitechars(%struct._IO_FILE* %f) #0 !dbg !1197 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %f, metadata !1200, metadata !DIExpression()), !dbg !1201
  br label %while.body, !dbg !1202

while.body:                                       ; preds = %switch_break, %entry
  br label %while_continue___0, !dbg !1206

while_continue___0:                               ; preds = %while.body
  br label %while_continue, !dbg !1206

while_continue:                                   ; preds = %while_continue___0
  %call = call i32 @_IO_getc(%struct._IO_FILE* %f), !dbg !1207
  call void @llvm.dbg.value(metadata i32 %call, metadata !1211, metadata !DIExpression()), !dbg !1201
  %cmp = icmp eq i32 %call, 10, !dbg !1212
  br i1 %cmp, label %if.then, label %if.end, !dbg !1215

if.then:                                          ; preds = %while_continue
  br label %case_10, !dbg !1216

if.end:                                           ; preds = %while_continue
  %cmp1 = icmp eq i32 %call, 13, !dbg !1218
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !1215

if.then2:                                         ; preds = %if.end
  br label %case_10, !dbg !1220

if.end3:                                          ; preds = %if.end
  %cmp4 = icmp eq i32 %call, 9, !dbg !1222
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !1215

if.then5:                                         ; preds = %if.end3
  br label %case_10, !dbg !1224

if.end6:                                          ; preds = %if.end3
  %cmp7 = icmp eq i32 %call, 32, !dbg !1226
  br i1 %cmp7, label %if.then8, label %if.end9, !dbg !1215

if.then8:                                         ; preds = %if.end6
  br label %case_10, !dbg !1228

if.end9:                                          ; preds = %if.end6
  %cmp10 = icmp eq i32 %call, -1, !dbg !1230
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !1232

if.then11:                                        ; preds = %if.end9
  br label %case_neg_1, !dbg !1233

if.end12:                                         ; preds = %if.end9
  br label %switch_default, !dbg !1235

case_10:                                          ; preds = %if.then8, %if.then5, %if.then2, %if.then
  br label %case_13, !dbg !1235

case_13:                                          ; preds = %case_10
  br label %case_9, !dbg !1235

case_9:                                           ; preds = %case_13
  br label %case_32, !dbg !1235

case_32:                                          ; preds = %case_9
  br label %switch_break, !dbg !1236

case_neg_1:                                       ; preds = %if.then11
  br label %while_break, !dbg !1237

switch_default:                                   ; preds = %if.end12
  %call13 = call i32 @ungetc(i32 %call, %struct._IO_FILE* %f), !dbg !1238
  br label %while_break, !dbg !1241

switch_break:                                     ; preds = %case_32
  br label %while.body, !dbg !1202, !llvm.loop !1242

while_break___0:                                  ; No predecessors!
  br label %while_break, !dbg !1244

while_break:                                      ; preds = %while_break___0, %switch_default, %case_neg_1
  %retval.0 = phi i32 [ 1, %case_neg_1 ], [ 0, %switch_default ], [ undef, %while_break___0 ], !dbg !1245
  ret i32 %retval.0, !dbg !1246
}

; Function Attrs: noinline nounwind ssp uwtable
define internal i32 @checkchar(i32 %expect, %struct._IO_FILE* %f) #0 !dbg !1247 {
entry:
  call void @llvm.dbg.value(metadata i32 %expect, metadata !1250, metadata !DIExpression()), !dbg !1251
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %f, metadata !1252, metadata !DIExpression()), !dbg !1251
  call void @llvm.dbg.declare(metadata !124, metadata !1253, metadata !DIExpression()), !dbg !1254
  call void @llvm.dbg.declare(metadata !124, metadata !1255, metadata !DIExpression()), !dbg !1256
  %call = call i32 @_IO_getc(%struct._IO_FILE* %f), !dbg !1257
  call void @llvm.dbg.value(metadata i32 %call, metadata !1261, metadata !DIExpression()), !dbg !1251
  call void @llvm.dbg.value(metadata i32 %call, metadata !1262, metadata !DIExpression()), !dbg !1251
  %cmp = icmp ne i32 %call, %expect, !dbg !1263
  br i1 %cmp, label %if.then, label %if.end5, !dbg !1265

if.then:                                          ; preds = %entry
  %cmp1 = icmp eq i32 %call, -1, !dbg !1266
  br i1 %cmp1, label %if.then2, label %if.else, !dbg !1269

if.then2:                                         ; preds = %if.then
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !1270
  %call3 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.136, i32 0, i32 0)), !dbg !1274
  br label %if.end, !dbg !1275

if.else:                                          ; preds = %if.then
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !1276
  %call4 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.137, i32 0, i32 0), i32 %expect, i32 %call), !dbg !1280
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then2
  br label %return, !dbg !1281

if.end5:                                          ; preds = %entry
  br label %return, !dbg !1282

return:                                           ; preds = %if.end5, %if.end
  %retval.0 = phi i32 [ 1, %if.end ], [ 0, %if.end5 ], !dbg !1283
  ret i32 %retval.0, !dbg !1284
}

; Function Attrs: noinline nounwind ssp uwtable
define void @dxml_free_xml(%struct.dxml_element* %e) #0 !dbg !1285 {
entry:
  call void @llvm.dbg.value(metadata %struct.dxml_element* %e, metadata !1286, metadata !DIExpression()), !dbg !1287
  call void @llvm.dbg.declare(metadata !124, metadata !1288, metadata !DIExpression()), !dbg !1289
  %tobool = icmp ne %struct.dxml_element* %e, null, !dbg !1290
  br i1 %tobool, label %if.end, label %if.then, !dbg !1293

if.then:                                          ; preds = %entry
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !1294
  %call = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.25, i32 0, i32 0)), !dbg !1298
  br label %return, !dbg !1299

if.end:                                           ; preds = %entry
  %element_name = getelementptr inbounds %struct.dxml_element, %struct.dxml_element* %e, i32 0, i32 0, !dbg !1300
  %1 = load i8*, i8** %element_name, align 8, !dbg !1300
  %tobool1 = icmp ne i8* %1, null, !dbg !1302
  br i1 %tobool1, label %if.then2, label %if.end4, !dbg !1303

if.then2:                                         ; preds = %if.end
  %element_name3 = getelementptr inbounds %struct.dxml_element, %struct.dxml_element* %e, i32 0, i32 0, !dbg !1304
  %2 = load i8*, i8** %element_name3, align 8, !dbg !1304
  call void @free(i8* %2) #7, !dbg !1308
  br label %if.end4, !dbg !1309

if.end4:                                          ; preds = %if.then2, %if.end
  %element_attribute = getelementptr inbounds %struct.dxml_element, %struct.dxml_element* %e, i32 0, i32 2, !dbg !1310
  %3 = load %struct.dxml_attribute*, %struct.dxml_attribute** %element_attribute, align 8, !dbg !1310
  %tobool5 = icmp ne %struct.dxml_attribute* %3, null, !dbg !1312
  br i1 %tobool5, label %if.then6, label %if.end8, !dbg !1313

if.then6:                                         ; preds = %if.end4
  %element_attribute7 = getelementptr inbounds %struct.dxml_element, %struct.dxml_element* %e, i32 0, i32 2, !dbg !1314
  %4 = load %struct.dxml_attribute*, %struct.dxml_attribute** %element_attribute7, align 8, !dbg !1314
  call void @dxml_free_attrib(%struct.dxml_attribute* %4), !dbg !1318
  br label %if.end8, !dbg !1319

if.end8:                                          ; preds = %if.then6, %if.end4
  %child = getelementptr inbounds %struct.dxml_element, %struct.dxml_element* %e, i32 0, i32 3, !dbg !1320
  %5 = load %struct.dxml_element*, %struct.dxml_element** %child, align 8, !dbg !1320
  %tobool9 = icmp ne %struct.dxml_element* %5, null, !dbg !1322
  br i1 %tobool9, label %if.then10, label %if.end12, !dbg !1323

if.then10:                                        ; preds = %if.end8
  %child11 = getelementptr inbounds %struct.dxml_element, %struct.dxml_element* %e, i32 0, i32 3, !dbg !1324
  %6 = load %struct.dxml_element*, %struct.dxml_element** %child11, align 8, !dbg !1324
  call void @dxml_free_xml(%struct.dxml_element* %6), !dbg !1328
  br label %if.end12, !dbg !1329

if.end12:                                         ; preds = %if.then10, %if.end8
  %next = getelementptr inbounds %struct.dxml_element, %struct.dxml_element* %e, i32 0, i32 4, !dbg !1330
  %7 = load %struct.dxml_element*, %struct.dxml_element** %next, align 8, !dbg !1330
  %tobool13 = icmp ne %struct.dxml_element* %7, null, !dbg !1332
  br i1 %tobool13, label %if.then14, label %if.end16, !dbg !1333

if.then14:                                        ; preds = %if.end12
  %next15 = getelementptr inbounds %struct.dxml_element, %struct.dxml_element* %e, i32 0, i32 4, !dbg !1334
  %8 = load %struct.dxml_element*, %struct.dxml_element** %next15, align 8, !dbg !1334
  call void @dxml_free_xml(%struct.dxml_element* %8), !dbg !1338
  br label %if.end16, !dbg !1339

if.end16:                                         ; preds = %if.then14, %if.end12
  %9 = bitcast %struct.dxml_element* %e to i8*, !dbg !1340
  call void @free(i8* %9) #7, !dbg !1343
  br label %return, !dbg !1344

return:                                           ; preds = %if.end16, %if.then
  ret void, !dbg !1345
}

; Function Attrs: noinline nounwind ssp uwtable
define internal void @dxml_free_attrib(%struct.dxml_attribute* %a) #0 !dbg !1346 {
entry:
  call void @llvm.dbg.value(metadata %struct.dxml_attribute* %a, metadata !1349, metadata !DIExpression()), !dbg !1350
  call void @llvm.dbg.declare(metadata !124, metadata !1351, metadata !DIExpression()), !dbg !1352
  %tobool = icmp ne %struct.dxml_attribute* %a, null, !dbg !1353
  br i1 %tobool, label %if.end, label %if.then, !dbg !1356

if.then:                                          ; preds = %entry
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !1357
  %call = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.138, i32 0, i32 0)), !dbg !1361
  br label %return, !dbg !1362

if.end:                                           ; preds = %entry
  %attribute_name = getelementptr inbounds %struct.dxml_attribute, %struct.dxml_attribute* %a, i32 0, i32 0, !dbg !1363
  %1 = load i8*, i8** %attribute_name, align 8, !dbg !1363
  %tobool1 = icmp ne i8* %1, null, !dbg !1365
  br i1 %tobool1, label %if.then2, label %if.end4, !dbg !1366

if.then2:                                         ; preds = %if.end
  %attribute_name3 = getelementptr inbounds %struct.dxml_attribute, %struct.dxml_attribute* %a, i32 0, i32 0, !dbg !1367
  %2 = load i8*, i8** %attribute_name3, align 8, !dbg !1367
  call void @free(i8* %2) #7, !dbg !1371
  br label %if.end4, !dbg !1372

if.end4:                                          ; preds = %if.then2, %if.end
  %attribute_data = getelementptr inbounds %struct.dxml_attribute, %struct.dxml_attribute* %a, i32 0, i32 1, !dbg !1373
  %3 = load i8*, i8** %attribute_data, align 8, !dbg !1373
  %tobool5 = icmp ne i8* %3, null, !dbg !1375
  br i1 %tobool5, label %if.then6, label %if.end8, !dbg !1376

if.then6:                                         ; preds = %if.end4
  %attribute_data7 = getelementptr inbounds %struct.dxml_attribute, %struct.dxml_attribute* %a, i32 0, i32 1, !dbg !1377
  %4 = load i8*, i8** %attribute_data7, align 8, !dbg !1377
  call void @free(i8* %4) #7, !dbg !1381
  br label %if.end8, !dbg !1382

if.end8:                                          ; preds = %if.then6, %if.end4
  %next = getelementptr inbounds %struct.dxml_attribute, %struct.dxml_attribute* %a, i32 0, i32 2, !dbg !1383
  %5 = load %struct.dxml_attribute*, %struct.dxml_attribute** %next, align 8, !dbg !1383
  %tobool9 = icmp ne %struct.dxml_attribute* %5, null, !dbg !1385
  br i1 %tobool9, label %if.then10, label %if.end12, !dbg !1386

if.then10:                                        ; preds = %if.end8
  %next11 = getelementptr inbounds %struct.dxml_attribute, %struct.dxml_attribute* %a, i32 0, i32 2, !dbg !1387
  %6 = load %struct.dxml_attribute*, %struct.dxml_attribute** %next11, align 8, !dbg !1387
  call void @dxml_free_attrib(%struct.dxml_attribute* %6), !dbg !1391
  br label %if.end12, !dbg !1392

if.end12:                                         ; preds = %if.then10, %if.end8
  %7 = bitcast %struct.dxml_attribute* %a to i8*, !dbg !1393
  call void @free(i8* %7) #7, !dbg !1396
  br label %return, !dbg !1397

return:                                           ; preds = %if.end12, %if.then
  ret void, !dbg !1398
}

; Function Attrs: noinline nounwind ssp uwtable
define i8* @get_PCDATA_bysimplepath_i(%struct.dxml_element* %e, i8* %loc) #0 !dbg !1399 {
entry:
  call void @llvm.dbg.value(metadata %struct.dxml_element* %e, metadata !1403, metadata !DIExpression()), !dbg !1404
  call void @llvm.dbg.value(metadata i8* %loc, metadata !1405, metadata !DIExpression()), !dbg !1404
  call void @llvm.dbg.declare(metadata !124, metadata !1406, metadata !DIExpression()), !dbg !1407
  %call = call i8* @dxml_get_PCDATA_bysimplepath(%struct.dxml_element* %e, i8* %loc), !dbg !1408
  call void @llvm.dbg.value(metadata i8* %call, metadata !1412, metadata !DIExpression()), !dbg !1404
  call void @llvm.dbg.value(metadata i8* %call, metadata !1413, metadata !DIExpression()), !dbg !1404
  %tobool = icmp ne i8* %call, null, !dbg !1414
  br i1 %tobool, label %if.then, label %if.else, !dbg !1416

if.then:                                          ; preds = %entry
  br label %return, !dbg !1417

if.else:                                          ; preds = %entry
  br label %return, !dbg !1419

return:                                           ; preds = %if.else, %if.then
  %retval.0 = phi i8* [ %call, %if.then ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.26, i32 0, i32 0), %if.else ], !dbg !1421
  ret i8* %retval.0, !dbg !1422
}

; Function Attrs: nounwind readnone
declare i16** @__ctype_b_loc() #5

; Function Attrs: nounwind readonly
declare i8* @strchr(i8*, i32) #4

; Function Attrs: nounwind
declare noalias i8* @strndup(i8*, i32) #2

; Function Attrs: noinline nounwind ssp uwtable
define internal i32 @replace_external_entity(i8* %s) #0 !dbg !1423 {
entry:
  call void @llvm.dbg.value(metadata i8* %s, metadata !1426, metadata !DIExpression()), !dbg !1427
  call void @llvm.dbg.declare(metadata !124, metadata !1428, metadata !DIExpression()), !dbg !1429
  call void @llvm.dbg.declare(metadata !124, metadata !1430, metadata !DIExpression()), !dbg !1431
  call void @llvm.dbg.declare(metadata !124, metadata !1432, metadata !DIExpression()), !dbg !1433
  call void @llvm.dbg.declare(metadata !124, metadata !1434, metadata !DIExpression()), !dbg !1435
  call void @llvm.dbg.declare(metadata !124, metadata !1436, metadata !DIExpression()), !dbg !1437
  call void @llvm.dbg.declare(metadata !124, metadata !1438, metadata !DIExpression()), !dbg !1439
  call void @llvm.dbg.declare(metadata !124, metadata !1440, metadata !DIExpression()), !dbg !1441
  %call = call i32 @strcmp(i8* %s, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.38, i32 0, i32 0)) #9, !dbg !1442
  call void @llvm.dbg.value(metadata i32 %call, metadata !1446, metadata !DIExpression()), !dbg !1427
  %tobool = icmp ne i32 %call, 0, !dbg !1447
  br i1 %tobool, label %if.then, label %if.else12, !dbg !1449

if.then:                                          ; preds = %entry
  %call1 = call i32 @strcmp(i8* %s, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.39, i32 0, i32 0)) #9, !dbg !1450
  call void @llvm.dbg.value(metadata i32 %call1, metadata !1454, metadata !DIExpression()), !dbg !1427
  %tobool2 = icmp ne i32 %call1, 0, !dbg !1455
  br i1 %tobool2, label %if.then3, label %if.else9, !dbg !1457

if.then3:                                         ; preds = %if.then
  %call4 = call i32 @strcmp(i8* %s, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.40, i32 0, i32 0)) #9, !dbg !1458
  call void @llvm.dbg.value(metadata i32 %call4, metadata !1462, metadata !DIExpression()), !dbg !1427
  %tobool5 = icmp ne i32 %call4, 0, !dbg !1463
  br i1 %tobool5, label %if.then6, label %if.else, !dbg !1465

if.then6:                                         ; preds = %if.then3
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !1466
  %call7 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.41, i32 0, i32 0), i8* %s), !dbg !1470
  call void @exit(i32 1) #10, !dbg !1471
  unreachable, !dbg !1471

if.else:                                          ; preds = %if.then3
  %call8 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.42, i32 0, i32 0)), !dbg !1473
  br label %if.end

if.end:                                           ; preds = %if.else
  br label %if.end11, !dbg !1477

if.else9:                                         ; preds = %if.then
  %call10 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.43, i32 0, i32 0)), !dbg !1478
  br label %if.end11

if.end11:                                         ; preds = %if.else9, %if.end
  br label %if.end14, !dbg !1482

if.else12:                                        ; preds = %entry
  %call13 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.44, i32 0, i32 0)), !dbg !1483
  br label %if.end14

if.end14:                                         ; preds = %if.else12, %if.end11
  ret i32 0, !dbg !1487
}

; Function Attrs: noreturn nounwind
declare void @exit(i32) #6

declare i32 @_IO_putc(i32, %struct._IO_FILE*) #3

; Function Attrs: noinline nounwind ssp uwtable
define internal i32 @maybe_label(%struct.dxml_element* %b) #0 !dbg !1488 {
entry:
  call void @llvm.dbg.value(metadata %struct.dxml_element* %b, metadata !1489, metadata !DIExpression()), !dbg !1490
  call void @llvm.dbg.declare(metadata !124, metadata !1491, metadata !DIExpression()), !dbg !1492
  call void @llvm.dbg.declare(metadata !124, metadata !1493, metadata !DIExpression()), !dbg !1494
  %call = call i8* @getatrstring(%struct.dxml_element* %b, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.49, i32 0, i32 0)), !dbg !1495
  call void @llvm.dbg.value(metadata i8* %call, metadata !1499, metadata !DIExpression()), !dbg !1490
  %tobool = icmp ne i8* %call, null, !dbg !1500
  br i1 %tobool, label %if.then, label %if.end, !dbg !1502

if.then:                                          ; preds = %entry
  %call1 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.50, i32 0, i32 0), i8* %call), !dbg !1503
  br label %if.end, !dbg !1507

if.end:                                           ; preds = %if.then, %entry
  ret i32 0, !dbg !1508
}

; Function Attrs: noinline nounwind ssp uwtable
define internal i32 @get_bookchapter(%struct.dxml_element* %b, i32 %paraenter) #0 !dbg !1509 {
entry:
  call void @llvm.dbg.value(metadata %struct.dxml_element* %b, metadata !1512, metadata !DIExpression()), !dbg !1513
  call void @llvm.dbg.value(metadata i32 %paraenter, metadata !1514, metadata !DIExpression()), !dbg !1513
  call void @llvm.dbg.declare(metadata !124, metadata !1515, metadata !DIExpression()), !dbg !1516
  call void @llvm.dbg.declare(metadata !124, metadata !1517, metadata !DIExpression()), !dbg !1518
  call void @llvm.dbg.declare(metadata !124, metadata !1519, metadata !DIExpression()), !dbg !1520
  call void @llvm.dbg.declare(metadata !124, metadata !1521, metadata !DIExpression()), !dbg !1522
  call void @llvm.dbg.declare(metadata !124, metadata !1523, metadata !DIExpression()), !dbg !1524
  call void @llvm.dbg.declare(metadata !124, metadata !1525, metadata !DIExpression()), !dbg !1526
  call void @llvm.dbg.declare(metadata !124, metadata !1527, metadata !DIExpression()), !dbg !1528
  call void @llvm.dbg.declare(metadata !124, metadata !1529, metadata !DIExpression()), !dbg !1530
  call void @llvm.dbg.declare(metadata !124, metadata !1531, metadata !DIExpression()), !dbg !1532
  call void @llvm.dbg.declare(metadata !124, metadata !1533, metadata !DIExpression()), !dbg !1534
  call void @llvm.dbg.declare(metadata !124, metadata !1535, metadata !DIExpression()), !dbg !1536
  call void @llvm.dbg.declare(metadata !124, metadata !1537, metadata !DIExpression()), !dbg !1538
  call void @llvm.dbg.declare(metadata !124, metadata !1539, metadata !DIExpression()), !dbg !1540
  call void @llvm.dbg.declare(metadata !124, metadata !1541, metadata !DIExpression()), !dbg !1542
  call void @llvm.dbg.declare(metadata !124, metadata !1543, metadata !DIExpression()), !dbg !1544
  call void @llvm.dbg.declare(metadata !124, metadata !1545, metadata !DIExpression()), !dbg !1546
  call void @llvm.dbg.declare(metadata !124, metadata !1547, metadata !DIExpression()), !dbg !1548
  call void @llvm.dbg.declare(metadata !124, metadata !1549, metadata !DIExpression()), !dbg !1550
  call void @llvm.dbg.declare(metadata !124, metadata !1551, metadata !DIExpression()), !dbg !1552
  call void @llvm.dbg.declare(metadata !124, metadata !1553, metadata !DIExpression()), !dbg !1554
  call void @llvm.dbg.declare(metadata !124, metadata !1555, metadata !DIExpression()), !dbg !1556
  br label %while.body, !dbg !1557

while.body:                                       ; preds = %if.end91, %entry
  %b.addr.0 = phi %struct.dxml_element* [ %b, %entry ], [ %21, %if.end91 ]
  call void @llvm.dbg.value(metadata %struct.dxml_element* %b.addr.0, metadata !1512, metadata !DIExpression()), !dbg !1513
  br label %while_continue___0, !dbg !1561

while_continue___0:                               ; preds = %while.body
  br label %while_continue, !dbg !1561

while_continue:                                   ; preds = %while_continue___0
  %tobool = icmp ne %struct.dxml_element* %b.addr.0, null, !dbg !1562
  br i1 %tobool, label %if.end, label %if.then, !dbg !1565

if.then:                                          ; preds = %while_continue
  br label %while_break, !dbg !1566

if.end:                                           ; preds = %while_continue
  %element_type = getelementptr inbounds %struct.dxml_element, %struct.dxml_element* %b.addr.0, i32 0, i32 1, !dbg !1568
  %0 = load i32, i32* %element_type, align 8, !dbg !1568
  %cmp = icmp ne i32 %0, 0, !dbg !1570
  br i1 %cmp, label %if.then1, label %if.else, !dbg !1571

if.then1:                                         ; preds = %if.end
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !1572
  %call = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.51, i32 0, i32 0)), !dbg !1576
  call void @exit(i32 1) #10, !dbg !1577
  unreachable, !dbg !1577

if.else:                                          ; preds = %if.end
  %element_name = getelementptr inbounds %struct.dxml_element, %struct.dxml_element* %b.addr.0, i32 0, i32 0, !dbg !1579
  %2 = load i8*, i8** %element_name, align 8, !dbg !1579
  %call2 = call i32 @strcasecmp(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.52, i32 0, i32 0), i8* %2) #9, !dbg !1583
  call void @llvm.dbg.value(metadata i32 %call2, metadata !1584, metadata !DIExpression()), !dbg !1513
  %tobool3 = icmp ne i32 %call2, 0, !dbg !1585
  br i1 %tobool3, label %if.then4, label %if.else89, !dbg !1587

if.then4:                                         ; preds = %if.else
  %element_name5 = getelementptr inbounds %struct.dxml_element, %struct.dxml_element* %b.addr.0, i32 0, i32 0, !dbg !1588
  %3 = load i8*, i8** %element_name5, align 8, !dbg !1588
  %call6 = call i32 @strcasecmp(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.53, i32 0, i32 0), i8* %3) #9, !dbg !1592
  call void @llvm.dbg.value(metadata i32 %call6, metadata !1593, metadata !DIExpression()), !dbg !1513
  %tobool7 = icmp ne i32 %call6, 0, !dbg !1594
  br i1 %tobool7, label %if.then8, label %if.else79, !dbg !1596

if.then8:                                         ; preds = %if.then4
  %element_name9 = getelementptr inbounds %struct.dxml_element, %struct.dxml_element* %b.addr.0, i32 0, i32 0, !dbg !1597
  %4 = load i8*, i8** %element_name9, align 8, !dbg !1597
  %call10 = call i32 @strcasecmp(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.54, i32 0, i32 0), i8* %4) #9, !dbg !1601
  call void @llvm.dbg.value(metadata i32 %call10, metadata !1602, metadata !DIExpression()), !dbg !1513
  %tobool11 = icmp ne i32 %call10, 0, !dbg !1603
  br i1 %tobool11, label %if.then12, label %if.else69, !dbg !1605

if.then12:                                        ; preds = %if.then8
  %element_name13 = getelementptr inbounds %struct.dxml_element, %struct.dxml_element* %b.addr.0, i32 0, i32 0, !dbg !1606
  %5 = load i8*, i8** %element_name13, align 8, !dbg !1606
  %call14 = call i32 @strcasecmp(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.55, i32 0, i32 0), i8* %5) #9, !dbg !1610
  call void @llvm.dbg.value(metadata i32 %call14, metadata !1611, metadata !DIExpression()), !dbg !1513
  %tobool15 = icmp ne i32 %call14, 0, !dbg !1612
  br i1 %tobool15, label %if.then16, label %if.else59, !dbg !1614

if.then16:                                        ; preds = %if.then12
  %element_name17 = getelementptr inbounds %struct.dxml_element, %struct.dxml_element* %b.addr.0, i32 0, i32 0, !dbg !1615
  %6 = load i8*, i8** %element_name17, align 8, !dbg !1615
  %call18 = call i32 @strcasecmp(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.47, i32 0, i32 0), i8* %6) #9, !dbg !1619
  call void @llvm.dbg.value(metadata i32 %call18, metadata !1620, metadata !DIExpression()), !dbg !1513
  %tobool19 = icmp ne i32 %call18, 0, !dbg !1621
  br i1 %tobool19, label %if.then20, label %if.end58, !dbg !1623

if.then20:                                        ; preds = %if.then16
  %call21 = call i32 @get_bothtypes(%struct.dxml_element* %b.addr.0, i32 0), !dbg !1624
  call void @llvm.dbg.value(metadata i32 %call21, metadata !1628, metadata !DIExpression()), !dbg !1513
  %tobool22 = icmp ne i32 %call21, 0, !dbg !1629
  br i1 %tobool22, label %if.end57, label %if.then23, !dbg !1631

if.then23:                                        ; preds = %if.then20
  %element_name24 = getelementptr inbounds %struct.dxml_element, %struct.dxml_element* %b.addr.0, i32 0, i32 0, !dbg !1632
  %7 = load i8*, i8** %element_name24, align 8, !dbg !1632
  %call25 = call i32 @strcasecmp(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.56, i32 0, i32 0), i8* %7) #9, !dbg !1636
  call void @llvm.dbg.value(metadata i32 %call25, metadata !1637, metadata !DIExpression()), !dbg !1513
  %tobool26 = icmp ne i32 %call25, 0, !dbg !1638
  br i1 %tobool26, label %if.then27, label %if.else45, !dbg !1640

if.then27:                                        ; preds = %if.then23
  %element_name28 = getelementptr inbounds %struct.dxml_element, %struct.dxml_element* %b.addr.0, i32 0, i32 0, !dbg !1641
  %8 = load i8*, i8** %element_name28, align 8, !dbg !1641
  %call29 = call i32 @strcasecmp(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.57, i32 0, i32 0), i8* %8) #9, !dbg !1645
  call void @llvm.dbg.value(metadata i32 %call29, metadata !1646, metadata !DIExpression()), !dbg !1513
  %tobool30 = icmp ne i32 %call29, 0, !dbg !1647
  br i1 %tobool30, label %if.then31, label %if.else41, !dbg !1649

if.then31:                                        ; preds = %if.then27
  %element_name32 = getelementptr inbounds %struct.dxml_element, %struct.dxml_element* %b.addr.0, i32 0, i32 0, !dbg !1650
  %9 = load i8*, i8** %element_name32, align 8, !dbg !1650
  %call33 = call i32 @strcasecmp(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.58, i32 0, i32 0), i8* %9) #9, !dbg !1654
  call void @llvm.dbg.value(metadata i32 %call33, metadata !1655, metadata !DIExpression()), !dbg !1513
  %tobool34 = icmp ne i32 %call33, 0, !dbg !1656
  br i1 %tobool34, label %if.then35, label %if.else38, !dbg !1658

if.then35:                                        ; preds = %if.then31
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !1659
  %element_name36 = getelementptr inbounds %struct.dxml_element, %struct.dxml_element* %b.addr.0, i32 0, i32 0, !dbg !1663
  %11 = load i8*, i8** %element_name36, align 8, !dbg !1663
  %call37 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %10, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.59, i32 0, i32 0), i8* %11), !dbg !1664
  %child = getelementptr inbounds %struct.dxml_element, %struct.dxml_element* %b.addr.0, i32 0, i32 3, !dbg !1665
  %12 = load %struct.dxml_element*, %struct.dxml_element** %child, align 8, !dbg !1665
  call void @dxml_dump_element(%struct.dxml_element* %12), !dbg !1667
  br label %if.end40, !dbg !1668

if.else38:                                        ; preds = %if.then31
  %call39 = call i32 @get_table(%struct.dxml_element* %b.addr.0), !dbg !1669
  br label %if.end40

if.end40:                                         ; preds = %if.else38, %if.then35
  br label %if.end44, !dbg !1673

if.else41:                                        ; preds = %if.then27
  %child42 = getelementptr inbounds %struct.dxml_element, %struct.dxml_element* %b.addr.0, i32 0, i32 3, !dbg !1674
  %13 = load %struct.dxml_element*, %struct.dxml_element** %child42, align 8, !dbg !1674
  %call43 = call i32 @get_itemizedlist(%struct.dxml_element* %13), !dbg !1678
  br label %if.end44

if.end44:                                         ; preds = %if.else41, %if.end40
  br label %if.end56, !dbg !1679

if.else45:                                        ; preds = %if.then23
  %tobool46 = icmp ne i32 %paraenter, 0, !dbg !1680
  br i1 %tobool46, label %if.then47, label %if.end49, !dbg !1683

if.then47:                                        ; preds = %if.else45
  %call48 = call i32 @puts(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.60, i32 0, i32 0)), !dbg !1684
  br label %if.end49, !dbg !1688

if.end49:                                         ; preds = %if.then47, %if.else45
  %child50 = getelementptr inbounds %struct.dxml_element, %struct.dxml_element* %b.addr.0, i32 0, i32 3, !dbg !1689
  %14 = load %struct.dxml_element*, %struct.dxml_element** %child50, align 8, !dbg !1689
  %call51 = call i32 @get_paratype(%struct.dxml_element* %14, i32 0), !dbg !1692
  %tobool52 = icmp ne i32 %paraenter, 0, !dbg !1693
  br i1 %tobool52, label %if.then53, label %if.end55, !dbg !1695

if.then53:                                        ; preds = %if.end49
  %call54 = call i32 @puts(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.60, i32 0, i32 0)), !dbg !1696
  br label %if.end55, !dbg !1700

if.end55:                                         ; preds = %if.then53, %if.end49
  br label %if.end56

if.end56:                                         ; preds = %if.end55, %if.end44
  br label %if.end57, !dbg !1701

if.end57:                                         ; preds = %if.end56, %if.then20
  br label %if.end58, !dbg !1702

if.end58:                                         ; preds = %if.end57, %if.then16
  br label %if.end68, !dbg !1703

if.else59:                                        ; preds = %if.then12
  %call60 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.61, i32 0, i32 0)), !dbg !1704
  %child61 = getelementptr inbounds %struct.dxml_element, %struct.dxml_element* %b.addr.0, i32 0, i32 3, !dbg !1708
  %15 = load %struct.dxml_element*, %struct.dxml_element** %child61, align 8, !dbg !1708
  %call62 = call i8* @dxml_get_PCDATA_bysimplepath(%struct.dxml_element* %15, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.47, i32 0, i32 0)), !dbg !1710
  call void @llvm.dbg.value(metadata i8* %call62, metadata !1711, metadata !DIExpression()), !dbg !1513
  %call63 = call i32 @convert_print(i8* %call62, i32 0), !dbg !1712
  %call64 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.48, i32 0, i32 0)), !dbg !1714
  %call65 = call i32 @maybe_label(%struct.dxml_element* %b.addr.0), !dbg !1716
  %child66 = getelementptr inbounds %struct.dxml_element, %struct.dxml_element* %b.addr.0, i32 0, i32 3, !dbg !1718
  %16 = load %struct.dxml_element*, %struct.dxml_element** %child66, align 8, !dbg !1718
  %call67 = call i32 @get_bookchapter(%struct.dxml_element* %16, i32 1), !dbg !1720
  br label %if.end68

if.end68:                                         ; preds = %if.else59, %if.end58
  br label %if.end78, !dbg !1721

if.else69:                                        ; preds = %if.then8
  %call70 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.62, i32 0, i32 0)), !dbg !1722
  %child71 = getelementptr inbounds %struct.dxml_element, %struct.dxml_element* %b.addr.0, i32 0, i32 3, !dbg !1726
  %17 = load %struct.dxml_element*, %struct.dxml_element** %child71, align 8, !dbg !1726
  %call72 = call i8* @dxml_get_PCDATA_bysimplepath(%struct.dxml_element* %17, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.47, i32 0, i32 0)), !dbg !1728
  call void @llvm.dbg.value(metadata i8* %call72, metadata !1729, metadata !DIExpression()), !dbg !1513
  %call73 = call i32 @convert_print(i8* %call72, i32 0), !dbg !1730
  %call74 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.48, i32 0, i32 0)), !dbg !1732
  %call75 = call i32 @maybe_label(%struct.dxml_element* %b.addr.0), !dbg !1734
  %child76 = getelementptr inbounds %struct.dxml_element, %struct.dxml_element* %b.addr.0, i32 0, i32 3, !dbg !1736
  %18 = load %struct.dxml_element*, %struct.dxml_element** %child76, align 8, !dbg !1736
  %call77 = call i32 @get_bookchapter(%struct.dxml_element* %18, i32 1), !dbg !1738
  br label %if.end78

if.end78:                                         ; preds = %if.else69, %if.end68
  br label %if.end88, !dbg !1739

if.else79:                                        ; preds = %if.then4
  br label %_L, !dbg !1740

_L:                                               ; preds = %if.else89, %if.else79
  %call80 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.63, i32 0, i32 0)), !dbg !1741
  %child81 = getelementptr inbounds %struct.dxml_element, %struct.dxml_element* %b.addr.0, i32 0, i32 3, !dbg !1745
  %19 = load %struct.dxml_element*, %struct.dxml_element** %child81, align 8, !dbg !1745
  %call82 = call i8* @dxml_get_PCDATA_bysimplepath(%struct.dxml_element* %19, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.47, i32 0, i32 0)), !dbg !1747
  call void @llvm.dbg.value(metadata i8* %call82, metadata !1748, metadata !DIExpression()), !dbg !1513
  %call83 = call i32 @convert_print(i8* %call82, i32 0), !dbg !1749
  %call84 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.48, i32 0, i32 0)), !dbg !1751
  %call85 = call i32 @maybe_label(%struct.dxml_element* %b.addr.0), !dbg !1753
  %child86 = getelementptr inbounds %struct.dxml_element, %struct.dxml_element* %b.addr.0, i32 0, i32 3, !dbg !1755
  %20 = load %struct.dxml_element*, %struct.dxml_element** %child86, align 8, !dbg !1755
  %call87 = call i32 @get_bookchapter(%struct.dxml_element* %20, i32 1), !dbg !1757
  br label %if.end88

if.end88:                                         ; preds = %_L, %if.end78
  br label %if.end90, !dbg !1758

if.else89:                                        ; preds = %if.else
  br label %_L, !dbg !1759

if.end90:                                         ; preds = %if.end88
  br label %if.end91

if.end91:                                         ; preds = %if.end90
  %next = getelementptr inbounds %struct.dxml_element, %struct.dxml_element* %b.addr.0, i32 0, i32 4, !dbg !1761
  %21 = load %struct.dxml_element*, %struct.dxml_element** %next, align 8, !dbg !1761
  call void @llvm.dbg.value(metadata %struct.dxml_element* %21, metadata !1512, metadata !DIExpression()), !dbg !1513
  br label %while.body, !dbg !1557, !llvm.loop !1762

while_break___0:                                  ; No predecessors!
  br label %while_break, !dbg !1764

while_break:                                      ; preds = %while_break___0, %if.then
  ret i32 0, !dbg !1765
}

; Function Attrs: noinline nounwind ssp uwtable
define internal i8* @getatrstring(%struct.dxml_element* %e, i8* %attr) #0 !dbg !1766 {
entry:
  call void @llvm.dbg.value(metadata %struct.dxml_element* %e, metadata !1767, metadata !DIExpression()), !dbg !1768
  call void @llvm.dbg.value(metadata i8* %attr, metadata !1769, metadata !DIExpression()), !dbg !1768
  %element_attribute = getelementptr inbounds %struct.dxml_element, %struct.dxml_element* %e, i32 0, i32 2, !dbg !1770
  %0 = load %struct.dxml_attribute*, %struct.dxml_attribute** %element_attribute, align 8, !dbg !1770
  call void @llvm.dbg.value(metadata %struct.dxml_attribute* %0, metadata !1772, metadata !DIExpression()), !dbg !1768
  br label %while.body, !dbg !1773

while.body:                                       ; preds = %if.end3, %entry
  %a.0 = phi %struct.dxml_attribute* [ %0, %entry ], [ %3, %if.end3 ], !dbg !1776
  call void @llvm.dbg.value(metadata %struct.dxml_attribute* %a.0, metadata !1772, metadata !DIExpression()), !dbg !1768
  br label %while_continue___0, !dbg !1777

while_continue___0:                               ; preds = %while.body
  br label %while_continue, !dbg !1777

while_continue:                                   ; preds = %while_continue___0
  %tobool = icmp ne %struct.dxml_attribute* %a.0, null, !dbg !1778
  br i1 %tobool, label %if.end, label %if.then, !dbg !1781

if.then:                                          ; preds = %while_continue
  br label %while_break, !dbg !1782

if.end:                                           ; preds = %while_continue
  %attribute_name = getelementptr inbounds %struct.dxml_attribute, %struct.dxml_attribute* %a.0, i32 0, i32 0, !dbg !1784
  %1 = load i8*, i8** %attribute_name, align 8, !dbg !1784
  %call = call i32 @strcmp(i8* %1, i8* %attr) #9, !dbg !1787
  call void @llvm.dbg.value(metadata i32 %call, metadata !1788, metadata !DIExpression()), !dbg !1768
  %tobool1 = icmp ne i32 %call, 0, !dbg !1789
  br i1 %tobool1, label %if.end3, label %if.then2, !dbg !1791

if.then2:                                         ; preds = %if.end
  %attribute_data = getelementptr inbounds %struct.dxml_attribute, %struct.dxml_attribute* %a.0, i32 0, i32 1, !dbg !1792
  %2 = load i8*, i8** %attribute_data, align 8, !dbg !1792
  br label %return, !dbg !1794

if.end3:                                          ; preds = %if.end
  %next = getelementptr inbounds %struct.dxml_attribute, %struct.dxml_attribute* %a.0, i32 0, i32 2, !dbg !1795
  %3 = load %struct.dxml_attribute*, %struct.dxml_attribute** %next, align 8, !dbg !1795
  call void @llvm.dbg.value(metadata %struct.dxml_attribute* %3, metadata !1772, metadata !DIExpression()), !dbg !1768
  br label %while.body, !dbg !1773, !llvm.loop !1796

while_break___0:                                  ; No predecessors!
  br label %while_break, !dbg !1798

while_break:                                      ; preds = %while_break___0, %if.then
  br label %return, !dbg !1799

return:                                           ; preds = %while_break, %if.then2
  %retval.0 = phi i8* [ %2, %if.then2 ], [ null, %while_break ], !dbg !1776
  ret i8* %retval.0, !dbg !1800
}

; Function Attrs: nounwind readonly
declare i32 @strcasecmp(i8*, i8*) #4

; Function Attrs: noinline nounwind ssp uwtable
define internal i32 @get_bothtypes(%struct.dxml_element* %b, i32 %inlinetype) #0 !dbg !1801 {
entry:
  call void @llvm.dbg.value(metadata %struct.dxml_element* %b, metadata !1802, metadata !DIExpression()), !dbg !1803
  call void @llvm.dbg.value(metadata i32 %inlinetype, metadata !1804, metadata !DIExpression()), !dbg !1803
  call void @llvm.dbg.declare(metadata !124, metadata !1805, metadata !DIExpression()), !dbg !1806
  call void @llvm.dbg.declare(metadata !124, metadata !1807, metadata !DIExpression()), !dbg !1808
  call void @llvm.dbg.declare(metadata !124, metadata !1809, metadata !DIExpression()), !dbg !1810
  call void @llvm.dbg.declare(metadata !124, metadata !1811, metadata !DIExpression()), !dbg !1812
  call void @llvm.dbg.declare(metadata !124, metadata !1813, metadata !DIExpression()), !dbg !1814
  %element_name = getelementptr inbounds %struct.dxml_element, %struct.dxml_element* %b, i32 0, i32 0, !dbg !1815
  %0 = load i8*, i8** %element_name, align 8, !dbg !1815
  %call = call i32 @strcasecmp(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.64, i32 0, i32 0), i8* %0) #9, !dbg !1819
  call void @llvm.dbg.value(metadata i32 %call, metadata !1820, metadata !DIExpression()), !dbg !1803
  %tobool = icmp ne i32 %call, 0, !dbg !1821
  br i1 %tobool, label %if.then, label %if.else, !dbg !1823

if.then:                                          ; preds = %entry
  br label %return, !dbg !1824

if.else:                                          ; preds = %entry
  %tobool1 = icmp ne i32 %inlinetype, 0, !dbg !1826
  br i1 %tobool1, label %if.end, label %if.then2, !dbg !1829

if.then2:                                         ; preds = %if.else
  %call3 = call i32 @puts(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.65, i32 0, i32 0)), !dbg !1830
  br label %if.end, !dbg !1834

if.end:                                           ; preds = %if.then2, %if.else
  %call4 = call i32 @puts(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.66, i32 0, i32 0)), !dbg !1835
  %child = getelementptr inbounds %struct.dxml_element, %struct.dxml_element* %b, i32 0, i32 3, !dbg !1838
  %1 = load %struct.dxml_element*, %struct.dxml_element** %child, align 8, !dbg !1838
  %call5 = call i32 @get_paratype(%struct.dxml_element* %1, i32 1), !dbg !1840
  %call6 = call i32 @puts(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.67, i32 0, i32 0)), !dbg !1841
  %tobool7 = icmp ne i32 %inlinetype, 0, !dbg !1843
  br i1 %tobool7, label %if.end10, label %if.then8, !dbg !1845

if.then8:                                         ; preds = %if.end
  %call9 = call i32 @puts(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.65, i32 0, i32 0)), !dbg !1846
  br label %if.end10, !dbg !1850

if.end10:                                         ; preds = %if.then8, %if.end
  br label %if.end11

if.end11:                                         ; preds = %if.end10
  br label %return, !dbg !1851

return:                                           ; preds = %if.end11, %if.then
  %retval.0 = phi i32 [ 0, %if.then ], [ 1, %if.end11 ], !dbg !1852
  ret i32 %retval.0, !dbg !1853
}

; Function Attrs: noinline nounwind ssp uwtable
define internal i32 @get_table(%struct.dxml_element* %b_parent) #0 !dbg !1854 {
entry:
  call void @llvm.dbg.value(metadata %struct.dxml_element* %b_parent, metadata !1855, metadata !DIExpression()), !dbg !1856
  call void @llvm.dbg.declare(metadata !124, metadata !1857, metadata !DIExpression()), !dbg !1858
  call void @llvm.dbg.declare(metadata !124, metadata !1859, metadata !DIExpression()), !dbg !1860
  call void @llvm.dbg.declare(metadata !124, metadata !1861, metadata !DIExpression()), !dbg !1862
  call void @llvm.dbg.declare(metadata !124, metadata !1863, metadata !DIExpression()), !dbg !1864
  call void @llvm.dbg.declare(metadata !124, metadata !1865, metadata !DIExpression()), !dbg !1866
  call void @llvm.dbg.declare(metadata !124, metadata !1867, metadata !DIExpression()), !dbg !1868
  call void @llvm.dbg.declare(metadata !124, metadata !1869, metadata !DIExpression()), !dbg !1870
  call void @llvm.dbg.declare(metadata !124, metadata !1871, metadata !DIExpression()), !dbg !1872
  call void @llvm.dbg.declare(metadata !124, metadata !1873, metadata !DIExpression()), !dbg !1874
  call void @llvm.dbg.declare(metadata !124, metadata !1875, metadata !DIExpression()), !dbg !1876
  call void @llvm.dbg.declare(metadata !124, metadata !1877, metadata !DIExpression()), !dbg !1878
  %child = getelementptr inbounds %struct.dxml_element, %struct.dxml_element* %b_parent, i32 0, i32 3, !dbg !1879
  %0 = load %struct.dxml_element*, %struct.dxml_element** %child, align 8, !dbg !1879
  call void @llvm.dbg.value(metadata %struct.dxml_element* %0, metadata !1882, metadata !DIExpression()), !dbg !1856
  %call = call %struct.dxml_element* @dxml_get_element_byname(%struct.dxml_element* %0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.68, i32 0, i32 0)), !dbg !1883
  call void @llvm.dbg.value(metadata %struct.dxml_element* %call, metadata !1885, metadata !DIExpression()), !dbg !1856
  %call2 = call i8* @getatrstring(%struct.dxml_element* %call, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.69, i32 0, i32 0)), !dbg !1886
  call void @llvm.dbg.value(metadata i8* %call2, metadata !1888, metadata !DIExpression()), !dbg !1856
  %call3 = call i32 @atoi(i8* %call2) #9, !dbg !1889
  call void @llvm.dbg.value(metadata i32 %call3, metadata !1891, metadata !DIExpression()), !dbg !1856
  call void @llvm.dbg.value(metadata i32 %call3, metadata !1892, metadata !DIExpression()), !dbg !1856
  %call4 = call i8* @dxml_get_PCDATA_bysimplepath(%struct.dxml_element* %0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.47, i32 0, i32 0)), !dbg !1893
  call void @llvm.dbg.value(metadata i8* %call4, metadata !1895, metadata !DIExpression()), !dbg !1856
  %call5 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.70, i32 0, i32 0), i8* %call4), !dbg !1896
  %call6 = call i32 @maybe_label(%struct.dxml_element* %b_parent), !dbg !1898
  %div = sdiv i32 12, %call3, !dbg !1900
  call void @llvm.dbg.value(metadata i32 %div, metadata !1901, metadata !DIExpression()), !dbg !1856
  %call7 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.71, i32 0, i32 0), i32 %div), !dbg !1902
  call void @llvm.dbg.value(metadata i32 0, metadata !1904, metadata !DIExpression()), !dbg !1856
  br label %while.body, !dbg !1905

while.body:                                       ; preds = %if.end, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %if.end ], !dbg !1908
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !1904, metadata !DIExpression()), !dbg !1856
  br label %while_continue___2, !dbg !1909

while_continue___2:                               ; preds = %while.body
  br label %while_continue, !dbg !1909

while_continue:                                   ; preds = %while_continue___2
  %sub = sub nsw i32 %call3, 1, !dbg !1910
  %cmp = icmp slt i32 %i.0, %sub, !dbg !1913
  br i1 %cmp, label %if.end, label %if.then, !dbg !1914

if.then:                                          ; preds = %while_continue
  br label %while_break, !dbg !1915

if.end:                                           ; preds = %while_continue
  %call8 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.72, i32 0, i32 0), i32 %div), !dbg !1917
  %inc = add nsw i32 %i.0, 1, !dbg !1920
  call void @llvm.dbg.value(metadata i32 %inc, metadata !1904, metadata !DIExpression()), !dbg !1856
  br label %while.body, !dbg !1905, !llvm.loop !1921

while_break___2:                                  ; No predecessors!
  br label %while_break, !dbg !1923

while_break:                                      ; preds = %while_break___2, %if.then
  %call9 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.73, i32 0, i32 0)), !dbg !1924
  %call10 = call %struct.dxml_element* @dxml_get_element_bysimplepath(%struct.dxml_element* %0, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.74, i32 0, i32 0)), !dbg !1927
  call void @llvm.dbg.value(metadata %struct.dxml_element* %call10, metadata !1929, metadata !DIExpression()), !dbg !1856
  br label %while.body11, !dbg !1930

while.body11:                                     ; preds = %while_break___1, %while_break
  %row.0 = phi %struct.dxml_element* [ %call10, %while_break ], [ %5, %while_break___1 ], !dbg !1908
  call void @llvm.dbg.value(metadata %struct.dxml_element* %row.0, metadata !1929, metadata !DIExpression()), !dbg !1856
  br label %while_continue___3, !dbg !1933

while_continue___3:                               ; preds = %while.body11
  br label %while_continue___0, !dbg !1933

while_continue___0:                               ; preds = %while_continue___3
  %tobool = icmp ne %struct.dxml_element* %row.0, null, !dbg !1934
  br i1 %tobool, label %if.end13, label %if.then12, !dbg !1937

if.then12:                                        ; preds = %while_continue___0
  br label %while_break___0, !dbg !1938

if.end13:                                         ; preds = %while_continue___0
  %child14 = getelementptr inbounds %struct.dxml_element, %struct.dxml_element* %row.0, i32 0, i32 3, !dbg !1940
  %1 = load %struct.dxml_element*, %struct.dxml_element** %child14, align 8, !dbg !1940
  call void @llvm.dbg.value(metadata %struct.dxml_element* %1, metadata !1941, metadata !DIExpression()), !dbg !1856
  br label %while.body16, !dbg !1942

while.body16:                                     ; preds = %if.end25, %if.end13
  %entry1.0 = phi %struct.dxml_element* [ %1, %if.end13 ], [ %4, %if.end25 ], !dbg !1945
  call void @llvm.dbg.value(metadata %struct.dxml_element* %entry1.0, metadata !1941, metadata !DIExpression()), !dbg !1856
  br label %while_continue___4, !dbg !1946

while_continue___4:                               ; preds = %while.body16
  br label %while_continue___1, !dbg !1946

while_continue___1:                               ; preds = %while_continue___4
  %tobool17 = icmp ne %struct.dxml_element* %entry1.0, null, !dbg !1947
  br i1 %tobool17, label %if.end19, label %if.then18, !dbg !1950

if.then18:                                        ; preds = %while_continue___1
  br label %while_break___1, !dbg !1951

if.end19:                                         ; preds = %while_continue___1
  %child20 = getelementptr inbounds %struct.dxml_element, %struct.dxml_element* %entry1.0, i32 0, i32 3, !dbg !1953
  %2 = load %struct.dxml_element*, %struct.dxml_element** %child20, align 8, !dbg !1953
  %call21 = call i32 @get_paratype(%struct.dxml_element* %2, i32 0), !dbg !1956
  %next = getelementptr inbounds %struct.dxml_element, %struct.dxml_element* %entry1.0, i32 0, i32 4, !dbg !1957
  %3 = load %struct.dxml_element*, %struct.dxml_element** %next, align 8, !dbg !1957
  %tobool22 = icmp ne %struct.dxml_element* %3, null, !dbg !1959
  br i1 %tobool22, label %if.then23, label %if.end25, !dbg !1960

if.then23:                                        ; preds = %if.end19
  %call24 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.75, i32 0, i32 0)), !dbg !1961
  br label %if.end25, !dbg !1965

if.end25:                                         ; preds = %if.then23, %if.end19
  %next26 = getelementptr inbounds %struct.dxml_element, %struct.dxml_element* %entry1.0, i32 0, i32 4, !dbg !1966
  %4 = load %struct.dxml_element*, %struct.dxml_element** %next26, align 8, !dbg !1966
  call void @llvm.dbg.value(metadata %struct.dxml_element* %4, metadata !1941, metadata !DIExpression()), !dbg !1856
  br label %while.body16, !dbg !1942, !llvm.loop !1967

while_break___4:                                  ; No predecessors!
  br label %while_break___1, !dbg !1969

while_break___1:                                  ; preds = %while_break___4, %if.then18
  %call27 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.76, i32 0, i32 0)), !dbg !1970
  %next28 = getelementptr inbounds %struct.dxml_element, %struct.dxml_element* %row.0, i32 0, i32 4, !dbg !1973
  %5 = load %struct.dxml_element*, %struct.dxml_element** %next28, align 8, !dbg !1973
  call void @llvm.dbg.value(metadata %struct.dxml_element* %5, metadata !1929, metadata !DIExpression()), !dbg !1856
  br label %while.body11, !dbg !1930, !llvm.loop !1974

while_break___3:                                  ; No predecessors!
  br label %while_break___0, !dbg !1976

while_break___0:                                  ; preds = %while_break___3, %if.then12
  %call29 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.77, i32 0, i32 0)), !dbg !1977
  ret i32 0, !dbg !1980
}

; Function Attrs: noinline nounwind ssp uwtable
define internal i32 @get_itemizedlist(%struct.dxml_element* %b) #0 !dbg !1981 {
entry:
  call void @llvm.dbg.value(metadata %struct.dxml_element* %b, metadata !1982, metadata !DIExpression()), !dbg !1983
  call void @llvm.dbg.declare(metadata !124, metadata !1984, metadata !DIExpression()), !dbg !1985
  call void @llvm.dbg.declare(metadata !124, metadata !1986, metadata !DIExpression()), !dbg !1987
  call void @llvm.dbg.declare(metadata !124, metadata !1988, metadata !DIExpression()), !dbg !1989
  call void @llvm.dbg.declare(metadata !124, metadata !1990, metadata !DIExpression()), !dbg !1991
  call void @llvm.dbg.declare(metadata !124, metadata !1992, metadata !DIExpression()), !dbg !1993
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.78, i32 0, i32 0)), !dbg !1994
  br label %while.body, !dbg !1998

while.body:                                       ; preds = %if.end7, %entry
  %b.addr.0 = phi %struct.dxml_element* [ %b, %entry ], [ %2, %if.end7 ]
  call void @llvm.dbg.value(metadata %struct.dxml_element* %b.addr.0, metadata !1982, metadata !DIExpression()), !dbg !1983
  br label %while_continue___0, !dbg !2001

while_continue___0:                               ; preds = %while.body
  br label %while_continue, !dbg !2001

while_continue:                                   ; preds = %while_continue___0
  %tobool = icmp ne %struct.dxml_element* %b.addr.0, null, !dbg !2002
  br i1 %tobool, label %if.end, label %if.then, !dbg !2005

if.then:                                          ; preds = %while_continue
  br label %while_break, !dbg !2006

if.end:                                           ; preds = %while_continue
  %element_name = getelementptr inbounds %struct.dxml_element, %struct.dxml_element* %b.addr.0, i32 0, i32 0, !dbg !2008
  %0 = load i8*, i8** %element_name, align 8, !dbg !2008
  %call1 = call i32 @strcasecmp(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.79, i32 0, i32 0), i8* %0) #9, !dbg !2011
  call void @llvm.dbg.value(metadata i32 %call1, metadata !2012, metadata !DIExpression()), !dbg !1983
  %tobool2 = icmp ne i32 %call1, 0, !dbg !2013
  br i1 %tobool2, label %if.then3, label %if.else, !dbg !2015

if.then3:                                         ; preds = %if.end
  call void @dxml_dump_element(%struct.dxml_element* %b.addr.0), !dbg !2016
  br label %if.end7, !dbg !2020

if.else:                                          ; preds = %if.end
  %call4 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.80, i32 0, i32 0)), !dbg !2021
  %child = getelementptr inbounds %struct.dxml_element, %struct.dxml_element* %b.addr.0, i32 0, i32 3, !dbg !2025
  %1 = load %struct.dxml_element*, %struct.dxml_element** %child, align 8, !dbg !2025
  %call5 = call i32 @get_bookchapter(%struct.dxml_element* %1, i32 0), !dbg !2027
  %call6 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.33, i32 0, i32 0)), !dbg !2028
  br label %if.end7

if.end7:                                          ; preds = %if.else, %if.then3
  %next = getelementptr inbounds %struct.dxml_element, %struct.dxml_element* %b.addr.0, i32 0, i32 4, !dbg !2030
  %2 = load %struct.dxml_element*, %struct.dxml_element** %next, align 8, !dbg !2030
  call void @llvm.dbg.value(metadata %struct.dxml_element* %2, metadata !1982, metadata !DIExpression()), !dbg !1983
  br label %while.body, !dbg !1998, !llvm.loop !2031

while_break___0:                                  ; No predecessors!
  br label %while_break, !dbg !2033

while_break:                                      ; preds = %while_break___0, %if.then
  %call8 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.81, i32 0, i32 0)), !dbg !2034
  ret i32 0, !dbg !2037
}

declare i32 @puts(i8*) #3

; Function Attrs: noinline nounwind ssp uwtable
define internal i32 @get_paratype(%struct.dxml_element* %b, i32 %verbatim) #0 !dbg !2038 {
entry:
  call void @llvm.dbg.value(metadata %struct.dxml_element* %b, metadata !2039, metadata !DIExpression()), !dbg !2040
  call void @llvm.dbg.value(metadata i32 %verbatim, metadata !2041, metadata !DIExpression()), !dbg !2040
  call void @llvm.dbg.declare(metadata !124, metadata !2042, metadata !DIExpression()), !dbg !2043
  call void @llvm.dbg.declare(metadata !124, metadata !2044, metadata !DIExpression()), !dbg !2045
  call void @llvm.dbg.declare(metadata !124, metadata !2046, metadata !DIExpression()), !dbg !2047
  call void @llvm.dbg.declare(metadata !124, metadata !2048, metadata !DIExpression()), !dbg !2049
  call void @llvm.dbg.declare(metadata !124, metadata !2050, metadata !DIExpression()), !dbg !2051
  call void @llvm.dbg.declare(metadata !124, metadata !2052, metadata !DIExpression()), !dbg !2053
  call void @llvm.dbg.declare(metadata !124, metadata !2054, metadata !DIExpression()), !dbg !2055
  call void @llvm.dbg.declare(metadata !124, metadata !2056, metadata !DIExpression()), !dbg !2057
  call void @llvm.dbg.declare(metadata !124, metadata !2058, metadata !DIExpression()), !dbg !2059
  call void @llvm.dbg.declare(metadata !124, metadata !2060, metadata !DIExpression()), !dbg !2061
  call void @llvm.dbg.declare(metadata !124, metadata !2062, metadata !DIExpression()), !dbg !2063
  call void @llvm.dbg.declare(metadata !124, metadata !2064, metadata !DIExpression()), !dbg !2065
  call void @llvm.dbg.declare(metadata !124, metadata !2066, metadata !DIExpression()), !dbg !2067
  call void @llvm.dbg.declare(metadata !124, metadata !2068, metadata !DIExpression()), !dbg !2069
  call void @llvm.dbg.declare(metadata !124, metadata !2070, metadata !DIExpression()), !dbg !2071
  call void @llvm.dbg.declare(metadata !124, metadata !2072, metadata !DIExpression()), !dbg !2073
  call void @llvm.dbg.declare(metadata !124, metadata !2074, metadata !DIExpression()), !dbg !2075
  call void @llvm.dbg.declare(metadata !124, metadata !2076, metadata !DIExpression()), !dbg !2077
  call void @llvm.dbg.declare(metadata !124, metadata !2078, metadata !DIExpression()), !dbg !2079
  call void @llvm.dbg.declare(metadata !124, metadata !2080, metadata !DIExpression()), !dbg !2081
  call void @llvm.dbg.declare(metadata !124, metadata !2082, metadata !DIExpression()), !dbg !2083
  call void @llvm.dbg.declare(metadata !124, metadata !2084, metadata !DIExpression()), !dbg !2085
  call void @llvm.dbg.declare(metadata !124, metadata !2086, metadata !DIExpression()), !dbg !2087
  call void @llvm.dbg.declare(metadata !124, metadata !2088, metadata !DIExpression()), !dbg !2089
  call void @llvm.dbg.declare(metadata !124, metadata !2090, metadata !DIExpression()), !dbg !2091
  call void @llvm.dbg.declare(metadata !124, metadata !2092, metadata !DIExpression()), !dbg !2093
  call void @llvm.dbg.declare(metadata !124, metadata !2094, metadata !DIExpression()), !dbg !2095
  call void @llvm.dbg.declare(metadata !124, metadata !2096, metadata !DIExpression()), !dbg !2097
  call void @llvm.dbg.declare(metadata !124, metadata !2098, metadata !DIExpression()), !dbg !2099
  call void @llvm.dbg.declare(metadata !124, metadata !2100, metadata !DIExpression()), !dbg !2101
  call void @llvm.dbg.declare(metadata !124, metadata !2102, metadata !DIExpression()), !dbg !2103
  call void @llvm.dbg.declare(metadata !124, metadata !2104, metadata !DIExpression()), !dbg !2105
  call void @llvm.dbg.declare(metadata !124, metadata !2106, metadata !DIExpression()), !dbg !2107
  call void @llvm.dbg.declare(metadata !124, metadata !2108, metadata !DIExpression()), !dbg !2109
  call void @llvm.dbg.declare(metadata !124, metadata !2110, metadata !DIExpression()), !dbg !2111
  call void @llvm.dbg.declare(metadata !124, metadata !2112, metadata !DIExpression()), !dbg !2113
  call void @llvm.dbg.declare(metadata !124, metadata !2114, metadata !DIExpression()), !dbg !2115
  call void @llvm.dbg.declare(metadata !124, metadata !2116, metadata !DIExpression()), !dbg !2117
  call void @llvm.dbg.declare(metadata !124, metadata !2118, metadata !DIExpression()), !dbg !2119
  call void @llvm.dbg.declare(metadata !124, metadata !2120, metadata !DIExpression()), !dbg !2121
  call void @llvm.dbg.declare(metadata !124, metadata !2122, metadata !DIExpression()), !dbg !2123
  call void @llvm.dbg.declare(metadata !124, metadata !2124, metadata !DIExpression()), !dbg !2125
  call void @llvm.dbg.declare(metadata !124, metadata !2126, metadata !DIExpression()), !dbg !2127
  call void @llvm.dbg.declare(metadata !124, metadata !2128, metadata !DIExpression()), !dbg !2129
  call void @llvm.dbg.declare(metadata !124, metadata !2130, metadata !DIExpression()), !dbg !2131
  call void @llvm.dbg.declare(metadata !124, metadata !2132, metadata !DIExpression()), !dbg !2133
  call void @llvm.dbg.declare(metadata !124, metadata !2134, metadata !DIExpression()), !dbg !2135
  call void @llvm.dbg.declare(metadata !124, metadata !2136, metadata !DIExpression()), !dbg !2137
  call void @llvm.dbg.declare(metadata !124, metadata !2138, metadata !DIExpression()), !dbg !2139
  call void @llvm.dbg.declare(metadata !124, metadata !2140, metadata !DIExpression()), !dbg !2141
  call void @llvm.dbg.declare(metadata !124, metadata !2142, metadata !DIExpression()), !dbg !2143
  call void @llvm.dbg.declare(metadata !124, metadata !2144, metadata !DIExpression()), !dbg !2145
  call void @llvm.dbg.declare(metadata !124, metadata !2146, metadata !DIExpression()), !dbg !2147
  call void @llvm.dbg.declare(metadata !124, metadata !2148, metadata !DIExpression()), !dbg !2149
  call void @llvm.dbg.declare(metadata !124, metadata !2150, metadata !DIExpression()), !dbg !2151
  call void @llvm.dbg.declare(metadata !124, metadata !2152, metadata !DIExpression()), !dbg !2153
  call void @llvm.dbg.declare(metadata !124, metadata !2154, metadata !DIExpression()), !dbg !2155
  call void @llvm.dbg.declare(metadata !124, metadata !2156, metadata !DIExpression()), !dbg !2157
  call void @llvm.dbg.declare(metadata !124, metadata !2158, metadata !DIExpression()), !dbg !2159
  call void @llvm.dbg.declare(metadata !124, metadata !2160, metadata !DIExpression()), !dbg !2161
  call void @llvm.dbg.declare(metadata !124, metadata !2162, metadata !DIExpression()), !dbg !2163
  call void @llvm.dbg.declare(metadata !124, metadata !2164, metadata !DIExpression()), !dbg !2165
  call void @llvm.dbg.declare(metadata !124, metadata !2166, metadata !DIExpression()), !dbg !2167
  call void @llvm.dbg.declare(metadata !124, metadata !2168, metadata !DIExpression()), !dbg !2169
  call void @llvm.dbg.declare(metadata !124, metadata !2170, metadata !DIExpression()), !dbg !2171
  br label %while.body, !dbg !2172

while.body:                                       ; preds = %if.end226, %entry
  %b.addr.0 = phi %struct.dxml_element* [ %b, %entry ], [ %47, %if.end226 ]
  call void @llvm.dbg.value(metadata %struct.dxml_element* %b.addr.0, metadata !2039, metadata !DIExpression()), !dbg !2040
  br label %while_continue___0, !dbg !2176

while_continue___0:                               ; preds = %while.body
  br label %while_continue, !dbg !2176

while_continue:                                   ; preds = %while_continue___0
  %tobool = icmp ne %struct.dxml_element* %b.addr.0, null, !dbg !2177
  br i1 %tobool, label %if.end, label %if.then, !dbg !2180

if.then:                                          ; preds = %while_continue
  br label %while_break, !dbg !2181

if.end:                                           ; preds = %while_continue
  %element_type = getelementptr inbounds %struct.dxml_element, %struct.dxml_element* %b.addr.0, i32 0, i32 1, !dbg !2183
  %0 = load i32, i32* %element_type, align 8, !dbg !2183
  %cmp = icmp eq i32 %0, 1, !dbg !2185
  br i1 %cmp, label %if.then1, label %if.else, !dbg !2186

if.then1:                                         ; preds = %if.end
  %element_name = getelementptr inbounds %struct.dxml_element, %struct.dxml_element* %b.addr.0, i32 0, i32 0, !dbg !2187
  %1 = load i8*, i8** %element_name, align 8, !dbg !2187
  %call = call i32 @convert_print(i8* %1, i32 %verbatim), !dbg !2191
  br label %if.end226, !dbg !2192

if.else:                                          ; preds = %if.end
  %call2 = call i32 @get_bothtypes(%struct.dxml_element* %b.addr.0, i32 1), !dbg !2193
  call void @llvm.dbg.value(metadata i32 %call2, metadata !2197, metadata !DIExpression()), !dbg !2040
  %tobool3 = icmp ne i32 %call2, 0, !dbg !2198
  br i1 %tobool3, label %if.end225, label %if.then4, !dbg !2200

if.then4:                                         ; preds = %if.else
  %element_name5 = getelementptr inbounds %struct.dxml_element, %struct.dxml_element* %b.addr.0, i32 0, i32 0, !dbg !2201
  %2 = load i8*, i8** %element_name5, align 8, !dbg !2201
  %call6 = call i32 @strcasecmp(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.82, i32 0, i32 0), i8* %2) #9, !dbg !2205
  call void @llvm.dbg.value(metadata i32 %call6, metadata !2206, metadata !DIExpression()), !dbg !2040
  %tobool7 = icmp ne i32 %call6, 0, !dbg !2207
  br i1 %tobool7, label %if.then8, label %if.else219, !dbg !2209

if.then8:                                         ; preds = %if.then4
  %element_name9 = getelementptr inbounds %struct.dxml_element, %struct.dxml_element* %b.addr.0, i32 0, i32 0, !dbg !2210
  %3 = load i8*, i8** %element_name9, align 8, !dbg !2210
  %call10 = call i32 @strcasecmp(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.83, i32 0, i32 0), i8* %3) #9, !dbg !2214
  call void @llvm.dbg.value(metadata i32 %call10, metadata !2215, metadata !DIExpression()), !dbg !2040
  %tobool11 = icmp ne i32 %call10, 0, !dbg !2216
  br i1 %tobool11, label %if.then12, label %if.else213, !dbg !2218

if.then12:                                        ; preds = %if.then8
  %element_name13 = getelementptr inbounds %struct.dxml_element, %struct.dxml_element* %b.addr.0, i32 0, i32 0, !dbg !2219
  %4 = load i8*, i8** %element_name13, align 8, !dbg !2219
  %call14 = call i32 @strcasecmp(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.84, i32 0, i32 0), i8* %4) #9, !dbg !2223
  call void @llvm.dbg.value(metadata i32 %call14, metadata !2224, metadata !DIExpression()), !dbg !2040
  %tobool15 = icmp ne i32 %call14, 0, !dbg !2225
  br i1 %tobool15, label %if.then16, label %if.else207, !dbg !2227

if.then16:                                        ; preds = %if.then12
  %element_name17 = getelementptr inbounds %struct.dxml_element, %struct.dxml_element* %b.addr.0, i32 0, i32 0, !dbg !2228
  %5 = load i8*, i8** %element_name17, align 8, !dbg !2228
  %call18 = call i32 @strcasecmp(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.85, i32 0, i32 0), i8* %5) #9, !dbg !2232
  call void @llvm.dbg.value(metadata i32 %call18, metadata !2233, metadata !DIExpression()), !dbg !2040
  %tobool19 = icmp ne i32 %call18, 0, !dbg !2234
  br i1 %tobool19, label %if.then20, label %if.else201, !dbg !2236

if.then20:                                        ; preds = %if.then16
  %element_name21 = getelementptr inbounds %struct.dxml_element, %struct.dxml_element* %b.addr.0, i32 0, i32 0, !dbg !2237
  %6 = load i8*, i8** %element_name21, align 8, !dbg !2237
  %call22 = call i32 @strcasecmp(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.86, i32 0, i32 0), i8* %6) #9, !dbg !2241
  call void @llvm.dbg.value(metadata i32 %call22, metadata !2242, metadata !DIExpression()), !dbg !2040
  %tobool23 = icmp ne i32 %call22, 0, !dbg !2243
  br i1 %tobool23, label %if.then24, label %if.else195, !dbg !2245

if.then24:                                        ; preds = %if.then20
  %element_name25 = getelementptr inbounds %struct.dxml_element, %struct.dxml_element* %b.addr.0, i32 0, i32 0, !dbg !2246
  %7 = load i8*, i8** %element_name25, align 8, !dbg !2246
  %call26 = call i32 @strcasecmp(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.87, i32 0, i32 0), i8* %7) #9, !dbg !2250
  call void @llvm.dbg.value(metadata i32 %call26, metadata !2251, metadata !DIExpression()), !dbg !2040
  %tobool27 = icmp ne i32 %call26, 0, !dbg !2252
  br i1 %tobool27, label %if.then28, label %if.else189, !dbg !2254

if.then28:                                        ; preds = %if.then24
  %element_name29 = getelementptr inbounds %struct.dxml_element, %struct.dxml_element* %b.addr.0, i32 0, i32 0, !dbg !2255
  %8 = load i8*, i8** %element_name29, align 8, !dbg !2255
  %call30 = call i32 @strcasecmp(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.88, i32 0, i32 0), i8* %8) #9, !dbg !2259
  call void @llvm.dbg.value(metadata i32 %call30, metadata !2260, metadata !DIExpression()), !dbg !2040
  %tobool31 = icmp ne i32 %call30, 0, !dbg !2261
  br i1 %tobool31, label %if.then32, label %if.else183, !dbg !2263

if.then32:                                        ; preds = %if.then28
  %element_name33 = getelementptr inbounds %struct.dxml_element, %struct.dxml_element* %b.addr.0, i32 0, i32 0, !dbg !2264
  %9 = load i8*, i8** %element_name33, align 8, !dbg !2264
  %call34 = call i32 @strcasecmp(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.89, i32 0, i32 0), i8* %9) #9, !dbg !2268
  call void @llvm.dbg.value(metadata i32 %call34, metadata !2269, metadata !DIExpression()), !dbg !2040
  %tobool35 = icmp ne i32 %call34, 0, !dbg !2270
  br i1 %tobool35, label %if.then36, label %if.else177, !dbg !2272

if.then36:                                        ; preds = %if.then32
  %element_name37 = getelementptr inbounds %struct.dxml_element, %struct.dxml_element* %b.addr.0, i32 0, i32 0, !dbg !2273
  %10 = load i8*, i8** %element_name37, align 8, !dbg !2273
  %call38 = call i32 @strcasecmp(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.90, i32 0, i32 0), i8* %10) #9, !dbg !2277
  call void @llvm.dbg.value(metadata i32 %call38, metadata !2278, metadata !DIExpression()), !dbg !2040
  %tobool39 = icmp ne i32 %call38, 0, !dbg !2279
  br i1 %tobool39, label %if.then40, label %if.else171, !dbg !2281

if.then40:                                        ; preds = %if.then36
  %element_name41 = getelementptr inbounds %struct.dxml_element, %struct.dxml_element* %b.addr.0, i32 0, i32 0, !dbg !2282
  %11 = load i8*, i8** %element_name41, align 8, !dbg !2282
  %call42 = call i32 @strcasecmp(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.91, i32 0, i32 0), i8* %11) #9, !dbg !2286
  call void @llvm.dbg.value(metadata i32 %call42, metadata !2287, metadata !DIExpression()), !dbg !2040
  %tobool43 = icmp ne i32 %call42, 0, !dbg !2288
  br i1 %tobool43, label %if.then44, label %if.else165, !dbg !2290

if.then44:                                        ; preds = %if.then40
  %element_name45 = getelementptr inbounds %struct.dxml_element, %struct.dxml_element* %b.addr.0, i32 0, i32 0, !dbg !2291
  %12 = load i8*, i8** %element_name45, align 8, !dbg !2291
  %call46 = call i32 @strcasecmp(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.92, i32 0, i32 0), i8* %12) #9, !dbg !2295
  call void @llvm.dbg.value(metadata i32 %call46, metadata !2296, metadata !DIExpression()), !dbg !2040
  %tobool47 = icmp ne i32 %call46, 0, !dbg !2297
  br i1 %tobool47, label %if.then48, label %if.else159, !dbg !2299

if.then48:                                        ; preds = %if.then44
  %element_name49 = getelementptr inbounds %struct.dxml_element, %struct.dxml_element* %b.addr.0, i32 0, i32 0, !dbg !2300
  %13 = load i8*, i8** %element_name49, align 8, !dbg !2300
  %call50 = call i32 @strcasecmp(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.93, i32 0, i32 0), i8* %13) #9, !dbg !2304
  call void @llvm.dbg.value(metadata i32 %call50, metadata !2305, metadata !DIExpression()), !dbg !2040
  %tobool51 = icmp ne i32 %call50, 0, !dbg !2306
  br i1 %tobool51, label %if.then52, label %if.else153, !dbg !2308

if.then52:                                        ; preds = %if.then48
  %element_name53 = getelementptr inbounds %struct.dxml_element, %struct.dxml_element* %b.addr.0, i32 0, i32 0, !dbg !2309
  %14 = load i8*, i8** %element_name53, align 8, !dbg !2309
  %call54 = call i32 @strcasecmp(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.94, i32 0, i32 0), i8* %14) #9, !dbg !2313
  call void @llvm.dbg.value(metadata i32 %call54, metadata !2314, metadata !DIExpression()), !dbg !2040
  %tobool55 = icmp ne i32 %call54, 0, !dbg !2315
  br i1 %tobool55, label %if.then56, label %if.else147, !dbg !2317

if.then56:                                        ; preds = %if.then52
  %element_name57 = getelementptr inbounds %struct.dxml_element, %struct.dxml_element* %b.addr.0, i32 0, i32 0, !dbg !2318
  %15 = load i8*, i8** %element_name57, align 8, !dbg !2318
  %call58 = call i32 @strcasecmp(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.95, i32 0, i32 0), i8* %15) #9, !dbg !2322
  call void @llvm.dbg.value(metadata i32 %call58, metadata !2323, metadata !DIExpression()), !dbg !2040
  %tobool59 = icmp ne i32 %call58, 0, !dbg !2324
  br i1 %tobool59, label %if.then60, label %if.else141, !dbg !2326

if.then60:                                        ; preds = %if.then56
  %element_name61 = getelementptr inbounds %struct.dxml_element, %struct.dxml_element* %b.addr.0, i32 0, i32 0, !dbg !2327
  %16 = load i8*, i8** %element_name61, align 8, !dbg !2327
  %call62 = call i32 @strcasecmp(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.96, i32 0, i32 0), i8* %16) #9, !dbg !2331
  call void @llvm.dbg.value(metadata i32 %call62, metadata !2332, metadata !DIExpression()), !dbg !2040
  %tobool63 = icmp ne i32 %call62, 0, !dbg !2333
  br i1 %tobool63, label %if.then64, label %if.else135, !dbg !2335

if.then64:                                        ; preds = %if.then60
  %element_name65 = getelementptr inbounds %struct.dxml_element, %struct.dxml_element* %b.addr.0, i32 0, i32 0, !dbg !2336
  %17 = load i8*, i8** %element_name65, align 8, !dbg !2336
  %call66 = call i32 @strcasecmp(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.97, i32 0, i32 0), i8* %17) #9, !dbg !2340
  call void @llvm.dbg.value(metadata i32 %call66, metadata !2341, metadata !DIExpression()), !dbg !2040
  %tobool67 = icmp ne i32 %call66, 0, !dbg !2342
  br i1 %tobool67, label %if.then68, label %if.else129, !dbg !2344

if.then68:                                        ; preds = %if.then64
  %element_name69 = getelementptr inbounds %struct.dxml_element, %struct.dxml_element* %b.addr.0, i32 0, i32 0, !dbg !2345
  %18 = load i8*, i8** %element_name69, align 8, !dbg !2345
  %call70 = call i32 @strcasecmp(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.57, i32 0, i32 0), i8* %18) #9, !dbg !2349
  call void @llvm.dbg.value(metadata i32 %call70, metadata !2350, metadata !DIExpression()), !dbg !2040
  %tobool71 = icmp ne i32 %call70, 0, !dbg !2351
  br i1 %tobool71, label %if.then72, label %if.else125, !dbg !2353

if.then72:                                        ; preds = %if.then68
  %element_name73 = getelementptr inbounds %struct.dxml_element, %struct.dxml_element* %b.addr.0, i32 0, i32 0, !dbg !2354
  %19 = load i8*, i8** %element_name73, align 8, !dbg !2354
  %call74 = call i32 @strcasecmp(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.98, i32 0, i32 0), i8* %19) #9, !dbg !2358
  call void @llvm.dbg.value(metadata i32 %call74, metadata !2359, metadata !DIExpression()), !dbg !2040
  %tobool75 = icmp ne i32 %call74, 0, !dbg !2360
  br i1 %tobool75, label %if.then76, label %if.else119, !dbg !2362

if.then76:                                        ; preds = %if.then72
  %element_name77 = getelementptr inbounds %struct.dxml_element, %struct.dxml_element* %b.addr.0, i32 0, i32 0, !dbg !2363
  %20 = load i8*, i8** %element_name77, align 8, !dbg !2363
  %call78 = call i32 @strcasecmp(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.99, i32 0, i32 0), i8* %20) #9, !dbg !2367
  call void @llvm.dbg.value(metadata i32 %call78, metadata !2368, metadata !DIExpression()), !dbg !2040
  %tobool79 = icmp ne i32 %call78, 0, !dbg !2369
  br i1 %tobool79, label %if.then80, label %if.else113, !dbg !2371

if.then80:                                        ; preds = %if.then76
  %element_name81 = getelementptr inbounds %struct.dxml_element, %struct.dxml_element* %b.addr.0, i32 0, i32 0, !dbg !2372
  %21 = load i8*, i8** %element_name81, align 8, !dbg !2372
  %call82 = call i32 @strcasecmp(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.100, i32 0, i32 0), i8* %21) #9, !dbg !2376
  call void @llvm.dbg.value(metadata i32 %call82, metadata !2377, metadata !DIExpression()), !dbg !2040
  %tobool83 = icmp ne i32 %call82, 0, !dbg !2378
  br i1 %tobool83, label %if.then84, label %if.else105, !dbg !2380

if.then84:                                        ; preds = %if.then80
  %element_name85 = getelementptr inbounds %struct.dxml_element, %struct.dxml_element* %b.addr.0, i32 0, i32 0, !dbg !2381
  %22 = load i8*, i8** %element_name85, align 8, !dbg !2381
  %call86 = call i32 @strcasecmp(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.101, i32 0, i32 0), i8* %22) #9, !dbg !2385
  call void @llvm.dbg.value(metadata i32 %call86, metadata !2386, metadata !DIExpression()), !dbg !2040
  %tobool87 = icmp ne i32 %call86, 0, !dbg !2387
  br i1 %tobool87, label %if.then88, label %if.else98, !dbg !2389

if.then88:                                        ; preds = %if.then84
  %element_name89 = getelementptr inbounds %struct.dxml_element, %struct.dxml_element* %b.addr.0, i32 0, i32 0, !dbg !2390
  %23 = load i8*, i8** %element_name89, align 8, !dbg !2390
  %call90 = call i32 @strcasecmp(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.58, i32 0, i32 0), i8* %23) #9, !dbg !2394
  call void @llvm.dbg.value(metadata i32 %call90, metadata !2395, metadata !DIExpression()), !dbg !2040
  %tobool91 = icmp ne i32 %call90, 0, !dbg !2396
  br i1 %tobool91, label %if.then92, label %if.else95, !dbg !2398

if.then92:                                        ; preds = %if.then88
  %24 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !2399
  %element_name93 = getelementptr inbounds %struct.dxml_element, %struct.dxml_element* %b.addr.0, i32 0, i32 0, !dbg !2403
  %25 = load i8*, i8** %element_name93, align 8, !dbg !2403
  %call94 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %24, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.59, i32 0, i32 0), i8* %25), !dbg !2404
  call void @dxml_dump_element(%struct.dxml_element* %b.addr.0), !dbg !2405
  br label %if.end97, !dbg !2407

if.else95:                                        ; preds = %if.then88
  %call96 = call i32 @get_table(%struct.dxml_element* %b.addr.0), !dbg !2408
  br label %if.end97

if.end97:                                         ; preds = %if.else95, %if.then92
  br label %if.end104, !dbg !2412

if.else98:                                        ; preds = %if.then84
  %child = getelementptr inbounds %struct.dxml_element, %struct.dxml_element* %b.addr.0, i32 0, i32 3, !dbg !2413
  %26 = load %struct.dxml_element*, %struct.dxml_element** %child, align 8, !dbg !2413
  %call99 = call i32 @get_paratype(%struct.dxml_element* %26, i32 %verbatim), !dbg !2417
  %call100 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.102, i32 0, i32 0)), !dbg !2418
  %call101 = call i8* @getatrstring(%struct.dxml_element* %b.addr.0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.103, i32 0, i32 0)), !dbg !2420
  call void @llvm.dbg.value(metadata i8* %call101, metadata !2422, metadata !DIExpression()), !dbg !2040
  %call102 = call i32 @convert_print(i8* %call101, i32 %verbatim), !dbg !2423
  %call103 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.104, i32 0, i32 0)), !dbg !2425
  br label %if.end104

if.end104:                                        ; preds = %if.else98, %if.end97
  br label %if.end112, !dbg !2427

if.else105:                                       ; preds = %if.then80
  %child106 = getelementptr inbounds %struct.dxml_element, %struct.dxml_element* %b.addr.0, i32 0, i32 3, !dbg !2428
  %27 = load %struct.dxml_element*, %struct.dxml_element** %child106, align 8, !dbg !2428
  %call107 = call i32 @get_paratype(%struct.dxml_element* %27, i32 %verbatim), !dbg !2432
  %call108 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.102, i32 0, i32 0)), !dbg !2433
  %call109 = call i8* @getatrstring(%struct.dxml_element* %b.addr.0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.103, i32 0, i32 0)), !dbg !2435
  call void @llvm.dbg.value(metadata i8* %call109, metadata !2422, metadata !DIExpression()), !dbg !2040
  %call110 = call i32 @convert_print(i8* %call109, i32 %verbatim), !dbg !2437
  %call111 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.104, i32 0, i32 0)), !dbg !2439
  br label %if.end112

if.end112:                                        ; preds = %if.else105, %if.end104
  br label %if.end118, !dbg !2441

if.else113:                                       ; preds = %if.then76
  %call114 = call i8* @getatrstring(%struct.dxml_element* %b.addr.0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.105, i32 0, i32 0)), !dbg !2442
  call void @llvm.dbg.value(metadata i8* %call114, metadata !2446, metadata !DIExpression()), !dbg !2040
  %call115 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.106, i32 0, i32 0), i8* %call114), !dbg !2447
  %child116 = getelementptr inbounds %struct.dxml_element, %struct.dxml_element* %b.addr.0, i32 0, i32 3, !dbg !2449
  %28 = load %struct.dxml_element*, %struct.dxml_element** %child116, align 8, !dbg !2449
  %call117 = call i32 @get_paratype(%struct.dxml_element* %28, i32 %verbatim), !dbg !2451
  br label %if.end118

if.end118:                                        ; preds = %if.else113, %if.end112
  br label %if.end124, !dbg !2452

if.else119:                                       ; preds = %if.then72
  %call120 = call i8* @getatrstring(%struct.dxml_element* %b.addr.0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.105, i32 0, i32 0)), !dbg !2453
  call void @llvm.dbg.value(metadata i8* %call120, metadata !2446, metadata !DIExpression()), !dbg !2040
  %call121 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.106, i32 0, i32 0), i8* %call120), !dbg !2457
  %child122 = getelementptr inbounds %struct.dxml_element, %struct.dxml_element* %b.addr.0, i32 0, i32 3, !dbg !2459
  %29 = load %struct.dxml_element*, %struct.dxml_element** %child122, align 8, !dbg !2459
  %call123 = call i32 @get_paratype(%struct.dxml_element* %29, i32 %verbatim), !dbg !2461
  br label %if.end124

if.end124:                                        ; preds = %if.else119, %if.end118
  br label %if.end128, !dbg !2462

if.else125:                                       ; preds = %if.then68
  %child126 = getelementptr inbounds %struct.dxml_element, %struct.dxml_element* %b.addr.0, i32 0, i32 3, !dbg !2463
  %30 = load %struct.dxml_element*, %struct.dxml_element** %child126, align 8, !dbg !2463
  %call127 = call i32 @get_itemizedlist(%struct.dxml_element* %30), !dbg !2467
  br label %if.end128

if.end128:                                        ; preds = %if.else125, %if.end124
  br label %if.end134, !dbg !2468

if.else129:                                       ; preds = %if.then64
  %call130 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.107, i32 0, i32 0)), !dbg !2469
  %child131 = getelementptr inbounds %struct.dxml_element, %struct.dxml_element* %b.addr.0, i32 0, i32 3, !dbg !2473
  %31 = load %struct.dxml_element*, %struct.dxml_element** %child131, align 8, !dbg !2473
  %call132 = call i32 @get_bookchapter(%struct.dxml_element* %31, i32 0), !dbg !2475
  %call133 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.108, i32 0, i32 0)), !dbg !2476
  br label %if.end134

if.end134:                                        ; preds = %if.else129, %if.end128
  br label %if.end140, !dbg !2478

if.else135:                                       ; preds = %if.then60
  %call136 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.109, i32 0, i32 0)), !dbg !2479
  %child137 = getelementptr inbounds %struct.dxml_element, %struct.dxml_element* %b.addr.0, i32 0, i32 3, !dbg !2483
  %32 = load %struct.dxml_element*, %struct.dxml_element** %child137, align 8, !dbg !2483
  %call138 = call i32 @get_paratype(%struct.dxml_element* %32, i32 %verbatim), !dbg !2485
  %call139 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.110, i32 0, i32 0)), !dbg !2486
  br label %if.end140

if.end140:                                        ; preds = %if.else135, %if.end134
  br label %if.end146, !dbg !2488

if.else141:                                       ; preds = %if.then56
  %call142 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.111, i32 0, i32 0)), !dbg !2489
  %child143 = getelementptr inbounds %struct.dxml_element, %struct.dxml_element* %b.addr.0, i32 0, i32 3, !dbg !2493
  %33 = load %struct.dxml_element*, %struct.dxml_element** %child143, align 8, !dbg !2493
  %call144 = call i32 @get_paratype(%struct.dxml_element* %33, i32 %verbatim), !dbg !2495
  %call145 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.108, i32 0, i32 0)), !dbg !2496
  br label %if.end146

if.end146:                                        ; preds = %if.else141, %if.end140
  br label %if.end152, !dbg !2498

if.else147:                                       ; preds = %if.then52
  %call148 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.112, i32 0, i32 0)), !dbg !2499
  %child149 = getelementptr inbounds %struct.dxml_element, %struct.dxml_element* %b.addr.0, i32 0, i32 3, !dbg !2503
  %34 = load %struct.dxml_element*, %struct.dxml_element** %child149, align 8, !dbg !2503
  %call150 = call i32 @get_paratype(%struct.dxml_element* %34, i32 %verbatim), !dbg !2505
  %call151 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.108, i32 0, i32 0)), !dbg !2506
  br label %if.end152

if.end152:                                        ; preds = %if.else147, %if.end146
  br label %if.end158, !dbg !2508

if.else153:                                       ; preds = %if.then48
  %call154 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.112, i32 0, i32 0)), !dbg !2509
  %child155 = getelementptr inbounds %struct.dxml_element, %struct.dxml_element* %b.addr.0, i32 0, i32 3, !dbg !2513
  %35 = load %struct.dxml_element*, %struct.dxml_element** %child155, align 8, !dbg !2513
  %call156 = call i32 @get_paratype(%struct.dxml_element* %35, i32 %verbatim), !dbg !2515
  %call157 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.108, i32 0, i32 0)), !dbg !2516
  br label %if.end158

if.end158:                                        ; preds = %if.else153, %if.end152
  br label %if.end164, !dbg !2518

if.else159:                                       ; preds = %if.then44
  %call160 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.112, i32 0, i32 0)), !dbg !2519
  %child161 = getelementptr inbounds %struct.dxml_element, %struct.dxml_element* %b.addr.0, i32 0, i32 3, !dbg !2523
  %36 = load %struct.dxml_element*, %struct.dxml_element** %child161, align 8, !dbg !2523
  %call162 = call i32 @get_paratype(%struct.dxml_element* %36, i32 %verbatim), !dbg !2525
  %call163 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.108, i32 0, i32 0)), !dbg !2526
  br label %if.end164

if.end164:                                        ; preds = %if.else159, %if.end158
  br label %if.end170, !dbg !2528

if.else165:                                       ; preds = %if.then40
  %call166 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.113, i32 0, i32 0)), !dbg !2529
  %child167 = getelementptr inbounds %struct.dxml_element, %struct.dxml_element* %b.addr.0, i32 0, i32 3, !dbg !2533
  %37 = load %struct.dxml_element*, %struct.dxml_element** %child167, align 8, !dbg !2533
  %call168 = call i32 @get_paratype(%struct.dxml_element* %37, i32 %verbatim), !dbg !2535
  %call169 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.108, i32 0, i32 0)), !dbg !2536
  br label %if.end170

if.end170:                                        ; preds = %if.else165, %if.end164
  br label %if.end176, !dbg !2538

if.else171:                                       ; preds = %if.then36
  %call172 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.113, i32 0, i32 0)), !dbg !2539
  %child173 = getelementptr inbounds %struct.dxml_element, %struct.dxml_element* %b.addr.0, i32 0, i32 3, !dbg !2543
  %38 = load %struct.dxml_element*, %struct.dxml_element** %child173, align 8, !dbg !2543
  %call174 = call i32 @get_paratype(%struct.dxml_element* %38, i32 %verbatim), !dbg !2545
  %call175 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.108, i32 0, i32 0)), !dbg !2546
  br label %if.end176

if.end176:                                        ; preds = %if.else171, %if.end170
  br label %if.end182, !dbg !2548

if.else177:                                       ; preds = %if.then32
  %call178 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.113, i32 0, i32 0)), !dbg !2549
  %child179 = getelementptr inbounds %struct.dxml_element, %struct.dxml_element* %b.addr.0, i32 0, i32 3, !dbg !2553
  %39 = load %struct.dxml_element*, %struct.dxml_element** %child179, align 8, !dbg !2553
  %call180 = call i32 @get_paratype(%struct.dxml_element* %39, i32 %verbatim), !dbg !2555
  %call181 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.108, i32 0, i32 0)), !dbg !2556
  br label %if.end182

if.end182:                                        ; preds = %if.else177, %if.end176
  br label %if.end188, !dbg !2558

if.else183:                                       ; preds = %if.then28
  %call184 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.113, i32 0, i32 0)), !dbg !2559
  %child185 = getelementptr inbounds %struct.dxml_element, %struct.dxml_element* %b.addr.0, i32 0, i32 3, !dbg !2563
  %40 = load %struct.dxml_element*, %struct.dxml_element** %child185, align 8, !dbg !2563
  %call186 = call i32 @get_paratype(%struct.dxml_element* %40, i32 %verbatim), !dbg !2565
  %call187 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.108, i32 0, i32 0)), !dbg !2566
  br label %if.end188

if.end188:                                        ; preds = %if.else183, %if.end182
  br label %if.end194, !dbg !2568

if.else189:                                       ; preds = %if.then24
  %call190 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.113, i32 0, i32 0)), !dbg !2569
  %child191 = getelementptr inbounds %struct.dxml_element, %struct.dxml_element* %b.addr.0, i32 0, i32 3, !dbg !2573
  %41 = load %struct.dxml_element*, %struct.dxml_element** %child191, align 8, !dbg !2573
  %call192 = call i32 @get_paratype(%struct.dxml_element* %41, i32 %verbatim), !dbg !2575
  %call193 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.108, i32 0, i32 0)), !dbg !2576
  br label %if.end194

if.end194:                                        ; preds = %if.else189, %if.end188
  br label %if.end200, !dbg !2578

if.else195:                                       ; preds = %if.then20
  %call196 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.113, i32 0, i32 0)), !dbg !2579
  %child197 = getelementptr inbounds %struct.dxml_element, %struct.dxml_element* %b.addr.0, i32 0, i32 3, !dbg !2583
  %42 = load %struct.dxml_element*, %struct.dxml_element** %child197, align 8, !dbg !2583
  %call198 = call i32 @get_paratype(%struct.dxml_element* %42, i32 %verbatim), !dbg !2585
  %call199 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.108, i32 0, i32 0)), !dbg !2586
  br label %if.end200

if.end200:                                        ; preds = %if.else195, %if.end194
  br label %if.end206, !dbg !2588

if.else201:                                       ; preds = %if.then16
  %call202 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.113, i32 0, i32 0)), !dbg !2589
  %child203 = getelementptr inbounds %struct.dxml_element, %struct.dxml_element* %b.addr.0, i32 0, i32 3, !dbg !2593
  %43 = load %struct.dxml_element*, %struct.dxml_element** %child203, align 8, !dbg !2593
  %call204 = call i32 @get_paratype(%struct.dxml_element* %43, i32 %verbatim), !dbg !2595
  %call205 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.108, i32 0, i32 0)), !dbg !2596
  br label %if.end206

if.end206:                                        ; preds = %if.else201, %if.end200
  br label %if.end212, !dbg !2598

if.else207:                                       ; preds = %if.then12
  %call208 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.113, i32 0, i32 0)), !dbg !2599
  %child209 = getelementptr inbounds %struct.dxml_element, %struct.dxml_element* %b.addr.0, i32 0, i32 3, !dbg !2603
  %44 = load %struct.dxml_element*, %struct.dxml_element** %child209, align 8, !dbg !2603
  %call210 = call i32 @get_paratype(%struct.dxml_element* %44, i32 %verbatim), !dbg !2605
  %call211 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.108, i32 0, i32 0)), !dbg !2606
  br label %if.end212

if.end212:                                        ; preds = %if.else207, %if.end206
  br label %if.end218, !dbg !2608

if.else213:                                       ; preds = %if.then8
  %call214 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.113, i32 0, i32 0)), !dbg !2609
  %child215 = getelementptr inbounds %struct.dxml_element, %struct.dxml_element* %b.addr.0, i32 0, i32 3, !dbg !2613
  %45 = load %struct.dxml_element*, %struct.dxml_element** %child215, align 8, !dbg !2613
  %call216 = call i32 @get_paratype(%struct.dxml_element* %45, i32 %verbatim), !dbg !2615
  %call217 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.108, i32 0, i32 0)), !dbg !2616
  br label %if.end218

if.end218:                                        ; preds = %if.else213, %if.end212
  br label %if.end224, !dbg !2618

if.else219:                                       ; preds = %if.then4
  %call220 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.113, i32 0, i32 0)), !dbg !2619
  %child221 = getelementptr inbounds %struct.dxml_element, %struct.dxml_element* %b.addr.0, i32 0, i32 3, !dbg !2623
  %46 = load %struct.dxml_element*, %struct.dxml_element** %child221, align 8, !dbg !2623
  %call222 = call i32 @get_paratype(%struct.dxml_element* %46, i32 %verbatim), !dbg !2625
  %call223 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.108, i32 0, i32 0)), !dbg !2626
  br label %if.end224

if.end224:                                        ; preds = %if.else219, %if.end218
  br label %if.end225, !dbg !2628

if.end225:                                        ; preds = %if.end224, %if.else
  br label %if.end226

if.end226:                                        ; preds = %if.end225, %if.then1
  %next = getelementptr inbounds %struct.dxml_element, %struct.dxml_element* %b.addr.0, i32 0, i32 4, !dbg !2629
  %47 = load %struct.dxml_element*, %struct.dxml_element** %next, align 8, !dbg !2629
  call void @llvm.dbg.value(metadata %struct.dxml_element* %47, metadata !2039, metadata !DIExpression()), !dbg !2040
  br label %while.body, !dbg !2172, !llvm.loop !2630

while_break___0:                                  ; No predecessors!
  br label %while_break, !dbg !2632

while_break:                                      ; preds = %while_break___0, %if.then
  ret i32 0, !dbg !2633
}

; Function Attrs: nounwind readonly
declare i32 @atoi(i8*) #4

; Function Attrs: noinline nounwind ssp uwtable
define internal void @space(i32 %i) #0 !dbg !2634 {
entry:
  call void @llvm.dbg.value(metadata i32 %i, metadata !2637, metadata !DIExpression()), !dbg !2638
  call void @llvm.dbg.declare(metadata !124, metadata !2639, metadata !DIExpression()), !dbg !2640
  br label %while.body, !dbg !2641

while.body:                                       ; preds = %if.end, %entry
  %i.addr.0 = phi i32 [ %i, %entry ], [ %dec, %if.end ]
  call void @llvm.dbg.value(metadata i32 %i.addr.0, metadata !2637, metadata !DIExpression()), !dbg !2638
  br label %while_continue___0, !dbg !2645

while_continue___0:                               ; preds = %while.body
  br label %while_continue, !dbg !2645

while_continue:                                   ; preds = %while_continue___0
  call void @llvm.dbg.value(metadata i32 %i.addr.0, metadata !2646, metadata !DIExpression()), !dbg !2638
  %dec = add nsw i32 %i.addr.0, -1, !dbg !2647
  call void @llvm.dbg.value(metadata i32 %dec, metadata !2637, metadata !DIExpression()), !dbg !2638
  %tobool = icmp ne i32 %i.addr.0, 0, !dbg !2649
  br i1 %tobool, label %if.end, label %if.then, !dbg !2651

if.then:                                          ; preds = %while_continue
  br label %while_break, !dbg !2652

if.end:                                           ; preds = %while_continue
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.13, i32 0, i32 0)), !dbg !2654
  br label %while.body, !dbg !2641, !llvm.loop !2657

while_break___0:                                  ; No predecessors!
  br label %while_break, !dbg !2659

while_break:                                      ; preds = %while_break___0, %if.then
  ret void, !dbg !2660
}

; Function Attrs: noinline nounwind ssp uwtable
define internal void @recurse_attribute(%struct.dxml_attribute* %a) #0 !dbg !2661 {
entry:
  call void @llvm.dbg.value(metadata %struct.dxml_attribute* %a, metadata !2662, metadata !DIExpression()), !dbg !2663
  call void @llvm.dbg.declare(metadata !124, metadata !2664, metadata !DIExpression()), !dbg !2665
  %attribute_name = getelementptr inbounds %struct.dxml_attribute, %struct.dxml_attribute* %a, i32 0, i32 0, !dbg !2666
  %0 = load i8*, i8** %attribute_name, align 8, !dbg !2666
  %attribute_data = getelementptr inbounds %struct.dxml_attribute, %struct.dxml_attribute* %a, i32 0, i32 1, !dbg !2670
  %1 = load i8*, i8** %attribute_data, align 8, !dbg !2670
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.118, i32 0, i32 0), i8* %0, i8* %1), !dbg !2671
  %next = getelementptr inbounds %struct.dxml_attribute, %struct.dxml_attribute* %a, i32 0, i32 2, !dbg !2672
  %2 = load %struct.dxml_attribute*, %struct.dxml_attribute** %next, align 8, !dbg !2672
  %tobool = icmp ne %struct.dxml_attribute* %2, null, !dbg !2674
  br i1 %tobool, label %if.then, label %if.end, !dbg !2675

if.then:                                          ; preds = %entry
  %next1 = getelementptr inbounds %struct.dxml_attribute, %struct.dxml_attribute* %a, i32 0, i32 2, !dbg !2676
  %3 = load %struct.dxml_attribute*, %struct.dxml_attribute** %next1, align 8, !dbg !2676
  call void @recurse_attribute(%struct.dxml_attribute* %3), !dbg !2680
  br label %if.end, !dbg !2681

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !2682
}

; Function Attrs: noinline nounwind ssp uwtable
define internal %struct.dxml_element* @initialize_element() #0 !dbg !2683 {
entry:
  %call = call i8* @mallocwm(i32 40), !dbg !2686
  call void @llvm.dbg.value(metadata i8* %call, metadata !2690, metadata !DIExpression()), !dbg !2691
  %0 = bitcast i8* %call to %struct.dxml_element*, !dbg !2692
  call void @llvm.dbg.value(metadata %struct.dxml_element* %0, metadata !2693, metadata !DIExpression()), !dbg !2691
  %element_name = getelementptr inbounds %struct.dxml_element, %struct.dxml_element* %0, i32 0, i32 0, !dbg !2694
  store i8* null, i8** %element_name, align 8, !dbg !2695
  %element_attribute = getelementptr inbounds %struct.dxml_element, %struct.dxml_element* %0, i32 0, i32 2, !dbg !2696
  store %struct.dxml_attribute* null, %struct.dxml_attribute** %element_attribute, align 8, !dbg !2697
  call void @llvm.dbg.value(metadata %struct.dxml_element* null, metadata !2698, metadata !DIExpression()), !dbg !2691
  %next = getelementptr inbounds %struct.dxml_element, %struct.dxml_element* %0, i32 0, i32 4, !dbg !2699
  store %struct.dxml_element* null, %struct.dxml_element** %next, align 8, !dbg !2700
  %child = getelementptr inbounds %struct.dxml_element, %struct.dxml_element* %0, i32 0, i32 3, !dbg !2699
  store %struct.dxml_element* null, %struct.dxml_element** %child, align 8, !dbg !2701
  %element_type = getelementptr inbounds %struct.dxml_element, %struct.dxml_element* %0, i32 0, i32 1, !dbg !2702
  store i32 0, i32* %element_type, align 8, !dbg !2703
  ret %struct.dxml_element* %0, !dbg !2704
}

; Function Attrs: noinline nounwind ssp uwtable
define internal i32 @read_element_start(%struct._IO_FILE* %f) #0 !dbg !2705 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %f, metadata !2706, metadata !DIExpression()), !dbg !2707
  %call = call i32 @_IO_getc(%struct._IO_FILE* %f), !dbg !2708
  call void @llvm.dbg.value(metadata i32 %call, metadata !2712, metadata !DIExpression()), !dbg !2707
  %cmp = icmp eq i32 %call, 63, !dbg !2713
  br i1 %cmp, label %if.then, label %if.end3, !dbg !2715

if.then:                                          ; preds = %entry
  %call1 = call i32 @skip_read_PI(%struct._IO_FILE* %f, i32 1), !dbg !2716
  call void @llvm.dbg.value(metadata i32 %call1, metadata !2720, metadata !DIExpression()), !dbg !2707
  %tobool = icmp ne i32 %call1, 0, !dbg !2721
  br i1 %tobool, label %if.then2, label %if.else, !dbg !2723

if.then2:                                         ; preds = %if.then
  call void @llvm.dbg.value(metadata i32 2, metadata !2724, metadata !DIExpression()), !dbg !2707
  br label %if.end, !dbg !2725

if.else:                                          ; preds = %if.then
  call void @llvm.dbg.value(metadata i32 0, metadata !2724, metadata !DIExpression()), !dbg !2707
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then2
  %tmp___0.0 = phi i32 [ 2, %if.then2 ], [ 0, %if.else ], !dbg !2727
  call void @llvm.dbg.value(metadata i32 %tmp___0.0, metadata !2724, metadata !DIExpression()), !dbg !2707
  br label %return, !dbg !2728

if.end3:                                          ; preds = %entry
  %cmp4 = icmp eq i32 %call, 33, !dbg !2729
  br i1 %cmp4, label %if.then5, label %if.end11, !dbg !2731

if.then5:                                         ; preds = %if.end3
  %call6 = call i32 @skip_read_comment(%struct._IO_FILE* %f), !dbg !2732
  call void @llvm.dbg.value(metadata i32 %call6, metadata !2736, metadata !DIExpression()), !dbg !2707
  %tobool7 = icmp ne i32 %call6, 0, !dbg !2737
  br i1 %tobool7, label %if.then8, label %if.else9, !dbg !2739

if.then8:                                         ; preds = %if.then5
  call void @llvm.dbg.value(metadata i32 2, metadata !2740, metadata !DIExpression()), !dbg !2707
  br label %if.end10, !dbg !2741

if.else9:                                         ; preds = %if.then5
  call void @llvm.dbg.value(metadata i32 0, metadata !2740, metadata !DIExpression()), !dbg !2707
  br label %if.end10

if.end10:                                         ; preds = %if.else9, %if.then8
  %tmp___3.0 = phi i32 [ 2, %if.then8 ], [ 0, %if.else9 ], !dbg !2743
  call void @llvm.dbg.value(metadata i32 %tmp___3.0, metadata !2740, metadata !DIExpression()), !dbg !2707
  br label %return, !dbg !2744

if.end11:                                         ; preds = %if.end3
  %call12 = call i32 @ungetc(i32 %call, %struct._IO_FILE* %f), !dbg !2745
  br label %return, !dbg !2748

return:                                           ; preds = %if.end11, %if.end10, %if.end
  %retval.0 = phi i32 [ %tmp___0.0, %if.end ], [ %tmp___3.0, %if.end10 ], [ 1, %if.end11 ], !dbg !2749
  ret i32 %retval.0, !dbg !2750
}

; Function Attrs: noinline nounwind ssp uwtable
define internal i8* @read_character_stream(%struct._IO_FILE* %f, i8* %stop_chars) #0 !dbg !2751 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %f, metadata !2754, metadata !DIExpression()), !dbg !2755
  call void @llvm.dbg.value(metadata i8* %stop_chars, metadata !2756, metadata !DIExpression()), !dbg !2755
  call void @llvm.dbg.declare(metadata !124, metadata !2757, metadata !DIExpression()), !dbg !2758
  call void @llvm.dbg.declare(metadata !124, metadata !2759, metadata !DIExpression()), !dbg !2760
  call void @llvm.dbg.value(metadata i32 512, metadata !2761, metadata !DIExpression()), !dbg !2755
  call void @llvm.dbg.value(metadata i32 512, metadata !2762, metadata !DIExpression()), !dbg !2755
  %call = call i8* @mallocwm(i32 512), !dbg !2763
  call void @llvm.dbg.value(metadata i8* %call, metadata !2767, metadata !DIExpression()), !dbg !2755
  call void @llvm.dbg.value(metadata i8* %call, metadata !2768, metadata !DIExpression()), !dbg !2755
  call void @llvm.dbg.value(metadata i32 0, metadata !2769, metadata !DIExpression()), !dbg !2755
  call void @llvm.dbg.value(metadata i32 0, metadata !2770, metadata !DIExpression()), !dbg !2755
  br label %while.body, !dbg !2771

while.body:                                       ; preds = %if.end14, %entry
  %currentbufsiz.0 = phi i32 [ 512, %entry ], [ %currentbufsiz.1, %if.end14 ], !dbg !2774
  %buf.0 = phi i8* [ %call, %entry ], [ %buf.1, %if.end14 ], !dbg !2774
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %if.end14 ], !dbg !2774
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !2769, metadata !DIExpression()), !dbg !2755
  call void @llvm.dbg.value(metadata i8* %buf.0, metadata !2768, metadata !DIExpression()), !dbg !2755
  call void @llvm.dbg.value(metadata i32 %currentbufsiz.0, metadata !2762, metadata !DIExpression()), !dbg !2755
  br label %while_continue___0, !dbg !2775

while_continue___0:                               ; preds = %while.body
  br label %while_continue, !dbg !2775

while_continue:                                   ; preds = %while_continue___0
  %call1 = call i32 @_IO_getc(%struct._IO_FILE* %f), !dbg !2776
  call void @llvm.dbg.value(metadata i32 %call1, metadata !2770, metadata !DIExpression()), !dbg !2755
  %cmp = icmp ne i32 %call1, -1, !dbg !2780
  br i1 %cmp, label %if.end, label %if.then, !dbg !2782

if.then:                                          ; preds = %while_continue
  br label %while_break, !dbg !2783

if.end:                                           ; preds = %while_continue
  %call2 = call i8* @strchr(i8* %stop_chars, i32 %call1) #9, !dbg !2785
  call void @llvm.dbg.value(metadata i8* %call2, metadata !2788, metadata !DIExpression()), !dbg !2755
  %tobool = icmp ne i8* %call2, null, !dbg !2789
  br i1 %tobool, label %if.then3, label %if.end5, !dbg !2791

if.then3:                                         ; preds = %if.end
  %call4 = call i32 @ungetc(i32 %call1, %struct._IO_FILE* %f), !dbg !2792
  br label %while_break, !dbg !2796

if.end5:                                          ; preds = %if.end
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !2797, metadata !DIExpression()), !dbg !2755
  %inc = add nsw i32 %i.0, 1, !dbg !2798
  call void @llvm.dbg.value(metadata i32 %inc, metadata !2769, metadata !DIExpression()), !dbg !2755
  %conv = trunc i32 %call1 to i8, !dbg !2799
  %idx.ext = sext i32 %i.0 to i64, !dbg !2800
  %add.ptr = getelementptr inbounds i8, i8* %buf.0, i64 %idx.ext, !dbg !2800
  store i8 %conv, i8* %add.ptr, align 1, !dbg !2801
  %sub = sub nsw i32 %currentbufsiz.0, 2, !dbg !2802
  %cmp6 = icmp sgt i32 %inc, %sub, !dbg !2804
  br i1 %cmp6, label %if.then8, label %if.end14, !dbg !2805

if.then8:                                         ; preds = %if.end5
  %add = add nsw i32 %currentbufsiz.0, 512, !dbg !2806
  call void @llvm.dbg.value(metadata i32 %add, metadata !2762, metadata !DIExpression()), !dbg !2755
  %call9 = call i8* @realloc(i8* %buf.0, i32 %add) #7, !dbg !2809
  call void @llvm.dbg.value(metadata i8* %call9, metadata !2811, metadata !DIExpression()), !dbg !2755
  call void @llvm.dbg.value(metadata i8* %call9, metadata !2768, metadata !DIExpression()), !dbg !2755
  %tobool10 = icmp ne i8* %call9, null, !dbg !2812
  br i1 %tobool10, label %if.end13, label %if.then11, !dbg !2814

if.then11:                                        ; preds = %if.then8
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !2815
  %call12 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.129, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.130, i32 0, i32 0), i32 170), !dbg !2819
  br label %return, !dbg !2820

if.end13:                                         ; preds = %if.then8
  br label %if.end14, !dbg !2821

if.end14:                                         ; preds = %if.end13, %if.end5
  %currentbufsiz.1 = phi i32 [ %add, %if.end13 ], [ %currentbufsiz.0, %if.end5 ], !dbg !2774
  %buf.1 = phi i8* [ %call9, %if.end13 ], [ %buf.0, %if.end5 ], !dbg !2774
  call void @llvm.dbg.value(metadata i8* %buf.1, metadata !2768, metadata !DIExpression()), !dbg !2755
  call void @llvm.dbg.value(metadata i32 %currentbufsiz.1, metadata !2762, metadata !DIExpression()), !dbg !2755
  br label %while.body, !dbg !2771, !llvm.loop !2822

while_break___0:                                  ; No predecessors!
  br label %while_break, !dbg !2824

while_break:                                      ; preds = %while_break___0, %if.then3, %if.then
  %idx.ext15 = sext i32 %i.0 to i64, !dbg !2825
  %add.ptr16 = getelementptr inbounds i8, i8* %buf.0, i64 %idx.ext15, !dbg !2825
  store i8 0, i8* %add.ptr16, align 1, !dbg !2826
  br label %return, !dbg !2827

return:                                           ; preds = %while_break, %if.then11
  %retval.0 = phi i8* [ %buf.0, %while_break ], [ null, %if.then11 ], !dbg !2774
  ret i8* %retval.0, !dbg !2828
}

; Function Attrs: noinline nounwind ssp uwtable
define internal %struct.dxml_attribute* @read_attribute(%struct._IO_FILE* %f) #0 !dbg !2829 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %f, metadata !2832, metadata !DIExpression()), !dbg !2833
  call void @llvm.dbg.declare(metadata !124, metadata !2834, metadata !DIExpression()), !dbg !2835
  call void @llvm.dbg.declare(metadata !124, metadata !2836, metadata !DIExpression()), !dbg !2837
  call void @llvm.dbg.declare(metadata !124, metadata !2838, metadata !DIExpression()), !dbg !2839
  call void @llvm.dbg.declare(metadata !124, metadata !2840, metadata !DIExpression()), !dbg !2841
  %call = call i8* @mallocwm(i32 24), !dbg !2842
  call void @llvm.dbg.value(metadata i8* %call, metadata !2846, metadata !DIExpression()), !dbg !2833
  %0 = bitcast i8* %call to %struct.dxml_attribute*, !dbg !2847
  call void @llvm.dbg.value(metadata %struct.dxml_attribute* %0, metadata !2848, metadata !DIExpression()), !dbg !2833
  call void @llvm.dbg.value(metadata i8* null, metadata !2849, metadata !DIExpression()), !dbg !2833
  %attribute_data = getelementptr inbounds %struct.dxml_attribute, %struct.dxml_attribute* %0, i32 0, i32 1, !dbg !2850
  store i8* null, i8** %attribute_data, align 8, !dbg !2851
  %attribute_name = getelementptr inbounds %struct.dxml_attribute, %struct.dxml_attribute* %0, i32 0, i32 0, !dbg !2850
  store i8* null, i8** %attribute_name, align 8, !dbg !2851
  %next = getelementptr inbounds %struct.dxml_attribute, %struct.dxml_attribute* %0, i32 0, i32 2, !dbg !2852
  store %struct.dxml_attribute* null, %struct.dxml_attribute** %next, align 8, !dbg !2853
  %call1 = call i32 @skipwhitechars(%struct._IO_FILE* %f), !dbg !2854
  call void @llvm.dbg.value(metadata i32 %call1, metadata !2856, metadata !DIExpression()), !dbg !2833
  %tobool = icmp ne i32 %call1, 0, !dbg !2857
  br i1 %tobool, label %if.then, label %if.end, !dbg !2859

if.then:                                          ; preds = %entry
  br label %return, !dbg !2860

if.end:                                           ; preds = %entry
  %call2 = call i32 @_IO_getc(%struct._IO_FILE* %f), !dbg !2862
  call void @llvm.dbg.value(metadata i32 %call2, metadata !2865, metadata !DIExpression()), !dbg !2833
  %call3 = call i32 @ungetc(i32 %call2, %struct._IO_FILE* %f), !dbg !2866
  %cmp = icmp eq i32 %call2, 62, !dbg !2868
  br i1 %cmp, label %if.then4, label %if.else, !dbg !2870

if.then4:                                         ; preds = %if.end
  call void @dxml_free_attrib(%struct.dxml_attribute* %0), !dbg !2871
  br label %return, !dbg !2875

if.else:                                          ; preds = %if.end
  %cmp5 = icmp eq i32 %call2, 47, !dbg !2876
  br i1 %cmp5, label %if.then6, label %if.end7, !dbg !2878

if.then6:                                         ; preds = %if.else
  call void @dxml_free_attrib(%struct.dxml_attribute* %0), !dbg !2879
  br label %return, !dbg !2883

if.end7:                                          ; preds = %if.else
  br label %if.end8

if.end8:                                          ; preds = %if.end7
  %call9 = call i8* @read_character_stream(%struct._IO_FILE* %f, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.131, i32 0, i32 0)), !dbg !2884
  call void @llvm.dbg.value(metadata i8* %call9, metadata !2887, metadata !DIExpression()), !dbg !2833
  %attribute_name10 = getelementptr inbounds %struct.dxml_attribute, %struct.dxml_attribute* %0, i32 0, i32 0, !dbg !2888
  store i8* %call9, i8** %attribute_name10, align 8, !dbg !2889
  %tobool11 = icmp ne i8* %call9, null, !dbg !2890
  br i1 %tobool11, label %if.end13, label %if.then12, !dbg !2892

if.then12:                                        ; preds = %if.end8
  call void @dxml_free_attrib(%struct.dxml_attribute* %0), !dbg !2893
  br label %return, !dbg !2897

if.end13:                                         ; preds = %if.end8
  %call14 = call i32 @checkchar(i32 61, %struct._IO_FILE* %f), !dbg !2898
  call void @llvm.dbg.value(metadata i32 %call14, metadata !2901, metadata !DIExpression()), !dbg !2833
  %tobool15 = icmp ne i32 %call14, 0, !dbg !2902
  br i1 %tobool15, label %if.then16, label %if.end17, !dbg !2904

if.then16:                                        ; preds = %if.end13
  call void @dxml_free_attrib(%struct.dxml_attribute* %0), !dbg !2905
  br label %return, !dbg !2909

if.end17:                                         ; preds = %if.end13
  %call18 = call i32 @_IO_getc(%struct._IO_FILE* %f), !dbg !2910
  call void @llvm.dbg.value(metadata i32 %call18, metadata !2913, metadata !DIExpression()), !dbg !2833
  %cmp19 = icmp eq i32 %call18, 34, !dbg !2914
  br i1 %cmp19, label %if.then20, label %if.end21, !dbg !2917

if.then20:                                        ; preds = %if.end17
  br label %case_34, !dbg !2918

if.end21:                                         ; preds = %if.end17
  %cmp22 = icmp eq i32 %call18, 39, !dbg !2920
  br i1 %cmp22, label %if.then23, label %if.end24, !dbg !2922

if.then23:                                        ; preds = %if.end21
  br label %case_39, !dbg !2923

if.end24:                                         ; preds = %if.end21
  br label %switch_default, !dbg !2925

case_34:                                          ; preds = %if.then20
  %call25 = call i8* @read_character_stream(%struct._IO_FILE* %f, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.132, i32 0, i32 0)), !dbg !2926
  %attribute_data26 = getelementptr inbounds %struct.dxml_attribute, %struct.dxml_attribute* %0, i32 0, i32 1, !dbg !2929
  store i8* %call25, i8** %attribute_data26, align 8, !dbg !2930
  br label %switch_break, !dbg !2931

case_39:                                          ; preds = %if.then23
  %call27 = call i8* @read_character_stream(%struct._IO_FILE* %f, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.133, i32 0, i32 0)), !dbg !2932
  %attribute_data28 = getelementptr inbounds %struct.dxml_attribute, %struct.dxml_attribute* %0, i32 0, i32 1, !dbg !2935
  store i8* %call27, i8** %attribute_data28, align 8, !dbg !2936
  br label %switch_break, !dbg !2937

switch_default:                                   ; preds = %if.end24
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !2938
  %call29 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.134, i32 0, i32 0)), !dbg !2941
  call void @exit(i32 1) #10, !dbg !2942
  unreachable, !dbg !2942

switch_break:                                     ; preds = %case_39, %case_34
  %call30 = call i32 @checkchar(i32 %call18, %struct._IO_FILE* %f), !dbg !2944
  call void @llvm.dbg.value(metadata i32 %call30, metadata !2947, metadata !DIExpression()), !dbg !2833
  %tobool31 = icmp ne i32 %call30, 0, !dbg !2948
  br i1 %tobool31, label %if.then32, label %if.end33, !dbg !2950

if.then32:                                        ; preds = %switch_break
  call void @dxml_free_attrib(%struct.dxml_attribute* %0), !dbg !2951
  br label %return, !dbg !2955

if.end33:                                         ; preds = %switch_break
  %call34 = call %struct.dxml_attribute* @read_attribute(%struct._IO_FILE* %f), !dbg !2956
  %next35 = getelementptr inbounds %struct.dxml_attribute, %struct.dxml_attribute* %0, i32 0, i32 2, !dbg !2959
  store %struct.dxml_attribute* %call34, %struct.dxml_attribute** %next35, align 8, !dbg !2960
  br label %return, !dbg !2961

return:                                           ; preds = %if.end33, %if.then32, %if.then16, %if.then12, %if.then6, %if.then4, %if.then
  %retval.0 = phi %struct.dxml_attribute* [ null, %if.then ], [ null, %if.then4 ], [ null, %if.then6 ], [ null, %if.then16 ], [ null, %if.then32 ], [ %0, %if.end33 ], [ null, %if.then12 ], !dbg !2962
  ret %struct.dxml_attribute* %retval.0, !dbg !2963
}

declare i32 @ungetc(i32, %struct._IO_FILE*) #3

; Function Attrs: noinline nounwind ssp uwtable
define internal %struct.dxml_element* @read_PCDATA(%struct._IO_FILE* %f) #0 !dbg !2964 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %f, metadata !2965, metadata !DIExpression()), !dbg !2966
  call void @llvm.dbg.declare(metadata !124, metadata !2967, metadata !DIExpression()), !dbg !2968
  %call = call %struct.dxml_element* @initialize_element(), !dbg !2969
  call void @llvm.dbg.value(metadata %struct.dxml_element* %call, metadata !2973, metadata !DIExpression()), !dbg !2966
  call void @llvm.dbg.value(metadata %struct.dxml_element* %call, metadata !2974, metadata !DIExpression()), !dbg !2966
  %element_type = getelementptr inbounds %struct.dxml_element, %struct.dxml_element* %call, i32 0, i32 1, !dbg !2975
  store i32 1, i32* %element_type, align 8, !dbg !2976
  %call1 = call i8* @read_character_stream(%struct._IO_FILE* %f, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.135, i32 0, i32 0)), !dbg !2977
  call void @llvm.dbg.value(metadata i8* %call1, metadata !2979, metadata !DIExpression()), !dbg !2966
  %element_name = getelementptr inbounds %struct.dxml_element, %struct.dxml_element* %call, i32 0, i32 0, !dbg !2980
  store i8* %call1, i8** %element_name, align 8, !dbg !2981
  %tobool = icmp ne i8* %call1, null, !dbg !2982
  br i1 %tobool, label %if.end, label %if.then, !dbg !2984

if.then:                                          ; preds = %entry
  call void @dxml_free_xml(%struct.dxml_element* %call), !dbg !2985
  br label %return, !dbg !2989

if.end:                                           ; preds = %entry
  br label %return, !dbg !2990

return:                                           ; preds = %if.end, %if.then
  %retval.0 = phi %struct.dxml_element* [ %call, %if.end ], [ null, %if.then ], !dbg !2991
  ret %struct.dxml_element* %retval.0, !dbg !2992
}

; Function Attrs: noinline nounwind ssp uwtable
define internal i8* @mallocwm(i32 %l) #0 !dbg !2993 {
entry:
  call void @llvm.dbg.value(metadata i32 %l, metadata !2996, metadata !DIExpression()), !dbg !2997
  call void @llvm.dbg.declare(metadata !124, metadata !2998, metadata !DIExpression()), !dbg !2999
  %call = call noalias i8* @malloc(i32 %l) #7, !dbg !3000
  call void @llvm.dbg.value(metadata i8* %call, metadata !3004, metadata !DIExpression()), !dbg !2997
  call void @llvm.dbg.value(metadata i8* %call, metadata !3005, metadata !DIExpression()), !dbg !2997
  %tobool = icmp ne i8* %call, null, !dbg !3006
  br i1 %tobool, label %if.end, label %if.then, !dbg !3008

if.then:                                          ; preds = %entry
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !3009
  %call1 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.126, i32 0, i32 0)), !dbg !3013
  call void @exit(i32 1) #10, !dbg !3014
  unreachable, !dbg !3014

if.end:                                           ; preds = %entry
  ret i8* %call, !dbg !3016
}

; Function Attrs: nounwind
declare noalias i8* @malloc(i32) #2

; Function Attrs: noinline nounwind ssp uwtable
define internal i32 @skip_read_PI(%struct._IO_FILE* %f, i32 %strict) #0 !dbg !3017 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %f, metadata !3020, metadata !DIExpression()), !dbg !3021
  call void @llvm.dbg.value(metadata i32 %strict, metadata !3022, metadata !DIExpression()), !dbg !3021
  call void @llvm.dbg.declare(metadata !124, metadata !3023, metadata !DIExpression()), !dbg !3024
  call void @llvm.dbg.declare(metadata !124, metadata !3025, metadata !DIExpression()), !dbg !3026
  br label %while.body, !dbg !3027

while.body:                                       ; preds = %switch_break, %entry
  br label %while_continue___1, !dbg !3031

while_continue___1:                               ; preds = %while.body
  br label %while_continue, !dbg !3031

while_continue:                                   ; preds = %while_continue___1
  %call = call i32 @_IO_getc(%struct._IO_FILE* %f), !dbg !3032
  call void @llvm.dbg.value(metadata i32 %call, metadata !3036, metadata !DIExpression()), !dbg !3021
  %cmp = icmp ne i32 %call, 62, !dbg !3037
  br i1 %cmp, label %if.end, label %if.then, !dbg !3039

if.then:                                          ; preds = %while_continue
  br label %while_break, !dbg !3040

if.end:                                           ; preds = %while_continue
  %cmp1 = icmp eq i32 %call, -1, !dbg !3042
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !3045

if.then2:                                         ; preds = %if.end
  br label %case_neg_1, !dbg !3046

if.end3:                                          ; preds = %if.end
  %cmp4 = icmp eq i32 %call, 91, !dbg !3048
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !3050

if.then5:                                         ; preds = %if.end3
  br label %case_91, !dbg !3051

if.end6:                                          ; preds = %if.end3
  %cmp7 = icmp eq i32 %call, 60, !dbg !3053
  br i1 %cmp7, label %if.then8, label %if.end9, !dbg !3055

if.then8:                                         ; preds = %if.end6
  br label %case_60, !dbg !3056

if.end9:                                          ; preds = %if.end6
  br label %switch_break, !dbg !3058

case_neg_1:                                       ; preds = %if.then2
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !3059
  %call10 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.127, i32 0, i32 0)), !dbg !3062
  br label %return, !dbg !3063

case_91:                                          ; preds = %if.then5
  br label %while.body12, !dbg !3064

while.body12:                                     ; preds = %if.end19, %case_91
  br label %while_continue___2, !dbg !3067

while_continue___2:                               ; preds = %while.body12
  br label %while_continue___0, !dbg !3067

while_continue___0:                               ; preds = %while_continue___2
  %call13 = call i32 @_IO_getc(%struct._IO_FILE* %f), !dbg !3068
  call void @llvm.dbg.value(metadata i32 %call13, metadata !3036, metadata !DIExpression()), !dbg !3021
  %cmp14 = icmp ne i32 %call13, 93, !dbg !3072
  br i1 %cmp14, label %if.end16, label %if.then15, !dbg !3074

if.then15:                                        ; preds = %while_continue___0
  br label %while_break___0, !dbg !3075

if.end16:                                         ; preds = %while_continue___0
  %cmp17 = icmp eq i32 %call13, -1, !dbg !3077
  br i1 %cmp17, label %if.then18, label %if.end19, !dbg !3079

if.then18:                                        ; preds = %if.end16
  br label %while_break___0, !dbg !3080

if.end19:                                         ; preds = %if.end16
  br label %while.body12, !dbg !3064, !llvm.loop !3082

while_break___2:                                  ; No predecessors!
  br label %while_break___0, !dbg !3084

while_break___0:                                  ; preds = %while_break___2, %if.then18, %if.then15
  br label %switch_break, !dbg !3085

case_60:                                          ; preds = %if.then8
  %tobool = icmp ne i32 %strict, 0, !dbg !3086
  br i1 %tobool, label %if.then20, label %if.end22, !dbg !3088

if.then20:                                        ; preds = %case_60
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !3089
  %call21 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.128, i32 0, i32 0)), !dbg !3093
  br label %return, !dbg !3094

if.end22:                                         ; preds = %case_60
  br label %switch_break, !dbg !3095

switch_break:                                     ; preds = %if.end22, %while_break___0, %if.end9
  br label %while.body, !dbg !3027, !llvm.loop !3096

while_break___1:                                  ; No predecessors!
  br label %while_break, !dbg !3098

while_break:                                      ; preds = %while_break___1, %if.then
  %call23 = call i32 @skipwhitechars(%struct._IO_FILE* %f), !dbg !3099
  call void @llvm.dbg.value(metadata i32 %call23, metadata !3102, metadata !DIExpression()), !dbg !3021
  %tobool24 = icmp ne i32 %call23, 0, !dbg !3103
  br i1 %tobool24, label %if.then25, label %if.end26, !dbg !3105

if.then25:                                        ; preds = %while_break
  br label %return, !dbg !3106

if.end26:                                         ; preds = %while_break
  br label %return, !dbg !3108

return:                                           ; preds = %if.end26, %if.then25, %if.then20, %case_neg_1
  %retval.0 = phi i32 [ 1, %case_neg_1 ], [ 1, %if.then20 ], [ 1, %if.then25 ], [ 0, %if.end26 ], !dbg !3109
  ret i32 %retval.0, !dbg !3110
}

; Function Attrs: noinline nounwind ssp uwtable
define internal i32 @skip_read_comment(%struct._IO_FILE* %f) #0 !dbg !3111 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %f, metadata !3112, metadata !DIExpression()), !dbg !3113
  call void @llvm.dbg.value(metadata i32 0, metadata !3114, metadata !DIExpression()), !dbg !3113
  call void @llvm.dbg.value(metadata i32 0, metadata !3115, metadata !DIExpression()), !dbg !3113
  %call = call i32 @_IO_getc(%struct._IO_FILE* %f), !dbg !3116
  call void @llvm.dbg.value(metadata i32 %call, metadata !3120, metadata !DIExpression()), !dbg !3113
  %cmp = icmp ne i32 %call, 45, !dbg !3121
  br i1 %cmp, label %if.then, label %if.end, !dbg !3123

if.then:                                          ; preds = %entry
  %call1 = call i32 @ungetc(i32 %call, %struct._IO_FILE* %f), !dbg !3124
  %call2 = call i32 @skip_read_PI(%struct._IO_FILE* %f, i32 0), !dbg !3128
  call void @llvm.dbg.value(metadata i32 %call2, metadata !3130, metadata !DIExpression()), !dbg !3113
  br label %return, !dbg !3131

if.end:                                           ; preds = %entry
  %call3 = call i32 @_IO_getc(%struct._IO_FILE* %f), !dbg !3132
  call void @llvm.dbg.value(metadata i32 %call3, metadata !3120, metadata !DIExpression()), !dbg !3113
  %cmp4 = icmp ne i32 %call3, 45, !dbg !3135
  br i1 %cmp4, label %if.then5, label %if.end8, !dbg !3137

if.then5:                                         ; preds = %if.end
  %call6 = call i32 @ungetc(i32 %call3, %struct._IO_FILE* %f), !dbg !3138
  %call7 = call i32 @skip_read_PI(%struct._IO_FILE* %f, i32 0), !dbg !3142
  call void @llvm.dbg.value(metadata i32 %call7, metadata !3144, metadata !DIExpression()), !dbg !3113
  br label %return, !dbg !3145

if.end8:                                          ; preds = %if.end
  br label %while.body, !dbg !3146

while.body:                                       ; preds = %if.end21, %if.end8
  %prev.0 = phi i32 [ 0, %if.end8 ], [ %call9, %if.end21 ], !dbg !3149
  %prevprev.0 = phi i32 [ 0, %if.end8 ], [ %prev.0, %if.end21 ], !dbg !3149
  call void @llvm.dbg.value(metadata i32 %prevprev.0, metadata !3115, metadata !DIExpression()), !dbg !3113
  call void @llvm.dbg.value(metadata i32 %prev.0, metadata !3114, metadata !DIExpression()), !dbg !3113
  br label %while_continue___0, !dbg !3150

while_continue___0:                               ; preds = %while.body
  br label %while_continue, !dbg !3150

while_continue:                                   ; preds = %while_continue___0
  %call9 = call i32 @_IO_getc(%struct._IO_FILE* %f), !dbg !3151
  call void @llvm.dbg.value(metadata i32 %call9, metadata !3120, metadata !DIExpression()), !dbg !3113
  %cmp10 = icmp ne i32 %call9, -1, !dbg !3155
  br i1 %cmp10, label %if.end12, label %if.then11, !dbg !3157

if.then11:                                        ; preds = %while_continue
  br label %while_break, !dbg !3158

if.end12:                                         ; preds = %while_continue
  %cmp13 = icmp eq i32 %prev.0, 45, !dbg !3160
  br i1 %cmp13, label %if.then14, label %if.end21, !dbg !3162

if.then14:                                        ; preds = %if.end12
  %cmp15 = icmp eq i32 %prevprev.0, 45, !dbg !3163
  br i1 %cmp15, label %if.then16, label %if.end20, !dbg !3166

if.then16:                                        ; preds = %if.then14
  %cmp17 = icmp eq i32 %call9, 62, !dbg !3167
  br i1 %cmp17, label %if.then18, label %if.end19, !dbg !3170

if.then18:                                        ; preds = %if.then16
  br label %while_break, !dbg !3171

if.end19:                                         ; preds = %if.then16
  br label %if.end20, !dbg !3173

if.end20:                                         ; preds = %if.end19, %if.then14
  br label %if.end21, !dbg !3174

if.end21:                                         ; preds = %if.end20, %if.end12
  call void @llvm.dbg.value(metadata i32 %prev.0, metadata !3115, metadata !DIExpression()), !dbg !3113
  call void @llvm.dbg.value(metadata i32 %call9, metadata !3114, metadata !DIExpression()), !dbg !3113
  br label %while.body, !dbg !3146, !llvm.loop !3175

while_break___0:                                  ; No predecessors!
  br label %while_break, !dbg !3177

while_break:                                      ; preds = %while_break___0, %if.then18, %if.then11
  %call22 = call i32 @skipwhitechars(%struct._IO_FILE* %f), !dbg !3178
  call void @llvm.dbg.value(metadata i32 %call22, metadata !3181, metadata !DIExpression()), !dbg !3113
  %tobool = icmp ne i32 %call22, 0, !dbg !3182
  br i1 %tobool, label %if.then23, label %if.end24, !dbg !3184

if.then23:                                        ; preds = %while_break
  br label %return, !dbg !3185

if.end24:                                         ; preds = %while_break
  br label %return, !dbg !3187

return:                                           ; preds = %if.end24, %if.then23, %if.then5, %if.then
  %retval.0 = phi i32 [ %call2, %if.then ], [ %call7, %if.then5 ], [ 1, %if.then23 ], [ 0, %if.end24 ], !dbg !3149
  ret i32 %retval.0, !dbg !3188
}

; Function Attrs: nounwind
declare i8* @realloc(i8*, i32) #2

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #1

attributes #0 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "darwin-stkchk-strong-link" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "probe-stack"="___chkstk_darwin" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "darwin-stkchk-strong-link" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "probe-stack"="___chkstk_darwin" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "darwin-stkchk-strong-link" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "probe-stack"="___chkstk_darwin" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "darwin-stkchk-strong-link" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "probe-stack"="___chkstk_darwin" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "darwin-stkchk-strong-link" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "probe-stack"="___chkstk_darwin" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "darwin-stkchk-strong-link" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "probe-stack"="___chkstk_darwin" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { nounwind readnone }
attributes #9 = { nounwind readonly }
attributes #10 = { noreturn nounwind }

!llvm.module.flags = !{!113, !114, !115, !116, !117}
!llvm.dbg.cu = !{!2}
!llvm.ident = !{!118}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "counter_chapter", scope: !2, file: !102, line: 33, type: !110, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Apple clang version 11.0.0 (clang-1100.0.33.17)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !11, globals: !99, nameTableKind: GNU)
!3 = !DIFile(filename: "c/dancer-xml-0.8.2.1.c", directory: "/Users/hakjoooh/Documents/llir/pa2020/test")
!4 = !{!5}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "element_type", file: !6, line: 53, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "/home/wslee/benchmarks/textformat/dancer-xml-0.8.2.1/dancer-xml.h", directory: "")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10}
!9 = !DIEnumerator(name: "element_type_element", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "element_type_pcdata", value: 1, isUnsigned: true)
!11 = !{!12, !16, !78, !14, !66, !80, !7, !98, !23, !71, !15, !87, !96, !5, !94}
!12 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13, size: 64)
!13 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !14)
!14 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15, size: 64)
!15 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17, size: 64)
!17 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !18, line: 49, baseType: !19)
!18 = !DIFile(filename: "/usr/include/stdio.h", directory: "")
!19 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !20, line: 271, size: 1728, elements: !21)
!20 = !DIFile(filename: "/usr/include/libio.h", directory: "")
!21 = !{!22, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !43, !44, !45, !46, !50, !52, !54, !58, !61, !65, !67, !68, !69, !70, !73, !74}
!22 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !19, file: !20, line: 272, baseType: !23, size: 32)
!23 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!24 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !19, file: !20, line: 273, baseType: !14, size: 64, offset: 64)
!25 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !19, file: !20, line: 274, baseType: !14, size: 64, offset: 128)
!26 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !19, file: !20, line: 275, baseType: !14, size: 64, offset: 192)
!27 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !19, file: !20, line: 276, baseType: !14, size: 64, offset: 256)
!28 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !19, file: !20, line: 277, baseType: !14, size: 64, offset: 320)
!29 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !19, file: !20, line: 278, baseType: !14, size: 64, offset: 384)
!30 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !19, file: !20, line: 279, baseType: !14, size: 64, offset: 448)
!31 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !19, file: !20, line: 280, baseType: !14, size: 64, offset: 512)
!32 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !19, file: !20, line: 281, baseType: !14, size: 64, offset: 576)
!33 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !19, file: !20, line: 282, baseType: !14, size: 64, offset: 640)
!34 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !19, file: !20, line: 283, baseType: !14, size: 64, offset: 704)
!35 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !19, file: !20, line: 284, baseType: !36, size: 64, offset: 768)
!36 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !37, size: 64)
!37 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !20, line: 186, size: 192, elements: !38)
!38 = !{!39, !40, !42}
!39 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !37, file: !20, line: 187, baseType: !36, size: 64)
!40 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !37, file: !20, line: 188, baseType: !41, size: 64, offset: 64)
!41 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !19, size: 64)
!42 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !37, file: !20, line: 189, baseType: !23, size: 32, offset: 128)
!43 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !19, file: !20, line: 285, baseType: !41, size: 64, offset: 832)
!44 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !19, file: !20, line: 286, baseType: !23, size: 32, offset: 896)
!45 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !19, file: !20, line: 287, baseType: !23, size: 32, offset: 928)
!46 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !19, file: !20, line: 288, baseType: !47, size: 64, offset: 960)
!47 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !48, line: 141, baseType: !49)
!48 = !DIFile(filename: "/usr/include/bits/types.h", directory: "")
!49 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!50 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !19, file: !20, line: 289, baseType: !51, size: 16, offset: 1024)
!51 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!52 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !19, file: !20, line: 290, baseType: !53, size: 8, offset: 1040)
!53 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!54 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !19, file: !20, line: 291, baseType: !55, size: 8, offset: 1048)
!55 = !DICompositeType(tag: DW_TAG_array_type, baseType: !15, size: 8, elements: !56)
!56 = !{!57}
!57 = !DISubrange(count: 1)
!58 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !19, file: !20, line: 292, baseType: !59, size: 64, offset: 1088)
!59 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !60, size: 64)
!60 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !20, line: 180, baseType: null)
!61 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !19, file: !20, line: 293, baseType: !62, size: 64, offset: 1152)
!62 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !48, line: 142, baseType: !63)
!63 = !DIDerivedType(tag: DW_TAG_typedef, name: "__quad_t", file: !48, line: 56, baseType: !64)
!64 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!65 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !19, file: !20, line: 294, baseType: !66, size: 64, offset: 1216)
!66 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!67 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !19, file: !20, line: 295, baseType: !66, size: 64, offset: 1280)
!68 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !19, file: !20, line: 296, baseType: !66, size: 64, offset: 1344)
!69 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !19, file: !20, line: 297, baseType: !66, size: 64, offset: 1408)
!70 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !19, file: !20, line: 298, baseType: !71, size: 32, offset: 1472)
!71 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !72, line: 211, baseType: !7)
!72 = !DIFile(filename: "/usr/lib/gcc/i486-linux-gnu/4.4.3/include/stddef.h", directory: "")
!73 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !19, file: !20, line: 299, baseType: !23, size: 32, offset: 1504)
!74 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !19, file: !20, line: 300, baseType: !75, size: 192, offset: 1536)
!75 = !DICompositeType(tag: DW_TAG_array_type, baseType: !15, size: 192, elements: !76)
!76 = !{!77}
!77 = !DISubrange(count: 24)
!78 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !79, size: 64)
!79 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !15)
!80 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !81, size: 64)
!81 = !DIDerivedType(tag: DW_TAG_typedef, name: "dxml_element", file: !6, line: 53, baseType: !82)
!82 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dxml_element", file: !6, line: 53, size: 320, elements: !83)
!83 = !{!84, !85, !86, !95, !97}
!84 = !DIDerivedType(tag: DW_TAG_member, name: "element_name", scope: !82, file: !6, line: 54, baseType: !14, size: 64)
!85 = !DIDerivedType(tag: DW_TAG_member, name: "element_type", scope: !82, file: !6, line: 55, baseType: !5, size: 32, offset: 64)
!86 = !DIDerivedType(tag: DW_TAG_member, name: "element_attribute", scope: !82, file: !6, line: 56, baseType: !87, size: 64, offset: 128)
!87 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !88, size: 64)
!88 = !DIDerivedType(tag: DW_TAG_typedef, name: "dxml_attribute", file: !6, line: 35, baseType: !89)
!89 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dxml_attribute", file: !6, line: 35, size: 192, elements: !90)
!90 = !{!91, !92, !93}
!91 = !DIDerivedType(tag: DW_TAG_member, name: "attribute_name", scope: !89, file: !6, line: 36, baseType: !14, size: 64)
!92 = !DIDerivedType(tag: DW_TAG_member, name: "attribute_data", scope: !89, file: !6, line: 37, baseType: !14, size: 64, offset: 64)
!93 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !89, file: !6, line: 38, baseType: !94, size: 64, offset: 128)
!94 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !89, size: 64)
!95 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !82, file: !6, line: 57, baseType: !96, size: 64, offset: 192)
!96 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !82, size: 64)
!97 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !82, file: !6, line: 58, baseType: !96, size: 64, offset: 256)
!98 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!99 = !{!0, !100, !104, !106, !108}
!100 = !DIGlobalVariableExpression(var: !101, expr: !DIExpression())
!101 = distinct !DIGlobalVariable(name: "c_chapter", scope: !2, file: !102, line: 34, type: !103, isLocal: false, isDefinition: true)
!102 = !DIFile(filename: "/home/wslee/benchmarks/textformat/dancer-xml-0.8.2.1/db2html.c", directory: "")
!103 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !23)
!104 = !DIGlobalVariableExpression(var: !105, expr: !DIExpression())
!105 = distinct !DIGlobalVariable(name: "c_sect1", scope: !2, file: !102, line: 35, type: !103, isLocal: false, isDefinition: true)
!106 = !DIGlobalVariableExpression(var: !107, expr: !DIExpression())
!107 = distinct !DIGlobalVariable(name: "c_sect2", scope: !2, file: !102, line: 36, type: !103, isLocal: false, isDefinition: true)
!108 = !DIGlobalVariableExpression(var: !109, expr: !DIExpression())
!109 = distinct !DIGlobalVariable(name: "c_sect3", scope: !2, file: !102, line: 37, type: !103, isLocal: false, isDefinition: true)
!110 = !DICompositeType(tag: DW_TAG_array_type, baseType: !23, size: 160, elements: !111)
!111 = !{!112}
!112 = !DISubrange(count: 5)
!113 = !{i32 2, !"SDK Version", [2 x i32] [i32 10, i32 15]}
!114 = !{i32 2, !"Dwarf Version", i32 4}
!115 = !{i32 2, !"Debug Info Version", i32 3}
!116 = !{i32 1, !"wchar_size", i32 4}
!117 = !{i32 7, !"PIC Level", i32 2}
!118 = !{!"Apple clang version 11.0.0 (clang-1100.0.33.17)"}
!119 = distinct !DISubprogram(name: "main", scope: !120, file: !120, line: 407, type: !121, scopeLine: 408, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !124)
!120 = !DIFile(filename: "/home/wslee/benchmarks/textformat/dancer-xml-0.8.2.1/db2latex.c", directory: "")
!121 = !DISubroutineType(types: !122)
!122 = !{!23, !23, !123}
!123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14, size: 64)
!124 = !{}
!125 = !DILocalVariable(name: "argc", arg: 1, scope: !119, file: !120, line: 407, type: !23)
!126 = !DILocation(line: 0, scope: !119)
!127 = !DILocalVariable(name: "argv", arg: 2, scope: !119, file: !120, line: 407, type: !123)
!128 = !DILocalVariable(name: "__cil_tmp13", scope: !119, file: !120, line: 419, type: !14)
!129 = !DILocation(line: 419, column: 9, scope: !119)
!130 = !DILocalVariable(name: "__cil_tmp14", scope: !119, file: !120, line: 420, type: !14)
!131 = !DILocation(line: 420, column: 9, scope: !119)
!132 = !DILocalVariable(name: "__cil_tmp15", scope: !119, file: !120, line: 421, type: !14)
!133 = !DILocation(line: 421, column: 9, scope: !119)
!134 = !DILocalVariable(name: "__cil_tmp16", scope: !119, file: !120, line: 422, type: !14)
!135 = !DILocation(line: 422, column: 9, scope: !119)
!136 = !DILocalVariable(name: "__cil_tmp17", scope: !119, file: !120, line: 423, type: !14)
!137 = !DILocation(line: 423, column: 9, scope: !119)
!138 = !DILocalVariable(name: "__cil_tmp18", scope: !119, file: !120, line: 424, type: !14)
!139 = !DILocation(line: 424, column: 9, scope: !119)
!140 = !DILocalVariable(name: "__cil_tmp19", scope: !119, file: !120, line: 425, type: !14)
!141 = !DILocation(line: 425, column: 9, scope: !119)
!142 = !DILocalVariable(name: "__cil_tmp20", scope: !119, file: !120, line: 426, type: !14)
!143 = !DILocation(line: 426, column: 9, scope: !119)
!144 = !DILocalVariable(name: "__cil_tmp21", scope: !119, file: !120, line: 427, type: !14)
!145 = !DILocation(line: 427, column: 9, scope: !119)
!146 = !DILocalVariable(name: "__cil_tmp22", scope: !119, file: !120, line: 428, type: !14)
!147 = !DILocation(line: 428, column: 9, scope: !119)
!148 = !DILocalVariable(name: "__cil_tmp23", scope: !119, file: !120, line: 429, type: !14)
!149 = !DILocation(line: 429, column: 9, scope: !119)
!150 = !DILocalVariable(name: "__cil_tmp24", scope: !119, file: !120, line: 430, type: !14)
!151 = !DILocation(line: 430, column: 9, scope: !119)
!152 = !DILocalVariable(name: "__cil_tmp25", scope: !119, file: !120, line: 431, type: !14)
!153 = !DILocation(line: 431, column: 9, scope: !119)
!154 = !DILocalVariable(name: "__cil_tmp26", scope: !119, file: !120, line: 432, type: !14)
!155 = !DILocation(line: 432, column: 9, scope: !119)
!156 = !DILocalVariable(name: "__cil_tmp27", scope: !119, file: !120, line: 433, type: !14)
!157 = !DILocation(line: 433, column: 9, scope: !119)
!158 = !DILocalVariable(name: "__cil_tmp28", scope: !119, file: !120, line: 434, type: !14)
!159 = !DILocation(line: 434, column: 9, scope: !119)
!160 = !DILocalVariable(name: "__cil_tmp29", scope: !119, file: !120, line: 435, type: !14)
!161 = !DILocation(line: 435, column: 9, scope: !119)
!162 = !DILocalVariable(name: "__cil_tmp30", scope: !119, file: !120, line: 436, type: !14)
!163 = !DILocation(line: 436, column: 9, scope: !119)
!164 = !DILocalVariable(name: "__cil_tmp31", scope: !119, file: !120, line: 437, type: !14)
!165 = !DILocation(line: 437, column: 9, scope: !119)
!166 = !DILocalVariable(name: "__cil_tmp32", scope: !119, file: !120, line: 438, type: !14)
!167 = !DILocation(line: 438, column: 9, scope: !119)
!168 = !DILocalVariable(name: "__cil_tmp33", scope: !119, file: !120, line: 439, type: !14)
!169 = !DILocation(line: 439, column: 9, scope: !119)
!170 = !DILocalVariable(name: "__cil_tmp34", scope: !119, file: !120, line: 440, type: !14)
!171 = !DILocation(line: 440, column: 9, scope: !119)
!172 = !DILocalVariable(name: "__cil_tmp35", scope: !119, file: !120, line: 441, type: !14)
!173 = !DILocation(line: 441, column: 9, scope: !119)
!174 = !DILocalVariable(name: "__cil_tmp36", scope: !119, file: !120, line: 442, type: !14)
!175 = !DILocation(line: 442, column: 9, scope: !119)
!176 = !DILocalVariable(name: "papersize", scope: !119, file: !120, line: 411, type: !78)
!177 = !DILocalVariable(name: "articletype", scope: !119, file: !120, line: 412, type: !78)
!178 = !DILocation(line: 415, column: 3, scope: !179)
!179 = distinct !DILexicalBlock(scope: !180, file: !120, line: 415, column: 3)
!180 = distinct !DILexicalBlock(scope: !181, file: !120, line: 414, column: 3)
!181 = distinct !DILexicalBlock(scope: !119, file: !120, line: 444, column: 3)
!182 = !DILocation(line: 0, scope: !181)
!183 = !DILocation(line: 415, column: 13, scope: !179)
!184 = !DILocation(line: 415, column: 9, scope: !185)
!185 = distinct !DILexicalBlock(scope: !186, file: !120, line: 419, column: 5)
!186 = distinct !DILexicalBlock(scope: !187, file: !120, line: 418, column: 5)
!187 = distinct !DILexicalBlock(scope: !179, file: !120, line: 415, column: 13)
!188 = !DILocalVariable(name: "c", scope: !119, file: !120, line: 410, type: !23)
!189 = !DILocation(line: 415, column: 14, scope: !190)
!190 = distinct !DILexicalBlock(scope: !187, file: !120, line: 415, column: 9)
!191 = !DILocation(line: 415, column: 9, scope: !187)
!192 = !DILocation(line: 415, column: 7, scope: !193)
!193 = distinct !DILexicalBlock(scope: !190, file: !120, line: 415, column: 22)
!194 = !DILocation(line: 419, column: 11, scope: !195)
!195 = distinct !DILexicalBlock(scope: !196, file: !120, line: 419, column: 9)
!196 = distinct !DILexicalBlock(scope: !187, file: !120, line: 417, column: 5)
!197 = !DILocation(line: 419, column: 9, scope: !196)
!198 = !DILocation(line: 419, column: 7, scope: !199)
!199 = distinct !DILexicalBlock(scope: !195, file: !120, line: 419, column: 19)
!200 = !DILocation(line: 423, column: 11, scope: !201)
!201 = distinct !DILexicalBlock(scope: !196, file: !120, line: 423, column: 9)
!202 = !DILocation(line: 423, column: 9, scope: !196)
!203 = !DILocation(line: 423, column: 7, scope: !204)
!204 = distinct !DILexicalBlock(scope: !201, file: !120, line: 423, column: 18)
!205 = !DILocation(line: 425, column: 5, scope: !196)
!206 = !DILocation(line: 422, column: 5, scope: !196)
!207 = !DILocation(line: 424, column: 5, scope: !196)
!208 = !DILocation(line: 426, column: 38, scope: !209)
!209 = distinct !DILexicalBlock(scope: !210, file: !120, line: 427, column: 5)
!210 = distinct !DILexicalBlock(scope: !196, file: !120, line: 426, column: 5)
!211 = !DILocation(line: 426, column: 5, scope: !209)
!212 = !DILocation(line: 427, column: 5, scope: !196)
!213 = distinct !{!213, !178, !214}
!214 = !DILocation(line: 430, column: 3, scope: !179)
!215 = !DILocation(line: 432, column: 3, scope: !179)
!216 = !DILocation(line: 431, column: 3, scope: !217)
!217 = distinct !DILexicalBlock(scope: !218, file: !120, line: 436, column: 3)
!218 = distinct !DILexicalBlock(scope: !181, file: !120, line: 435, column: 3)
!219 = !DILocation(line: 436, column: 23, scope: !220)
!220 = distinct !DILexicalBlock(scope: !218, file: !120, line: 434, column: 3)
!221 = !DILocation(line: 436, column: 9, scope: !220)
!222 = !DILocalVariable(name: "tmp", scope: !119, file: !120, line: 409, type: !80)
!223 = !DILocation(line: 437, column: 7, scope: !224)
!224 = distinct !DILexicalBlock(scope: !181, file: !120, line: 437, column: 7)
!225 = !DILocation(line: 437, column: 7, scope: !181)
!226 = !DILocalVariable(name: "title", scope: !119, file: !120, line: 413, type: !14)
!227 = !DILocation(line: 443, column: 5, scope: !228)
!228 = distinct !DILexicalBlock(scope: !229, file: !120, line: 440, column: 5)
!229 = distinct !DILexicalBlock(scope: !230, file: !120, line: 438, column: 5)
!230 = distinct !DILexicalBlock(scope: !224, file: !120, line: 437, column: 12)
!231 = !DILocalVariable(name: "notfirst", scope: !119, file: !120, line: 415, type: !23)
!232 = !DILocation(line: 452, column: 18, scope: !233)
!233 = distinct !DILexicalBlock(scope: !229, file: !120, line: 452, column: 5)
!234 = !DILocalVariable(name: "authorlink", scope: !119, file: !120, line: 414, type: !80)
!235 = !DILocation(line: 452, column: 5, scope: !236)
!236 = distinct !DILexicalBlock(scope: !237, file: !120, line: 456, column: 5)
!237 = distinct !DILexicalBlock(scope: !230, file: !120, line: 455, column: 5)
!238 = !DILocation(line: 0, scope: !230)
!239 = !DILocation(line: 451, column: 14, scope: !229)
!240 = !DILocation(line: 452, column: 15, scope: !236)
!241 = !DILocation(line: 452, column: 13, scope: !242)
!242 = distinct !DILexicalBlock(scope: !243, file: !120, line: 452, column: 11)
!243 = distinct !DILexicalBlock(scope: !236, file: !120, line: 452, column: 15)
!244 = !DILocation(line: 452, column: 11, scope: !243)
!245 = !DILocation(line: 452, column: 9, scope: !246)
!246 = distinct !DILexicalBlock(scope: !242, file: !120, line: 452, column: 25)
!247 = !DILocation(line: 456, column: 11, scope: !248)
!248 = distinct !DILexicalBlock(scope: !243, file: !120, line: 456, column: 11)
!249 = !DILocation(line: 456, column: 11, scope: !243)
!250 = !DILocation(line: 457, column: 9, scope: !251)
!251 = distinct !DILexicalBlock(scope: !252, file: !120, line: 458, column: 9)
!252 = distinct !DILexicalBlock(scope: !253, file: !120, line: 457, column: 9)
!253 = distinct !DILexicalBlock(scope: !248, file: !120, line: 456, column: 21)
!254 = !DILocation(line: 460, column: 7, scope: !253)
!255 = !DILocation(line: 461, column: 17, scope: !256)
!256 = distinct !DILexicalBlock(scope: !257, file: !120, line: 462, column: 7)
!257 = distinct !DILexicalBlock(scope: !243, file: !120, line: 461, column: 7)
!258 = !DILocalVariable(name: "tmp___0", scope: !119, file: !120, line: 416, type: !14)
!259 = !DILocation(line: 461, column: 7, scope: !260)
!260 = distinct !DILexicalBlock(scope: !257, file: !120, line: 463, column: 7)
!261 = !DILocation(line: 462, column: 7, scope: !262)
!262 = distinct !DILexicalBlock(scope: !257, file: !120, line: 463, column: 7)
!263 = !DILocation(line: 464, column: 17, scope: !264)
!264 = distinct !DILexicalBlock(scope: !257, file: !120, line: 464, column: 7)
!265 = !DILocalVariable(name: "tmp___1", scope: !119, file: !120, line: 417, type: !14)
!266 = !DILocation(line: 464, column: 7, scope: !267)
!267 = distinct !DILexicalBlock(scope: !257, file: !120, line: 466, column: 7)
!268 = !DILocation(line: 452, column: 56, scope: !269)
!269 = distinct !DILexicalBlock(scope: !257, file: !120, line: 466, column: 7)
!270 = !DILocation(line: 452, column: 20, scope: !269)
!271 = distinct !{!271, !235, !272}
!272 = !DILocation(line: 455, column: 5, scope: !236)
!273 = !DILocation(line: 457, column: 5, scope: !236)
!274 = !DILocation(line: 468, column: 5, scope: !275)
!275 = distinct !DILexicalBlock(scope: !276, file: !120, line: 461, column: 5)
!276 = distinct !DILexicalBlock(scope: !230, file: !120, line: 460, column: 5)
!277 = !DILocation(line: 471, column: 5, scope: !278)
!278 = distinct !DILexicalBlock(scope: !276, file: !120, line: 470, column: 5)
!279 = !DILocation(line: 473, column: 13, scope: !280)
!280 = distinct !DILexicalBlock(scope: !276, file: !120, line: 473, column: 5)
!281 = !DILocation(line: 474, column: 11, scope: !282)
!282 = distinct !DILexicalBlock(scope: !230, file: !120, line: 474, column: 9)
!283 = !DILocation(line: 474, column: 9, scope: !230)
!284 = !DILocation(line: 475, column: 15, scope: !285)
!285 = distinct !DILexicalBlock(scope: !286, file: !120, line: 476, column: 7)
!286 = distinct !DILexicalBlock(scope: !287, file: !120, line: 475, column: 7)
!287 = distinct !DILexicalBlock(scope: !282, file: !120, line: 474, column: 18)
!288 = !DILocation(line: 478, column: 5, scope: !287)
!289 = !DILocation(line: 476, column: 9, scope: !290)
!290 = distinct !DILexicalBlock(scope: !230, file: !120, line: 476, column: 9)
!291 = !DILocation(line: 476, column: 9, scope: !230)
!292 = !DILocation(line: 477, column: 7, scope: !293)
!293 = distinct !DILexicalBlock(scope: !294, file: !120, line: 478, column: 7)
!294 = distinct !DILexicalBlock(scope: !295, file: !120, line: 477, column: 7)
!295 = distinct !DILexicalBlock(scope: !290, file: !120, line: 476, column: 16)
!296 = !DILocation(line: 480, column: 5, scope: !295)
!297 = !DILocation(line: 479, column: 5, scope: !298)
!298 = distinct !DILexicalBlock(scope: !299, file: !120, line: 482, column: 5)
!299 = distinct !DILexicalBlock(scope: !230, file: !120, line: 481, column: 5)
!300 = !DILocation(line: 486, column: 15, scope: !301)
!301 = distinct !DILexicalBlock(scope: !299, file: !120, line: 481, column: 5)
!302 = !DILocalVariable(name: "tmp___2", scope: !119, file: !120, line: 418, type: !80)
!303 = !DILocation(line: 486, column: 26, scope: !304)
!304 = distinct !DILexicalBlock(scope: !299, file: !120, line: 488, column: 5)
!305 = !DILocation(line: 486, column: 5, scope: !304)
!306 = !DILocation(line: 487, column: 5, scope: !307)
!307 = distinct !DILexicalBlock(scope: !299, file: !120, line: 488, column: 5)
!308 = !DILocation(line: 490, column: 3, scope: !230)
!309 = !DILocation(line: 492, column: 5, scope: !310)
!310 = distinct !DILexicalBlock(scope: !311, file: !120, line: 492, column: 5)
!311 = distinct !DILexicalBlock(scope: !312, file: !120, line: 491, column: 5)
!312 = distinct !DILexicalBlock(scope: !224, file: !120, line: 490, column: 10)
!313 = !DILocation(line: 493, column: 5, scope: !312)
!314 = !DILocation(line: 496, column: 3, scope: !181)
!315 = !DILocation(line: 498, column: 1, scope: !119)
!316 = distinct !DISubprogram(name: "dxml_read_xml", scope: !317, file: !317, line: 520, type: !318, scopeLine: 521, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !124)
!317 = !DIFile(filename: "/home/wslee/benchmarks/textformat/dancer-xml-0.8.2.1/loadxml.c", directory: "")
!318 = !DISubroutineType(types: !319)
!319 = !{!80, !16}
!320 = !DILocalVariable(name: "f", arg: 1, scope: !316, file: !317, line: 520, type: !16)
!321 = !DILocation(line: 0, scope: !316)
!322 = !DILocalVariable(name: "__cil_tmp5", scope: !316, file: !317, line: 525, type: !14)
!323 = !DILocation(line: 525, column: 9, scope: !316)
!324 = !DILocation(line: 526, column: 3, scope: !325)
!325 = distinct !DILexicalBlock(scope: !326, file: !317, line: 529, column: 3)
!326 = distinct !DILexicalBlock(scope: !327, file: !317, line: 528, column: 3)
!327 = distinct !DILexicalBlock(scope: !316, file: !317, line: 527, column: 3)
!328 = !DILocation(line: 526, column: 13, scope: !325)
!329 = !DILocation(line: 526, column: 9, scope: !330)
!330 = distinct !DILexicalBlock(scope: !331, file: !317, line: 530, column: 5)
!331 = distinct !DILexicalBlock(scope: !332, file: !317, line: 529, column: 5)
!332 = distinct !DILexicalBlock(scope: !325, file: !317, line: 526, column: 13)
!333 = !DILocalVariable(name: "c", scope: !316, file: !317, line: 523, type: !23)
!334 = !DILocation(line: 526, column: 14, scope: !335)
!335 = distinct !DILexicalBlock(scope: !332, file: !317, line: 526, column: 9)
!336 = !DILocation(line: 526, column: 9, scope: !332)
!337 = !DILocation(line: 526, column: 7, scope: !338)
!338 = distinct !DILexicalBlock(scope: !335, file: !317, line: 526, column: 22)
!339 = !DILocation(line: 528, column: 11, scope: !340)
!340 = distinct !DILexicalBlock(scope: !332, file: !317, line: 528, column: 9)
!341 = !DILocation(line: 528, column: 9, scope: !332)
!342 = !DILocation(line: 530, column: 7, scope: !343)
!343 = distinct !DILexicalBlock(scope: !340, file: !317, line: 528, column: 18)
!344 = !DILocation(line: 532, column: 38, scope: !345)
!345 = distinct !DILexicalBlock(scope: !346, file: !317, line: 533, column: 5)
!346 = distinct !DILexicalBlock(scope: !332, file: !317, line: 532, column: 5)
!347 = !DILocation(line: 532, column: 5, scope: !345)
!348 = distinct !{!348, !324, !349}
!349 = !DILocation(line: 535, column: 3, scope: !325)
!350 = !DILocation(line: 537, column: 3, scope: !325)
!351 = !DILocation(line: 538, column: 3, scope: !352)
!352 = distinct !DILexicalBlock(scope: !353, file: !317, line: 541, column: 3)
!353 = distinct !DILexicalBlock(scope: !327, file: !317, line: 540, column: 3)
!354 = !DILocation(line: 538, column: 13, scope: !352)
!355 = !DILocation(line: 538, column: 9, scope: !356)
!356 = distinct !DILexicalBlock(scope: !357, file: !317, line: 542, column: 5)
!357 = distinct !DILexicalBlock(scope: !358, file: !317, line: 541, column: 5)
!358 = distinct !DILexicalBlock(scope: !352, file: !317, line: 538, column: 13)
!359 = !DILocalVariable(name: "e", scope: !316, file: !317, line: 522, type: !80)
!360 = !DILocation(line: 538, column: 43, scope: !361)
!361 = distinct !DILexicalBlock(scope: !358, file: !317, line: 538, column: 9)
!362 = !DILocation(line: 538, column: 40, scope: !361)
!363 = !DILocation(line: 538, column: 9, scope: !358)
!364 = !DILocation(line: 538, column: 7, scope: !365)
!365 = distinct !DILexicalBlock(scope: !361, file: !317, line: 538, column: 63)
!366 = !DILocation(line: 540, column: 5, scope: !367)
!367 = distinct !DILexicalBlock(scope: !368, file: !317, line: 541, column: 5)
!368 = distinct !DILexicalBlock(scope: !358, file: !317, line: 540, column: 5)
!369 = !DILocation(line: 541, column: 11, scope: !370)
!370 = distinct !DILexicalBlock(scope: !368, file: !317, line: 542, column: 5)
!371 = !DILocalVariable(name: "tmp", scope: !316, file: !317, line: 524, type: !23)
!372 = !DILocation(line: 541, column: 9, scope: !373)
!373 = distinct !DILexicalBlock(scope: !358, file: !317, line: 541, column: 9)
!374 = !DILocation(line: 541, column: 9, scope: !358)
!375 = !DILocation(line: 544, column: 7, scope: !376)
!376 = distinct !DILexicalBlock(scope: !373, file: !317, line: 541, column: 14)
!377 = distinct !{!377, !351, !378}
!378 = !DILocation(line: 546, column: 3, scope: !352)
!379 = !DILocation(line: 548, column: 3, scope: !352)
!380 = !DILocation(line: 547, column: 3, scope: !327)
!381 = !DILocation(line: 0, scope: !327)
!382 = !DILocation(line: 549, column: 1, scope: !316)
!383 = distinct !DISubprogram(name: "dxml_get_element_bysimplepath", scope: !384, file: !384, line: 85, type: !385, scopeLine: 86, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !124)
!384 = !DIFile(filename: "/home/wslee/benchmarks/textformat/dancer-xml-0.8.2.1/loadxmlhelper.c", directory: "")
!385 = !DISubroutineType(types: !386)
!386 = !{!80, !80, !78}
!387 = !DILocalVariable(name: "e", arg: 1, scope: !383, file: !384, line: 85, type: !80)
!388 = !DILocation(line: 0, scope: !383)
!389 = !DILocalVariable(name: "path", arg: 2, scope: !383, file: !384, line: 85, type: !78)
!390 = !DILocation(line: 88, column: 9, scope: !391)
!391 = distinct !DILexicalBlock(scope: !392, file: !384, line: 93, column: 3)
!392 = distinct !DILexicalBlock(scope: !393, file: !384, line: 92, column: 3)
!393 = distinct !DILexicalBlock(scope: !383, file: !384, line: 91, column: 3)
!394 = !DILocalVariable(name: "tmp", scope: !383, file: !384, line: 88, type: !14)
!395 = !DILocalVariable(name: "buf", scope: !383, file: !384, line: 87, type: !14)
!396 = !DILocation(line: 91, column: 9, scope: !397)
!397 = distinct !DILexicalBlock(scope: !393, file: !384, line: 91, column: 7)
!398 = !DILocation(line: 91, column: 7, scope: !393)
!399 = !DILocation(line: 91, column: 5, scope: !400)
!400 = distinct !DILexicalBlock(scope: !397, file: !384, line: 91, column: 14)
!401 = !DILocation(line: 92, column: 8, scope: !402)
!402 = distinct !DILexicalBlock(scope: !403, file: !384, line: 94, column: 3)
!403 = distinct !DILexicalBlock(scope: !393, file: !384, line: 93, column: 3)
!404 = !DILocalVariable(name: "e2", scope: !383, file: !384, line: 89, type: !80)
!405 = !DILocation(line: 93, column: 3, scope: !406)
!406 = distinct !DILexicalBlock(scope: !403, file: !384, line: 94, column: 3)
!407 = !DILocation(line: 94, column: 3, scope: !393)
!408 = !DILocation(line: 0, scope: !393)
!409 = !DILocation(line: 96, column: 1, scope: !383)
!410 = distinct !DISubprogram(name: "dxml_get_PCDATA_bysimplepath", scope: !384, file: !384, line: 97, type: !411, scopeLine: 98, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !124)
!411 = !DISubroutineType(types: !412)
!412 = !{!14, !80, !78}
!413 = !DILocalVariable(name: "e", arg: 1, scope: !410, file: !384, line: 97, type: !80)
!414 = !DILocation(line: 0, scope: !410)
!415 = !DILocalVariable(name: "path", arg: 2, scope: !410, file: !384, line: 97, type: !78)
!416 = !DILocation(line: 104, column: 9, scope: !417)
!417 = distinct !DILexicalBlock(scope: !418, file: !384, line: 105, column: 3)
!418 = distinct !DILexicalBlock(scope: !419, file: !384, line: 104, column: 3)
!419 = distinct !DILexicalBlock(scope: !410, file: !384, line: 103, column: 3)
!420 = !DILocalVariable(name: "tmp", scope: !410, file: !384, line: 101, type: !14)
!421 = !DILocalVariable(name: "buf", scope: !410, file: !384, line: 100, type: !14)
!422 = !DILocation(line: 105, column: 9, scope: !423)
!423 = distinct !DILexicalBlock(scope: !419, file: !384, line: 105, column: 7)
!424 = !DILocation(line: 105, column: 7, scope: !419)
!425 = !DILocation(line: 105, column: 5, scope: !426)
!426 = distinct !DILexicalBlock(scope: !423, file: !384, line: 105, column: 14)
!427 = !DILocation(line: 106, column: 8, scope: !428)
!428 = distinct !DILexicalBlock(scope: !429, file: !384, line: 108, column: 3)
!429 = distinct !DILexicalBlock(scope: !419, file: !384, line: 107, column: 3)
!430 = !DILocalVariable(name: "e2", scope: !410, file: !384, line: 99, type: !80)
!431 = !DILocation(line: 107, column: 3, scope: !432)
!432 = distinct !DILexicalBlock(scope: !429, file: !384, line: 108, column: 3)
!433 = !DILocation(line: 108, column: 9, scope: !434)
!434 = distinct !DILexicalBlock(scope: !419, file: !384, line: 108, column: 7)
!435 = !DILocation(line: 108, column: 7, scope: !419)
!436 = !DILocation(line: 108, column: 5, scope: !437)
!437 = distinct !DILexicalBlock(scope: !434, file: !384, line: 108, column: 13)
!438 = !DILocation(line: 109, column: 12, scope: !419)
!439 = !DILocation(line: 109, column: 9, scope: !440)
!440 = distinct !DILexicalBlock(scope: !419, file: !384, line: 109, column: 7)
!441 = !DILocation(line: 109, column: 7, scope: !419)
!442 = !DILocation(line: 109, column: 5, scope: !443)
!443 = distinct !DILexicalBlock(scope: !440, file: !384, line: 109, column: 13)
!444 = !DILocation(line: 110, column: 3, scope: !445)
!445 = distinct !DILexicalBlock(scope: !446, file: !384, line: 112, column: 3)
!446 = distinct !DILexicalBlock(scope: !419, file: !384, line: 111, column: 3)
!447 = !DILocation(line: 0, scope: !419)
!448 = !DILocation(line: 110, column: 13, scope: !445)
!449 = !DILocation(line: 110, column: 28, scope: !450)
!450 = distinct !DILexicalBlock(scope: !451, file: !384, line: 110, column: 9)
!451 = distinct !DILexicalBlock(scope: !445, file: !384, line: 110, column: 13)
!452 = !DILocation(line: 110, column: 41, scope: !450)
!453 = !DILocation(line: 110, column: 9, scope: !451)
!454 = !DILocation(line: 110, column: 13, scope: !455)
!455 = distinct !DILexicalBlock(scope: !456, file: !384, line: 110, column: 11)
!456 = distinct !DILexicalBlock(scope: !450, file: !384, line: 110, column: 48)
!457 = !DILocation(line: 110, column: 11, scope: !456)
!458 = !DILocation(line: 110, column: 9, scope: !459)
!459 = distinct !DILexicalBlock(scope: !455, file: !384, line: 110, column: 17)
!460 = !DILocation(line: 112, column: 5, scope: !456)
!461 = !DILocation(line: 110, column: 7, scope: !462)
!462 = distinct !DILexicalBlock(scope: !450, file: !384, line: 112, column: 12)
!463 = !DILocation(line: 112, column: 14, scope: !451)
!464 = distinct !{!464, !444, !465}
!465 = !DILocation(line: 113, column: 3, scope: !445)
!466 = !DILocation(line: 115, column: 3, scope: !445)
!467 = !DILocation(line: 114, column: 9, scope: !468)
!468 = distinct !DILexicalBlock(scope: !419, file: !384, line: 114, column: 7)
!469 = !DILocation(line: 114, column: 7, scope: !419)
!470 = !DILocation(line: 114, column: 5, scope: !471)
!471 = distinct !DILexicalBlock(scope: !468, file: !384, line: 114, column: 13)
!472 = !DILocation(line: 115, column: 15, scope: !419)
!473 = !DILocation(line: 115, column: 3, scope: !419)
!474 = !DILocation(line: 117, column: 1, scope: !410)
!475 = distinct !DISubprogram(name: "convert_print", scope: !120, file: !120, line: 51, type: !476, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !124)
!476 = !DISubroutineType(types: !477)
!477 = !{!23, !78, !23}
!478 = !DILocalVariable(name: "s", arg: 1, scope: !475, file: !120, line: 51, type: !78)
!479 = !DILocation(line: 0, scope: !475)
!480 = !DILocalVariable(name: "verbatim", arg: 2, scope: !475, file: !120, line: 51, type: !23)
!481 = !DILocalVariable(name: "__cil_tmp7", scope: !475, file: !120, line: 57, type: !14)
!482 = !DILocation(line: 57, column: 9, scope: !475)
!483 = !DILocalVariable(name: "__cil_tmp8", scope: !475, file: !120, line: 58, type: !14)
!484 = !DILocation(line: 58, column: 9, scope: !475)
!485 = !DILocalVariable(name: "__cil_tmp9", scope: !475, file: !120, line: 59, type: !14)
!486 = !DILocation(line: 59, column: 9, scope: !475)
!487 = !DILocalVariable(name: "__cil_tmp10", scope: !475, file: !120, line: 60, type: !14)
!488 = !DILocation(line: 60, column: 9, scope: !475)
!489 = !DILocalVariable(name: "__cil_tmp11", scope: !475, file: !120, line: 61, type: !14)
!490 = !DILocation(line: 61, column: 9, scope: !475)
!491 = !DILocalVariable(name: "__cil_tmp12", scope: !475, file: !120, line: 62, type: !14)
!492 = !DILocation(line: 62, column: 9, scope: !475)
!493 = !DILocalVariable(name: "__cil_tmp13", scope: !475, file: !120, line: 63, type: !14)
!494 = !DILocation(line: 63, column: 9, scope: !475)
!495 = !DILocalVariable(name: "__cil_tmp14", scope: !475, file: !120, line: 64, type: !14)
!496 = !DILocation(line: 64, column: 9, scope: !475)
!497 = !DILocalVariable(name: "__cil_tmp15", scope: !475, file: !120, line: 65, type: !14)
!498 = !DILocation(line: 65, column: 9, scope: !475)
!499 = !DILocalVariable(name: "__cil_tmp16", scope: !475, file: !120, line: 66, type: !14)
!500 = !DILocation(line: 66, column: 9, scope: !475)
!501 = !DILocalVariable(name: "__cil_tmp17", scope: !475, file: !120, line: 67, type: !14)
!502 = !DILocation(line: 67, column: 9, scope: !475)
!503 = !DILocalVariable(name: "endptr", scope: !475, file: !120, line: 53, type: !78)
!504 = !DILocation(line: 57, column: 9, scope: !505)
!505 = distinct !DILexicalBlock(scope: !506, file: !120, line: 57, column: 7)
!506 = distinct !DILexicalBlock(scope: !475, file: !120, line: 69, column: 3)
!507 = !DILocation(line: 57, column: 7, scope: !506)
!508 = !DILocation(line: 59, column: 5, scope: !509)
!509 = distinct !DILexicalBlock(scope: !505, file: !120, line: 57, column: 12)
!510 = !DILocation(line: 62, column: 3, scope: !511)
!511 = distinct !DILexicalBlock(scope: !512, file: !120, line: 62, column: 3)
!512 = distinct !DILexicalBlock(scope: !506, file: !120, line: 61, column: 3)
!513 = !DILocation(line: 62, column: 13, scope: !511)
!514 = !DILocation(line: 62, column: 9, scope: !515)
!515 = distinct !DILexicalBlock(scope: !516, file: !120, line: 62, column: 9)
!516 = distinct !DILexicalBlock(scope: !511, file: !120, line: 62, column: 13)
!517 = !DILocation(line: 62, column: 9, scope: !516)
!518 = !DILocation(line: 62, column: 13, scope: !519)
!519 = distinct !DILexicalBlock(scope: !520, file: !120, line: 64, column: 7)
!520 = distinct !DILexicalBlock(scope: !521, file: !120, line: 63, column: 7)
!521 = distinct !DILexicalBlock(scope: !515, file: !120, line: 62, column: 13)
!522 = !DILocalVariable(name: "tmp", scope: !475, file: !120, line: 54, type: !523)
!523 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !524, size: 64)
!524 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !525, size: 64)
!525 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !51)
!526 = !DILocation(line: 62, column: 30, scope: !527)
!527 = distinct !DILexicalBlock(scope: !521, file: !120, line: 62, column: 11)
!528 = !DILocation(line: 62, column: 43, scope: !527)
!529 = !DILocation(line: 62, column: 37, scope: !527)
!530 = !DILocation(line: 62, column: 35, scope: !527)
!531 = !DILocation(line: 62, column: 28, scope: !527)
!532 = !DILocation(line: 62, column: 14, scope: !527)
!533 = !DILocation(line: 62, column: 47, scope: !527)
!534 = !DILocation(line: 62, column: 11, scope: !521)
!535 = !DILocation(line: 62, column: 9, scope: !536)
!536 = distinct !DILexicalBlock(scope: !527, file: !120, line: 62, column: 56)
!537 = !DILocation(line: 64, column: 5, scope: !521)
!538 = !DILocation(line: 62, column: 7, scope: !539)
!539 = distinct !DILexicalBlock(scope: !515, file: !120, line: 64, column: 12)
!540 = !DILocation(line: 64, column: 7, scope: !516)
!541 = distinct !{!541, !510, !542}
!542 = !DILocation(line: 65, column: 3, scope: !511)
!543 = !DILocation(line: 67, column: 3, scope: !511)
!544 = !DILocation(line: 66, column: 3, scope: !545)
!545 = distinct !DILexicalBlock(scope: !546, file: !120, line: 71, column: 3)
!546 = distinct !DILexicalBlock(scope: !506, file: !120, line: 70, column: 3)
!547 = !DILocation(line: 66, column: 13, scope: !545)
!548 = !DILocation(line: 66, column: 11, scope: !549)
!549 = distinct !DILexicalBlock(scope: !550, file: !120, line: 66, column: 9)
!550 = distinct !DILexicalBlock(scope: !545, file: !120, line: 66, column: 13)
!551 = !DILocation(line: 66, column: 9, scope: !550)
!552 = !DILocation(line: 66, column: 7, scope: !553)
!553 = distinct !DILexicalBlock(scope: !549, file: !120, line: 66, column: 15)
!554 = !DILocation(line: 70, column: 23, scope: !555)
!555 = distinct !DILexicalBlock(scope: !556, file: !120, line: 70, column: 9)
!556 = distinct !DILexicalBlock(scope: !550, file: !120, line: 68, column: 5)
!557 = !DILocation(line: 70, column: 9, scope: !555)
!558 = !DILocation(line: 70, column: 26, scope: !555)
!559 = !DILocation(line: 70, column: 9, scope: !556)
!560 = !DILocation(line: 70, column: 7, scope: !561)
!561 = distinct !DILexicalBlock(scope: !555, file: !120, line: 70, column: 33)
!562 = !DILocation(line: 73, column: 23, scope: !563)
!563 = distinct !DILexicalBlock(scope: !556, file: !120, line: 73, column: 9)
!564 = !DILocation(line: 73, column: 9, scope: !563)
!565 = !DILocation(line: 73, column: 26, scope: !563)
!566 = !DILocation(line: 73, column: 9, scope: !556)
!567 = !DILocation(line: 73, column: 7, scope: !568)
!568 = distinct !DILexicalBlock(scope: !563, file: !120, line: 73, column: 33)
!569 = !DILocation(line: 76, column: 23, scope: !570)
!570 = distinct !DILexicalBlock(scope: !556, file: !120, line: 76, column: 9)
!571 = !DILocation(line: 76, column: 9, scope: !570)
!572 = !DILocation(line: 76, column: 26, scope: !570)
!573 = !DILocation(line: 76, column: 9, scope: !556)
!574 = !DILocation(line: 76, column: 7, scope: !575)
!575 = distinct !DILexicalBlock(scope: !570, file: !120, line: 76, column: 33)
!576 = !DILocation(line: 79, column: 23, scope: !577)
!577 = distinct !DILexicalBlock(scope: !556, file: !120, line: 79, column: 9)
!578 = !DILocation(line: 79, column: 9, scope: !577)
!579 = !DILocation(line: 79, column: 26, scope: !577)
!580 = !DILocation(line: 79, column: 9, scope: !556)
!581 = !DILocation(line: 79, column: 7, scope: !582)
!582 = distinct !DILexicalBlock(scope: !577, file: !120, line: 79, column: 33)
!583 = !DILocation(line: 82, column: 23, scope: !584)
!584 = distinct !DILexicalBlock(scope: !556, file: !120, line: 82, column: 9)
!585 = !DILocation(line: 82, column: 9, scope: !584)
!586 = !DILocation(line: 82, column: 26, scope: !584)
!587 = !DILocation(line: 82, column: 9, scope: !556)
!588 = !DILocation(line: 82, column: 7, scope: !589)
!589 = distinct !DILexicalBlock(scope: !584, file: !120, line: 82, column: 34)
!590 = !DILocation(line: 85, column: 23, scope: !591)
!591 = distinct !DILexicalBlock(scope: !556, file: !120, line: 85, column: 9)
!592 = !DILocation(line: 85, column: 9, scope: !591)
!593 = !DILocation(line: 85, column: 26, scope: !591)
!594 = !DILocation(line: 85, column: 9, scope: !556)
!595 = !DILocation(line: 85, column: 7, scope: !596)
!596 = distinct !DILexicalBlock(scope: !591, file: !120, line: 85, column: 33)
!597 = !DILocation(line: 89, column: 23, scope: !598)
!598 = distinct !DILexicalBlock(scope: !556, file: !120, line: 89, column: 9)
!599 = !DILocation(line: 89, column: 9, scope: !598)
!600 = !DILocation(line: 89, column: 26, scope: !598)
!601 = !DILocation(line: 89, column: 9, scope: !556)
!602 = !DILocation(line: 89, column: 7, scope: !603)
!603 = distinct !DILexicalBlock(scope: !598, file: !120, line: 89, column: 33)
!604 = !DILocation(line: 92, column: 23, scope: !605)
!605 = distinct !DILexicalBlock(scope: !556, file: !120, line: 92, column: 9)
!606 = !DILocation(line: 92, column: 9, scope: !605)
!607 = !DILocation(line: 92, column: 26, scope: !605)
!608 = !DILocation(line: 92, column: 9, scope: !556)
!609 = !DILocation(line: 92, column: 7, scope: !610)
!610 = distinct !DILexicalBlock(scope: !605, file: !120, line: 92, column: 33)
!611 = !DILocation(line: 95, column: 23, scope: !612)
!612 = distinct !DILexicalBlock(scope: !556, file: !120, line: 95, column: 9)
!613 = !DILocation(line: 95, column: 9, scope: !612)
!614 = !DILocation(line: 95, column: 26, scope: !612)
!615 = !DILocation(line: 95, column: 9, scope: !556)
!616 = !DILocation(line: 95, column: 7, scope: !617)
!617 = distinct !DILexicalBlock(scope: !612, file: !120, line: 95, column: 33)
!618 = !DILocation(line: 99, column: 23, scope: !619)
!619 = distinct !DILexicalBlock(scope: !556, file: !120, line: 99, column: 9)
!620 = !DILocation(line: 99, column: 9, scope: !619)
!621 = !DILocation(line: 99, column: 26, scope: !619)
!622 = !DILocation(line: 99, column: 9, scope: !556)
!623 = !DILocation(line: 99, column: 7, scope: !624)
!624 = distinct !DILexicalBlock(scope: !619, file: !120, line: 99, column: 33)
!625 = !DILocation(line: 114, column: 5, scope: !556)
!626 = !DILocation(line: 71, column: 5, scope: !627)
!627 = distinct !DILexicalBlock(scope: !628, file: !120, line: 117, column: 5)
!628 = distinct !DILexicalBlock(scope: !556, file: !120, line: 116, column: 5)
!629 = !DILocation(line: 72, column: 5, scope: !556)
!630 = !DILocation(line: 74, column: 5, scope: !631)
!631 = distinct !DILexicalBlock(scope: !632, file: !120, line: 75, column: 5)
!632 = distinct !DILexicalBlock(scope: !556, file: !120, line: 74, column: 5)
!633 = !DILocation(line: 75, column: 5, scope: !556)
!634 = !DILocation(line: 77, column: 5, scope: !635)
!635 = distinct !DILexicalBlock(scope: !636, file: !120, line: 78, column: 5)
!636 = distinct !DILexicalBlock(scope: !556, file: !120, line: 77, column: 5)
!637 = !DILocation(line: 78, column: 5, scope: !556)
!638 = !DILocation(line: 80, column: 5, scope: !639)
!639 = distinct !DILexicalBlock(scope: !640, file: !120, line: 81, column: 5)
!640 = distinct !DILexicalBlock(scope: !556, file: !120, line: 80, column: 5)
!641 = !DILocation(line: 81, column: 5, scope: !556)
!642 = !DILocation(line: 83, column: 5, scope: !643)
!643 = distinct !DILexicalBlock(scope: !644, file: !120, line: 84, column: 5)
!644 = distinct !DILexicalBlock(scope: !556, file: !120, line: 83, column: 5)
!645 = !DILocation(line: 84, column: 5, scope: !556)
!646 = !DILocation(line: 86, column: 9, scope: !647)
!647 = distinct !DILexicalBlock(scope: !556, file: !120, line: 86, column: 9)
!648 = !DILocation(line: 86, column: 9, scope: !556)
!649 = !DILocation(line: 86, column: 7, scope: !650)
!650 = distinct !DILexicalBlock(scope: !651, file: !120, line: 88, column: 7)
!651 = distinct !DILexicalBlock(scope: !652, file: !120, line: 87, column: 7)
!652 = distinct !DILexicalBlock(scope: !647, file: !120, line: 86, column: 19)
!653 = !DILocation(line: 89, column: 5, scope: !652)
!654 = !DILocation(line: 87, column: 5, scope: !655)
!655 = distinct !DILexicalBlock(scope: !656, file: !120, line: 91, column: 5)
!656 = distinct !DILexicalBlock(scope: !556, file: !120, line: 90, column: 5)
!657 = !DILocation(line: 88, column: 5, scope: !556)
!658 = !DILocation(line: 90, column: 5, scope: !659)
!659 = distinct !DILexicalBlock(scope: !660, file: !120, line: 91, column: 5)
!660 = distinct !DILexicalBlock(scope: !556, file: !120, line: 90, column: 5)
!661 = !DILocation(line: 91, column: 5, scope: !556)
!662 = !DILocation(line: 93, column: 5, scope: !663)
!663 = distinct !DILexicalBlock(scope: !664, file: !120, line: 94, column: 5)
!664 = distinct !DILexicalBlock(scope: !556, file: !120, line: 93, column: 5)
!665 = !DILocation(line: 94, column: 5, scope: !556)
!666 = !DILocation(line: 96, column: 5, scope: !667)
!667 = distinct !DILexicalBlock(scope: !668, file: !120, line: 97, column: 5)
!668 = distinct !DILexicalBlock(scope: !556, file: !120, line: 96, column: 5)
!669 = !DILocation(line: 97, column: 5, scope: !556)
!670 = !DILocation(line: 100, column: 15, scope: !671)
!671 = distinct !DILexicalBlock(scope: !672, file: !120, line: 100, column: 5)
!672 = distinct !DILexicalBlock(scope: !556, file: !120, line: 99, column: 5)
!673 = !DILocalVariable(name: "tmp___0", scope: !475, file: !120, line: 56, type: !14)
!674 = !DILocation(line: 100, column: 40, scope: !675)
!675 = distinct !DILexicalBlock(scope: !556, file: !120, line: 100, column: 9)
!676 = !DILocation(line: 100, column: 37, scope: !675)
!677 = !DILocation(line: 100, column: 9, scope: !556)
!678 = !DILocation(line: 103, column: 24, scope: !679)
!679 = distinct !DILexicalBlock(scope: !680, file: !120, line: 102, column: 7)
!680 = distinct !DILexicalBlock(scope: !681, file: !120, line: 101, column: 7)
!681 = distinct !DILexicalBlock(scope: !675, file: !120, line: 100, column: 64)
!682 = !DILocation(line: 103, column: 47, scope: !679)
!683 = !DILocation(line: 103, column: 52, scope: !679)
!684 = !DILocation(line: 103, column: 29, scope: !679)
!685 = !DILocation(line: 103, column: 14, scope: !679)
!686 = !DILocalVariable(name: "tmps", scope: !475, file: !120, line: 55, type: !14)
!687 = !DILocation(line: 104, column: 7, scope: !688)
!688 = distinct !DILexicalBlock(scope: !680, file: !120, line: 105, column: 7)
!689 = !DILocation(line: 105, column: 7, scope: !690)
!690 = distinct !DILexicalBlock(scope: !680, file: !120, line: 106, column: 7)
!691 = !DILocation(line: 108, column: 5, scope: !681)
!692 = !DILocation(line: 110, column: 40, scope: !693)
!693 = distinct !DILexicalBlock(scope: !694, file: !120, line: 110, column: 7)
!694 = distinct !DILexicalBlock(scope: !695, file: !120, line: 109, column: 7)
!695 = distinct !DILexicalBlock(scope: !675, file: !120, line: 108, column: 12)
!696 = !DILocation(line: 110, column: 7, scope: !693)
!697 = !DILocation(line: 111, column: 7, scope: !698)
!698 = distinct !DILexicalBlock(scope: !694, file: !120, line: 112, column: 7)
!699 = !DILocation(line: 113, column: 5, scope: !556)
!700 = !DILocation(line: 115, column: 20, scope: !701)
!701 = distinct !DILexicalBlock(scope: !702, file: !120, line: 116, column: 5)
!702 = distinct !DILexicalBlock(scope: !556, file: !120, line: 115, column: 5)
!703 = !DILocation(line: 115, column: 14, scope: !701)
!704 = !DILocation(line: 115, column: 24, scope: !701)
!705 = !DILocation(line: 115, column: 5, scope: !701)
!706 = !DILocation(line: 117, column: 5, scope: !702)
!707 = !DILocation(line: 118, column: 7, scope: !550)
!708 = distinct !{!708, !544, !709}
!709 = !DILocation(line: 119, column: 3, scope: !545)
!710 = !DILocation(line: 121, column: 3, scope: !545)
!711 = !DILocation(line: 122, column: 3, scope: !506)
!712 = !DILocation(line: 0, scope: !506)
!713 = !DILocation(line: 124, column: 1, scope: !475)
!714 = distinct !DISubprogram(name: "dxml_get_element_byname", scope: !384, file: !384, line: 45, type: !385, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !124)
!715 = !DILocalVariable(name: "e", arg: 1, scope: !714, file: !384, line: 45, type: !80)
!716 = !DILocation(line: 0, scope: !714)
!717 = !DILocalVariable(name: "name", arg: 2, scope: !714, file: !384, line: 45, type: !78)
!718 = !DILocation(line: 48, column: 3, scope: !719)
!719 = distinct !DILexicalBlock(scope: !720, file: !384, line: 51, column: 3)
!720 = distinct !DILexicalBlock(scope: !721, file: !384, line: 50, column: 3)
!721 = distinct !DILexicalBlock(scope: !714, file: !384, line: 49, column: 3)
!722 = !DILocation(line: 48, column: 13, scope: !719)
!723 = !DILocation(line: 48, column: 11, scope: !724)
!724 = distinct !DILexicalBlock(scope: !725, file: !384, line: 48, column: 9)
!725 = distinct !DILexicalBlock(scope: !719, file: !384, line: 48, column: 13)
!726 = !DILocation(line: 48, column: 9, scope: !725)
!727 = !DILocation(line: 48, column: 7, scope: !728)
!728 = distinct !DILexicalBlock(scope: !724, file: !384, line: 48, column: 14)
!729 = !DILocation(line: 50, column: 27, scope: !730)
!730 = distinct !DILexicalBlock(scope: !725, file: !384, line: 50, column: 9)
!731 = !DILocation(line: 50, column: 40, scope: !730)
!732 = !DILocation(line: 50, column: 9, scope: !725)
!733 = !DILocation(line: 50, column: 39, scope: !734)
!734 = distinct !DILexicalBlock(scope: !735, file: !384, line: 52, column: 7)
!735 = distinct !DILexicalBlock(scope: !736, file: !384, line: 51, column: 7)
!736 = distinct !DILexicalBlock(scope: !730, file: !384, line: 50, column: 47)
!737 = !DILocation(line: 50, column: 13, scope: !734)
!738 = !DILocalVariable(name: "tmp", scope: !714, file: !384, line: 47, type: !23)
!739 = !DILocation(line: 50, column: 13, scope: !740)
!740 = distinct !DILexicalBlock(scope: !736, file: !384, line: 50, column: 11)
!741 = !DILocation(line: 50, column: 11, scope: !736)
!742 = !DILocation(line: 52, column: 9, scope: !743)
!743 = distinct !DILexicalBlock(scope: !740, file: !384, line: 50, column: 18)
!744 = !DILocation(line: 54, column: 5, scope: !736)
!745 = !DILocation(line: 53, column: 12, scope: !725)
!746 = distinct !{!746, !718, !747}
!747 = !DILocation(line: 54, column: 3, scope: !719)
!748 = !DILocation(line: 56, column: 3, scope: !719)
!749 = !DILocation(line: 55, column: 3, scope: !721)
!750 = !DILocation(line: 0, scope: !721)
!751 = !DILocation(line: 57, column: 1, scope: !714)
!752 = distinct !DISubprogram(name: "recursebook", scope: !120, file: !120, line: 392, type: !753, scopeLine: 393, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !124)
!753 = !DISubroutineType(types: !754)
!754 = !{!23, !80}
!755 = !DILocalVariable(name: "b", arg: 1, scope: !752, file: !120, line: 392, type: !80)
!756 = !DILocation(line: 0, scope: !752)
!757 = !DILocalVariable(name: "__cil_tmp4", scope: !752, file: !120, line: 396, type: !14)
!758 = !DILocation(line: 396, column: 9, scope: !752)
!759 = !DILocalVariable(name: "__cil_tmp5", scope: !752, file: !120, line: 397, type: !14)
!760 = !DILocation(line: 397, column: 9, scope: !752)
!761 = !DILocalVariable(name: "__cil_tmp6", scope: !752, file: !120, line: 398, type: !14)
!762 = !DILocation(line: 398, column: 9, scope: !752)
!763 = !DILocalVariable(name: "__cil_tmp7", scope: !752, file: !120, line: 399, type: !14)
!764 = !DILocation(line: 399, column: 9, scope: !752)
!765 = !DILocation(line: 395, column: 9, scope: !766)
!766 = distinct !DILexicalBlock(scope: !767, file: !120, line: 403, column: 3)
!767 = distinct !DILexicalBlock(scope: !768, file: !120, line: 402, column: 3)
!768 = distinct !DILexicalBlock(scope: !752, file: !120, line: 401, column: 3)
!769 = !DILocalVariable(name: "tmp", scope: !752, file: !120, line: 394, type: !80)
!770 = !DILocation(line: 395, column: 3, scope: !771)
!771 = distinct !DILexicalBlock(scope: !772, file: !120, line: 399, column: 3)
!772 = distinct !DILexicalBlock(scope: !768, file: !120, line: 398, column: 3)
!773 = !DILocation(line: 0, scope: !768)
!774 = !DILocation(line: 395, column: 13, scope: !771)
!775 = !DILocation(line: 395, column: 11, scope: !776)
!776 = distinct !DILexicalBlock(scope: !777, file: !120, line: 395, column: 9)
!777 = distinct !DILexicalBlock(scope: !771, file: !120, line: 395, column: 13)
!778 = !DILocation(line: 395, column: 9, scope: !777)
!779 = !DILocation(line: 395, column: 7, scope: !780)
!780 = distinct !DILexicalBlock(scope: !776, file: !120, line: 395, column: 16)
!781 = !DILocation(line: 397, column: 5, scope: !782)
!782 = distinct !DILexicalBlock(scope: !783, file: !120, line: 398, column: 5)
!783 = distinct !DILexicalBlock(scope: !777, file: !120, line: 397, column: 5)
!784 = !DILocation(line: 398, column: 49, scope: !785)
!785 = distinct !DILexicalBlock(scope: !783, file: !120, line: 399, column: 5)
!786 = !DILocation(line: 398, column: 15, scope: !785)
!787 = !DILocalVariable(name: "tmp___0", scope: !752, file: !120, line: 395, type: !14)
!788 = !DILocation(line: 398, column: 5, scope: !789)
!789 = distinct !DILexicalBlock(scope: !783, file: !120, line: 400, column: 5)
!790 = !DILocation(line: 399, column: 5, scope: !791)
!791 = distinct !DILexicalBlock(scope: !783, file: !120, line: 400, column: 5)
!792 = !DILocation(line: 400, column: 5, scope: !793)
!793 = distinct !DILexicalBlock(scope: !783, file: !120, line: 401, column: 5)
!794 = !DILocation(line: 401, column: 26, scope: !795)
!795 = distinct !DILexicalBlock(scope: !783, file: !120, line: 402, column: 5)
!796 = !DILocation(line: 401, column: 5, scope: !795)
!797 = !DILocation(line: 395, column: 16, scope: !783)
!798 = distinct !{!798, !770, !799}
!799 = !DILocation(line: 397, column: 3, scope: !771)
!800 = !DILocation(line: 399, column: 3, scope: !771)
!801 = !DILocation(line: 403, column: 3, scope: !768)
!802 = distinct !DISubprogram(name: "dxml_next_notPCDATA", scope: !384, file: !384, line: 36, type: !803, scopeLine: 37, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !124)
!803 = !DISubroutineType(types: !804)
!804 = !{!80, !80}
!805 = !DILocalVariable(name: "e", arg: 1, scope: !802, file: !384, line: 36, type: !80)
!806 = !DILocation(line: 0, scope: !802)
!807 = !DILocation(line: 39, column: 9, scope: !808)
!808 = distinct !DILexicalBlock(scope: !809, file: !384, line: 39, column: 7)
!809 = distinct !DILexicalBlock(scope: !802, file: !384, line: 40, column: 3)
!810 = !DILocation(line: 39, column: 7, scope: !809)
!811 = !DILocation(line: 39, column: 5, scope: !812)
!812 = distinct !DILexicalBlock(scope: !808, file: !384, line: 39, column: 12)
!813 = !DILocation(line: 40, column: 25, scope: !814)
!814 = distinct !DILexicalBlock(scope: !809, file: !384, line: 40, column: 7)
!815 = !DILocation(line: 40, column: 38, scope: !814)
!816 = !DILocation(line: 40, column: 7, scope: !809)
!817 = !DILocation(line: 41, column: 34, scope: !818)
!818 = distinct !DILexicalBlock(scope: !819, file: !384, line: 42, column: 5)
!819 = distinct !DILexicalBlock(scope: !820, file: !384, line: 41, column: 5)
!820 = distinct !DILexicalBlock(scope: !814, file: !384, line: 40, column: 45)
!821 = !DILocation(line: 41, column: 11, scope: !818)
!822 = !DILocalVariable(name: "tmp", scope: !802, file: !384, line: 38, type: !80)
!823 = !DILocation(line: 41, column: 5, scope: !820)
!824 = !DILocation(line: 42, column: 3, scope: !809)
!825 = !DILocation(line: 0, scope: !809)
!826 = !DILocation(line: 44, column: 1, scope: !802)
!827 = distinct !DISubprogram(name: "dxml_get_element_bysimplepath_internal", scope: !384, file: !384, line: 58, type: !828, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !124)
!828 = !DISubroutineType(types: !829)
!829 = !{!80, !80, !14}
!830 = !DILocalVariable(name: "e", arg: 1, scope: !827, file: !384, line: 58, type: !80)
!831 = !DILocation(line: 0, scope: !827)
!832 = !DILocalVariable(name: "path", arg: 2, scope: !827, file: !384, line: 58, type: !14)
!833 = !DILocation(line: 65, column: 9, scope: !834)
!834 = distinct !DILexicalBlock(scope: !835, file: !384, line: 68, column: 3)
!835 = distinct !DILexicalBlock(scope: !836, file: !384, line: 67, column: 3)
!836 = distinct !DILexicalBlock(scope: !827, file: !384, line: 66, column: 3)
!837 = !DILocalVariable(name: "tmp", scope: !827, file: !384, line: 61, type: !14)
!838 = !DILocalVariable(name: "slash", scope: !827, file: !384, line: 60, type: !14)
!839 = !DILocation(line: 67, column: 7, scope: !840)
!840 = distinct !DILexicalBlock(scope: !836, file: !384, line: 67, column: 7)
!841 = !DILocation(line: 67, column: 32, scope: !840)
!842 = !DILocation(line: 67, column: 29, scope: !840)
!843 = !DILocation(line: 67, column: 7, scope: !836)
!844 = !DILocation(line: 69, column: 70, scope: !845)
!845 = distinct !DILexicalBlock(scope: !846, file: !384, line: 69, column: 5)
!846 = distinct !DILexicalBlock(scope: !847, file: !384, line: 68, column: 5)
!847 = distinct !DILexicalBlock(scope: !840, file: !384, line: 67, column: 54)
!848 = !DILocation(line: 69, column: 15, scope: !845)
!849 = !DILocalVariable(name: "tmp___0", scope: !827, file: !384, line: 62, type: !80)
!850 = !DILocation(line: 69, column: 5, scope: !847)
!851 = !DILocation(line: 71, column: 7, scope: !852)
!852 = distinct !DILexicalBlock(scope: !840, file: !384, line: 71, column: 7)
!853 = !DILocation(line: 71, column: 7, scope: !840)
!854 = !DILocation(line: 73, column: 12, scope: !855)
!855 = distinct !DILexicalBlock(scope: !856, file: !384, line: 72, column: 5)
!856 = distinct !DILexicalBlock(scope: !852, file: !384, line: 71, column: 14)
!857 = !DILocation(line: 74, column: 9, scope: !858)
!858 = distinct !DILexicalBlock(scope: !855, file: !384, line: 74, column: 5)
!859 = !DILocation(line: 74, column: 11, scope: !860)
!860 = distinct !DILexicalBlock(scope: !856, file: !384, line: 74, column: 9)
!861 = !DILocation(line: 74, column: 9, scope: !856)
!862 = !DILocation(line: 75, column: 7, scope: !863)
!863 = distinct !DILexicalBlock(scope: !860, file: !384, line: 74, column: 14)
!864 = !DILocation(line: 76, column: 12, scope: !856)
!865 = !DILocation(line: 76, column: 11, scope: !866)
!866 = distinct !DILexicalBlock(scope: !856, file: !384, line: 76, column: 9)
!867 = !DILocation(line: 76, column: 9, scope: !856)
!868 = !DILocation(line: 77, column: 7, scope: !869)
!869 = distinct !DILexicalBlock(scope: !866, file: !384, line: 76, column: 14)
!870 = !DILocation(line: 79, column: 71, scope: !871)
!871 = distinct !DILexicalBlock(scope: !872, file: !384, line: 80, column: 5)
!872 = distinct !DILexicalBlock(scope: !856, file: !384, line: 79, column: 5)
!873 = !DILocation(line: 79, column: 15, scope: !871)
!874 = !DILocalVariable(name: "tmp___1", scope: !827, file: !384, line: 63, type: !80)
!875 = !DILocation(line: 79, column: 5, scope: !856)
!876 = !DILocation(line: 82, column: 15, scope: !877)
!877 = distinct !DILexicalBlock(scope: !878, file: !384, line: 82, column: 5)
!878 = distinct !DILexicalBlock(scope: !879, file: !384, line: 81, column: 5)
!879 = distinct !DILexicalBlock(scope: !852, file: !384, line: 80, column: 10)
!880 = !DILocalVariable(name: "tmp___2", scope: !827, file: !384, line: 64, type: !80)
!881 = !DILocation(line: 82, column: 5, scope: !879)
!882 = !DILocation(line: 0, scope: !840)
!883 = !DILocation(line: 85, column: 1, scope: !827)
!884 = distinct !DISubprogram(name: "dxml_dump_element", scope: !384, file: !384, line: 155, type: !885, scopeLine: 156, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !124)
!885 = !DISubroutineType(types: !886)
!886 = !{null, !80}
!887 = !DILocalVariable(name: "e", arg: 1, scope: !884, file: !384, line: 155, type: !80)
!888 = !DILocation(line: 0, scope: !884)
!889 = !DILocation(line: 158, column: 3, scope: !890)
!890 = distinct !DILexicalBlock(scope: !891, file: !384, line: 161, column: 3)
!891 = distinct !DILexicalBlock(scope: !892, file: !384, line: 160, column: 3)
!892 = distinct !DILexicalBlock(scope: !884, file: !384, line: 159, column: 3)
!893 = !DILocation(line: 159, column: 3, scope: !892)
!894 = distinct !DISubprogram(name: "recurse_element", scope: !384, file: !384, line: 133, type: !895, scopeLine: 134, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !124)
!895 = !DISubroutineType(types: !896)
!896 = !{null, !80, !23}
!897 = !DILocalVariable(name: "e", arg: 1, scope: !894, file: !384, line: 133, type: !80)
!898 = !DILocation(line: 0, scope: !894)
!899 = !DILocalVariable(name: "level", arg: 2, scope: !894, file: !384, line: 133, type: !23)
!900 = !DILocalVariable(name: "__cil_tmp3", scope: !894, file: !384, line: 135, type: !14)
!901 = !DILocation(line: 135, column: 9, scope: !894)
!902 = !DILocalVariable(name: "__cil_tmp4", scope: !894, file: !384, line: 136, type: !14)
!903 = !DILocation(line: 136, column: 9, scope: !894)
!904 = !DILocalVariable(name: "__cil_tmp5", scope: !894, file: !384, line: 137, type: !14)
!905 = !DILocation(line: 137, column: 9, scope: !894)
!906 = !DILocalVariable(name: "__cil_tmp6", scope: !894, file: !384, line: 138, type: !14)
!907 = !DILocation(line: 138, column: 9, scope: !894)
!908 = !DILocation(line: 136, column: 25, scope: !909)
!909 = distinct !DILexicalBlock(scope: !910, file: !384, line: 136, column: 7)
!910 = distinct !DILexicalBlock(scope: !894, file: !384, line: 140, column: 3)
!911 = !DILocation(line: 136, column: 38, scope: !909)
!912 = !DILocation(line: 136, column: 7, scope: !910)
!913 = !DILocation(line: 138, column: 5, scope: !914)
!914 = distinct !DILexicalBlock(scope: !915, file: !384, line: 138, column: 5)
!915 = distinct !DILexicalBlock(scope: !916, file: !384, line: 137, column: 5)
!916 = distinct !DILexicalBlock(scope: !909, file: !384, line: 136, column: 45)
!917 = !DILocation(line: 139, column: 55, scope: !918)
!918 = distinct !DILexicalBlock(scope: !915, file: !384, line: 140, column: 5)
!919 = !DILocation(line: 139, column: 5, scope: !918)
!920 = !DILocation(line: 140, column: 12, scope: !921)
!921 = distinct !DILexicalBlock(scope: !916, file: !384, line: 140, column: 9)
!922 = !DILocation(line: 140, column: 9, scope: !921)
!923 = !DILocation(line: 140, column: 9, scope: !916)
!924 = !DILocation(line: 141, column: 28, scope: !925)
!925 = distinct !DILexicalBlock(scope: !926, file: !384, line: 142, column: 7)
!926 = distinct !DILexicalBlock(scope: !927, file: !384, line: 141, column: 7)
!927 = distinct !DILexicalBlock(scope: !921, file: !384, line: 140, column: 31)
!928 = !DILocation(line: 141, column: 7, scope: !925)
!929 = !DILocation(line: 144, column: 5, scope: !927)
!930 = !DILocation(line: 142, column: 5, scope: !931)
!931 = distinct !DILexicalBlock(scope: !932, file: !384, line: 146, column: 5)
!932 = distinct !DILexicalBlock(scope: !916, file: !384, line: 145, column: 5)
!933 = !DILocation(line: 143, column: 12, scope: !934)
!934 = distinct !DILexicalBlock(scope: !916, file: !384, line: 143, column: 9)
!935 = !DILocation(line: 143, column: 9, scope: !934)
!936 = !DILocation(line: 143, column: 9, scope: !916)
!937 = !DILocation(line: 144, column: 26, scope: !938)
!938 = distinct !DILexicalBlock(scope: !939, file: !384, line: 145, column: 7)
!939 = distinct !DILexicalBlock(scope: !940, file: !384, line: 144, column: 7)
!940 = distinct !DILexicalBlock(scope: !934, file: !384, line: 143, column: 19)
!941 = !DILocation(line: 144, column: 39, scope: !938)
!942 = !DILocation(line: 144, column: 7, scope: !938)
!943 = !DILocation(line: 147, column: 5, scope: !940)
!944 = !DILocation(line: 145, column: 5, scope: !945)
!945 = distinct !DILexicalBlock(scope: !946, file: !384, line: 149, column: 5)
!946 = distinct !DILexicalBlock(scope: !916, file: !384, line: 148, column: 5)
!947 = !DILocation(line: 145, column: 59, scope: !948)
!948 = distinct !DILexicalBlock(scope: !946, file: !384, line: 147, column: 5)
!949 = !DILocation(line: 145, column: 5, scope: !948)
!950 = !DILocation(line: 148, column: 3, scope: !916)
!951 = !DILocation(line: 149, column: 5, scope: !952)
!952 = distinct !DILexicalBlock(scope: !953, file: !384, line: 150, column: 5)
!953 = distinct !DILexicalBlock(scope: !954, file: !384, line: 149, column: 5)
!954 = distinct !DILexicalBlock(scope: !909, file: !384, line: 148, column: 10)
!955 = !DILocation(line: 150, column: 56, scope: !956)
!956 = distinct !DILexicalBlock(scope: !953, file: !384, line: 151, column: 5)
!957 = !DILocation(line: 150, column: 5, scope: !956)
!958 = !DILocation(line: 152, column: 10, scope: !959)
!959 = distinct !DILexicalBlock(scope: !910, file: !384, line: 152, column: 7)
!960 = !DILocation(line: 152, column: 7, scope: !959)
!961 = !DILocation(line: 152, column: 7, scope: !910)
!962 = !DILocation(line: 152, column: 24, scope: !963)
!963 = distinct !DILexicalBlock(scope: !964, file: !384, line: 154, column: 5)
!964 = distinct !DILexicalBlock(scope: !965, file: !384, line: 153, column: 5)
!965 = distinct !DILexicalBlock(scope: !959, file: !384, line: 152, column: 16)
!966 = !DILocation(line: 152, column: 5, scope: !963)
!967 = !DILocation(line: 155, column: 3, scope: !965)
!968 = !DILocation(line: 153, column: 3, scope: !910)
!969 = distinct !DISubprogram(name: "read_element", scope: !317, file: !317, line: 387, type: !318, scopeLine: 388, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !124)
!970 = !DILocalVariable(name: "f", arg: 1, scope: !969, file: !317, line: 387, type: !16)
!971 = !DILocation(line: 0, scope: !969)
!972 = !DILocalVariable(name: "__cil_tmp15", scope: !969, file: !317, line: 402, type: !14)
!973 = !DILocation(line: 402, column: 9, scope: !969)
!974 = !DILocalVariable(name: "__cil_tmp16", scope: !969, file: !317, line: 403, type: !14)
!975 = !DILocation(line: 403, column: 9, scope: !969)
!976 = !DILocalVariable(name: "__cil_tmp17", scope: !969, file: !317, line: 404, type: !14)
!977 = !DILocation(line: 404, column: 9, scope: !969)
!978 = !DILocalVariable(name: "__cil_tmp18", scope: !969, file: !317, line: 405, type: !14)
!979 = !DILocation(line: 405, column: 9, scope: !969)
!980 = !DILocalVariable(name: "__cil_tmp19", scope: !969, file: !317, line: 406, type: !14)
!981 = !DILocation(line: 406, column: 9, scope: !969)
!982 = !DILocalVariable(name: "__cil_tmp20", scope: !969, file: !317, line: 407, type: !14)
!983 = !DILocation(line: 407, column: 9, scope: !969)
!984 = !DILocalVariable(name: "__cil_tmp21", scope: !969, file: !317, line: 408, type: !14)
!985 = !DILocation(line: 408, column: 9, scope: !969)
!986 = !DILocation(line: 393, column: 9, scope: !987)
!987 = distinct !DILexicalBlock(scope: !988, file: !317, line: 412, column: 3)
!988 = distinct !DILexicalBlock(scope: !989, file: !317, line: 411, column: 3)
!989 = distinct !DILexicalBlock(scope: !969, file: !317, line: 410, column: 3)
!990 = !DILocalVariable(name: "tmp", scope: !969, file: !317, line: 392, type: !80)
!991 = !DILocalVariable(name: "new_element", scope: !969, file: !317, line: 391, type: !80)
!992 = !DILocalVariable(name: "current_element_bottom", scope: !969, file: !317, line: 394, type: !80)
!993 = !DILocation(line: 396, column: 13, scope: !994)
!994 = distinct !DILexicalBlock(scope: !988, file: !317, line: 395, column: 3)
!995 = !DILocalVariable(name: "tmp___0", scope: !969, file: !317, line: 395, type: !23)
!996 = !DILocation(line: 398, column: 15, scope: !997)
!997 = distinct !DILexicalBlock(scope: !998, file: !317, line: 398, column: 7)
!998 = distinct !DILexicalBlock(scope: !989, file: !317, line: 399, column: 3)
!999 = !DILocation(line: 398, column: 7, scope: !998)
!1000 = !DILocation(line: 398, column: 5, scope: !1001)
!1001 = distinct !DILexicalBlock(scope: !997, file: !317, line: 398, column: 21)
!1002 = !DILocation(line: 401, column: 15, scope: !1003)
!1003 = distinct !DILexicalBlock(scope: !998, file: !317, line: 401, column: 7)
!1004 = !DILocation(line: 401, column: 7, scope: !998)
!1005 = !DILocation(line: 401, column: 5, scope: !1006)
!1006 = distinct !DILexicalBlock(scope: !1003, file: !317, line: 401, column: 21)
!1007 = !DILocation(line: 403, column: 15, scope: !1008)
!1008 = distinct !DILexicalBlock(scope: !998, file: !317, line: 403, column: 7)
!1009 = !DILocation(line: 403, column: 7, scope: !998)
!1010 = !DILocation(line: 403, column: 5, scope: !1011)
!1011 = distinct !DILexicalBlock(scope: !1008, file: !317, line: 403, column: 21)
!1012 = !DILocation(line: 396, column: 3, scope: !998)
!1013 = !DILocation(line: 399, column: 8, scope: !1014)
!1014 = distinct !DILexicalBlock(scope: !1015, file: !317, line: 399, column: 3)
!1015 = distinct !DILexicalBlock(scope: !998, file: !317, line: 398, column: 3)
!1016 = !DILocation(line: 399, column: 3, scope: !1014)
!1017 = !DILocation(line: 400, column: 3, scope: !998)
!1018 = !DILocation(line: 402, column: 3, scope: !998)
!1019 = !DILocation(line: 404, column: 36, scope: !1020)
!1020 = distinct !DILexicalBlock(scope: !1021, file: !317, line: 405, column: 3)
!1021 = distinct !DILexicalBlock(scope: !998, file: !317, line: 404, column: 3)
!1022 = !DILocation(line: 404, column: 3, scope: !1020)
!1023 = !DILocation(line: 405, column: 3, scope: !998)
!1024 = !DILocation(line: 410, column: 13, scope: !1025)
!1025 = distinct !DILexicalBlock(scope: !1026, file: !317, line: 409, column: 3)
!1026 = distinct !DILexicalBlock(scope: !989, file: !317, line: 408, column: 3)
!1027 = !DILocalVariable(name: "tmp___1", scope: !969, file: !317, line: 396, type: !14)
!1028 = !DILocation(line: 410, column: 16, scope: !1026)
!1029 = !DILocation(line: 410, column: 29, scope: !1026)
!1030 = !DILocation(line: 410, column: 9, scope: !1031)
!1031 = distinct !DILexicalBlock(scope: !989, file: !317, line: 410, column: 7)
!1032 = !DILocation(line: 410, column: 7, scope: !989)
!1033 = !DILocation(line: 412, column: 5, scope: !1034)
!1034 = distinct !DILexicalBlock(scope: !1031, file: !317, line: 410, column: 18)
!1035 = !DILocation(line: 414, column: 36, scope: !1036)
!1036 = distinct !DILexicalBlock(scope: !1037, file: !317, line: 415, column: 3)
!1037 = distinct !DILexicalBlock(scope: !989, file: !317, line: 414, column: 3)
!1038 = !DILocation(line: 414, column: 16, scope: !1036)
!1039 = !DILocation(line: 414, column: 34, scope: !1036)
!1040 = !DILocation(line: 417, column: 7, scope: !1041)
!1041 = distinct !DILexicalBlock(scope: !1037, file: !317, line: 416, column: 3)
!1042 = !DILocalVariable(name: "c", scope: !969, file: !317, line: 389, type: !23)
!1043 = !DILocation(line: 418, column: 9, scope: !1044)
!1044 = distinct !DILexicalBlock(scope: !989, file: !317, line: 418, column: 7)
!1045 = !DILocation(line: 418, column: 7, scope: !989)
!1046 = !DILocation(line: 420, column: 38, scope: !1047)
!1047 = distinct !DILexicalBlock(scope: !1048, file: !317, line: 420, column: 5)
!1048 = distinct !DILexicalBlock(scope: !1049, file: !317, line: 419, column: 5)
!1049 = distinct !DILexicalBlock(scope: !1044, file: !317, line: 418, column: 16)
!1050 = !DILocation(line: 421, column: 26, scope: !1047)
!1051 = !DILocation(line: 420, column: 5, scope: !1047)
!1052 = !DILocation(line: 422, column: 5, scope: !1049)
!1053 = !DILocation(line: 425, column: 9, scope: !1054)
!1054 = distinct !DILexicalBlock(scope: !989, file: !317, line: 425, column: 7)
!1055 = !DILocation(line: 425, column: 7, scope: !989)
!1056 = !DILocation(line: 427, column: 15, scope: !1057)
!1057 = distinct !DILexicalBlock(scope: !1058, file: !317, line: 427, column: 5)
!1058 = distinct !DILexicalBlock(scope: !1059, file: !317, line: 426, column: 5)
!1059 = distinct !DILexicalBlock(scope: !1054, file: !317, line: 425, column: 16)
!1060 = !DILocalVariable(name: "tmp___2", scope: !969, file: !317, line: 397, type: !23)
!1061 = !DILocation(line: 427, column: 9, scope: !1062)
!1062 = distinct !DILexicalBlock(scope: !1059, file: !317, line: 427, column: 9)
!1063 = !DILocation(line: 427, column: 9, scope: !1059)
!1064 = !DILocation(line: 429, column: 33, scope: !1065)
!1065 = distinct !DILexicalBlock(scope: !1066, file: !317, line: 429, column: 7)
!1066 = distinct !DILexicalBlock(scope: !1067, file: !317, line: 428, column: 7)
!1067 = distinct !DILexicalBlock(scope: !1062, file: !317, line: 427, column: 18)
!1068 = !DILocation(line: 429, column: 7, scope: !1065)
!1069 = !DILocation(line: 430, column: 37, scope: !1070)
!1070 = distinct !DILexicalBlock(scope: !1066, file: !317, line: 431, column: 7)
!1071 = !DILocation(line: 430, column: 7, scope: !1070)
!1072 = !DILocation(line: 431, column: 12, scope: !1073)
!1073 = distinct !DILexicalBlock(scope: !1066, file: !317, line: 432, column: 7)
!1074 = !DILocation(line: 431, column: 7, scope: !1073)
!1075 = !DILocation(line: 432, column: 7, scope: !1067)
!1076 = !DILocation(line: 436, column: 5, scope: !1077)
!1077 = distinct !DILexicalBlock(scope: !1078, file: !317, line: 435, column: 5)
!1078 = distinct !DILexicalBlock(scope: !1059, file: !317, line: 434, column: 5)
!1079 = !DILocation(line: 438, column: 5, scope: !1059)
!1080 = !DILocation(line: 442, column: 3, scope: !1081)
!1081 = distinct !DILexicalBlock(scope: !1082, file: !317, line: 441, column: 3)
!1082 = distinct !DILexicalBlock(scope: !989, file: !317, line: 440, column: 3)
!1083 = !DILocation(line: 443, column: 3, scope: !1084)
!1084 = distinct !DILexicalBlock(scope: !1085, file: !317, line: 446, column: 3)
!1085 = distinct !DILexicalBlock(scope: !989, file: !317, line: 445, column: 3)
!1086 = !DILocation(line: 0, scope: !989)
!1087 = !DILocation(line: 443, column: 13, scope: !1084)
!1088 = !DILocation(line: 445, column: 9, scope: !1089)
!1089 = distinct !DILexicalBlock(scope: !1090, file: !317, line: 447, column: 5)
!1090 = distinct !DILexicalBlock(scope: !1091, file: !317, line: 446, column: 5)
!1091 = distinct !DILexicalBlock(scope: !1084, file: !317, line: 443, column: 13)
!1092 = !DILocation(line: 446, column: 11, scope: !1093)
!1093 = distinct !DILexicalBlock(scope: !1091, file: !317, line: 446, column: 9)
!1094 = !DILocation(line: 446, column: 9, scope: !1091)
!1095 = !DILocation(line: 448, column: 40, scope: !1096)
!1096 = distinct !DILexicalBlock(scope: !1097, file: !317, line: 448, column: 7)
!1097 = distinct !DILexicalBlock(scope: !1098, file: !317, line: 447, column: 7)
!1098 = distinct !DILexicalBlock(scope: !1093, file: !317, line: 446, column: 18)
!1099 = !DILocation(line: 448, column: 7, scope: !1096)
!1100 = !DILocation(line: 449, column: 7, scope: !1098)
!1101 = !DILocation(line: 451, column: 11, scope: !1102)
!1102 = distinct !DILexicalBlock(scope: !1093, file: !317, line: 451, column: 9)
!1103 = !DILocation(line: 451, column: 9, scope: !1093)
!1104 = !DILocation(line: 453, column: 11, scope: !1105)
!1105 = distinct !DILexicalBlock(scope: !1106, file: !317, line: 453, column: 7)
!1106 = distinct !DILexicalBlock(scope: !1107, file: !317, line: 452, column: 7)
!1107 = distinct !DILexicalBlock(scope: !1102, file: !317, line: 451, column: 18)
!1108 = !DILocation(line: 454, column: 13, scope: !1109)
!1109 = distinct !DILexicalBlock(scope: !1107, file: !317, line: 454, column: 11)
!1110 = !DILocation(line: 454, column: 11, scope: !1107)
!1111 = !DILocation(line: 455, column: 9, scope: !1112)
!1112 = distinct !DILexicalBlock(scope: !1109, file: !317, line: 454, column: 20)
!1113 = !DILocation(line: 456, column: 7, scope: !1114)
!1114 = distinct !DILexicalBlock(scope: !1115, file: !317, line: 458, column: 7)
!1115 = distinct !DILexicalBlock(scope: !1107, file: !317, line: 457, column: 7)
!1116 = !DILocation(line: 457, column: 21, scope: !1117)
!1117 = distinct !DILexicalBlock(scope: !1115, file: !317, line: 458, column: 7)
!1118 = !DILocalVariable(name: "tmp_element", scope: !969, file: !317, line: 393, type: !80)
!1119 = !DILocation(line: 460, column: 5, scope: !1107)
!1120 = !DILocation(line: 459, column: 11, scope: !1121)
!1121 = distinct !DILexicalBlock(scope: !1102, file: !317, line: 459, column: 9)
!1122 = !DILocation(line: 459, column: 9, scope: !1102)
!1123 = !DILocation(line: 461, column: 40, scope: !1124)
!1124 = distinct !DILexicalBlock(scope: !1125, file: !317, line: 461, column: 7)
!1125 = distinct !DILexicalBlock(scope: !1126, file: !317, line: 460, column: 7)
!1126 = distinct !DILexicalBlock(scope: !1121, file: !317, line: 459, column: 18)
!1127 = !DILocation(line: 461, column: 7, scope: !1124)
!1128 = !DILocation(line: 463, column: 7, scope: !1129)
!1129 = distinct !DILexicalBlock(scope: !1125, file: !317, line: 463, column: 7)
!1130 = !DILocation(line: 467, column: 7, scope: !1131)
!1131 = distinct !DILexicalBlock(scope: !1132, file: !317, line: 468, column: 7)
!1132 = distinct !DILexicalBlock(scope: !1133, file: !317, line: 467, column: 7)
!1133 = distinct !DILexicalBlock(scope: !1121, file: !317, line: 466, column: 12)
!1134 = !DILocation(line: 468, column: 21, scope: !1135)
!1135 = distinct !DILexicalBlock(scope: !1132, file: !317, line: 469, column: 7)
!1136 = !DILocation(line: 0, scope: !1102)
!1137 = !DILocation(line: 472, column: 9, scope: !1138)
!1138 = distinct !DILexicalBlock(scope: !1091, file: !317, line: 472, column: 9)
!1139 = !DILocation(line: 472, column: 9, scope: !1091)
!1140 = !DILocation(line: 474, column: 24, scope: !1141)
!1141 = distinct !DILexicalBlock(scope: !1142, file: !317, line: 474, column: 11)
!1142 = distinct !DILexicalBlock(scope: !1138, file: !317, line: 472, column: 22)
!1143 = !DILocation(line: 474, column: 11, scope: !1141)
!1144 = !DILocation(line: 474, column: 11, scope: !1142)
!1145 = !DILocalVariable(name: "tmp___3", scope: !969, file: !317, line: 398, type: !96)
!1146 = !DILocation(line: 476, column: 33, scope: !1147)
!1147 = distinct !DILexicalBlock(scope: !1141, file: !317, line: 474, column: 31)
!1148 = !DILocation(line: 476, column: 38, scope: !1147)
!1149 = !DILocation(line: 477, column: 7, scope: !1147)
!1150 = !DILocalVariable(name: "tmp___4", scope: !969, file: !317, line: 399, type: !96)
!1151 = !DILocation(line: 481, column: 22, scope: !1152)
!1152 = distinct !DILexicalBlock(scope: !1141, file: !317, line: 477, column: 14)
!1153 = !DILocation(line: 481, column: 28, scope: !1152)
!1154 = !DILocation(line: 483, column: 5, scope: !1142)
!1155 = distinct !{!1155, !1083, !1156}
!1156 = !DILocation(line: 484, column: 3, scope: !1084)
!1157 = !DILocation(line: 486, column: 3, scope: !1084)
!1158 = !DILocation(line: 490, column: 9, scope: !1159)
!1159 = distinct !DILexicalBlock(scope: !1160, file: !317, line: 490, column: 3)
!1160 = distinct !DILexicalBlock(scope: !989, file: !317, line: 489, column: 3)
!1161 = !DILocalVariable(name: "buf", scope: !969, file: !317, line: 390, type: !14)
!1162 = !DILocation(line: 491, column: 49, scope: !1163)
!1163 = distinct !DILexicalBlock(scope: !1160, file: !317, line: 492, column: 3)
!1164 = !DILocation(line: 491, column: 13, scope: !1163)
!1165 = !DILocalVariable(name: "tmp___5", scope: !969, file: !317, line: 400, type: !23)
!1166 = !DILocation(line: 491, column: 7, scope: !1167)
!1167 = distinct !DILexicalBlock(scope: !989, file: !317, line: 491, column: 7)
!1168 = !DILocation(line: 491, column: 7, scope: !989)
!1169 = !DILocation(line: 493, column: 38, scope: !1170)
!1170 = distinct !DILexicalBlock(scope: !1171, file: !317, line: 493, column: 5)
!1171 = distinct !DILexicalBlock(scope: !1172, file: !317, line: 492, column: 5)
!1172 = distinct !DILexicalBlock(scope: !1167, file: !317, line: 491, column: 16)
!1173 = !DILocation(line: 494, column: 26, scope: !1170)
!1174 = !DILocation(line: 493, column: 5, scope: !1170)
!1175 = !DILocation(line: 496, column: 5, scope: !1172)
!1176 = !DILocation(line: 498, column: 3, scope: !1177)
!1177 = distinct !DILexicalBlock(scope: !1178, file: !317, line: 499, column: 3)
!1178 = distinct !DILexicalBlock(scope: !989, file: !317, line: 498, column: 3)
!1179 = !DILocation(line: 499, column: 3, scope: !1180)
!1180 = distinct !DILexicalBlock(scope: !1178, file: !317, line: 500, column: 3)
!1181 = !DILocation(line: 500, column: 13, scope: !1182)
!1182 = distinct !DILexicalBlock(scope: !1178, file: !317, line: 501, column: 3)
!1183 = !DILocalVariable(name: "tmp___6", scope: !969, file: !317, line: 401, type: !23)
!1184 = !DILocation(line: 500, column: 7, scope: !1185)
!1185 = distinct !DILexicalBlock(scope: !989, file: !317, line: 500, column: 7)
!1186 = !DILocation(line: 500, column: 7, scope: !989)
!1187 = !DILocation(line: 502, column: 5, scope: !1188)
!1188 = distinct !DILexicalBlock(scope: !1189, file: !317, line: 502, column: 5)
!1189 = distinct !DILexicalBlock(scope: !1190, file: !317, line: 501, column: 5)
!1190 = distinct !DILexicalBlock(scope: !1185, file: !317, line: 500, column: 16)
!1191 = !DILocation(line: 503, column: 5, scope: !1190)
!1192 = !DILocation(line: 507, column: 3, scope: !1193)
!1193 = distinct !DILexicalBlock(scope: !1194, file: !317, line: 506, column: 3)
!1194 = distinct !DILexicalBlock(scope: !989, file: !317, line: 505, column: 3)
!1195 = !DILocation(line: 511, column: 3, scope: !989)
!1196 = !DILocation(line: 513, column: 1, scope: !969)
!1197 = distinct !DISubprogram(name: "skipwhitechars", scope: !317, file: !317, line: 86, type: !1198, scopeLine: 87, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !124)
!1198 = !DISubroutineType(types: !1199)
!1199 = !{!23, !16}
!1200 = !DILocalVariable(name: "f", arg: 1, scope: !1197, file: !317, line: 86, type: !16)
!1201 = !DILocation(line: 0, scope: !1197)
!1202 = !DILocation(line: 90, column: 3, scope: !1203)
!1203 = distinct !DILexicalBlock(scope: !1204, file: !317, line: 92, column: 3)
!1204 = distinct !DILexicalBlock(scope: !1205, file: !317, line: 91, column: 3)
!1205 = distinct !DILexicalBlock(scope: !1197, file: !317, line: 90, column: 3)
!1206 = !DILocation(line: 90, column: 13, scope: !1203)
!1207 = !DILocation(line: 92, column: 9, scope: !1208)
!1208 = distinct !DILexicalBlock(scope: !1209, file: !317, line: 94, column: 5)
!1209 = distinct !DILexicalBlock(scope: !1210, file: !317, line: 93, column: 5)
!1210 = distinct !DILexicalBlock(scope: !1203, file: !317, line: 90, column: 13)
!1211 = !DILocalVariable(name: "c", scope: !1197, file: !317, line: 88, type: !23)
!1212 = !DILocation(line: 95, column: 11, scope: !1213)
!1213 = distinct !DILexicalBlock(scope: !1214, file: !317, line: 95, column: 9)
!1214 = distinct !DILexicalBlock(scope: !1210, file: !317, line: 95, column: 5)
!1215 = !DILocation(line: 95, column: 9, scope: !1214)
!1216 = !DILocation(line: 95, column: 7, scope: !1217)
!1217 = distinct !DILexicalBlock(scope: !1213, file: !317, line: 95, column: 18)
!1218 = !DILocation(line: 95, column: 11, scope: !1219)
!1219 = distinct !DILexicalBlock(scope: !1214, file: !317, line: 95, column: 9)
!1220 = !DILocation(line: 95, column: 7, scope: !1221)
!1221 = distinct !DILexicalBlock(scope: !1219, file: !317, line: 95, column: 18)
!1222 = !DILocation(line: 95, column: 11, scope: !1223)
!1223 = distinct !DILexicalBlock(scope: !1214, file: !317, line: 95, column: 9)
!1224 = !DILocation(line: 95, column: 7, scope: !1225)
!1225 = distinct !DILexicalBlock(scope: !1223, file: !317, line: 95, column: 17)
!1226 = !DILocation(line: 95, column: 11, scope: !1227)
!1227 = distinct !DILexicalBlock(scope: !1214, file: !317, line: 95, column: 9)
!1228 = !DILocation(line: 95, column: 7, scope: !1229)
!1229 = distinct !DILexicalBlock(scope: !1227, file: !317, line: 95, column: 18)
!1230 = !DILocation(line: 97, column: 11, scope: !1231)
!1231 = distinct !DILexicalBlock(scope: !1214, file: !317, line: 97, column: 9)
!1232 = !DILocation(line: 97, column: 9, scope: !1214)
!1233 = !DILocation(line: 97, column: 7, scope: !1234)
!1234 = distinct !DILexicalBlock(scope: !1231, file: !317, line: 97, column: 18)
!1235 = !DILocation(line: 99, column: 5, scope: !1214)
!1236 = !DILocation(line: 96, column: 5, scope: !1214)
!1237 = !DILocation(line: 98, column: 5, scope: !1214)
!1238 = !DILocation(line: 100, column: 5, scope: !1239)
!1239 = distinct !DILexicalBlock(scope: !1240, file: !317, line: 101, column: 5)
!1240 = distinct !DILexicalBlock(scope: !1214, file: !317, line: 100, column: 5)
!1241 = !DILocation(line: 101, column: 5, scope: !1214)
!1242 = distinct !{!1242, !1202, !1243}
!1243 = !DILocation(line: 104, column: 3, scope: !1203)
!1244 = !DILocation(line: 106, column: 3, scope: !1203)
!1245 = !DILocation(line: 0, scope: !1214)
!1246 = !DILocation(line: 110, column: 1, scope: !1197)
!1247 = distinct !DISubprogram(name: "checkchar", scope: !317, file: !317, line: 110, type: !1248, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !124)
!1248 = !DISubroutineType(types: !1249)
!1249 = !{!23, !23, !16}
!1250 = !DILocalVariable(name: "expect", arg: 1, scope: !1247, file: !317, line: 110, type: !23)
!1251 = !DILocation(line: 0, scope: !1247)
!1252 = !DILocalVariable(name: "f", arg: 2, scope: !1247, file: !317, line: 110, type: !16)
!1253 = !DILocalVariable(name: "__cil_tmp5", scope: !1247, file: !317, line: 114, type: !14)
!1254 = !DILocation(line: 114, column: 9, scope: !1247)
!1255 = !DILocalVariable(name: "__cil_tmp6", scope: !1247, file: !317, line: 115, type: !14)
!1256 = !DILocation(line: 115, column: 9, scope: !1247)
!1257 = !DILocation(line: 113, column: 9, scope: !1258)
!1258 = distinct !DILexicalBlock(scope: !1259, file: !317, line: 119, column: 3)
!1259 = distinct !DILexicalBlock(scope: !1260, file: !317, line: 118, column: 3)
!1260 = distinct !DILexicalBlock(scope: !1247, file: !317, line: 117, column: 3)
!1261 = !DILocalVariable(name: "tmp", scope: !1247, file: !317, line: 113, type: !23)
!1262 = !DILocalVariable(name: "c", scope: !1247, file: !317, line: 112, type: !23)
!1263 = !DILocation(line: 114, column: 9, scope: !1264)
!1264 = distinct !DILexicalBlock(scope: !1260, file: !317, line: 114, column: 7)
!1265 = !DILocation(line: 114, column: 7, scope: !1260)
!1266 = !DILocation(line: 116, column: 11, scope: !1267)
!1267 = distinct !DILexicalBlock(scope: !1268, file: !317, line: 116, column: 9)
!1268 = distinct !DILexicalBlock(scope: !1264, file: !317, line: 114, column: 20)
!1269 = !DILocation(line: 116, column: 9, scope: !1268)
!1270 = !DILocation(line: 117, column: 40, scope: !1271)
!1271 = distinct !DILexicalBlock(scope: !1272, file: !317, line: 118, column: 7)
!1272 = distinct !DILexicalBlock(scope: !1273, file: !317, line: 117, column: 7)
!1273 = distinct !DILexicalBlock(scope: !1267, file: !317, line: 116, column: 18)
!1274 = !DILocation(line: 117, column: 7, scope: !1271)
!1275 = !DILocation(line: 120, column: 5, scope: !1273)
!1276 = !DILocation(line: 119, column: 40, scope: !1277)
!1277 = distinct !DILexicalBlock(scope: !1278, file: !317, line: 122, column: 7)
!1278 = distinct !DILexicalBlock(scope: !1279, file: !317, line: 121, column: 7)
!1279 = distinct !DILexicalBlock(scope: !1267, file: !317, line: 120, column: 12)
!1280 = !DILocation(line: 119, column: 7, scope: !1277)
!1281 = !DILocation(line: 120, column: 5, scope: !1268)
!1282 = !DILocation(line: 122, column: 3, scope: !1260)
!1283 = !DILocation(line: 0, scope: !1260)
!1284 = !DILocation(line: 124, column: 1, scope: !1247)
!1285 = distinct !DISubprogram(name: "dxml_free_xml", scope: !317, file: !317, line: 571, type: !885, scopeLine: 572, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !124)
!1286 = !DILocalVariable(name: "e", arg: 1, scope: !1285, file: !317, line: 571, type: !80)
!1287 = !DILocation(line: 0, scope: !1285)
!1288 = !DILocalVariable(name: "__cil_tmp2", scope: !1285, file: !317, line: 573, type: !14)
!1289 = !DILocation(line: 573, column: 9, scope: !1285)
!1290 = !DILocation(line: 574, column: 9, scope: !1291)
!1291 = distinct !DILexicalBlock(scope: !1292, file: !317, line: 574, column: 7)
!1292 = distinct !DILexicalBlock(scope: !1285, file: !317, line: 575, column: 3)
!1293 = !DILocation(line: 574, column: 7, scope: !1292)
!1294 = !DILocation(line: 576, column: 38, scope: !1295)
!1295 = distinct !DILexicalBlock(scope: !1296, file: !317, line: 576, column: 5)
!1296 = distinct !DILexicalBlock(scope: !1297, file: !317, line: 575, column: 5)
!1297 = distinct !DILexicalBlock(scope: !1291, file: !317, line: 574, column: 12)
!1298 = !DILocation(line: 576, column: 5, scope: !1295)
!1299 = !DILocation(line: 577, column: 5, scope: !1297)
!1300 = !DILocation(line: 580, column: 10, scope: !1301)
!1301 = distinct !DILexicalBlock(scope: !1292, file: !317, line: 580, column: 7)
!1302 = !DILocation(line: 580, column: 7, scope: !1301)
!1303 = !DILocation(line: 580, column: 7, scope: !1292)
!1304 = !DILocation(line: 581, column: 21, scope: !1305)
!1305 = distinct !DILexicalBlock(scope: !1306, file: !317, line: 582, column: 5)
!1306 = distinct !DILexicalBlock(scope: !1307, file: !317, line: 581, column: 5)
!1307 = distinct !DILexicalBlock(scope: !1301, file: !317, line: 580, column: 24)
!1308 = !DILocation(line: 581, column: 5, scope: !1305)
!1309 = !DILocation(line: 584, column: 3, scope: !1307)
!1310 = !DILocation(line: 582, column: 10, scope: !1311)
!1311 = distinct !DILexicalBlock(scope: !1292, file: !317, line: 582, column: 7)
!1312 = !DILocation(line: 582, column: 7, scope: !1311)
!1313 = !DILocation(line: 582, column: 7, scope: !1292)
!1314 = !DILocation(line: 583, column: 25, scope: !1315)
!1315 = distinct !DILexicalBlock(scope: !1316, file: !317, line: 584, column: 5)
!1316 = distinct !DILexicalBlock(scope: !1317, file: !317, line: 583, column: 5)
!1317 = distinct !DILexicalBlock(scope: !1311, file: !317, line: 582, column: 29)
!1318 = !DILocation(line: 583, column: 5, scope: !1315)
!1319 = !DILocation(line: 586, column: 3, scope: !1317)
!1320 = !DILocation(line: 584, column: 10, scope: !1321)
!1321 = distinct !DILexicalBlock(scope: !1292, file: !317, line: 584, column: 7)
!1322 = !DILocation(line: 584, column: 7, scope: !1321)
!1323 = !DILocation(line: 584, column: 7, scope: !1292)
!1324 = !DILocation(line: 585, column: 22, scope: !1325)
!1325 = distinct !DILexicalBlock(scope: !1326, file: !317, line: 586, column: 5)
!1326 = distinct !DILexicalBlock(scope: !1327, file: !317, line: 585, column: 5)
!1327 = distinct !DILexicalBlock(scope: !1321, file: !317, line: 584, column: 17)
!1328 = !DILocation(line: 585, column: 5, scope: !1325)
!1329 = !DILocation(line: 588, column: 3, scope: !1327)
!1330 = !DILocation(line: 586, column: 10, scope: !1331)
!1331 = distinct !DILexicalBlock(scope: !1292, file: !317, line: 586, column: 7)
!1332 = !DILocation(line: 586, column: 7, scope: !1331)
!1333 = !DILocation(line: 586, column: 7, scope: !1292)
!1334 = !DILocation(line: 587, column: 22, scope: !1335)
!1335 = distinct !DILexicalBlock(scope: !1336, file: !317, line: 588, column: 5)
!1336 = distinct !DILexicalBlock(scope: !1337, file: !317, line: 587, column: 5)
!1337 = distinct !DILexicalBlock(scope: !1331, file: !317, line: 586, column: 16)
!1338 = !DILocation(line: 587, column: 5, scope: !1335)
!1339 = !DILocation(line: 590, column: 3, scope: !1337)
!1340 = !DILocation(line: 588, column: 8, scope: !1341)
!1341 = distinct !DILexicalBlock(scope: !1342, file: !317, line: 592, column: 3)
!1342 = distinct !DILexicalBlock(scope: !1292, file: !317, line: 591, column: 3)
!1343 = !DILocation(line: 588, column: 3, scope: !1341)
!1344 = !DILocation(line: 589, column: 3, scope: !1292)
!1345 = !DILocation(line: 591, column: 1, scope: !1285)
!1346 = distinct !DISubprogram(name: "dxml_free_attrib", scope: !317, file: !317, line: 553, type: !1347, scopeLine: 554, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !124)
!1347 = !DISubroutineType(types: !1348)
!1348 = !{null, !87}
!1349 = !DILocalVariable(name: "a", arg: 1, scope: !1346, file: !317, line: 553, type: !87)
!1350 = !DILocation(line: 0, scope: !1346)
!1351 = !DILocalVariable(name: "__cil_tmp2", scope: !1346, file: !317, line: 555, type: !14)
!1352 = !DILocation(line: 555, column: 9, scope: !1346)
!1353 = !DILocation(line: 556, column: 9, scope: !1354)
!1354 = distinct !DILexicalBlock(scope: !1355, file: !317, line: 556, column: 7)
!1355 = distinct !DILexicalBlock(scope: !1346, file: !317, line: 557, column: 3)
!1356 = !DILocation(line: 556, column: 7, scope: !1355)
!1357 = !DILocation(line: 558, column: 38, scope: !1358)
!1358 = distinct !DILexicalBlock(scope: !1359, file: !317, line: 558, column: 5)
!1359 = distinct !DILexicalBlock(scope: !1360, file: !317, line: 557, column: 5)
!1360 = distinct !DILexicalBlock(scope: !1354, file: !317, line: 556, column: 12)
!1361 = !DILocation(line: 558, column: 5, scope: !1358)
!1362 = !DILocation(line: 559, column: 5, scope: !1360)
!1363 = !DILocation(line: 562, column: 10, scope: !1364)
!1364 = distinct !DILexicalBlock(scope: !1355, file: !317, line: 562, column: 7)
!1365 = !DILocation(line: 562, column: 7, scope: !1364)
!1366 = !DILocation(line: 562, column: 7, scope: !1355)
!1367 = !DILocation(line: 563, column: 21, scope: !1368)
!1368 = distinct !DILexicalBlock(scope: !1369, file: !317, line: 564, column: 5)
!1369 = distinct !DILexicalBlock(scope: !1370, file: !317, line: 563, column: 5)
!1370 = distinct !DILexicalBlock(scope: !1364, file: !317, line: 562, column: 26)
!1371 = !DILocation(line: 563, column: 5, scope: !1368)
!1372 = !DILocation(line: 566, column: 3, scope: !1370)
!1373 = !DILocation(line: 564, column: 10, scope: !1374)
!1374 = distinct !DILexicalBlock(scope: !1355, file: !317, line: 564, column: 7)
!1375 = !DILocation(line: 564, column: 7, scope: !1374)
!1376 = !DILocation(line: 564, column: 7, scope: !1355)
!1377 = !DILocation(line: 565, column: 21, scope: !1378)
!1378 = distinct !DILexicalBlock(scope: !1379, file: !317, line: 566, column: 5)
!1379 = distinct !DILexicalBlock(scope: !1380, file: !317, line: 565, column: 5)
!1380 = distinct !DILexicalBlock(scope: !1374, file: !317, line: 564, column: 26)
!1381 = !DILocation(line: 565, column: 5, scope: !1378)
!1382 = !DILocation(line: 568, column: 3, scope: !1380)
!1383 = !DILocation(line: 566, column: 10, scope: !1384)
!1384 = distinct !DILexicalBlock(scope: !1355, file: !317, line: 566, column: 7)
!1385 = !DILocation(line: 566, column: 7, scope: !1384)
!1386 = !DILocation(line: 566, column: 7, scope: !1355)
!1387 = !DILocation(line: 567, column: 25, scope: !1388)
!1388 = distinct !DILexicalBlock(scope: !1389, file: !317, line: 568, column: 5)
!1389 = distinct !DILexicalBlock(scope: !1390, file: !317, line: 567, column: 5)
!1390 = distinct !DILexicalBlock(scope: !1384, file: !317, line: 566, column: 16)
!1391 = !DILocation(line: 567, column: 5, scope: !1388)
!1392 = !DILocation(line: 570, column: 3, scope: !1390)
!1393 = !DILocation(line: 568, column: 8, scope: !1394)
!1394 = distinct !DILexicalBlock(scope: !1395, file: !317, line: 572, column: 3)
!1395 = distinct !DILexicalBlock(scope: !1355, file: !317, line: 571, column: 3)
!1396 = !DILocation(line: 568, column: 3, scope: !1394)
!1397 = !DILocation(line: 569, column: 3, scope: !1355)
!1398 = !DILocation(line: 571, column: 1, scope: !1346)
!1399 = distinct !DISubprogram(name: "get_PCDATA_bysimplepath_i", scope: !1400, file: !1400, line: 31, type: !1401, scopeLine: 32, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !124)
!1400 = !DIFile(filename: "/home/wslee/benchmarks/textformat/dancer-xml-0.8.2.1/mikilab.useraccount-parser.c", directory: "")
!1401 = !DISubroutineType(types: !1402)
!1402 = !{!78, !80, !78}
!1403 = !DILocalVariable(name: "e", arg: 1, scope: !1399, file: !1400, line: 31, type: !80)
!1404 = !DILocation(line: 0, scope: !1399)
!1405 = !DILocalVariable(name: "loc", arg: 2, scope: !1399, file: !1400, line: 31, type: !78)
!1406 = !DILocalVariable(name: "__cil_tmp5", scope: !1399, file: !1400, line: 35, type: !14)
!1407 = !DILocation(line: 35, column: 9, scope: !1399)
!1408 = !DILocation(line: 33, column: 9, scope: !1409)
!1409 = distinct !DILexicalBlock(scope: !1410, file: !1400, line: 39, column: 3)
!1410 = distinct !DILexicalBlock(scope: !1411, file: !1400, line: 38, column: 3)
!1411 = distinct !DILexicalBlock(scope: !1399, file: !1400, line: 37, column: 3)
!1412 = !DILocalVariable(name: "tmp", scope: !1399, file: !1400, line: 34, type: !14)
!1413 = !DILocalVariable(name: "s", scope: !1399, file: !1400, line: 33, type: !78)
!1414 = !DILocation(line: 34, column: 7, scope: !1415)
!1415 = distinct !DILexicalBlock(scope: !1411, file: !1400, line: 34, column: 7)
!1416 = !DILocation(line: 34, column: 7, scope: !1411)
!1417 = !DILocation(line: 35, column: 5, scope: !1418)
!1418 = distinct !DILexicalBlock(scope: !1415, file: !1400, line: 34, column: 10)
!1419 = !DILocation(line: 37, column: 5, scope: !1420)
!1420 = distinct !DILexicalBlock(scope: !1415, file: !1400, line: 36, column: 10)
!1421 = !DILocation(line: 0, scope: !1415)
!1422 = !DILocation(line: 40, column: 1, scope: !1399)
!1423 = distinct !DISubprogram(name: "replace_external_entity", scope: !120, file: !120, line: 30, type: !1424, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !124)
!1424 = !DISubroutineType(types: !1425)
!1425 = !{!23, !78}
!1426 = !DILocalVariable(name: "s", arg: 1, scope: !1423, file: !120, line: 30, type: !78)
!1427 = !DILocation(line: 0, scope: !1423)
!1428 = !DILocalVariable(name: "__cil_tmp5", scope: !1423, file: !120, line: 35, type: !14)
!1429 = !DILocation(line: 35, column: 9, scope: !1423)
!1430 = !DILocalVariable(name: "__cil_tmp6", scope: !1423, file: !120, line: 36, type: !14)
!1431 = !DILocation(line: 36, column: 9, scope: !1423)
!1432 = !DILocalVariable(name: "__cil_tmp7", scope: !1423, file: !120, line: 37, type: !14)
!1433 = !DILocation(line: 37, column: 9, scope: !1423)
!1434 = !DILocalVariable(name: "__cil_tmp8", scope: !1423, file: !120, line: 38, type: !14)
!1435 = !DILocation(line: 38, column: 9, scope: !1423)
!1436 = !DILocalVariable(name: "__cil_tmp9", scope: !1423, file: !120, line: 39, type: !14)
!1437 = !DILocation(line: 39, column: 9, scope: !1423)
!1438 = !DILocalVariable(name: "__cil_tmp10", scope: !1423, file: !120, line: 40, type: !14)
!1439 = !DILocation(line: 40, column: 9, scope: !1423)
!1440 = !DILocalVariable(name: "__cil_tmp11", scope: !1423, file: !120, line: 41, type: !14)
!1441 = !DILocation(line: 41, column: 9, scope: !1423)
!1442 = !DILocation(line: 33, column: 13, scope: !1443)
!1443 = distinct !DILexicalBlock(scope: !1444, file: !120, line: 45, column: 3)
!1444 = distinct !DILexicalBlock(scope: !1445, file: !120, line: 44, column: 3)
!1445 = distinct !DILexicalBlock(scope: !1423, file: !120, line: 43, column: 3)
!1446 = !DILocalVariable(name: "tmp___1", scope: !1423, file: !120, line: 34, type: !23)
!1447 = !DILocation(line: 33, column: 7, scope: !1448)
!1448 = distinct !DILexicalBlock(scope: !1445, file: !120, line: 33, column: 7)
!1449 = !DILocation(line: 33, column: 7, scope: !1445)
!1450 = !DILocation(line: 35, column: 15, scope: !1451)
!1451 = distinct !DILexicalBlock(scope: !1452, file: !120, line: 35, column: 5)
!1452 = distinct !DILexicalBlock(scope: !1453, file: !120, line: 34, column: 5)
!1453 = distinct !DILexicalBlock(scope: !1448, file: !120, line: 33, column: 16)
!1454 = !DILocalVariable(name: "tmp___0", scope: !1423, file: !120, line: 33, type: !23)
!1455 = !DILocation(line: 35, column: 9, scope: !1456)
!1456 = distinct !DILexicalBlock(scope: !1453, file: !120, line: 35, column: 9)
!1457 = !DILocation(line: 35, column: 9, scope: !1453)
!1458 = !DILocation(line: 37, column: 13, scope: !1459)
!1459 = distinct !DILexicalBlock(scope: !1460, file: !120, line: 37, column: 7)
!1460 = distinct !DILexicalBlock(scope: !1461, file: !120, line: 36, column: 7)
!1461 = distinct !DILexicalBlock(scope: !1456, file: !120, line: 35, column: 18)
!1462 = !DILocalVariable(name: "tmp", scope: !1423, file: !120, line: 32, type: !23)
!1463 = !DILocation(line: 37, column: 11, scope: !1464)
!1464 = distinct !DILexicalBlock(scope: !1461, file: !120, line: 37, column: 11)
!1465 = !DILocation(line: 37, column: 11, scope: !1461)
!1466 = !DILocation(line: 41, column: 42, scope: !1467)
!1467 = distinct !DILexicalBlock(scope: !1468, file: !120, line: 39, column: 9)
!1468 = distinct !DILexicalBlock(scope: !1469, file: !120, line: 38, column: 9)
!1469 = distinct !DILexicalBlock(scope: !1464, file: !120, line: 37, column: 16)
!1470 = !DILocation(line: 41, column: 9, scope: !1467)
!1471 = !DILocation(line: 42, column: 9, scope: !1472)
!1472 = distinct !DILexicalBlock(scope: !1468, file: !120, line: 44, column: 9)
!1473 = !DILocation(line: 38, column: 9, scope: !1474)
!1474 = distinct !DILexicalBlock(scope: !1475, file: !120, line: 47, column: 9)
!1475 = distinct !DILexicalBlock(scope: !1476, file: !120, line: 46, column: 9)
!1476 = distinct !DILexicalBlock(scope: !1464, file: !120, line: 45, column: 14)
!1477 = !DILocation(line: 42, column: 5, scope: !1461)
!1478 = !DILocation(line: 36, column: 7, scope: !1479)
!1479 = distinct !DILexicalBlock(scope: !1480, file: !120, line: 44, column: 7)
!1480 = distinct !DILexicalBlock(scope: !1481, file: !120, line: 43, column: 7)
!1481 = distinct !DILexicalBlock(scope: !1456, file: !120, line: 42, column: 12)
!1482 = !DILocation(line: 40, column: 3, scope: !1453)
!1483 = !DILocation(line: 34, column: 5, scope: !1484)
!1484 = distinct !DILexicalBlock(scope: !1485, file: !120, line: 42, column: 5)
!1485 = distinct !DILexicalBlock(scope: !1486, file: !120, line: 41, column: 5)
!1486 = distinct !DILexicalBlock(scope: !1448, file: !120, line: 40, column: 10)
!1487 = !DILocation(line: 44, column: 3, scope: !1445)
!1488 = distinct !DISubprogram(name: "maybe_label", scope: !120, file: !120, line: 140, type: !753, scopeLine: 141, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !124)
!1489 = !DILocalVariable(name: "b", arg: 1, scope: !1488, file: !120, line: 140, type: !80)
!1490 = !DILocation(line: 0, scope: !1488)
!1491 = !DILocalVariable(name: "__cil_tmp3", scope: !1488, file: !120, line: 143, type: !14)
!1492 = !DILocation(line: 143, column: 9, scope: !1488)
!1493 = !DILocalVariable(name: "__cil_tmp4", scope: !1488, file: !120, line: 144, type: !14)
!1494 = !DILocation(line: 144, column: 9, scope: !1488)
!1495 = !DILocation(line: 144, column: 7, scope: !1496)
!1496 = distinct !DILexicalBlock(scope: !1497, file: !120, line: 148, column: 3)
!1497 = distinct !DILexicalBlock(scope: !1498, file: !120, line: 147, column: 3)
!1498 = distinct !DILexicalBlock(scope: !1488, file: !120, line: 146, column: 3)
!1499 = !DILocalVariable(name: "s", scope: !1488, file: !120, line: 142, type: !78)
!1500 = !DILocation(line: 144, column: 7, scope: !1501)
!1501 = distinct !DILexicalBlock(scope: !1498, file: !120, line: 144, column: 7)
!1502 = !DILocation(line: 144, column: 7, scope: !1498)
!1503 = !DILocation(line: 145, column: 5, scope: !1504)
!1504 = distinct !DILexicalBlock(scope: !1505, file: !120, line: 146, column: 5)
!1505 = distinct !DILexicalBlock(scope: !1506, file: !120, line: 145, column: 5)
!1506 = distinct !DILexicalBlock(scope: !1501, file: !120, line: 144, column: 10)
!1507 = !DILocation(line: 148, column: 3, scope: !1506)
!1508 = !DILocation(line: 146, column: 3, scope: !1498)
!1509 = distinct !DISubprogram(name: "get_bookchapter", scope: !120, file: !120, line: 327, type: !1510, scopeLine: 328, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !124)
!1510 = !DISubroutineType(types: !1511)
!1511 = !{!23, !80, !23}
!1512 = !DILocalVariable(name: "b", arg: 1, scope: !1509, file: !120, line: 327, type: !80)
!1513 = !DILocation(line: 0, scope: !1509)
!1514 = !DILocalVariable(name: "paraenter", arg: 2, scope: !1509, file: !120, line: 327, type: !23)
!1515 = !DILocalVariable(name: "__cil_tmp15", scope: !1509, file: !120, line: 341, type: !14)
!1516 = !DILocation(line: 341, column: 9, scope: !1509)
!1517 = !DILocalVariable(name: "__cil_tmp16", scope: !1509, file: !120, line: 342, type: !14)
!1518 = !DILocation(line: 342, column: 9, scope: !1509)
!1519 = !DILocalVariable(name: "__cil_tmp17", scope: !1509, file: !120, line: 343, type: !14)
!1520 = !DILocation(line: 343, column: 9, scope: !1509)
!1521 = !DILocalVariable(name: "__cil_tmp18", scope: !1509, file: !120, line: 344, type: !14)
!1522 = !DILocation(line: 344, column: 9, scope: !1509)
!1523 = !DILocalVariable(name: "__cil_tmp19", scope: !1509, file: !120, line: 345, type: !14)
!1524 = !DILocation(line: 345, column: 9, scope: !1509)
!1525 = !DILocalVariable(name: "__cil_tmp20", scope: !1509, file: !120, line: 346, type: !14)
!1526 = !DILocation(line: 346, column: 9, scope: !1509)
!1527 = !DILocalVariable(name: "__cil_tmp21", scope: !1509, file: !120, line: 347, type: !14)
!1528 = !DILocation(line: 347, column: 9, scope: !1509)
!1529 = !DILocalVariable(name: "__cil_tmp22", scope: !1509, file: !120, line: 348, type: !14)
!1530 = !DILocation(line: 348, column: 9, scope: !1509)
!1531 = !DILocalVariable(name: "__cil_tmp23", scope: !1509, file: !120, line: 349, type: !14)
!1532 = !DILocation(line: 349, column: 9, scope: !1509)
!1533 = !DILocalVariable(name: "__cil_tmp24", scope: !1509, file: !120, line: 350, type: !14)
!1534 = !DILocation(line: 350, column: 9, scope: !1509)
!1535 = !DILocalVariable(name: "__cil_tmp25", scope: !1509, file: !120, line: 351, type: !14)
!1536 = !DILocation(line: 351, column: 9, scope: !1509)
!1537 = !DILocalVariable(name: "__cil_tmp26", scope: !1509, file: !120, line: 352, type: !14)
!1538 = !DILocation(line: 352, column: 9, scope: !1509)
!1539 = !DILocalVariable(name: "__cil_tmp27", scope: !1509, file: !120, line: 353, type: !14)
!1540 = !DILocation(line: 353, column: 9, scope: !1509)
!1541 = !DILocalVariable(name: "__cil_tmp28", scope: !1509, file: !120, line: 354, type: !14)
!1542 = !DILocation(line: 354, column: 9, scope: !1509)
!1543 = !DILocalVariable(name: "__cil_tmp29", scope: !1509, file: !120, line: 355, type: !14)
!1544 = !DILocation(line: 355, column: 9, scope: !1509)
!1545 = !DILocalVariable(name: "__cil_tmp30", scope: !1509, file: !120, line: 356, type: !14)
!1546 = !DILocation(line: 356, column: 9, scope: !1509)
!1547 = !DILocalVariable(name: "__cil_tmp31", scope: !1509, file: !120, line: 357, type: !14)
!1548 = !DILocation(line: 357, column: 9, scope: !1509)
!1549 = !DILocalVariable(name: "__cil_tmp32", scope: !1509, file: !120, line: 358, type: !14)
!1550 = !DILocation(line: 358, column: 9, scope: !1509)
!1551 = !DILocalVariable(name: "__cil_tmp33", scope: !1509, file: !120, line: 359, type: !14)
!1552 = !DILocation(line: 359, column: 9, scope: !1509)
!1553 = !DILocalVariable(name: "__cil_tmp34", scope: !1509, file: !120, line: 360, type: !14)
!1554 = !DILocation(line: 360, column: 9, scope: !1509)
!1555 = !DILocalVariable(name: "__cil_tmp35", scope: !1509, file: !120, line: 361, type: !14)
!1556 = !DILocation(line: 361, column: 9, scope: !1509)
!1557 = !DILocation(line: 329, column: 3, scope: !1558)
!1558 = distinct !DILexicalBlock(scope: !1559, file: !120, line: 365, column: 3)
!1559 = distinct !DILexicalBlock(scope: !1560, file: !120, line: 364, column: 3)
!1560 = distinct !DILexicalBlock(scope: !1509, file: !120, line: 363, column: 3)
!1561 = !DILocation(line: 329, column: 13, scope: !1558)
!1562 = !DILocation(line: 329, column: 11, scope: !1563)
!1563 = distinct !DILexicalBlock(scope: !1564, file: !120, line: 329, column: 9)
!1564 = distinct !DILexicalBlock(scope: !1558, file: !120, line: 329, column: 13)
!1565 = !DILocation(line: 329, column: 9, scope: !1564)
!1566 = !DILocation(line: 329, column: 7, scope: !1567)
!1567 = distinct !DILexicalBlock(scope: !1563, file: !120, line: 329, column: 14)
!1568 = !DILocation(line: 331, column: 27, scope: !1569)
!1569 = distinct !DILexicalBlock(scope: !1564, file: !120, line: 331, column: 9)
!1570 = !DILocation(line: 331, column: 40, scope: !1569)
!1571 = !DILocation(line: 331, column: 9, scope: !1564)
!1572 = !DILocation(line: 333, column: 40, scope: !1573)
!1573 = distinct !DILexicalBlock(scope: !1574, file: !120, line: 333, column: 7)
!1574 = distinct !DILexicalBlock(scope: !1575, file: !120, line: 332, column: 7)
!1575 = distinct !DILexicalBlock(scope: !1569, file: !120, line: 331, column: 47)
!1576 = !DILocation(line: 333, column: 7, scope: !1573)
!1577 = !DILocation(line: 334, column: 7, scope: !1578)
!1578 = distinct !DILexicalBlock(scope: !1574, file: !120, line: 335, column: 7)
!1579 = !DILocation(line: 336, column: 56, scope: !1580)
!1580 = distinct !DILexicalBlock(scope: !1581, file: !120, line: 339, column: 7)
!1581 = distinct !DILexicalBlock(scope: !1582, file: !120, line: 338, column: 7)
!1582 = distinct !DILexicalBlock(scope: !1569, file: !120, line: 337, column: 12)
!1583 = !DILocation(line: 336, column: 17, scope: !1580)
!1584 = !DILocalVariable(name: "tmp___9", scope: !1509, file: !120, line: 339, type: !23)
!1585 = !DILocation(line: 336, column: 11, scope: !1586)
!1586 = distinct !DILexicalBlock(scope: !1582, file: !120, line: 336, column: 11)
!1587 = !DILocation(line: 336, column: 11, scope: !1582)
!1588 = !DILocation(line: 336, column: 61, scope: !1589)
!1589 = distinct !DILexicalBlock(scope: !1590, file: !120, line: 338, column: 9)
!1590 = distinct !DILexicalBlock(scope: !1591, file: !120, line: 337, column: 9)
!1591 = distinct !DILexicalBlock(scope: !1586, file: !120, line: 336, column: 20)
!1592 = !DILocation(line: 336, column: 20, scope: !1589)
!1593 = !DILocalVariable(name: "tmp___10", scope: !1509, file: !120, line: 340, type: !23)
!1594 = !DILocation(line: 336, column: 13, scope: !1595)
!1595 = distinct !DILexicalBlock(scope: !1591, file: !120, line: 336, column: 13)
!1596 = !DILocation(line: 336, column: 13, scope: !1591)
!1597 = !DILocation(line: 345, column: 60, scope: !1598)
!1598 = distinct !DILexicalBlock(scope: !1599, file: !120, line: 338, column: 11)
!1599 = distinct !DILexicalBlock(scope: !1600, file: !120, line: 337, column: 11)
!1600 = distinct !DILexicalBlock(scope: !1595, file: !120, line: 336, column: 23)
!1601 = !DILocation(line: 345, column: 21, scope: !1598)
!1602 = !DILocalVariable(name: "tmp___8", scope: !1509, file: !120, line: 338, type: !23)
!1603 = !DILocation(line: 345, column: 15, scope: !1604)
!1604 = distinct !DILexicalBlock(scope: !1600, file: !120, line: 345, column: 15)
!1605 = !DILocation(line: 345, column: 15, scope: !1600)
!1606 = !DILocation(line: 353, column: 62, scope: !1607)
!1607 = distinct !DILexicalBlock(scope: !1608, file: !120, line: 347, column: 13)
!1608 = distinct !DILexicalBlock(scope: !1609, file: !120, line: 346, column: 13)
!1609 = distinct !DILexicalBlock(scope: !1604, file: !120, line: 345, column: 24)
!1610 = !DILocation(line: 353, column: 23, scope: !1607)
!1611 = !DILocalVariable(name: "tmp___7", scope: !1509, file: !120, line: 337, type: !23)
!1612 = !DILocation(line: 353, column: 17, scope: !1613)
!1613 = distinct !DILexicalBlock(scope: !1609, file: !120, line: 353, column: 17)
!1614 = !DILocation(line: 353, column: 17, scope: !1609)
!1615 = !DILocation(line: 361, column: 64, scope: !1616)
!1616 = distinct !DILexicalBlock(scope: !1617, file: !120, line: 355, column: 15)
!1617 = distinct !DILexicalBlock(scope: !1618, file: !120, line: 354, column: 15)
!1618 = distinct !DILexicalBlock(scope: !1613, file: !120, line: 353, column: 26)
!1619 = !DILocation(line: 361, column: 25, scope: !1616)
!1620 = !DILocalVariable(name: "tmp___6", scope: !1509, file: !120, line: 336, type: !23)
!1621 = !DILocation(line: 361, column: 19, scope: !1622)
!1622 = distinct !DILexicalBlock(scope: !1618, file: !120, line: 361, column: 19)
!1623 = !DILocation(line: 361, column: 19, scope: !1618)
!1624 = !DILocation(line: 364, column: 27, scope: !1625)
!1625 = distinct !DILexicalBlock(scope: !1626, file: !120, line: 363, column: 17)
!1626 = distinct !DILexicalBlock(scope: !1627, file: !120, line: 362, column: 17)
!1627 = distinct !DILexicalBlock(scope: !1622, file: !120, line: 361, column: 28)
!1628 = !DILocalVariable(name: "tmp___5", scope: !1509, file: !120, line: 335, type: !23)
!1629 = !DILocation(line: 364, column: 23, scope: !1630)
!1630 = distinct !DILexicalBlock(scope: !1627, file: !120, line: 364, column: 21)
!1631 = !DILocation(line: 364, column: 21, scope: !1627)
!1632 = !DILocation(line: 367, column: 67, scope: !1633)
!1633 = distinct !DILexicalBlock(scope: !1634, file: !120, line: 366, column: 19)
!1634 = distinct !DILexicalBlock(scope: !1635, file: !120, line: 365, column: 19)
!1635 = distinct !DILexicalBlock(scope: !1630, file: !120, line: 364, column: 32)
!1636 = !DILocation(line: 367, column: 29, scope: !1633)
!1637 = !DILocalVariable(name: "tmp___4", scope: !1509, file: !120, line: 334, type: !23)
!1638 = !DILocation(line: 367, column: 23, scope: !1639)
!1639 = distinct !DILexicalBlock(scope: !1635, file: !120, line: 367, column: 23)
!1640 = !DILocation(line: 367, column: 23, scope: !1635)
!1641 = !DILocation(line: 373, column: 77, scope: !1642)
!1642 = distinct !DILexicalBlock(scope: !1643, file: !120, line: 369, column: 21)
!1643 = distinct !DILexicalBlock(scope: !1644, file: !120, line: 368, column: 21)
!1644 = distinct !DILexicalBlock(scope: !1639, file: !120, line: 367, column: 32)
!1645 = !DILocation(line: 373, column: 31, scope: !1642)
!1646 = !DILocalVariable(name: "tmp___3", scope: !1509, file: !120, line: 333, type: !23)
!1647 = !DILocation(line: 373, column: 25, scope: !1648)
!1648 = distinct !DILexicalBlock(scope: !1644, file: !120, line: 373, column: 25)
!1649 = !DILocation(line: 373, column: 25, scope: !1644)
!1650 = !DILocation(line: 377, column: 72, scope: !1651)
!1651 = distinct !DILexicalBlock(scope: !1652, file: !120, line: 375, column: 23)
!1652 = distinct !DILexicalBlock(scope: !1653, file: !120, line: 374, column: 23)
!1653 = distinct !DILexicalBlock(scope: !1648, file: !120, line: 373, column: 34)
!1654 = !DILocation(line: 377, column: 33, scope: !1651)
!1655 = !DILocalVariable(name: "tmp___2", scope: !1509, file: !120, line: 332, type: !23)
!1656 = !DILocation(line: 377, column: 27, scope: !1657)
!1657 = distinct !DILexicalBlock(scope: !1653, file: !120, line: 377, column: 27)
!1658 = !DILocation(line: 377, column: 27, scope: !1653)
!1659 = !DILocation(line: 383, column: 58, scope: !1660)
!1660 = distinct !DILexicalBlock(scope: !1661, file: !120, line: 379, column: 25)
!1661 = distinct !DILexicalBlock(scope: !1662, file: !120, line: 378, column: 25)
!1662 = distinct !DILexicalBlock(scope: !1657, file: !120, line: 377, column: 36)
!1663 = !DILocation(line: 384, column: 36, scope: !1660)
!1664 = !DILocation(line: 383, column: 25, scope: !1660)
!1665 = !DILocation(line: 384, column: 46, scope: !1666)
!1666 = distinct !DILexicalBlock(scope: !1661, file: !120, line: 386, column: 25)
!1667 = !DILocation(line: 384, column: 25, scope: !1666)
!1668 = !DILocation(line: 387, column: 23, scope: !1662)
!1669 = !DILocation(line: 379, column: 25, scope: !1670)
!1670 = distinct !DILexicalBlock(scope: !1671, file: !120, line: 389, column: 25)
!1671 = distinct !DILexicalBlock(scope: !1672, file: !120, line: 388, column: 25)
!1672 = distinct !DILexicalBlock(scope: !1657, file: !120, line: 387, column: 30)
!1673 = !DILocation(line: 383, column: 21, scope: !1653)
!1674 = !DILocation(line: 375, column: 43, scope: !1675)
!1675 = distinct !DILexicalBlock(scope: !1676, file: !120, line: 385, column: 23)
!1676 = distinct !DILexicalBlock(scope: !1677, file: !120, line: 384, column: 23)
!1677 = distinct !DILexicalBlock(scope: !1648, file: !120, line: 383, column: 28)
!1678 = !DILocation(line: 375, column: 23, scope: !1675)
!1679 = !DILocation(line: 379, column: 19, scope: !1644)
!1680 = !DILocation(line: 369, column: 25, scope: !1681)
!1681 = distinct !DILexicalBlock(scope: !1682, file: !120, line: 369, column: 25)
!1682 = distinct !DILexicalBlock(scope: !1639, file: !120, line: 379, column: 26)
!1683 = !DILocation(line: 369, column: 25, scope: !1682)
!1684 = !DILocation(line: 369, column: 23, scope: !1685)
!1685 = distinct !DILexicalBlock(scope: !1686, file: !120, line: 371, column: 23)
!1686 = distinct !DILexicalBlock(scope: !1687, file: !120, line: 370, column: 23)
!1687 = distinct !DILexicalBlock(scope: !1681, file: !120, line: 369, column: 36)
!1688 = !DILocation(line: 372, column: 21, scope: !1687)
!1689 = !DILocation(line: 370, column: 37, scope: !1690)
!1690 = distinct !DILexicalBlock(scope: !1691, file: !120, line: 374, column: 21)
!1691 = distinct !DILexicalBlock(scope: !1682, file: !120, line: 373, column: 21)
!1692 = !DILocation(line: 370, column: 21, scope: !1690)
!1693 = !DILocation(line: 371, column: 25, scope: !1694)
!1694 = distinct !DILexicalBlock(scope: !1682, file: !120, line: 371, column: 25)
!1695 = !DILocation(line: 371, column: 25, scope: !1682)
!1696 = !DILocation(line: 371, column: 23, scope: !1697)
!1697 = distinct !DILexicalBlock(scope: !1698, file: !120, line: 373, column: 23)
!1698 = distinct !DILexicalBlock(scope: !1699, file: !120, line: 372, column: 23)
!1699 = distinct !DILexicalBlock(scope: !1694, file: !120, line: 371, column: 36)
!1700 = !DILocation(line: 374, column: 21, scope: !1699)
!1701 = !DILocation(line: 376, column: 17, scope: !1635)
!1702 = !DILocation(line: 377, column: 15, scope: !1627)
!1703 = !DILocation(line: 378, column: 13, scope: !1618)
!1704 = !DILocation(line: 355, column: 15, scope: !1705)
!1705 = distinct !DILexicalBlock(scope: !1706, file: !120, line: 380, column: 15)
!1706 = distinct !DILexicalBlock(scope: !1707, file: !120, line: 379, column: 15)
!1707 = distinct !DILexicalBlock(scope: !1613, file: !120, line: 378, column: 20)
!1708 = !DILocation(line: 356, column: 57, scope: !1709)
!1709 = distinct !DILexicalBlock(scope: !1706, file: !120, line: 357, column: 15)
!1710 = !DILocation(line: 356, column: 25, scope: !1709)
!1711 = !DILocalVariable(name: "tmp___1", scope: !1509, file: !120, line: 331, type: !14)
!1712 = !DILocation(line: 356, column: 15, scope: !1713)
!1713 = distinct !DILexicalBlock(scope: !1706, file: !120, line: 358, column: 15)
!1714 = !DILocation(line: 357, column: 15, scope: !1715)
!1715 = distinct !DILexicalBlock(scope: !1706, file: !120, line: 358, column: 15)
!1716 = !DILocation(line: 358, column: 15, scope: !1717)
!1717 = distinct !DILexicalBlock(scope: !1706, file: !120, line: 359, column: 15)
!1718 = !DILocation(line: 359, column: 34, scope: !1719)
!1719 = distinct !DILexicalBlock(scope: !1706, file: !120, line: 360, column: 15)
!1720 = !DILocation(line: 359, column: 15, scope: !1719)
!1721 = !DILocation(line: 363, column: 11, scope: !1609)
!1722 = !DILocation(line: 347, column: 13, scope: !1723)
!1723 = distinct !DILexicalBlock(scope: !1724, file: !120, line: 365, column: 13)
!1724 = distinct !DILexicalBlock(scope: !1725, file: !120, line: 364, column: 13)
!1725 = distinct !DILexicalBlock(scope: !1604, file: !120, line: 363, column: 18)
!1726 = !DILocation(line: 348, column: 55, scope: !1727)
!1727 = distinct !DILexicalBlock(scope: !1724, file: !120, line: 349, column: 13)
!1728 = !DILocation(line: 348, column: 23, scope: !1727)
!1729 = !DILocalVariable(name: "tmp___0", scope: !1509, file: !120, line: 330, type: !14)
!1730 = !DILocation(line: 348, column: 13, scope: !1731)
!1731 = distinct !DILexicalBlock(scope: !1724, file: !120, line: 350, column: 13)
!1732 = !DILocation(line: 349, column: 13, scope: !1733)
!1733 = distinct !DILexicalBlock(scope: !1724, file: !120, line: 350, column: 13)
!1734 = !DILocation(line: 350, column: 13, scope: !1735)
!1735 = distinct !DILexicalBlock(scope: !1724, file: !120, line: 351, column: 13)
!1736 = !DILocation(line: 351, column: 32, scope: !1737)
!1737 = distinct !DILexicalBlock(scope: !1724, file: !120, line: 352, column: 13)
!1738 = !DILocation(line: 351, column: 13, scope: !1737)
!1739 = !DILocation(line: 355, column: 9, scope: !1600)
!1740 = !DILocation(line: 355, column: 16, scope: !1595)
!1741 = !DILocation(line: 339, column: 11, scope: !1742)
!1742 = distinct !DILexicalBlock(scope: !1743, file: !120, line: 358, column: 11)
!1743 = distinct !DILexicalBlock(scope: !1744, file: !120, line: 357, column: 11)
!1744 = distinct !DILexicalBlock(scope: !1595, file: !120, line: 355, column: 16)
!1745 = !DILocation(line: 340, column: 49, scope: !1746)
!1746 = distinct !DILexicalBlock(scope: !1743, file: !120, line: 341, column: 11)
!1747 = !DILocation(line: 340, column: 17, scope: !1746)
!1748 = !DILocalVariable(name: "tmp", scope: !1509, file: !120, line: 329, type: !14)
!1749 = !DILocation(line: 340, column: 11, scope: !1750)
!1750 = distinct !DILexicalBlock(scope: !1743, file: !120, line: 342, column: 11)
!1751 = !DILocation(line: 341, column: 11, scope: !1752)
!1752 = distinct !DILexicalBlock(scope: !1743, file: !120, line: 342, column: 11)
!1753 = !DILocation(line: 342, column: 11, scope: !1754)
!1754 = distinct !DILexicalBlock(scope: !1743, file: !120, line: 343, column: 11)
!1755 = !DILocation(line: 343, column: 30, scope: !1756)
!1756 = distinct !DILexicalBlock(scope: !1743, file: !120, line: 344, column: 11)
!1757 = !DILocation(line: 343, column: 11, scope: !1756)
!1758 = !DILocation(line: 347, column: 7, scope: !1591)
!1759 = !DILocation(line: 336, column: 9, scope: !1760)
!1760 = distinct !DILexicalBlock(scope: !1586, file: !120, line: 347, column: 14)
!1761 = !DILocation(line: 387, column: 12, scope: !1564)
!1762 = distinct !{!1762, !1557, !1763}
!1763 = !DILocation(line: 388, column: 3, scope: !1558)
!1764 = !DILocation(line: 390, column: 3, scope: !1558)
!1765 = !DILocation(line: 389, column: 3, scope: !1560)
!1766 = distinct !DISubprogram(name: "getatrstring", scope: !120, file: !120, line: 125, type: !1401, scopeLine: 126, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !124)
!1767 = !DILocalVariable(name: "e", arg: 1, scope: !1766, file: !120, line: 125, type: !80)
!1768 = !DILocation(line: 0, scope: !1766)
!1769 = !DILocalVariable(name: "attr", arg: 2, scope: !1766, file: !120, line: 125, type: !78)
!1770 = !DILocation(line: 127, column: 10, scope: !1771)
!1771 = distinct !DILexicalBlock(scope: !1766, file: !120, line: 130, column: 3)
!1772 = !DILocalVariable(name: "a", scope: !1766, file: !120, line: 127, type: !87)
!1773 = !DILocation(line: 128, column: 3, scope: !1774)
!1774 = distinct !DILexicalBlock(scope: !1775, file: !120, line: 129, column: 3)
!1775 = distinct !DILexicalBlock(scope: !1771, file: !120, line: 128, column: 3)
!1776 = !DILocation(line: 0, scope: !1771)
!1777 = !DILocation(line: 128, column: 13, scope: !1774)
!1778 = !DILocation(line: 128, column: 11, scope: !1779)
!1779 = distinct !DILexicalBlock(scope: !1780, file: !120, line: 128, column: 9)
!1780 = distinct !DILexicalBlock(scope: !1774, file: !120, line: 128, column: 13)
!1781 = !DILocation(line: 128, column: 9, scope: !1780)
!1782 = !DILocation(line: 128, column: 7, scope: !1783)
!1783 = distinct !DILexicalBlock(scope: !1779, file: !120, line: 128, column: 14)
!1784 = !DILocation(line: 130, column: 37, scope: !1785)
!1785 = distinct !DILexicalBlock(scope: !1786, file: !120, line: 131, column: 5)
!1786 = distinct !DILexicalBlock(scope: !1780, file: !120, line: 130, column: 5)
!1787 = !DILocation(line: 130, column: 11, scope: !1785)
!1788 = !DILocalVariable(name: "tmp", scope: !1766, file: !120, line: 128, type: !23)
!1789 = !DILocation(line: 130, column: 11, scope: !1790)
!1790 = distinct !DILexicalBlock(scope: !1780, file: !120, line: 130, column: 9)
!1791 = !DILocation(line: 130, column: 9, scope: !1780)
!1792 = !DILocation(line: 131, column: 34, scope: !1793)
!1793 = distinct !DILexicalBlock(scope: !1790, file: !120, line: 130, column: 16)
!1794 = !DILocation(line: 131, column: 7, scope: !1793)
!1795 = !DILocation(line: 132, column: 12, scope: !1780)
!1796 = distinct !{!1796, !1773, !1797}
!1797 = !DILocation(line: 133, column: 3, scope: !1774)
!1798 = !DILocation(line: 135, column: 3, scope: !1774)
!1799 = !DILocation(line: 134, column: 3, scope: !1771)
!1800 = !DILocation(line: 136, column: 1, scope: !1766)
!1801 = distinct !DISubprogram(name: "get_bothtypes", scope: !120, file: !120, line: 213, type: !1510, scopeLine: 214, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !124)
!1802 = !DILocalVariable(name: "b", arg: 1, scope: !1801, file: !120, line: 213, type: !80)
!1803 = !DILocation(line: 0, scope: !1801)
!1804 = !DILocalVariable(name: "inlinetype", arg: 2, scope: !1801, file: !120, line: 213, type: !23)
!1805 = !DILocalVariable(name: "__cil_tmp4", scope: !1801, file: !120, line: 216, type: !14)
!1806 = !DILocation(line: 216, column: 9, scope: !1801)
!1807 = !DILocalVariable(name: "__cil_tmp5", scope: !1801, file: !120, line: 217, type: !14)
!1808 = !DILocation(line: 217, column: 9, scope: !1801)
!1809 = !DILocalVariable(name: "__cil_tmp6", scope: !1801, file: !120, line: 218, type: !14)
!1810 = !DILocation(line: 218, column: 9, scope: !1801)
!1811 = !DILocalVariable(name: "__cil_tmp7", scope: !1801, file: !120, line: 219, type: !14)
!1812 = !DILocation(line: 219, column: 9, scope: !1801)
!1813 = !DILocalVariable(name: "__cil_tmp8", scope: !1801, file: !120, line: 220, type: !14)
!1814 = !DILocation(line: 220, column: 9, scope: !1801)
!1815 = !DILocation(line: 215, column: 49, scope: !1816)
!1816 = distinct !DILexicalBlock(scope: !1817, file: !120, line: 224, column: 3)
!1817 = distinct !DILexicalBlock(scope: !1818, file: !120, line: 223, column: 3)
!1818 = distinct !DILexicalBlock(scope: !1801, file: !120, line: 222, column: 3)
!1819 = !DILocation(line: 215, column: 9, scope: !1816)
!1820 = !DILocalVariable(name: "tmp", scope: !1801, file: !120, line: 215, type: !23)
!1821 = !DILocation(line: 215, column: 7, scope: !1822)
!1822 = distinct !DILexicalBlock(scope: !1818, file: !120, line: 215, column: 7)
!1823 = !DILocation(line: 215, column: 7, scope: !1818)
!1824 = !DILocation(line: 226, column: 5, scope: !1825)
!1825 = distinct !DILexicalBlock(scope: !1822, file: !120, line: 215, column: 12)
!1826 = !DILocation(line: 217, column: 11, scope: !1827)
!1827 = distinct !DILexicalBlock(scope: !1828, file: !120, line: 217, column: 9)
!1828 = distinct !DILexicalBlock(scope: !1822, file: !120, line: 227, column: 10)
!1829 = !DILocation(line: 217, column: 9, scope: !1828)
!1830 = !DILocation(line: 218, column: 7, scope: !1831)
!1831 = distinct !DILexicalBlock(scope: !1832, file: !120, line: 219, column: 7)
!1832 = distinct !DILexicalBlock(scope: !1833, file: !120, line: 218, column: 7)
!1833 = distinct !DILexicalBlock(scope: !1827, file: !120, line: 217, column: 23)
!1834 = !DILocation(line: 221, column: 5, scope: !1833)
!1835 = !DILocation(line: 219, column: 5, scope: !1836)
!1836 = distinct !DILexicalBlock(scope: !1837, file: !120, line: 223, column: 5)
!1837 = distinct !DILexicalBlock(scope: !1828, file: !120, line: 222, column: 5)
!1838 = !DILocation(line: 220, column: 21, scope: !1839)
!1839 = distinct !DILexicalBlock(scope: !1837, file: !120, line: 221, column: 5)
!1840 = !DILocation(line: 220, column: 5, scope: !1839)
!1841 = !DILocation(line: 221, column: 5, scope: !1842)
!1842 = distinct !DILexicalBlock(scope: !1837, file: !120, line: 222, column: 5)
!1843 = !DILocation(line: 222, column: 11, scope: !1844)
!1844 = distinct !DILexicalBlock(scope: !1828, file: !120, line: 222, column: 9)
!1845 = !DILocation(line: 222, column: 9, scope: !1828)
!1846 = !DILocation(line: 223, column: 7, scope: !1847)
!1847 = distinct !DILexicalBlock(scope: !1848, file: !120, line: 224, column: 7)
!1848 = distinct !DILexicalBlock(scope: !1849, file: !120, line: 223, column: 7)
!1849 = distinct !DILexicalBlock(scope: !1844, file: !120, line: 222, column: 23)
!1850 = !DILocation(line: 226, column: 5, scope: !1849)
!1851 = !DILocation(line: 227, column: 3, scope: !1818)
!1852 = !DILocation(line: 0, scope: !1818)
!1853 = !DILocation(line: 229, column: 1, scope: !1801)
!1854 = distinct !DISubprogram(name: "get_table", scope: !120, file: !120, line: 149, type: !753, scopeLine: 150, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !124)
!1855 = !DILocalVariable(name: "b_parent", arg: 1, scope: !1854, file: !120, line: 149, type: !80)
!1856 = !DILocation(line: 0, scope: !1854)
!1857 = !DILocalVariable(name: "__cil_tmp12", scope: !1854, file: !120, line: 161, type: !14)
!1858 = !DILocation(line: 161, column: 9, scope: !1854)
!1859 = !DILocalVariable(name: "__cil_tmp13", scope: !1854, file: !120, line: 162, type: !14)
!1860 = !DILocation(line: 162, column: 9, scope: !1854)
!1861 = !DILocalVariable(name: "__cil_tmp14", scope: !1854, file: !120, line: 163, type: !14)
!1862 = !DILocation(line: 163, column: 9, scope: !1854)
!1863 = !DILocalVariable(name: "__cil_tmp15", scope: !1854, file: !120, line: 164, type: !14)
!1864 = !DILocation(line: 164, column: 9, scope: !1854)
!1865 = !DILocalVariable(name: "__cil_tmp16", scope: !1854, file: !120, line: 165, type: !14)
!1866 = !DILocation(line: 165, column: 9, scope: !1854)
!1867 = !DILocalVariable(name: "__cil_tmp17", scope: !1854, file: !120, line: 166, type: !14)
!1868 = !DILocation(line: 166, column: 9, scope: !1854)
!1869 = !DILocalVariable(name: "__cil_tmp18", scope: !1854, file: !120, line: 167, type: !14)
!1870 = !DILocation(line: 167, column: 9, scope: !1854)
!1871 = !DILocalVariable(name: "__cil_tmp19", scope: !1854, file: !120, line: 168, type: !14)
!1872 = !DILocation(line: 168, column: 9, scope: !1854)
!1873 = !DILocalVariable(name: "__cil_tmp20", scope: !1854, file: !120, line: 169, type: !14)
!1874 = !DILocation(line: 169, column: 9, scope: !1854)
!1875 = !DILocalVariable(name: "__cil_tmp21", scope: !1854, file: !120, line: 170, type: !14)
!1876 = !DILocation(line: 170, column: 9, scope: !1854)
!1877 = !DILocalVariable(name: "__cil_tmp22", scope: !1854, file: !120, line: 171, type: !14)
!1878 = !DILocation(line: 171, column: 9, scope: !1854)
!1879 = !DILocation(line: 154, column: 17, scope: !1880)
!1880 = distinct !DILexicalBlock(scope: !1881, file: !120, line: 174, column: 3)
!1881 = distinct !DILexicalBlock(scope: !1854, file: !120, line: 173, column: 3)
!1882 = !DILocalVariable(name: "b", scope: !1854, file: !120, line: 155, type: !80)
!1883 = !DILocation(line: 155, column: 9, scope: !1884)
!1884 = distinct !DILexicalBlock(scope: !1880, file: !120, line: 155, column: 3)
!1885 = !DILocalVariable(name: "tmp", scope: !1854, file: !120, line: 157, type: !80)
!1886 = !DILocation(line: 155, column: 13, scope: !1887)
!1887 = distinct !DILexicalBlock(scope: !1880, file: !120, line: 157, column: 3)
!1888 = !DILocalVariable(name: "tmp___0", scope: !1854, file: !120, line: 158, type: !78)
!1889 = !DILocation(line: 155, column: 13, scope: !1890)
!1890 = distinct !DILexicalBlock(scope: !1880, file: !120, line: 157, column: 3)
!1891 = !DILocalVariable(name: "tmp___1", scope: !1854, file: !120, line: 159, type: !23)
!1892 = !DILocalVariable(name: "columns", scope: !1854, file: !120, line: 156, type: !23)
!1893 = !DILocation(line: 156, column: 13, scope: !1894)
!1894 = distinct !DILexicalBlock(scope: !1880, file: !120, line: 156, column: 3)
!1895 = !DILocalVariable(name: "tmp___2", scope: !1854, file: !120, line: 160, type: !14)
!1896 = !DILocation(line: 156, column: 3, scope: !1897)
!1897 = distinct !DILexicalBlock(scope: !1880, file: !120, line: 158, column: 3)
!1898 = !DILocation(line: 159, column: 3, scope: !1899)
!1899 = distinct !DILexicalBlock(scope: !1880, file: !120, line: 158, column: 3)
!1900 = !DILocation(line: 161, column: 14, scope: !1880)
!1901 = !DILocalVariable(name: "width", scope: !1854, file: !120, line: 152, type: !23)
!1902 = !DILocation(line: 162, column: 3, scope: !1903)
!1903 = distinct !DILexicalBlock(scope: !1880, file: !120, line: 162, column: 3)
!1904 = !DILocalVariable(name: "i", scope: !1854, file: !120, line: 151, type: !23)
!1905 = !DILocation(line: 163, column: 3, scope: !1906)
!1906 = distinct !DILexicalBlock(scope: !1907, file: !120, line: 166, column: 3)
!1907 = distinct !DILexicalBlock(scope: !1881, file: !120, line: 165, column: 3)
!1908 = !DILocation(line: 0, scope: !1881)
!1909 = !DILocation(line: 163, column: 13, scope: !1906)
!1910 = !DILocation(line: 163, column: 24, scope: !1911)
!1911 = distinct !DILexicalBlock(scope: !1912, file: !120, line: 163, column: 9)
!1912 = distinct !DILexicalBlock(scope: !1906, file: !120, line: 163, column: 13)
!1913 = !DILocation(line: 163, column: 14, scope: !1911)
!1914 = !DILocation(line: 163, column: 9, scope: !1912)
!1915 = !DILocation(line: 163, column: 7, scope: !1916)
!1916 = distinct !DILexicalBlock(scope: !1911, file: !120, line: 163, column: 30)
!1917 = !DILocation(line: 164, column: 5, scope: !1918)
!1918 = distinct !DILexicalBlock(scope: !1919, file: !120, line: 166, column: 5)
!1919 = distinct !DILexicalBlock(scope: !1912, file: !120, line: 165, column: 5)
!1920 = !DILocation(line: 163, column: 7, scope: !1919)
!1921 = distinct !{!1921, !1905, !1922}
!1922 = !DILocation(line: 165, column: 3, scope: !1906)
!1923 = !DILocation(line: 167, column: 3, scope: !1906)
!1924 = !DILocation(line: 165, column: 3, scope: !1925)
!1925 = distinct !DILexicalBlock(scope: !1926, file: !120, line: 171, column: 3)
!1926 = distinct !DILexicalBlock(scope: !1881, file: !120, line: 170, column: 3)
!1927 = !DILocation(line: 166, column: 9, scope: !1928)
!1928 = distinct !DILexicalBlock(scope: !1926, file: !120, line: 167, column: 3)
!1929 = !DILocalVariable(name: "row", scope: !1854, file: !120, line: 153, type: !80)
!1930 = !DILocation(line: 166, column: 3, scope: !1931)
!1931 = distinct !DILexicalBlock(scope: !1932, file: !120, line: 170, column: 3)
!1932 = distinct !DILexicalBlock(scope: !1881, file: !120, line: 169, column: 3)
!1933 = !DILocation(line: 166, column: 13, scope: !1931)
!1934 = !DILocation(line: 166, column: 11, scope: !1935)
!1935 = distinct !DILexicalBlock(scope: !1936, file: !120, line: 166, column: 9)
!1936 = distinct !DILexicalBlock(scope: !1931, file: !120, line: 166, column: 13)
!1937 = !DILocation(line: 166, column: 9, scope: !1936)
!1938 = !DILocation(line: 166, column: 7, scope: !1939)
!1939 = distinct !DILexicalBlock(scope: !1935, file: !120, line: 166, column: 16)
!1940 = !DILocation(line: 168, column: 18, scope: !1936)
!1941 = !DILocalVariable(name: "entry", scope: !1854, file: !120, line: 154, type: !80)
!1942 = !DILocation(line: 168, column: 5, scope: !1943)
!1943 = distinct !DILexicalBlock(scope: !1944, file: !120, line: 170, column: 5)
!1944 = distinct !DILexicalBlock(scope: !1936, file: !120, line: 169, column: 5)
!1945 = !DILocation(line: 0, scope: !1936)
!1946 = !DILocation(line: 168, column: 15, scope: !1943)
!1947 = !DILocation(line: 168, column: 13, scope: !1948)
!1948 = distinct !DILexicalBlock(scope: !1949, file: !120, line: 168, column: 11)
!1949 = distinct !DILexicalBlock(scope: !1943, file: !120, line: 168, column: 15)
!1950 = !DILocation(line: 168, column: 11, scope: !1949)
!1951 = !DILocation(line: 168, column: 9, scope: !1952)
!1952 = distinct !DILexicalBlock(scope: !1948, file: !120, line: 168, column: 20)
!1953 = !DILocation(line: 170, column: 27, scope: !1954)
!1954 = distinct !DILexicalBlock(scope: !1955, file: !120, line: 171, column: 7)
!1955 = distinct !DILexicalBlock(scope: !1949, file: !120, line: 170, column: 7)
!1956 = !DILocation(line: 170, column: 7, scope: !1954)
!1957 = !DILocation(line: 171, column: 18, scope: !1958)
!1958 = distinct !DILexicalBlock(scope: !1949, file: !120, line: 171, column: 11)
!1959 = !DILocation(line: 171, column: 11, scope: !1958)
!1960 = !DILocation(line: 171, column: 11, scope: !1949)
!1961 = !DILocation(line: 172, column: 9, scope: !1962)
!1962 = distinct !DILexicalBlock(scope: !1963, file: !120, line: 173, column: 9)
!1963 = distinct !DILexicalBlock(scope: !1964, file: !120, line: 172, column: 9)
!1964 = distinct !DILexicalBlock(scope: !1958, file: !120, line: 171, column: 24)
!1965 = !DILocation(line: 175, column: 7, scope: !1964)
!1966 = !DILocation(line: 168, column: 22, scope: !1949)
!1967 = distinct !{!1967, !1942, !1968}
!1968 = !DILocation(line: 169, column: 5, scope: !1943)
!1969 = !DILocation(line: 171, column: 5, scope: !1943)
!1970 = !DILocation(line: 176, column: 5, scope: !1971)
!1971 = distinct !DILexicalBlock(scope: !1972, file: !120, line: 175, column: 5)
!1972 = distinct !DILexicalBlock(scope: !1936, file: !120, line: 174, column: 5)
!1973 = !DILocation(line: 166, column: 16, scope: !1972)
!1974 = distinct !{!1974, !1930, !1975}
!1975 = !DILocation(line: 168, column: 3, scope: !1931)
!1976 = !DILocation(line: 170, column: 3, scope: !1931)
!1977 = !DILocation(line: 178, column: 3, scope: !1978)
!1978 = distinct !DILexicalBlock(scope: !1979, file: !120, line: 174, column: 3)
!1979 = distinct !DILexicalBlock(scope: !1881, file: !120, line: 173, column: 3)
!1980 = !DILocation(line: 183, column: 3, scope: !1881)
!1981 = distinct !DISubprogram(name: "get_itemizedlist", scope: !120, file: !120, line: 186, type: !753, scopeLine: 187, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !124)
!1982 = !DILocalVariable(name: "b", arg: 1, scope: !1981, file: !120, line: 186, type: !80)
!1983 = !DILocation(line: 0, scope: !1981)
!1984 = !DILocalVariable(name: "__cil_tmp3", scope: !1981, file: !120, line: 189, type: !14)
!1985 = !DILocation(line: 189, column: 9, scope: !1981)
!1986 = !DILocalVariable(name: "__cil_tmp4", scope: !1981, file: !120, line: 190, type: !14)
!1987 = !DILocation(line: 190, column: 9, scope: !1981)
!1988 = !DILocalVariable(name: "__cil_tmp5", scope: !1981, file: !120, line: 191, type: !14)
!1989 = !DILocation(line: 191, column: 9, scope: !1981)
!1990 = !DILocalVariable(name: "__cil_tmp6", scope: !1981, file: !120, line: 192, type: !14)
!1991 = !DILocation(line: 192, column: 9, scope: !1981)
!1992 = !DILocalVariable(name: "__cil_tmp7", scope: !1981, file: !120, line: 193, type: !14)
!1993 = !DILocation(line: 193, column: 9, scope: !1981)
!1994 = !DILocation(line: 188, column: 3, scope: !1995)
!1995 = distinct !DILexicalBlock(scope: !1996, file: !120, line: 197, column: 3)
!1996 = distinct !DILexicalBlock(scope: !1997, file: !120, line: 196, column: 3)
!1997 = distinct !DILexicalBlock(scope: !1981, file: !120, line: 195, column: 3)
!1998 = !DILocation(line: 189, column: 3, scope: !1999)
!1999 = distinct !DILexicalBlock(scope: !2000, file: !120, line: 192, column: 3)
!2000 = distinct !DILexicalBlock(scope: !1997, file: !120, line: 191, column: 3)
!2001 = !DILocation(line: 189, column: 13, scope: !1999)
!2002 = !DILocation(line: 189, column: 11, scope: !2003)
!2003 = distinct !DILexicalBlock(scope: !2004, file: !120, line: 189, column: 9)
!2004 = distinct !DILexicalBlock(scope: !1999, file: !120, line: 189, column: 13)
!2005 = !DILocation(line: 189, column: 9, scope: !2004)
!2006 = !DILocation(line: 189, column: 7, scope: !2007)
!2007 = distinct !DILexicalBlock(scope: !2003, file: !120, line: 189, column: 14)
!2008 = !DILocation(line: 192, column: 53, scope: !2009)
!2009 = distinct !DILexicalBlock(scope: !2010, file: !120, line: 192, column: 5)
!2010 = distinct !DILexicalBlock(scope: !2004, file: !120, line: 191, column: 5)
!2011 = !DILocation(line: 192, column: 11, scope: !2009)
!2012 = !DILocalVariable(name: "tmp", scope: !1981, file: !120, line: 188, type: !23)
!2013 = !DILocation(line: 192, column: 9, scope: !2014)
!2014 = distinct !DILexicalBlock(scope: !2004, file: !120, line: 192, column: 9)
!2015 = !DILocation(line: 192, column: 9, scope: !2004)
!2016 = !DILocation(line: 199, column: 7, scope: !2017)
!2017 = distinct !DILexicalBlock(scope: !2018, file: !120, line: 194, column: 7)
!2018 = distinct !DILexicalBlock(scope: !2019, file: !120, line: 193, column: 7)
!2019 = distinct !DILexicalBlock(scope: !2014, file: !120, line: 192, column: 14)
!2020 = !DILocation(line: 202, column: 5, scope: !2019)
!2021 = !DILocation(line: 194, column: 7, scope: !2022)
!2022 = distinct !DILexicalBlock(scope: !2023, file: !120, line: 204, column: 7)
!2023 = distinct !DILexicalBlock(scope: !2024, file: !120, line: 203, column: 7)
!2024 = distinct !DILexicalBlock(scope: !2014, file: !120, line: 202, column: 12)
!2025 = !DILocation(line: 195, column: 26, scope: !2026)
!2026 = distinct !DILexicalBlock(scope: !2023, file: !120, line: 196, column: 7)
!2027 = !DILocation(line: 195, column: 7, scope: !2026)
!2028 = !DILocation(line: 196, column: 7, scope: !2029)
!2029 = distinct !DILexicalBlock(scope: !2023, file: !120, line: 197, column: 7)
!2030 = !DILocation(line: 201, column: 12, scope: !2004)
!2031 = distinct !{!2031, !1998, !2032}
!2032 = !DILocation(line: 202, column: 3, scope: !1999)
!2033 = !DILocation(line: 204, column: 3, scope: !1999)
!2034 = !DILocation(line: 203, column: 3, scope: !2035)
!2035 = distinct !DILexicalBlock(scope: !2036, file: !120, line: 208, column: 3)
!2036 = distinct !DILexicalBlock(scope: !1997, file: !120, line: 207, column: 3)
!2037 = !DILocation(line: 204, column: 3, scope: !1997)
!2038 = distinct !DISubprogram(name: "get_paratype", scope: !120, file: !120, line: 234, type: !1510, scopeLine: 235, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !124)
!2039 = !DILocalVariable(name: "b", arg: 1, scope: !2038, file: !120, line: 234, type: !80)
!2040 = !DILocation(line: 0, scope: !2038)
!2041 = !DILocalVariable(name: "verbatim", arg: 2, scope: !2038, file: !120, line: 234, type: !23)
!2042 = !DILocalVariable(name: "__cil_tmp28", scope: !2038, file: !120, line: 261, type: !14)
!2043 = !DILocation(line: 261, column: 9, scope: !2038)
!2044 = !DILocalVariable(name: "__cil_tmp29", scope: !2038, file: !120, line: 262, type: !14)
!2045 = !DILocation(line: 262, column: 9, scope: !2038)
!2046 = !DILocalVariable(name: "__cil_tmp30", scope: !2038, file: !120, line: 263, type: !14)
!2047 = !DILocation(line: 263, column: 9, scope: !2038)
!2048 = !DILocalVariable(name: "__cil_tmp31", scope: !2038, file: !120, line: 264, type: !14)
!2049 = !DILocation(line: 264, column: 9, scope: !2038)
!2050 = !DILocalVariable(name: "__cil_tmp32", scope: !2038, file: !120, line: 265, type: !14)
!2051 = !DILocation(line: 265, column: 9, scope: !2038)
!2052 = !DILocalVariable(name: "__cil_tmp33", scope: !2038, file: !120, line: 266, type: !14)
!2053 = !DILocation(line: 266, column: 9, scope: !2038)
!2054 = !DILocalVariable(name: "__cil_tmp34", scope: !2038, file: !120, line: 267, type: !14)
!2055 = !DILocation(line: 267, column: 9, scope: !2038)
!2056 = !DILocalVariable(name: "__cil_tmp35", scope: !2038, file: !120, line: 268, type: !14)
!2057 = !DILocation(line: 268, column: 9, scope: !2038)
!2058 = !DILocalVariable(name: "__cil_tmp36", scope: !2038, file: !120, line: 269, type: !14)
!2059 = !DILocation(line: 269, column: 9, scope: !2038)
!2060 = !DILocalVariable(name: "__cil_tmp37", scope: !2038, file: !120, line: 270, type: !14)
!2061 = !DILocation(line: 270, column: 9, scope: !2038)
!2062 = !DILocalVariable(name: "__cil_tmp38", scope: !2038, file: !120, line: 271, type: !14)
!2063 = !DILocation(line: 271, column: 9, scope: !2038)
!2064 = !DILocalVariable(name: "__cil_tmp39", scope: !2038, file: !120, line: 272, type: !14)
!2065 = !DILocation(line: 272, column: 9, scope: !2038)
!2066 = !DILocalVariable(name: "__cil_tmp40", scope: !2038, file: !120, line: 273, type: !14)
!2067 = !DILocation(line: 273, column: 9, scope: !2038)
!2068 = !DILocalVariable(name: "__cil_tmp41", scope: !2038, file: !120, line: 274, type: !14)
!2069 = !DILocation(line: 274, column: 9, scope: !2038)
!2070 = !DILocalVariable(name: "__cil_tmp42", scope: !2038, file: !120, line: 275, type: !14)
!2071 = !DILocation(line: 275, column: 9, scope: !2038)
!2072 = !DILocalVariable(name: "__cil_tmp43", scope: !2038, file: !120, line: 276, type: !14)
!2073 = !DILocation(line: 276, column: 9, scope: !2038)
!2074 = !DILocalVariable(name: "__cil_tmp44", scope: !2038, file: !120, line: 277, type: !14)
!2075 = !DILocation(line: 277, column: 9, scope: !2038)
!2076 = !DILocalVariable(name: "__cil_tmp45", scope: !2038, file: !120, line: 278, type: !14)
!2077 = !DILocation(line: 278, column: 9, scope: !2038)
!2078 = !DILocalVariable(name: "__cil_tmp46", scope: !2038, file: !120, line: 279, type: !14)
!2079 = !DILocation(line: 279, column: 9, scope: !2038)
!2080 = !DILocalVariable(name: "__cil_tmp47", scope: !2038, file: !120, line: 280, type: !14)
!2081 = !DILocation(line: 280, column: 9, scope: !2038)
!2082 = !DILocalVariable(name: "__cil_tmp48", scope: !2038, file: !120, line: 281, type: !14)
!2083 = !DILocation(line: 281, column: 9, scope: !2038)
!2084 = !DILocalVariable(name: "__cil_tmp49", scope: !2038, file: !120, line: 282, type: !14)
!2085 = !DILocation(line: 282, column: 9, scope: !2038)
!2086 = !DILocalVariable(name: "__cil_tmp50", scope: !2038, file: !120, line: 283, type: !14)
!2087 = !DILocation(line: 283, column: 9, scope: !2038)
!2088 = !DILocalVariable(name: "__cil_tmp51", scope: !2038, file: !120, line: 284, type: !14)
!2089 = !DILocation(line: 284, column: 9, scope: !2038)
!2090 = !DILocalVariable(name: "__cil_tmp52", scope: !2038, file: !120, line: 285, type: !14)
!2091 = !DILocation(line: 285, column: 9, scope: !2038)
!2092 = !DILocalVariable(name: "__cil_tmp53", scope: !2038, file: !120, line: 286, type: !14)
!2093 = !DILocation(line: 286, column: 9, scope: !2038)
!2094 = !DILocalVariable(name: "__cil_tmp54", scope: !2038, file: !120, line: 287, type: !14)
!2095 = !DILocation(line: 287, column: 9, scope: !2038)
!2096 = !DILocalVariable(name: "__cil_tmp55", scope: !2038, file: !120, line: 288, type: !14)
!2097 = !DILocation(line: 288, column: 9, scope: !2038)
!2098 = !DILocalVariable(name: "__cil_tmp56", scope: !2038, file: !120, line: 289, type: !14)
!2099 = !DILocation(line: 289, column: 9, scope: !2038)
!2100 = !DILocalVariable(name: "__cil_tmp57", scope: !2038, file: !120, line: 290, type: !14)
!2101 = !DILocation(line: 290, column: 9, scope: !2038)
!2102 = !DILocalVariable(name: "__cil_tmp58", scope: !2038, file: !120, line: 291, type: !14)
!2103 = !DILocation(line: 291, column: 9, scope: !2038)
!2104 = !DILocalVariable(name: "__cil_tmp59", scope: !2038, file: !120, line: 292, type: !14)
!2105 = !DILocation(line: 292, column: 9, scope: !2038)
!2106 = !DILocalVariable(name: "__cil_tmp60", scope: !2038, file: !120, line: 293, type: !14)
!2107 = !DILocation(line: 293, column: 9, scope: !2038)
!2108 = !DILocalVariable(name: "__cil_tmp61", scope: !2038, file: !120, line: 294, type: !14)
!2109 = !DILocation(line: 294, column: 9, scope: !2038)
!2110 = !DILocalVariable(name: "__cil_tmp62", scope: !2038, file: !120, line: 295, type: !14)
!2111 = !DILocation(line: 295, column: 9, scope: !2038)
!2112 = !DILocalVariable(name: "__cil_tmp63", scope: !2038, file: !120, line: 296, type: !14)
!2113 = !DILocation(line: 296, column: 9, scope: !2038)
!2114 = !DILocalVariable(name: "__cil_tmp64", scope: !2038, file: !120, line: 297, type: !14)
!2115 = !DILocation(line: 297, column: 9, scope: !2038)
!2116 = !DILocalVariable(name: "__cil_tmp65", scope: !2038, file: !120, line: 298, type: !14)
!2117 = !DILocation(line: 298, column: 9, scope: !2038)
!2118 = !DILocalVariable(name: "__cil_tmp66", scope: !2038, file: !120, line: 299, type: !14)
!2119 = !DILocation(line: 299, column: 9, scope: !2038)
!2120 = !DILocalVariable(name: "__cil_tmp67", scope: !2038, file: !120, line: 300, type: !14)
!2121 = !DILocation(line: 300, column: 9, scope: !2038)
!2122 = !DILocalVariable(name: "__cil_tmp68", scope: !2038, file: !120, line: 301, type: !14)
!2123 = !DILocation(line: 301, column: 9, scope: !2038)
!2124 = !DILocalVariable(name: "__cil_tmp69", scope: !2038, file: !120, line: 302, type: !14)
!2125 = !DILocation(line: 302, column: 9, scope: !2038)
!2126 = !DILocalVariable(name: "__cil_tmp70", scope: !2038, file: !120, line: 303, type: !14)
!2127 = !DILocation(line: 303, column: 9, scope: !2038)
!2128 = !DILocalVariable(name: "__cil_tmp71", scope: !2038, file: !120, line: 304, type: !14)
!2129 = !DILocation(line: 304, column: 9, scope: !2038)
!2130 = !DILocalVariable(name: "__cil_tmp72", scope: !2038, file: !120, line: 305, type: !14)
!2131 = !DILocation(line: 305, column: 9, scope: !2038)
!2132 = !DILocalVariable(name: "__cil_tmp73", scope: !2038, file: !120, line: 306, type: !14)
!2133 = !DILocation(line: 306, column: 9, scope: !2038)
!2134 = !DILocalVariable(name: "__cil_tmp74", scope: !2038, file: !120, line: 307, type: !14)
!2135 = !DILocation(line: 307, column: 9, scope: !2038)
!2136 = !DILocalVariable(name: "__cil_tmp75", scope: !2038, file: !120, line: 308, type: !14)
!2137 = !DILocation(line: 308, column: 9, scope: !2038)
!2138 = !DILocalVariable(name: "__cil_tmp76", scope: !2038, file: !120, line: 309, type: !14)
!2139 = !DILocation(line: 309, column: 9, scope: !2038)
!2140 = !DILocalVariable(name: "__cil_tmp77", scope: !2038, file: !120, line: 310, type: !14)
!2141 = !DILocation(line: 310, column: 9, scope: !2038)
!2142 = !DILocalVariable(name: "__cil_tmp78", scope: !2038, file: !120, line: 311, type: !14)
!2143 = !DILocation(line: 311, column: 9, scope: !2038)
!2144 = !DILocalVariable(name: "__cil_tmp79", scope: !2038, file: !120, line: 312, type: !14)
!2145 = !DILocation(line: 312, column: 9, scope: !2038)
!2146 = !DILocalVariable(name: "__cil_tmp80", scope: !2038, file: !120, line: 313, type: !14)
!2147 = !DILocation(line: 313, column: 9, scope: !2038)
!2148 = !DILocalVariable(name: "__cil_tmp81", scope: !2038, file: !120, line: 314, type: !14)
!2149 = !DILocation(line: 314, column: 9, scope: !2038)
!2150 = !DILocalVariable(name: "__cil_tmp82", scope: !2038, file: !120, line: 315, type: !14)
!2151 = !DILocation(line: 315, column: 9, scope: !2038)
!2152 = !DILocalVariable(name: "__cil_tmp83", scope: !2038, file: !120, line: 316, type: !14)
!2153 = !DILocation(line: 316, column: 9, scope: !2038)
!2154 = !DILocalVariable(name: "__cil_tmp84", scope: !2038, file: !120, line: 317, type: !14)
!2155 = !DILocation(line: 317, column: 9, scope: !2038)
!2156 = !DILocalVariable(name: "__cil_tmp85", scope: !2038, file: !120, line: 318, type: !14)
!2157 = !DILocation(line: 318, column: 9, scope: !2038)
!2158 = !DILocalVariable(name: "__cil_tmp86", scope: !2038, file: !120, line: 319, type: !14)
!2159 = !DILocation(line: 319, column: 9, scope: !2038)
!2160 = !DILocalVariable(name: "__cil_tmp87", scope: !2038, file: !120, line: 320, type: !14)
!2161 = !DILocation(line: 320, column: 9, scope: !2038)
!2162 = !DILocalVariable(name: "__cil_tmp88", scope: !2038, file: !120, line: 321, type: !14)
!2163 = !DILocation(line: 321, column: 9, scope: !2038)
!2164 = !DILocalVariable(name: "__cil_tmp89", scope: !2038, file: !120, line: 322, type: !14)
!2165 = !DILocation(line: 322, column: 9, scope: !2038)
!2166 = !DILocalVariable(name: "__cil_tmp90", scope: !2038, file: !120, line: 323, type: !14)
!2167 = !DILocation(line: 323, column: 9, scope: !2038)
!2168 = !DILocalVariable(name: "__cil_tmp91", scope: !2038, file: !120, line: 324, type: !14)
!2169 = !DILocation(line: 324, column: 9, scope: !2038)
!2170 = !DILocalVariable(name: "__cil_tmp92", scope: !2038, file: !120, line: 325, type: !14)
!2171 = !DILocation(line: 325, column: 9, scope: !2038)
!2172 = !DILocation(line: 238, column: 3, scope: !2173)
!2173 = distinct !DILexicalBlock(scope: !2174, file: !120, line: 329, column: 3)
!2174 = distinct !DILexicalBlock(scope: !2175, file: !120, line: 328, column: 3)
!2175 = distinct !DILexicalBlock(scope: !2038, file: !120, line: 327, column: 3)
!2176 = !DILocation(line: 238, column: 13, scope: !2173)
!2177 = !DILocation(line: 238, column: 11, scope: !2178)
!2178 = distinct !DILexicalBlock(scope: !2179, file: !120, line: 238, column: 9)
!2179 = distinct !DILexicalBlock(scope: !2173, file: !120, line: 238, column: 13)
!2180 = !DILocation(line: 238, column: 9, scope: !2179)
!2181 = !DILocation(line: 238, column: 7, scope: !2182)
!2182 = distinct !DILexicalBlock(scope: !2178, file: !120, line: 238, column: 14)
!2183 = !DILocation(line: 240, column: 27, scope: !2184)
!2184 = distinct !DILexicalBlock(scope: !2179, file: !120, line: 240, column: 9)
!2185 = !DILocation(line: 240, column: 40, scope: !2184)
!2186 = !DILocation(line: 240, column: 9, scope: !2179)
!2187 = !DILocation(line: 242, column: 40, scope: !2188)
!2188 = distinct !DILexicalBlock(scope: !2189, file: !120, line: 242, column: 7)
!2189 = distinct !DILexicalBlock(scope: !2190, file: !120, line: 241, column: 7)
!2190 = distinct !DILexicalBlock(scope: !2184, file: !120, line: 240, column: 47)
!2191 = !DILocation(line: 242, column: 7, scope: !2188)
!2192 = !DILocation(line: 245, column: 5, scope: !2190)
!2193 = !DILocation(line: 244, column: 18, scope: !2194)
!2194 = distinct !DILexicalBlock(scope: !2195, file: !120, line: 247, column: 7)
!2195 = distinct !DILexicalBlock(scope: !2196, file: !120, line: 246, column: 7)
!2196 = distinct !DILexicalBlock(scope: !2184, file: !120, line: 245, column: 12)
!2197 = !DILocalVariable(name: "tmp___23", scope: !2038, file: !120, line: 260, type: !23)
!2198 = !DILocation(line: 244, column: 13, scope: !2199)
!2199 = distinct !DILexicalBlock(scope: !2196, file: !120, line: 244, column: 11)
!2200 = !DILocation(line: 244, column: 11, scope: !2196)
!2201 = !DILocation(line: 247, column: 61, scope: !2202)
!2202 = distinct !DILexicalBlock(scope: !2203, file: !120, line: 246, column: 9)
!2203 = distinct !DILexicalBlock(scope: !2204, file: !120, line: 245, column: 9)
!2204 = distinct !DILexicalBlock(scope: !2199, file: !120, line: 244, column: 23)
!2205 = !DILocation(line: 247, column: 20, scope: !2202)
!2206 = !DILocalVariable(name: "tmp___13", scope: !2038, file: !120, line: 250, type: !23)
!2207 = !DILocation(line: 247, column: 13, scope: !2208)
!2208 = distinct !DILexicalBlock(scope: !2204, file: !120, line: 247, column: 13)
!2209 = !DILocation(line: 247, column: 13, scope: !2204)
!2210 = !DILocation(line: 247, column: 64, scope: !2211)
!2211 = distinct !DILexicalBlock(scope: !2212, file: !120, line: 249, column: 11)
!2212 = distinct !DILexicalBlock(scope: !2213, file: !120, line: 248, column: 11)
!2213 = distinct !DILexicalBlock(scope: !2208, file: !120, line: 247, column: 23)
!2214 = !DILocation(line: 247, column: 22, scope: !2211)
!2215 = !DILocalVariable(name: "tmp___14", scope: !2038, file: !120, line: 251, type: !23)
!2216 = !DILocation(line: 247, column: 15, scope: !2217)
!2217 = distinct !DILexicalBlock(scope: !2213, file: !120, line: 247, column: 15)
!2218 = !DILocation(line: 247, column: 15, scope: !2213)
!2219 = !DILocation(line: 247, column: 64, scope: !2220)
!2220 = distinct !DILexicalBlock(scope: !2221, file: !120, line: 249, column: 13)
!2221 = distinct !DILexicalBlock(scope: !2222, file: !120, line: 248, column: 13)
!2222 = distinct !DILexicalBlock(scope: !2217, file: !120, line: 247, column: 25)
!2223 = !DILocation(line: 247, column: 24, scope: !2220)
!2224 = !DILocalVariable(name: "tmp___15", scope: !2038, file: !120, line: 252, type: !23)
!2225 = !DILocation(line: 247, column: 17, scope: !2226)
!2226 = distinct !DILexicalBlock(scope: !2222, file: !120, line: 247, column: 17)
!2227 = !DILocation(line: 247, column: 17, scope: !2222)
!2228 = !DILocation(line: 247, column: 68, scope: !2229)
!2229 = distinct !DILexicalBlock(scope: !2230, file: !120, line: 249, column: 15)
!2230 = distinct !DILexicalBlock(scope: !2231, file: !120, line: 248, column: 15)
!2231 = distinct !DILexicalBlock(scope: !2226, file: !120, line: 247, column: 27)
!2232 = !DILocation(line: 247, column: 26, scope: !2229)
!2233 = !DILocalVariable(name: "tmp___16", scope: !2038, file: !120, line: 253, type: !23)
!2234 = !DILocation(line: 247, column: 19, scope: !2235)
!2235 = distinct !DILexicalBlock(scope: !2231, file: !120, line: 247, column: 19)
!2236 = !DILocation(line: 247, column: 19, scope: !2231)
!2237 = !DILocation(line: 247, column: 71, scope: !2238)
!2238 = distinct !DILexicalBlock(scope: !2239, file: !120, line: 249, column: 17)
!2239 = distinct !DILexicalBlock(scope: !2240, file: !120, line: 248, column: 17)
!2240 = distinct !DILexicalBlock(scope: !2235, file: !120, line: 247, column: 29)
!2241 = !DILocation(line: 247, column: 28, scope: !2238)
!2242 = !DILocalVariable(name: "tmp___17", scope: !2038, file: !120, line: 254, type: !23)
!2243 = !DILocation(line: 247, column: 21, scope: !2244)
!2244 = distinct !DILexicalBlock(scope: !2240, file: !120, line: 247, column: 21)
!2245 = !DILocation(line: 247, column: 21, scope: !2240)
!2246 = !DILocation(line: 247, column: 72, scope: !2247)
!2247 = distinct !DILexicalBlock(scope: !2248, file: !120, line: 249, column: 19)
!2248 = distinct !DILexicalBlock(scope: !2249, file: !120, line: 248, column: 19)
!2249 = distinct !DILexicalBlock(scope: !2244, file: !120, line: 247, column: 31)
!2250 = !DILocation(line: 247, column: 30, scope: !2247)
!2251 = !DILocalVariable(name: "tmp___18", scope: !2038, file: !120, line: 255, type: !23)
!2252 = !DILocation(line: 247, column: 23, scope: !2253)
!2253 = distinct !DILexicalBlock(scope: !2249, file: !120, line: 247, column: 23)
!2254 = !DILocation(line: 247, column: 23, scope: !2249)
!2255 = !DILocation(line: 247, column: 72, scope: !2256)
!2256 = distinct !DILexicalBlock(scope: !2257, file: !120, line: 249, column: 21)
!2257 = distinct !DILexicalBlock(scope: !2258, file: !120, line: 248, column: 21)
!2258 = distinct !DILexicalBlock(scope: !2253, file: !120, line: 247, column: 33)
!2259 = !DILocation(line: 247, column: 32, scope: !2256)
!2260 = !DILocalVariable(name: "tmp___19", scope: !2038, file: !120, line: 256, type: !23)
!2261 = !DILocation(line: 247, column: 25, scope: !2262)
!2262 = distinct !DILexicalBlock(scope: !2258, file: !120, line: 247, column: 25)
!2263 = !DILocation(line: 247, column: 25, scope: !2258)
!2264 = !DILocation(line: 247, column: 72, scope: !2265)
!2265 = distinct !DILexicalBlock(scope: !2266, file: !120, line: 249, column: 23)
!2266 = distinct !DILexicalBlock(scope: !2267, file: !120, line: 248, column: 23)
!2267 = distinct !DILexicalBlock(scope: !2262, file: !120, line: 247, column: 35)
!2268 = !DILocation(line: 247, column: 34, scope: !2265)
!2269 = !DILocalVariable(name: "tmp___20", scope: !2038, file: !120, line: 257, type: !23)
!2270 = !DILocation(line: 247, column: 27, scope: !2271)
!2271 = distinct !DILexicalBlock(scope: !2267, file: !120, line: 247, column: 27)
!2272 = !DILocation(line: 247, column: 27, scope: !2267)
!2273 = !DILocation(line: 247, column: 81, scope: !2274)
!2274 = distinct !DILexicalBlock(scope: !2275, file: !120, line: 249, column: 25)
!2275 = distinct !DILexicalBlock(scope: !2276, file: !120, line: 248, column: 25)
!2276 = distinct !DILexicalBlock(scope: !2271, file: !120, line: 247, column: 37)
!2277 = !DILocation(line: 247, column: 36, scope: !2274)
!2278 = !DILocalVariable(name: "tmp___21", scope: !2038, file: !120, line: 258, type: !23)
!2279 = !DILocation(line: 247, column: 29, scope: !2280)
!2280 = distinct !DILexicalBlock(scope: !2276, file: !120, line: 247, column: 29)
!2281 = !DILocation(line: 247, column: 29, scope: !2276)
!2282 = !DILocation(line: 247, column: 79, scope: !2283)
!2283 = distinct !DILexicalBlock(scope: !2284, file: !120, line: 249, column: 27)
!2284 = distinct !DILexicalBlock(scope: !2285, file: !120, line: 248, column: 27)
!2285 = distinct !DILexicalBlock(scope: !2280, file: !120, line: 247, column: 39)
!2286 = !DILocation(line: 247, column: 38, scope: !2283)
!2287 = !DILocalVariable(name: "tmp___22", scope: !2038, file: !120, line: 259, type: !23)
!2288 = !DILocation(line: 247, column: 31, scope: !2289)
!2289 = distinct !DILexicalBlock(scope: !2285, file: !120, line: 247, column: 31)
!2290 = !DILocation(line: 247, column: 31, scope: !2285)
!2291 = !DILocation(line: 262, column: 80, scope: !2292)
!2292 = distinct !DILexicalBlock(scope: !2293, file: !120, line: 249, column: 29)
!2293 = distinct !DILexicalBlock(scope: !2294, file: !120, line: 248, column: 29)
!2294 = distinct !DILexicalBlock(scope: !2289, file: !120, line: 247, column: 41)
!2295 = !DILocation(line: 262, column: 40, scope: !2292)
!2296 = !DILocalVariable(name: "tmp___10", scope: !2038, file: !120, line: 247, type: !23)
!2297 = !DILocation(line: 262, column: 33, scope: !2298)
!2298 = distinct !DILexicalBlock(scope: !2294, file: !120, line: 262, column: 33)
!2299 = !DILocation(line: 262, column: 33, scope: !2294)
!2300 = !DILocation(line: 262, column: 85, scope: !2301)
!2301 = distinct !DILexicalBlock(scope: !2302, file: !120, line: 264, column: 31)
!2302 = distinct !DILexicalBlock(scope: !2303, file: !120, line: 263, column: 31)
!2303 = distinct !DILexicalBlock(scope: !2298, file: !120, line: 262, column: 43)
!2304 = !DILocation(line: 262, column: 42, scope: !2301)
!2305 = !DILocalVariable(name: "tmp___11", scope: !2038, file: !120, line: 248, type: !23)
!2306 = !DILocation(line: 262, column: 35, scope: !2307)
!2307 = distinct !DILexicalBlock(scope: !2303, file: !120, line: 262, column: 35)
!2308 = !DILocation(line: 262, column: 35, scope: !2303)
!2309 = !DILocation(line: 262, column: 89, scope: !2310)
!2310 = distinct !DILexicalBlock(scope: !2311, file: !120, line: 264, column: 33)
!2311 = distinct !DILexicalBlock(scope: !2312, file: !120, line: 263, column: 33)
!2312 = distinct !DILexicalBlock(scope: !2307, file: !120, line: 262, column: 45)
!2313 = !DILocation(line: 262, column: 44, scope: !2310)
!2314 = !DILocalVariable(name: "tmp___12", scope: !2038, file: !120, line: 249, type: !23)
!2315 = !DILocation(line: 262, column: 37, scope: !2316)
!2316 = distinct !DILexicalBlock(scope: !2312, file: !120, line: 262, column: 37)
!2317 = !DILocation(line: 262, column: 37, scope: !2312)
!2318 = !DILocation(line: 270, column: 87, scope: !2319)
!2319 = distinct !DILexicalBlock(scope: !2320, file: !120, line: 264, column: 35)
!2320 = distinct !DILexicalBlock(scope: !2321, file: !120, line: 263, column: 35)
!2321 = distinct !DILexicalBlock(scope: !2316, file: !120, line: 262, column: 47)
!2322 = !DILocation(line: 270, column: 45, scope: !2319)
!2323 = !DILocalVariable(name: "tmp___9", scope: !2038, file: !120, line: 246, type: !23)
!2324 = !DILocation(line: 270, column: 39, scope: !2325)
!2325 = distinct !DILexicalBlock(scope: !2321, file: !120, line: 270, column: 39)
!2326 = !DILocation(line: 270, column: 39, scope: !2321)
!2327 = !DILocation(line: 277, column: 86, scope: !2328)
!2328 = distinct !DILexicalBlock(scope: !2329, file: !120, line: 272, column: 37)
!2329 = distinct !DILexicalBlock(scope: !2330, file: !120, line: 271, column: 37)
!2330 = distinct !DILexicalBlock(scope: !2325, file: !120, line: 270, column: 48)
!2331 = !DILocation(line: 277, column: 47, scope: !2328)
!2332 = !DILocalVariable(name: "tmp___8", scope: !2038, file: !120, line: 245, type: !23)
!2333 = !DILocation(line: 277, column: 41, scope: !2334)
!2334 = distinct !DILexicalBlock(scope: !2330, file: !120, line: 277, column: 41)
!2335 = !DILocation(line: 277, column: 41, scope: !2330)
!2336 = !DILocation(line: 283, column: 91, scope: !2337)
!2337 = distinct !DILexicalBlock(scope: !2338, file: !120, line: 279, column: 39)
!2338 = distinct !DILexicalBlock(scope: !2339, file: !120, line: 278, column: 39)
!2339 = distinct !DILexicalBlock(scope: !2334, file: !120, line: 277, column: 50)
!2340 = !DILocation(line: 283, column: 49, scope: !2337)
!2341 = !DILocalVariable(name: "tmp___7", scope: !2038, file: !120, line: 244, type: !23)
!2342 = !DILocation(line: 283, column: 43, scope: !2343)
!2343 = distinct !DILexicalBlock(scope: !2339, file: !120, line: 283, column: 43)
!2344 = !DILocation(line: 283, column: 43, scope: !2339)
!2345 = !DILocation(line: 289, column: 97, scope: !2346)
!2346 = distinct !DILexicalBlock(scope: !2347, file: !120, line: 285, column: 41)
!2347 = distinct !DILexicalBlock(scope: !2348, file: !120, line: 284, column: 41)
!2348 = distinct !DILexicalBlock(scope: !2343, file: !120, line: 283, column: 52)
!2349 = !DILocation(line: 289, column: 51, scope: !2346)
!2350 = !DILocalVariable(name: "tmp___6", scope: !2038, file: !120, line: 243, type: !23)
!2351 = !DILocation(line: 289, column: 45, scope: !2352)
!2352 = distinct !DILexicalBlock(scope: !2348, file: !120, line: 289, column: 45)
!2353 = !DILocation(line: 289, column: 45, scope: !2348)
!2354 = !DILocation(line: 293, column: 91, scope: !2355)
!2355 = distinct !DILexicalBlock(scope: !2356, file: !120, line: 291, column: 43)
!2356 = distinct !DILexicalBlock(scope: !2357, file: !120, line: 290, column: 43)
!2357 = distinct !DILexicalBlock(scope: !2352, file: !120, line: 289, column: 54)
!2358 = !DILocation(line: 293, column: 53, scope: !2355)
!2359 = !DILocalVariable(name: "tmp___4", scope: !2038, file: !120, line: 241, type: !23)
!2360 = !DILocation(line: 293, column: 47, scope: !2361)
!2361 = distinct !DILexicalBlock(scope: !2357, file: !120, line: 293, column: 47)
!2362 = !DILocation(line: 293, column: 47, scope: !2357)
!2363 = !DILocation(line: 293, column: 93, scope: !2364)
!2364 = distinct !DILexicalBlock(scope: !2365, file: !120, line: 295, column: 45)
!2365 = distinct !DILexicalBlock(scope: !2366, file: !120, line: 294, column: 45)
!2366 = distinct !DILexicalBlock(scope: !2361, file: !120, line: 293, column: 56)
!2367 = !DILocation(line: 293, column: 55, scope: !2364)
!2368 = !DILocalVariable(name: "tmp___5", scope: !2038, file: !120, line: 242, type: !23)
!2369 = !DILocation(line: 293, column: 49, scope: !2370)
!2370 = distinct !DILexicalBlock(scope: !2366, file: !120, line: 293, column: 49)
!2371 = !DILocation(line: 293, column: 49, scope: !2366)
!2372 = !DILocation(line: 300, column: 96, scope: !2373)
!2373 = distinct !DILexicalBlock(scope: !2374, file: !120, line: 295, column: 47)
!2374 = distinct !DILexicalBlock(scope: !2375, file: !120, line: 294, column: 47)
!2375 = distinct !DILexicalBlock(scope: !2370, file: !120, line: 293, column: 58)
!2376 = !DILocation(line: 300, column: 57, scope: !2373)
!2377 = !DILocalVariable(name: "tmp___2", scope: !2038, file: !120, line: 239, type: !23)
!2378 = !DILocation(line: 300, column: 51, scope: !2379)
!2379 = distinct !DILexicalBlock(scope: !2375, file: !120, line: 300, column: 51)
!2380 = !DILocation(line: 300, column: 51, scope: !2375)
!2381 = !DILocation(line: 300, column: 98, scope: !2382)
!2382 = distinct !DILexicalBlock(scope: !2383, file: !120, line: 302, column: 49)
!2383 = distinct !DILexicalBlock(scope: !2384, file: !120, line: 301, column: 49)
!2384 = distinct !DILexicalBlock(scope: !2379, file: !120, line: 300, column: 60)
!2385 = !DILocation(line: 300, column: 59, scope: !2382)
!2386 = !DILocalVariable(name: "tmp___3", scope: !2038, file: !120, line: 240, type: !23)
!2387 = !DILocation(line: 300, column: 53, scope: !2388)
!2388 = distinct !DILexicalBlock(scope: !2384, file: !120, line: 300, column: 53)
!2389 = !DILocation(line: 300, column: 53, scope: !2384)
!2390 = !DILocation(line: 308, column: 100, scope: !2391)
!2391 = distinct !DILexicalBlock(scope: !2392, file: !120, line: 302, column: 51)
!2392 = distinct !DILexicalBlock(scope: !2393, file: !120, line: 301, column: 51)
!2393 = distinct !DILexicalBlock(scope: !2388, file: !120, line: 300, column: 62)
!2394 = !DILocation(line: 308, column: 61, scope: !2391)
!2395 = !DILocalVariable(name: "tmp___1", scope: !2038, file: !120, line: 238, type: !23)
!2396 = !DILocation(line: 308, column: 55, scope: !2397)
!2397 = distinct !DILexicalBlock(scope: !2393, file: !120, line: 308, column: 55)
!2398 = !DILocation(line: 308, column: 55, scope: !2393)
!2399 = !DILocation(line: 314, column: 86, scope: !2400)
!2400 = distinct !DILexicalBlock(scope: !2401, file: !120, line: 310, column: 53)
!2401 = distinct !DILexicalBlock(scope: !2402, file: !120, line: 309, column: 53)
!2402 = distinct !DILexicalBlock(scope: !2397, file: !120, line: 308, column: 64)
!2403 = !DILocation(line: 316, column: 64, scope: !2400)
!2404 = !DILocation(line: 314, column: 53, scope: !2400)
!2405 = !DILocation(line: 315, column: 53, scope: !2406)
!2406 = distinct !DILexicalBlock(scope: !2401, file: !120, line: 318, column: 53)
!2407 = !DILocation(line: 318, column: 51, scope: !2402)
!2408 = !DILocation(line: 310, column: 53, scope: !2409)
!2409 = distinct !DILexicalBlock(scope: !2410, file: !120, line: 320, column: 53)
!2410 = distinct !DILexicalBlock(scope: !2411, file: !120, line: 319, column: 53)
!2411 = distinct !DILexicalBlock(scope: !2397, file: !120, line: 318, column: 58)
!2412 = !DILocation(line: 314, column: 49, scope: !2393)
!2413 = !DILocation(line: 303, column: 67, scope: !2414)
!2414 = distinct !DILexicalBlock(scope: !2415, file: !120, line: 316, column: 51)
!2415 = distinct !DILexicalBlock(scope: !2416, file: !120, line: 315, column: 51)
!2416 = distinct !DILexicalBlock(scope: !2388, file: !120, line: 314, column: 56)
!2417 = !DILocation(line: 303, column: 51, scope: !2414)
!2418 = !DILocation(line: 304, column: 51, scope: !2419)
!2419 = distinct !DILexicalBlock(scope: !2415, file: !120, line: 305, column: 51)
!2420 = !DILocation(line: 305, column: 61, scope: !2421)
!2421 = distinct !DILexicalBlock(scope: !2415, file: !120, line: 306, column: 51)
!2422 = !DILocalVariable(name: "tmp___0", scope: !2038, file: !120, line: 237, type: !78)
!2423 = !DILocation(line: 305, column: 51, scope: !2424)
!2424 = distinct !DILexicalBlock(scope: !2415, file: !120, line: 307, column: 51)
!2425 = !DILocation(line: 306, column: 51, scope: !2426)
!2426 = distinct !DILexicalBlock(scope: !2415, file: !120, line: 307, column: 51)
!2427 = !DILocation(line: 310, column: 47, scope: !2384)
!2428 = !DILocation(line: 303, column: 65, scope: !2429)
!2429 = distinct !DILexicalBlock(scope: !2430, file: !120, line: 312, column: 49)
!2430 = distinct !DILexicalBlock(scope: !2431, file: !120, line: 311, column: 49)
!2431 = distinct !DILexicalBlock(scope: !2379, file: !120, line: 310, column: 54)
!2432 = !DILocation(line: 303, column: 49, scope: !2429)
!2433 = !DILocation(line: 304, column: 49, scope: !2434)
!2434 = distinct !DILexicalBlock(scope: !2430, file: !120, line: 305, column: 49)
!2435 = !DILocation(line: 305, column: 59, scope: !2436)
!2436 = distinct !DILexicalBlock(scope: !2430, file: !120, line: 306, column: 49)
!2437 = !DILocation(line: 305, column: 49, scope: !2438)
!2438 = distinct !DILexicalBlock(scope: !2430, file: !120, line: 307, column: 49)
!2439 = !DILocation(line: 306, column: 49, scope: !2440)
!2440 = distinct !DILexicalBlock(scope: !2430, file: !120, line: 307, column: 49)
!2441 = !DILocation(line: 310, column: 45, scope: !2375)
!2442 = !DILocation(line: 296, column: 53, scope: !2443)
!2443 = distinct !DILexicalBlock(scope: !2444, file: !120, line: 312, column: 47)
!2444 = distinct !DILexicalBlock(scope: !2445, file: !120, line: 311, column: 47)
!2445 = distinct !DILexicalBlock(scope: !2370, file: !120, line: 310, column: 52)
!2446 = !DILocalVariable(name: "tmp", scope: !2038, file: !120, line: 236, type: !78)
!2447 = !DILocation(line: 296, column: 47, scope: !2448)
!2448 = distinct !DILexicalBlock(scope: !2444, file: !120, line: 298, column: 47)
!2449 = !DILocation(line: 298, column: 63, scope: !2450)
!2450 = distinct !DILexicalBlock(scope: !2444, file: !120, line: 299, column: 47)
!2451 = !DILocation(line: 298, column: 47, scope: !2450)
!2452 = !DILocation(line: 302, column: 43, scope: !2366)
!2453 = !DILocation(line: 296, column: 51, scope: !2454)
!2454 = distinct !DILexicalBlock(scope: !2455, file: !120, line: 304, column: 45)
!2455 = distinct !DILexicalBlock(scope: !2456, file: !120, line: 303, column: 45)
!2456 = distinct !DILexicalBlock(scope: !2361, file: !120, line: 302, column: 50)
!2457 = !DILocation(line: 296, column: 45, scope: !2458)
!2458 = distinct !DILexicalBlock(scope: !2455, file: !120, line: 298, column: 45)
!2459 = !DILocation(line: 298, column: 61, scope: !2460)
!2460 = distinct !DILexicalBlock(scope: !2455, file: !120, line: 299, column: 45)
!2461 = !DILocation(line: 298, column: 45, scope: !2460)
!2462 = !DILocation(line: 302, column: 41, scope: !2357)
!2463 = !DILocation(line: 291, column: 63, scope: !2464)
!2464 = distinct !DILexicalBlock(scope: !2465, file: !120, line: 304, column: 43)
!2465 = distinct !DILexicalBlock(scope: !2466, file: !120, line: 303, column: 43)
!2466 = distinct !DILexicalBlock(scope: !2352, file: !120, line: 302, column: 48)
!2467 = !DILocation(line: 291, column: 43, scope: !2464)
!2468 = !DILocation(line: 295, column: 39, scope: !2348)
!2469 = !DILocation(line: 285, column: 41, scope: !2470)
!2470 = distinct !DILexicalBlock(scope: !2471, file: !120, line: 297, column: 41)
!2471 = distinct !DILexicalBlock(scope: !2472, file: !120, line: 296, column: 41)
!2472 = distinct !DILexicalBlock(scope: !2343, file: !120, line: 295, column: 46)
!2473 = !DILocation(line: 286, column: 60, scope: !2474)
!2474 = distinct !DILexicalBlock(scope: !2471, file: !120, line: 287, column: 41)
!2475 = !DILocation(line: 286, column: 41, scope: !2474)
!2476 = !DILocation(line: 287, column: 41, scope: !2477)
!2477 = distinct !DILexicalBlock(scope: !2471, file: !120, line: 288, column: 41)
!2478 = !DILocation(line: 291, column: 37, scope: !2339)
!2479 = !DILocation(line: 279, column: 39, scope: !2480)
!2480 = distinct !DILexicalBlock(scope: !2481, file: !120, line: 293, column: 39)
!2481 = distinct !DILexicalBlock(scope: !2482, file: !120, line: 292, column: 39)
!2482 = distinct !DILexicalBlock(scope: !2334, file: !120, line: 291, column: 44)
!2483 = !DILocation(line: 280, column: 55, scope: !2484)
!2484 = distinct !DILexicalBlock(scope: !2481, file: !120, line: 281, column: 39)
!2485 = !DILocation(line: 280, column: 39, scope: !2484)
!2486 = !DILocation(line: 281, column: 39, scope: !2487)
!2487 = distinct !DILexicalBlock(scope: !2481, file: !120, line: 282, column: 39)
!2488 = !DILocation(line: 285, column: 35, scope: !2330)
!2489 = !DILocation(line: 273, column: 37, scope: !2490)
!2490 = distinct !DILexicalBlock(scope: !2491, file: !120, line: 287, column: 37)
!2491 = distinct !DILexicalBlock(scope: !2492, file: !120, line: 286, column: 37)
!2492 = distinct !DILexicalBlock(scope: !2325, file: !120, line: 285, column: 42)
!2493 = !DILocation(line: 274, column: 53, scope: !2494)
!2494 = distinct !DILexicalBlock(scope: !2491, file: !120, line: 275, column: 37)
!2495 = !DILocation(line: 274, column: 37, scope: !2494)
!2496 = !DILocation(line: 275, column: 37, scope: !2497)
!2497 = distinct !DILexicalBlock(scope: !2491, file: !120, line: 276, column: 37)
!2498 = !DILocation(line: 279, column: 33, scope: !2321)
!2499 = !DILocation(line: 266, column: 35, scope: !2500)
!2500 = distinct !DILexicalBlock(scope: !2501, file: !120, line: 281, column: 35)
!2501 = distinct !DILexicalBlock(scope: !2502, file: !120, line: 280, column: 35)
!2502 = distinct !DILexicalBlock(scope: !2316, file: !120, line: 279, column: 40)
!2503 = !DILocation(line: 267, column: 51, scope: !2504)
!2504 = distinct !DILexicalBlock(scope: !2501, file: !120, line: 268, column: 35)
!2505 = !DILocation(line: 267, column: 35, scope: !2504)
!2506 = !DILocation(line: 268, column: 35, scope: !2507)
!2507 = distinct !DILexicalBlock(scope: !2501, file: !120, line: 269, column: 35)
!2508 = !DILocation(line: 272, column: 31, scope: !2312)
!2509 = !DILocation(line: 266, column: 33, scope: !2510)
!2510 = distinct !DILexicalBlock(scope: !2511, file: !120, line: 274, column: 33)
!2511 = distinct !DILexicalBlock(scope: !2512, file: !120, line: 273, column: 33)
!2512 = distinct !DILexicalBlock(scope: !2307, file: !120, line: 272, column: 38)
!2513 = !DILocation(line: 267, column: 49, scope: !2514)
!2514 = distinct !DILexicalBlock(scope: !2511, file: !120, line: 268, column: 33)
!2515 = !DILocation(line: 267, column: 33, scope: !2514)
!2516 = !DILocation(line: 268, column: 33, scope: !2517)
!2517 = distinct !DILexicalBlock(scope: !2511, file: !120, line: 269, column: 33)
!2518 = !DILocation(line: 272, column: 29, scope: !2303)
!2519 = !DILocation(line: 266, column: 31, scope: !2520)
!2520 = distinct !DILexicalBlock(scope: !2521, file: !120, line: 274, column: 31)
!2521 = distinct !DILexicalBlock(scope: !2522, file: !120, line: 273, column: 31)
!2522 = distinct !DILexicalBlock(scope: !2298, file: !120, line: 272, column: 36)
!2523 = !DILocation(line: 267, column: 47, scope: !2524)
!2524 = distinct !DILexicalBlock(scope: !2521, file: !120, line: 268, column: 31)
!2525 = !DILocation(line: 267, column: 31, scope: !2524)
!2526 = !DILocation(line: 268, column: 31, scope: !2527)
!2527 = distinct !DILexicalBlock(scope: !2521, file: !120, line: 269, column: 31)
!2528 = !DILocation(line: 272, column: 27, scope: !2294)
!2529 = !DILocation(line: 258, column: 29, scope: !2530)
!2530 = distinct !DILexicalBlock(scope: !2531, file: !120, line: 274, column: 29)
!2531 = distinct !DILexicalBlock(scope: !2532, file: !120, line: 273, column: 29)
!2532 = distinct !DILexicalBlock(scope: !2289, file: !120, line: 272, column: 34)
!2533 = !DILocation(line: 259, column: 45, scope: !2534)
!2534 = distinct !DILexicalBlock(scope: !2531, file: !120, line: 260, column: 29)
!2535 = !DILocation(line: 259, column: 29, scope: !2534)
!2536 = !DILocation(line: 260, column: 29, scope: !2537)
!2537 = distinct !DILexicalBlock(scope: !2531, file: !120, line: 261, column: 29)
!2538 = !DILocation(line: 264, column: 25, scope: !2285)
!2539 = !DILocation(line: 258, column: 27, scope: !2540)
!2540 = distinct !DILexicalBlock(scope: !2541, file: !120, line: 266, column: 27)
!2541 = distinct !DILexicalBlock(scope: !2542, file: !120, line: 265, column: 27)
!2542 = distinct !DILexicalBlock(scope: !2280, file: !120, line: 264, column: 32)
!2543 = !DILocation(line: 259, column: 43, scope: !2544)
!2544 = distinct !DILexicalBlock(scope: !2541, file: !120, line: 260, column: 27)
!2545 = !DILocation(line: 259, column: 27, scope: !2544)
!2546 = !DILocation(line: 260, column: 27, scope: !2547)
!2547 = distinct !DILexicalBlock(scope: !2541, file: !120, line: 261, column: 27)
!2548 = !DILocation(line: 264, column: 23, scope: !2276)
!2549 = !DILocation(line: 258, column: 25, scope: !2550)
!2550 = distinct !DILexicalBlock(scope: !2551, file: !120, line: 266, column: 25)
!2551 = distinct !DILexicalBlock(scope: !2552, file: !120, line: 265, column: 25)
!2552 = distinct !DILexicalBlock(scope: !2271, file: !120, line: 264, column: 30)
!2553 = !DILocation(line: 259, column: 41, scope: !2554)
!2554 = distinct !DILexicalBlock(scope: !2551, file: !120, line: 260, column: 25)
!2555 = !DILocation(line: 259, column: 25, scope: !2554)
!2556 = !DILocation(line: 260, column: 25, scope: !2557)
!2557 = distinct !DILexicalBlock(scope: !2551, file: !120, line: 261, column: 25)
!2558 = !DILocation(line: 264, column: 21, scope: !2267)
!2559 = !DILocation(line: 258, column: 23, scope: !2560)
!2560 = distinct !DILexicalBlock(scope: !2561, file: !120, line: 266, column: 23)
!2561 = distinct !DILexicalBlock(scope: !2562, file: !120, line: 265, column: 23)
!2562 = distinct !DILexicalBlock(scope: !2262, file: !120, line: 264, column: 28)
!2563 = !DILocation(line: 259, column: 39, scope: !2564)
!2564 = distinct !DILexicalBlock(scope: !2561, file: !120, line: 260, column: 23)
!2565 = !DILocation(line: 259, column: 23, scope: !2564)
!2566 = !DILocation(line: 260, column: 23, scope: !2567)
!2567 = distinct !DILexicalBlock(scope: !2561, file: !120, line: 261, column: 23)
!2568 = !DILocation(line: 264, column: 19, scope: !2258)
!2569 = !DILocation(line: 258, column: 21, scope: !2570)
!2570 = distinct !DILexicalBlock(scope: !2571, file: !120, line: 266, column: 21)
!2571 = distinct !DILexicalBlock(scope: !2572, file: !120, line: 265, column: 21)
!2572 = distinct !DILexicalBlock(scope: !2253, file: !120, line: 264, column: 26)
!2573 = !DILocation(line: 259, column: 37, scope: !2574)
!2574 = distinct !DILexicalBlock(scope: !2571, file: !120, line: 260, column: 21)
!2575 = !DILocation(line: 259, column: 21, scope: !2574)
!2576 = !DILocation(line: 260, column: 21, scope: !2577)
!2577 = distinct !DILexicalBlock(scope: !2571, file: !120, line: 261, column: 21)
!2578 = !DILocation(line: 264, column: 17, scope: !2249)
!2579 = !DILocation(line: 258, column: 19, scope: !2580)
!2580 = distinct !DILexicalBlock(scope: !2581, file: !120, line: 266, column: 19)
!2581 = distinct !DILexicalBlock(scope: !2582, file: !120, line: 265, column: 19)
!2582 = distinct !DILexicalBlock(scope: !2244, file: !120, line: 264, column: 24)
!2583 = !DILocation(line: 259, column: 35, scope: !2584)
!2584 = distinct !DILexicalBlock(scope: !2581, file: !120, line: 260, column: 19)
!2585 = !DILocation(line: 259, column: 19, scope: !2584)
!2586 = !DILocation(line: 260, column: 19, scope: !2587)
!2587 = distinct !DILexicalBlock(scope: !2581, file: !120, line: 261, column: 19)
!2588 = !DILocation(line: 264, column: 15, scope: !2240)
!2589 = !DILocation(line: 258, column: 17, scope: !2590)
!2590 = distinct !DILexicalBlock(scope: !2591, file: !120, line: 266, column: 17)
!2591 = distinct !DILexicalBlock(scope: !2592, file: !120, line: 265, column: 17)
!2592 = distinct !DILexicalBlock(scope: !2235, file: !120, line: 264, column: 22)
!2593 = !DILocation(line: 259, column: 33, scope: !2594)
!2594 = distinct !DILexicalBlock(scope: !2591, file: !120, line: 260, column: 17)
!2595 = !DILocation(line: 259, column: 17, scope: !2594)
!2596 = !DILocation(line: 260, column: 17, scope: !2597)
!2597 = distinct !DILexicalBlock(scope: !2591, file: !120, line: 261, column: 17)
!2598 = !DILocation(line: 264, column: 13, scope: !2231)
!2599 = !DILocation(line: 258, column: 15, scope: !2600)
!2600 = distinct !DILexicalBlock(scope: !2601, file: !120, line: 266, column: 15)
!2601 = distinct !DILexicalBlock(scope: !2602, file: !120, line: 265, column: 15)
!2602 = distinct !DILexicalBlock(scope: !2226, file: !120, line: 264, column: 20)
!2603 = !DILocation(line: 259, column: 31, scope: !2604)
!2604 = distinct !DILexicalBlock(scope: !2601, file: !120, line: 260, column: 15)
!2605 = !DILocation(line: 259, column: 15, scope: !2604)
!2606 = !DILocation(line: 260, column: 15, scope: !2607)
!2607 = distinct !DILexicalBlock(scope: !2601, file: !120, line: 261, column: 15)
!2608 = !DILocation(line: 264, column: 11, scope: !2222)
!2609 = !DILocation(line: 258, column: 13, scope: !2610)
!2610 = distinct !DILexicalBlock(scope: !2611, file: !120, line: 266, column: 13)
!2611 = distinct !DILexicalBlock(scope: !2612, file: !120, line: 265, column: 13)
!2612 = distinct !DILexicalBlock(scope: !2217, file: !120, line: 264, column: 18)
!2613 = !DILocation(line: 259, column: 29, scope: !2614)
!2614 = distinct !DILexicalBlock(scope: !2611, file: !120, line: 260, column: 13)
!2615 = !DILocation(line: 259, column: 13, scope: !2614)
!2616 = !DILocation(line: 260, column: 13, scope: !2617)
!2617 = distinct !DILexicalBlock(scope: !2611, file: !120, line: 261, column: 13)
!2618 = !DILocation(line: 264, column: 9, scope: !2213)
!2619 = !DILocation(line: 258, column: 11, scope: !2620)
!2620 = distinct !DILexicalBlock(scope: !2621, file: !120, line: 266, column: 11)
!2621 = distinct !DILexicalBlock(scope: !2622, file: !120, line: 265, column: 11)
!2622 = distinct !DILexicalBlock(scope: !2208, file: !120, line: 264, column: 16)
!2623 = !DILocation(line: 259, column: 27, scope: !2624)
!2624 = distinct !DILexicalBlock(scope: !2621, file: !120, line: 260, column: 11)
!2625 = !DILocation(line: 259, column: 11, scope: !2624)
!2626 = !DILocation(line: 260, column: 11, scope: !2627)
!2627 = distinct !DILexicalBlock(scope: !2621, file: !120, line: 261, column: 11)
!2628 = !DILocation(line: 264, column: 7, scope: !2204)
!2629 = !DILocation(line: 319, column: 12, scope: !2179)
!2630 = distinct !{!2630, !2172, !2631}
!2631 = !DILocation(line: 320, column: 3, scope: !2173)
!2632 = !DILocation(line: 322, column: 3, scope: !2173)
!2633 = !DILocation(line: 321, column: 3, scope: !2175)
!2634 = distinct !DISubprogram(name: "space", scope: !384, file: !384, line: 118, type: !2635, scopeLine: 119, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !124)
!2635 = !DISubroutineType(types: !2636)
!2636 = !{null, !23}
!2637 = !DILocalVariable(name: "i", arg: 1, scope: !2634, file: !384, line: 118, type: !23)
!2638 = !DILocation(line: 0, scope: !2634)
!2639 = !DILocalVariable(name: "__cil_tmp3", scope: !2634, file: !384, line: 121, type: !14)
!2640 = !DILocation(line: 121, column: 9, scope: !2634)
!2641 = !DILocation(line: 121, column: 3, scope: !2642)
!2642 = distinct !DILexicalBlock(scope: !2643, file: !384, line: 125, column: 3)
!2643 = distinct !DILexicalBlock(scope: !2644, file: !384, line: 124, column: 3)
!2644 = distinct !DILexicalBlock(scope: !2634, file: !384, line: 123, column: 3)
!2645 = !DILocation(line: 121, column: 13, scope: !2642)
!2646 = !DILocalVariable(name: "tmp", scope: !2634, file: !384, line: 120, type: !23)
!2647 = !DILocation(line: 121, column: 7, scope: !2648)
!2648 = distinct !DILexicalBlock(scope: !2642, file: !384, line: 121, column: 13)
!2649 = !DILocation(line: 121, column: 11, scope: !2650)
!2650 = distinct !DILexicalBlock(scope: !2648, file: !384, line: 121, column: 9)
!2651 = !DILocation(line: 121, column: 9, scope: !2648)
!2652 = !DILocation(line: 121, column: 7, scope: !2653)
!2653 = distinct !DILexicalBlock(scope: !2650, file: !384, line: 121, column: 16)
!2654 = !DILocation(line: 122, column: 5, scope: !2655)
!2655 = distinct !DILexicalBlock(scope: !2656, file: !384, line: 124, column: 5)
!2656 = distinct !DILexicalBlock(scope: !2648, file: !384, line: 123, column: 5)
!2657 = distinct !{!2657, !2641, !2658}
!2658 = !DILocation(line: 125, column: 3, scope: !2642)
!2659 = !DILocation(line: 127, column: 3, scope: !2642)
!2660 = !DILocation(line: 123, column: 3, scope: !2644)
!2661 = distinct !DISubprogram(name: "recurse_attribute", scope: !384, file: !384, line: 125, type: !1347, scopeLine: 126, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !124)
!2662 = !DILocalVariable(name: "a", arg: 1, scope: !2661, file: !384, line: 125, type: !87)
!2663 = !DILocation(line: 0, scope: !2661)
!2664 = !DILocalVariable(name: "__cil_tmp2", scope: !2661, file: !384, line: 127, type: !14)
!2665 = !DILocation(line: 127, column: 9, scope: !2661)
!2666 = !DILocation(line: 128, column: 60, scope: !2667)
!2667 = distinct !DILexicalBlock(scope: !2668, file: !384, line: 131, column: 3)
!2668 = distinct !DILexicalBlock(scope: !2669, file: !384, line: 130, column: 3)
!2669 = distinct !DILexicalBlock(scope: !2661, file: !384, line: 129, column: 3)
!2670 = !DILocation(line: 128, column: 79, scope: !2667)
!2671 = !DILocation(line: 128, column: 3, scope: !2667)
!2672 = !DILocation(line: 129, column: 10, scope: !2673)
!2673 = distinct !DILexicalBlock(scope: !2669, file: !384, line: 129, column: 7)
!2674 = !DILocation(line: 129, column: 7, scope: !2673)
!2675 = !DILocation(line: 129, column: 7, scope: !2669)
!2676 = !DILocation(line: 130, column: 26, scope: !2677)
!2677 = distinct !DILexicalBlock(scope: !2678, file: !384, line: 131, column: 5)
!2678 = distinct !DILexicalBlock(scope: !2679, file: !384, line: 130, column: 5)
!2679 = distinct !DILexicalBlock(scope: !2673, file: !384, line: 129, column: 16)
!2680 = !DILocation(line: 130, column: 5, scope: !2677)
!2681 = !DILocation(line: 133, column: 3, scope: !2679)
!2682 = !DILocation(line: 131, column: 3, scope: !2669)
!2683 = distinct !DISubprogram(name: "initialize_element", scope: !317, file: !317, line: 130, type: !2684, scopeLine: 131, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !124)
!2684 = !DISubroutineType(types: !2685)
!2685 = !{!80}
!2686 = !DILocation(line: 133, column: 9, scope: !2687)
!2687 = distinct !DILexicalBlock(scope: !2688, file: !317, line: 138, column: 3)
!2688 = distinct !DILexicalBlock(scope: !2689, file: !317, line: 137, column: 3)
!2689 = distinct !DILexicalBlock(scope: !2683, file: !317, line: 136, column: 3)
!2690 = !DILocalVariable(name: "tmp", scope: !2683, file: !317, line: 133, type: !66)
!2691 = !DILocation(line: 0, scope: !2683)
!2692 = !DILocation(line: 133, column: 17, scope: !2688)
!2693 = !DILocalVariable(name: "new_element", scope: !2683, file: !317, line: 132, type: !80)
!2694 = !DILocation(line: 135, column: 16, scope: !2688)
!2695 = !DILocation(line: 135, column: 29, scope: !2688)
!2696 = !DILocation(line: 136, column: 16, scope: !2688)
!2697 = !DILocation(line: 136, column: 34, scope: !2688)
!2698 = !DILocalVariable(name: "tmp___0", scope: !2683, file: !317, line: 134, type: !96)
!2699 = !DILocation(line: 137, column: 16, scope: !2688)
!2700 = !DILocation(line: 137, column: 21, scope: !2688)
!2701 = !DILocation(line: 137, column: 22, scope: !2688)
!2702 = !DILocation(line: 138, column: 16, scope: !2688)
!2703 = !DILocation(line: 138, column: 29, scope: !2688)
!2704 = !DILocation(line: 140, column: 3, scope: !2689)
!2705 = distinct !DISubprogram(name: "read_element_start", scope: !317, file: !317, line: 354, type: !1198, scopeLine: 355, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !124)
!2706 = !DILocalVariable(name: "f", arg: 1, scope: !2705, file: !317, line: 354, type: !16)
!2707 = !DILocation(line: 0, scope: !2705)
!2708 = !DILocation(line: 359, column: 7, scope: !2709)
!2709 = distinct !DILexicalBlock(scope: !2710, file: !317, line: 364, column: 3)
!2710 = distinct !DILexicalBlock(scope: !2711, file: !317, line: 363, column: 3)
!2711 = distinct !DILexicalBlock(scope: !2705, file: !317, line: 362, column: 3)
!2712 = !DILocalVariable(name: "c", scope: !2705, file: !317, line: 356, type: !23)
!2713 = !DILocation(line: 361, column: 9, scope: !2714)
!2714 = distinct !DILexicalBlock(scope: !2711, file: !317, line: 361, column: 7)
!2715 = !DILocation(line: 361, column: 7, scope: !2711)
!2716 = !DILocation(line: 363, column: 15, scope: !2717)
!2717 = distinct !DILexicalBlock(scope: !2718, file: !317, line: 363, column: 5)
!2718 = distinct !DILexicalBlock(scope: !2719, file: !317, line: 362, column: 5)
!2719 = distinct !DILexicalBlock(scope: !2714, file: !317, line: 361, column: 16)
!2720 = !DILocalVariable(name: "tmp___1", scope: !2705, file: !317, line: 358, type: !23)
!2721 = !DILocation(line: 363, column: 9, scope: !2722)
!2722 = distinct !DILexicalBlock(scope: !2719, file: !317, line: 363, column: 9)
!2723 = !DILocation(line: 363, column: 9, scope: !2719)
!2724 = !DILocalVariable(name: "tmp___0", scope: !2705, file: !317, line: 357, type: !23)
!2725 = !DILocation(line: 364, column: 5, scope: !2726)
!2726 = distinct !DILexicalBlock(scope: !2722, file: !317, line: 363, column: 18)
!2727 = !DILocation(line: 0, scope: !2722)
!2728 = !DILocation(line: 363, column: 5, scope: !2719)
!2729 = !DILocation(line: 367, column: 9, scope: !2730)
!2730 = distinct !DILexicalBlock(scope: !2711, file: !317, line: 367, column: 7)
!2731 = !DILocation(line: 367, column: 7, scope: !2711)
!2732 = !DILocation(line: 369, column: 15, scope: !2733)
!2733 = distinct !DILexicalBlock(scope: !2734, file: !317, line: 369, column: 5)
!2734 = distinct !DILexicalBlock(scope: !2735, file: !317, line: 368, column: 5)
!2735 = distinct !DILexicalBlock(scope: !2730, file: !317, line: 367, column: 16)
!2736 = !DILocalVariable(name: "tmp___4", scope: !2705, file: !317, line: 360, type: !23)
!2737 = !DILocation(line: 369, column: 9, scope: !2738)
!2738 = distinct !DILexicalBlock(scope: !2735, file: !317, line: 369, column: 9)
!2739 = !DILocation(line: 369, column: 9, scope: !2735)
!2740 = !DILocalVariable(name: "tmp___3", scope: !2705, file: !317, line: 359, type: !23)
!2741 = !DILocation(line: 370, column: 5, scope: !2742)
!2742 = distinct !DILexicalBlock(scope: !2738, file: !317, line: 369, column: 18)
!2743 = !DILocation(line: 0, scope: !2738)
!2744 = !DILocation(line: 369, column: 5, scope: !2735)
!2745 = !DILocation(line: 373, column: 3, scope: !2746)
!2746 = distinct !DILexicalBlock(scope: !2747, file: !317, line: 372, column: 3)
!2747 = distinct !DILexicalBlock(scope: !2711, file: !317, line: 371, column: 3)
!2748 = !DILocation(line: 374, column: 3, scope: !2711)
!2749 = !DILocation(line: 0, scope: !2711)
!2750 = !DILocation(line: 376, column: 1, scope: !2705)
!2751 = distinct !DISubprogram(name: "read_character_stream", scope: !317, file: !317, line: 148, type: !2752, scopeLine: 149, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !124)
!2752 = !DISubroutineType(types: !2753)
!2753 = !{!14, !16, !78}
!2754 = !DILocalVariable(name: "f", arg: 1, scope: !2751, file: !317, line: 148, type: !16)
!2755 = !DILocation(line: 0, scope: !2751)
!2756 = !DILocalVariable(name: "stop_chars", arg: 2, scope: !2751, file: !317, line: 148, type: !78)
!2757 = !DILocalVariable(name: "__cil_tmp12", scope: !2751, file: !317, line: 159, type: !14)
!2758 = !DILocation(line: 159, column: 9, scope: !2751)
!2759 = !DILocalVariable(name: "__cil_tmp13", scope: !2751, file: !317, line: 160, type: !14)
!2760 = !DILocation(line: 160, column: 9, scope: !2751)
!2761 = !DILocalVariable(name: "SINGLEBUFSIZ", scope: !2751, file: !317, line: 150, type: !23)
!2762 = !DILocalVariable(name: "currentbufsiz", scope: !2751, file: !317, line: 151, type: !23)
!2763 = !DILocation(line: 153, column: 9, scope: !2764)
!2764 = distinct !DILexicalBlock(scope: !2765, file: !317, line: 153, column: 3)
!2765 = distinct !DILexicalBlock(scope: !2766, file: !317, line: 163, column: 3)
!2766 = distinct !DILexicalBlock(scope: !2751, file: !317, line: 162, column: 3)
!2767 = !DILocalVariable(name: "tmp", scope: !2751, file: !317, line: 153, type: !66)
!2768 = !DILocalVariable(name: "buf", scope: !2751, file: !317, line: 152, type: !14)
!2769 = !DILocalVariable(name: "i", scope: !2751, file: !317, line: 154, type: !23)
!2770 = !DILocalVariable(name: "c", scope: !2751, file: !317, line: 155, type: !23)
!2771 = !DILocation(line: 157, column: 3, scope: !2772)
!2772 = distinct !DILexicalBlock(scope: !2773, file: !317, line: 158, column: 3)
!2773 = distinct !DILexicalBlock(scope: !2766, file: !317, line: 157, column: 3)
!2774 = !DILocation(line: 0, scope: !2766)
!2775 = !DILocation(line: 157, column: 13, scope: !2772)
!2776 = !DILocation(line: 157, column: 9, scope: !2777)
!2777 = distinct !DILexicalBlock(scope: !2778, file: !317, line: 161, column: 5)
!2778 = distinct !DILexicalBlock(scope: !2779, file: !317, line: 160, column: 5)
!2779 = distinct !DILexicalBlock(scope: !2772, file: !317, line: 157, column: 13)
!2780 = !DILocation(line: 157, column: 14, scope: !2781)
!2781 = distinct !DILexicalBlock(scope: !2779, file: !317, line: 157, column: 9)
!2782 = !DILocation(line: 157, column: 9, scope: !2779)
!2783 = !DILocation(line: 157, column: 7, scope: !2784)
!2784 = distinct !DILexicalBlock(scope: !2781, file: !317, line: 157, column: 22)
!2785 = !DILocation(line: 159, column: 15, scope: !2786)
!2786 = distinct !DILexicalBlock(scope: !2787, file: !317, line: 160, column: 5)
!2787 = distinct !DILexicalBlock(scope: !2779, file: !317, line: 159, column: 5)
!2788 = !DILocalVariable(name: "tmp___0", scope: !2751, file: !317, line: 156, type: !14)
!2789 = !DILocation(line: 159, column: 9, scope: !2790)
!2790 = distinct !DILexicalBlock(scope: !2779, file: !317, line: 159, column: 9)
!2791 = !DILocation(line: 159, column: 9, scope: !2779)
!2792 = !DILocation(line: 161, column: 7, scope: !2793)
!2793 = distinct !DILexicalBlock(scope: !2794, file: !317, line: 161, column: 7)
!2794 = distinct !DILexicalBlock(scope: !2795, file: !317, line: 160, column: 7)
!2795 = distinct !DILexicalBlock(scope: !2790, file: !317, line: 159, column: 18)
!2796 = !DILocation(line: 162, column: 7, scope: !2795)
!2797 = !DILocalVariable(name: "tmp___1", scope: !2751, file: !317, line: 157, type: !23)
!2798 = !DILocation(line: 164, column: 7, scope: !2779)
!2799 = !DILocation(line: 164, column: 24, scope: !2779)
!2800 = !DILocation(line: 164, column: 11, scope: !2779)
!2801 = !DILocation(line: 164, column: 22, scope: !2779)
!2802 = !DILocation(line: 165, column: 27, scope: !2803)
!2803 = distinct !DILexicalBlock(scope: !2779, file: !317, line: 165, column: 9)
!2804 = !DILocation(line: 165, column: 11, scope: !2803)
!2805 = !DILocation(line: 165, column: 9, scope: !2779)
!2806 = !DILocation(line: 167, column: 21, scope: !2807)
!2807 = distinct !DILexicalBlock(scope: !2808, file: !317, line: 166, column: 7)
!2808 = distinct !DILexicalBlock(scope: !2803, file: !317, line: 165, column: 32)
!2809 = !DILocation(line: 167, column: 17, scope: !2810)
!2810 = distinct !DILexicalBlock(scope: !2807, file: !317, line: 168, column: 7)
!2811 = !DILocalVariable(name: "tmp___2", scope: !2751, file: !317, line: 158, type: !66)
!2812 = !DILocation(line: 168, column: 13, scope: !2813)
!2813 = distinct !DILexicalBlock(scope: !2808, file: !317, line: 168, column: 11)
!2814 = !DILocation(line: 168, column: 11, scope: !2808)
!2815 = !DILocation(line: 170, column: 42, scope: !2816)
!2816 = distinct !DILexicalBlock(scope: !2817, file: !317, line: 170, column: 9)
!2817 = distinct !DILexicalBlock(scope: !2818, file: !317, line: 169, column: 9)
!2818 = distinct !DILexicalBlock(scope: !2813, file: !317, line: 168, column: 18)
!2819 = !DILocation(line: 170, column: 9, scope: !2816)
!2820 = !DILocation(line: 171, column: 9, scope: !2818)
!2821 = !DILocation(line: 173, column: 5, scope: !2808)
!2822 = distinct !{!2822, !2771, !2823}
!2823 = !DILocation(line: 174, column: 3, scope: !2772)
!2824 = !DILocation(line: 176, column: 3, scope: !2772)
!2825 = !DILocation(line: 175, column: 9, scope: !2766)
!2826 = !DILocation(line: 175, column: 14, scope: !2766)
!2827 = !DILocation(line: 176, column: 3, scope: !2766)
!2828 = !DILocation(line: 178, column: 1, scope: !2751)
!2829 = distinct !DISubprogram(name: "read_attribute", scope: !317, file: !317, line: 205, type: !2830, scopeLine: 206, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !124)
!2830 = !DISubroutineType(types: !2831)
!2831 = !{!87, !16}
!2832 = !DILocalVariable(name: "f", arg: 1, scope: !2829, file: !317, line: 205, type: !16)
!2833 = !DILocation(line: 0, scope: !2829)
!2834 = !DILocalVariable(name: "__cil_tmp11", scope: !2829, file: !317, line: 216, type: !14)
!2835 = !DILocation(line: 216, column: 9, scope: !2829)
!2836 = !DILocalVariable(name: "__cil_tmp12", scope: !2829, file: !317, line: 217, type: !14)
!2837 = !DILocation(line: 217, column: 9, scope: !2829)
!2838 = !DILocalVariable(name: "__cil_tmp13", scope: !2829, file: !317, line: 218, type: !14)
!2839 = !DILocation(line: 218, column: 9, scope: !2829)
!2840 = !DILocalVariable(name: "__cil_tmp14", scope: !2829, file: !317, line: 219, type: !14)
!2841 = !DILocation(line: 219, column: 9, scope: !2829)
!2842 = !DILocation(line: 208, column: 9, scope: !2843)
!2843 = distinct !DILexicalBlock(scope: !2844, file: !317, line: 223, column: 3)
!2844 = distinct !DILexicalBlock(scope: !2845, file: !317, line: 222, column: 3)
!2845 = distinct !DILexicalBlock(scope: !2829, file: !317, line: 221, column: 3)
!2846 = !DILocalVariable(name: "tmp", scope: !2829, file: !317, line: 208, type: !66)
!2847 = !DILocation(line: 208, column: 19, scope: !2844)
!2848 = !DILocalVariable(name: "new_attribute", scope: !2829, file: !317, line: 207, type: !87)
!2849 = !DILocalVariable(name: "tmp___0", scope: !2829, file: !317, line: 211, type: !14)
!2850 = !DILocation(line: 211, column: 18, scope: !2844)
!2851 = !DILocation(line: 211, column: 33, scope: !2844)
!2852 = !DILocation(line: 213, column: 18, scope: !2844)
!2853 = !DILocation(line: 213, column: 23, scope: !2844)
!2854 = !DILocation(line: 215, column: 13, scope: !2855)
!2855 = distinct !DILexicalBlock(scope: !2844, file: !317, line: 214, column: 3)
!2856 = !DILocalVariable(name: "tmp___1", scope: !2829, file: !317, line: 212, type: !23)
!2857 = !DILocation(line: 215, column: 7, scope: !2858)
!2858 = distinct !DILexicalBlock(scope: !2845, file: !317, line: 215, column: 7)
!2859 = !DILocation(line: 215, column: 7, scope: !2845)
!2860 = !DILocation(line: 215, column: 5, scope: !2861)
!2861 = distinct !DILexicalBlock(scope: !2858, file: !317, line: 215, column: 16)
!2862 = !DILocation(line: 217, column: 7, scope: !2863)
!2863 = distinct !DILexicalBlock(scope: !2864, file: !317, line: 218, column: 3)
!2864 = distinct !DILexicalBlock(scope: !2845, file: !317, line: 217, column: 3)
!2865 = !DILocalVariable(name: "c", scope: !2829, file: !317, line: 209, type: !23)
!2866 = !DILocation(line: 218, column: 3, scope: !2867)
!2867 = distinct !DILexicalBlock(scope: !2864, file: !317, line: 219, column: 3)
!2868 = !DILocation(line: 220, column: 9, scope: !2869)
!2869 = distinct !DILexicalBlock(scope: !2845, file: !317, line: 220, column: 7)
!2870 = !DILocation(line: 220, column: 7, scope: !2845)
!2871 = !DILocation(line: 223, column: 5, scope: !2872)
!2872 = distinct !DILexicalBlock(scope: !2873, file: !317, line: 222, column: 5)
!2873 = distinct !DILexicalBlock(scope: !2874, file: !317, line: 221, column: 5)
!2874 = distinct !DILexicalBlock(scope: !2869, file: !317, line: 220, column: 16)
!2875 = !DILocation(line: 224, column: 5, scope: !2874)
!2876 = !DILocation(line: 220, column: 9, scope: !2877)
!2877 = distinct !DILexicalBlock(scope: !2869, file: !317, line: 220, column: 7)
!2878 = !DILocation(line: 220, column: 7, scope: !2869)
!2879 = !DILocation(line: 223, column: 5, scope: !2880)
!2880 = distinct !DILexicalBlock(scope: !2881, file: !317, line: 222, column: 5)
!2881 = distinct !DILexicalBlock(scope: !2882, file: !317, line: 221, column: 5)
!2882 = distinct !DILexicalBlock(scope: !2877, file: !317, line: 220, column: 16)
!2883 = !DILocation(line: 224, column: 5, scope: !2882)
!2884 = !DILocation(line: 228, column: 13, scope: !2885)
!2885 = distinct !DILexicalBlock(scope: !2886, file: !317, line: 227, column: 3)
!2886 = distinct !DILexicalBlock(scope: !2845, file: !317, line: 226, column: 3)
!2887 = !DILocalVariable(name: "tmp___2", scope: !2829, file: !317, line: 213, type: !14)
!2888 = !DILocation(line: 228, column: 18, scope: !2886)
!2889 = !DILocation(line: 228, column: 33, scope: !2886)
!2890 = !DILocation(line: 228, column: 9, scope: !2891)
!2891 = distinct !DILexicalBlock(scope: !2845, file: !317, line: 228, column: 7)
!2892 = !DILocation(line: 228, column: 7, scope: !2845)
!2893 = !DILocation(line: 230, column: 5, scope: !2894)
!2894 = distinct !DILexicalBlock(scope: !2895, file: !317, line: 230, column: 5)
!2895 = distinct !DILexicalBlock(scope: !2896, file: !317, line: 229, column: 5)
!2896 = distinct !DILexicalBlock(scope: !2891, file: !317, line: 228, column: 18)
!2897 = !DILocation(line: 231, column: 5, scope: !2896)
!2898 = !DILocation(line: 235, column: 13, scope: !2899)
!2899 = distinct !DILexicalBlock(scope: !2900, file: !317, line: 234, column: 3)
!2900 = distinct !DILexicalBlock(scope: !2845, file: !317, line: 233, column: 3)
!2901 = !DILocalVariable(name: "tmp___3", scope: !2829, file: !317, line: 214, type: !23)
!2902 = !DILocation(line: 235, column: 7, scope: !2903)
!2903 = distinct !DILexicalBlock(scope: !2845, file: !317, line: 235, column: 7)
!2904 = !DILocation(line: 235, column: 7, scope: !2845)
!2905 = !DILocation(line: 237, column: 5, scope: !2906)
!2906 = distinct !DILexicalBlock(scope: !2907, file: !317, line: 237, column: 5)
!2907 = distinct !DILexicalBlock(scope: !2908, file: !317, line: 236, column: 5)
!2908 = distinct !DILexicalBlock(scope: !2903, file: !317, line: 235, column: 16)
!2909 = !DILocation(line: 238, column: 5, scope: !2908)
!2910 = !DILocation(line: 242, column: 16, scope: !2911)
!2911 = distinct !DILexicalBlock(scope: !2912, file: !317, line: 241, column: 3)
!2912 = distinct !DILexicalBlock(scope: !2845, file: !317, line: 240, column: 3)
!2913 = !DILocalVariable(name: "startquote", scope: !2829, file: !317, line: 210, type: !23)
!2914 = !DILocation(line: 245, column: 18, scope: !2915)
!2915 = distinct !DILexicalBlock(scope: !2916, file: !317, line: 245, column: 7)
!2916 = distinct !DILexicalBlock(scope: !2845, file: !317, line: 245, column: 3)
!2917 = !DILocation(line: 245, column: 7, scope: !2916)
!2918 = !DILocation(line: 245, column: 5, scope: !2919)
!2919 = distinct !DILexicalBlock(scope: !2915, file: !317, line: 245, column: 25)
!2920 = !DILocation(line: 248, column: 18, scope: !2921)
!2921 = distinct !DILexicalBlock(scope: !2916, file: !317, line: 248, column: 7)
!2922 = !DILocation(line: 248, column: 7, scope: !2916)
!2923 = !DILocation(line: 248, column: 5, scope: !2924)
!2924 = distinct !DILexicalBlock(scope: !2921, file: !317, line: 248, column: 25)
!2925 = !DILocation(line: 251, column: 3, scope: !2916)
!2926 = !DILocation(line: 246, column: 35, scope: !2927)
!2927 = distinct !DILexicalBlock(scope: !2928, file: !317, line: 254, column: 3)
!2928 = distinct !DILexicalBlock(scope: !2916, file: !317, line: 253, column: 3)
!2929 = !DILocation(line: 246, column: 18, scope: !2927)
!2930 = !DILocation(line: 246, column: 33, scope: !2927)
!2931 = !DILocation(line: 247, column: 3, scope: !2916)
!2932 = !DILocation(line: 249, column: 35, scope: !2933)
!2933 = distinct !DILexicalBlock(scope: !2934, file: !317, line: 250, column: 3)
!2934 = distinct !DILexicalBlock(scope: !2916, file: !317, line: 249, column: 3)
!2935 = !DILocation(line: 249, column: 18, scope: !2933)
!2936 = !DILocation(line: 249, column: 33, scope: !2933)
!2937 = !DILocation(line: 250, column: 3, scope: !2916)
!2938 = !DILocation(line: 252, column: 36, scope: !2939)
!2939 = distinct !DILexicalBlock(scope: !2940, file: !317, line: 253, column: 3)
!2940 = distinct !DILexicalBlock(scope: !2916, file: !317, line: 252, column: 3)
!2941 = !DILocation(line: 252, column: 3, scope: !2939)
!2942 = !DILocation(line: 253, column: 3, scope: !2943)
!2943 = distinct !DILexicalBlock(scope: !2940, file: !317, line: 254, column: 3)
!2944 = !DILocation(line: 255, column: 13, scope: !2945)
!2945 = distinct !DILexicalBlock(scope: !2946, file: !317, line: 259, column: 3)
!2946 = distinct !DILexicalBlock(scope: !2845, file: !317, line: 258, column: 3)
!2947 = !DILocalVariable(name: "tmp___4", scope: !2829, file: !317, line: 215, type: !23)
!2948 = !DILocation(line: 255, column: 7, scope: !2949)
!2949 = distinct !DILexicalBlock(scope: !2845, file: !317, line: 255, column: 7)
!2950 = !DILocation(line: 255, column: 7, scope: !2845)
!2951 = !DILocation(line: 257, column: 5, scope: !2952)
!2952 = distinct !DILexicalBlock(scope: !2953, file: !317, line: 257, column: 5)
!2953 = distinct !DILexicalBlock(scope: !2954, file: !317, line: 256, column: 5)
!2954 = distinct !DILexicalBlock(scope: !2949, file: !317, line: 255, column: 16)
!2955 = !DILocation(line: 258, column: 5, scope: !2954)
!2956 = !DILocation(line: 262, column: 25, scope: !2957)
!2957 = distinct !DILexicalBlock(scope: !2958, file: !317, line: 261, column: 3)
!2958 = distinct !DILexicalBlock(scope: !2845, file: !317, line: 260, column: 3)
!2959 = !DILocation(line: 262, column: 18, scope: !2957)
!2960 = !DILocation(line: 262, column: 23, scope: !2957)
!2961 = !DILocation(line: 265, column: 3, scope: !2845)
!2962 = !DILocation(line: 0, scope: !2845)
!2963 = !DILocation(line: 267, column: 1, scope: !2829)
!2964 = distinct !DISubprogram(name: "read_PCDATA", scope: !317, file: !317, line: 184, type: !318, scopeLine: 185, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !124)
!2965 = !DILocalVariable(name: "f", arg: 1, scope: !2964, file: !317, line: 184, type: !16)
!2966 = !DILocation(line: 0, scope: !2964)
!2967 = !DILocalVariable(name: "__cil_tmp5", scope: !2964, file: !317, line: 189, type: !14)
!2968 = !DILocation(line: 189, column: 9, scope: !2964)
!2969 = !DILocation(line: 187, column: 9, scope: !2970)
!2970 = distinct !DILexicalBlock(scope: !2971, file: !317, line: 193, column: 3)
!2971 = distinct !DILexicalBlock(scope: !2972, file: !317, line: 192, column: 3)
!2972 = distinct !DILexicalBlock(scope: !2964, file: !317, line: 191, column: 3)
!2973 = !DILocalVariable(name: "tmp", scope: !2964, file: !317, line: 187, type: !80)
!2974 = !DILocalVariable(name: "new_element", scope: !2964, file: !317, line: 186, type: !80)
!2975 = !DILocation(line: 188, column: 16, scope: !2971)
!2976 = !DILocation(line: 188, column: 29, scope: !2971)
!2977 = !DILocation(line: 189, column: 13, scope: !2978)
!2978 = distinct !DILexicalBlock(scope: !2971, file: !317, line: 189, column: 3)
!2979 = !DILocalVariable(name: "tmp___0", scope: !2964, file: !317, line: 188, type: !14)
!2980 = !DILocation(line: 189, column: 16, scope: !2971)
!2981 = !DILocation(line: 189, column: 29, scope: !2971)
!2982 = !DILocation(line: 189, column: 9, scope: !2983)
!2983 = distinct !DILexicalBlock(scope: !2972, file: !317, line: 189, column: 7)
!2984 = !DILocation(line: 189, column: 7, scope: !2972)
!2985 = !DILocation(line: 191, column: 5, scope: !2986)
!2986 = distinct !DILexicalBlock(scope: !2987, file: !317, line: 191, column: 5)
!2987 = distinct !DILexicalBlock(scope: !2988, file: !317, line: 190, column: 5)
!2988 = distinct !DILexicalBlock(scope: !2983, file: !317, line: 189, column: 18)
!2989 = !DILocation(line: 192, column: 5, scope: !2988)
!2990 = !DILocation(line: 194, column: 3, scope: !2972)
!2991 = !DILocation(line: 0, scope: !2972)
!2992 = !DILocation(line: 196, column: 1, scope: !2964)
!2993 = distinct !DISubprogram(name: "mallocwm", scope: !317, file: !317, line: 68, type: !2994, scopeLine: 69, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !124)
!2994 = !DISubroutineType(types: !2995)
!2995 = !{!66, !23}
!2996 = !DILocalVariable(name: "l", arg: 1, scope: !2993, file: !317, line: 68, type: !23)
!2997 = !DILocation(line: 0, scope: !2993)
!2998 = !DILocalVariable(name: "__cil_tmp4", scope: !2993, file: !317, line: 72, type: !14)
!2999 = !DILocation(line: 72, column: 9, scope: !2993)
!3000 = !DILocation(line: 71, column: 9, scope: !3001)
!3001 = distinct !DILexicalBlock(scope: !3002, file: !317, line: 76, column: 3)
!3002 = distinct !DILexicalBlock(scope: !3003, file: !317, line: 75, column: 3)
!3003 = distinct !DILexicalBlock(scope: !2993, file: !317, line: 74, column: 3)
!3004 = !DILocalVariable(name: "tmp", scope: !2993, file: !317, line: 71, type: !66)
!3005 = !DILocalVariable(name: "t", scope: !2993, file: !317, line: 70, type: !14)
!3006 = !DILocation(line: 72, column: 9, scope: !3007)
!3007 = distinct !DILexicalBlock(scope: !3003, file: !317, line: 72, column: 7)
!3008 = !DILocation(line: 72, column: 7, scope: !3003)
!3009 = !DILocation(line: 74, column: 38, scope: !3010)
!3010 = distinct !DILexicalBlock(scope: !3011, file: !317, line: 74, column: 5)
!3011 = distinct !DILexicalBlock(scope: !3012, file: !317, line: 73, column: 5)
!3012 = distinct !DILexicalBlock(scope: !3007, file: !317, line: 72, column: 12)
!3013 = !DILocation(line: 74, column: 5, scope: !3010)
!3014 = !DILocation(line: 75, column: 5, scope: !3015)
!3015 = distinct !DILexicalBlock(scope: !3011, file: !317, line: 76, column: 5)
!3016 = !DILocation(line: 77, column: 3, scope: !3003)
!3017 = distinct !DISubprogram(name: "skip_read_PI", scope: !317, file: !317, line: 273, type: !3018, scopeLine: 274, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !124)
!3018 = !DISubroutineType(types: !3019)
!3019 = !{!23, !16, !23}
!3020 = !DILocalVariable(name: "f", arg: 1, scope: !3017, file: !317, line: 273, type: !16)
!3021 = !DILocation(line: 0, scope: !3017)
!3022 = !DILocalVariable(name: "strict", arg: 2, scope: !3017, file: !317, line: 273, type: !23)
!3023 = !DILocalVariable(name: "__cil_tmp5", scope: !3017, file: !317, line: 277, type: !14)
!3024 = !DILocation(line: 277, column: 9, scope: !3017)
!3025 = !DILocalVariable(name: "__cil_tmp6", scope: !3017, file: !317, line: 278, type: !14)
!3026 = !DILocation(line: 278, column: 9, scope: !3017)
!3027 = !DILocation(line: 278, column: 3, scope: !3028)
!3028 = distinct !DILexicalBlock(scope: !3029, file: !317, line: 282, column: 3)
!3029 = distinct !DILexicalBlock(scope: !3030, file: !317, line: 281, column: 3)
!3030 = distinct !DILexicalBlock(scope: !3017, file: !317, line: 280, column: 3)
!3031 = !DILocation(line: 278, column: 13, scope: !3028)
!3032 = !DILocation(line: 278, column: 9, scope: !3033)
!3033 = distinct !DILexicalBlock(scope: !3034, file: !317, line: 282, column: 5)
!3034 = distinct !DILexicalBlock(scope: !3035, file: !317, line: 281, column: 5)
!3035 = distinct !DILexicalBlock(scope: !3028, file: !317, line: 278, column: 13)
!3036 = !DILocalVariable(name: "c", scope: !3017, file: !317, line: 275, type: !23)
!3037 = !DILocation(line: 278, column: 14, scope: !3038)
!3038 = distinct !DILexicalBlock(scope: !3035, file: !317, line: 278, column: 9)
!3039 = !DILocation(line: 278, column: 9, scope: !3035)
!3040 = !DILocation(line: 278, column: 7, scope: !3041)
!3041 = distinct !DILexicalBlock(scope: !3038, file: !317, line: 278, column: 22)
!3042 = !DILocation(line: 282, column: 11, scope: !3043)
!3043 = distinct !DILexicalBlock(scope: !3044, file: !317, line: 282, column: 9)
!3044 = distinct !DILexicalBlock(scope: !3035, file: !317, line: 280, column: 5)
!3045 = !DILocation(line: 282, column: 9, scope: !3044)
!3046 = !DILocation(line: 282, column: 7, scope: !3047)
!3047 = distinct !DILexicalBlock(scope: !3043, file: !317, line: 282, column: 18)
!3048 = !DILocation(line: 285, column: 11, scope: !3049)
!3049 = distinct !DILexicalBlock(scope: !3044, file: !317, line: 285, column: 9)
!3050 = !DILocation(line: 285, column: 9, scope: !3044)
!3051 = !DILocation(line: 285, column: 7, scope: !3052)
!3052 = distinct !DILexicalBlock(scope: !3049, file: !317, line: 285, column: 18)
!3053 = !DILocation(line: 291, column: 11, scope: !3054)
!3054 = distinct !DILexicalBlock(scope: !3044, file: !317, line: 291, column: 9)
!3055 = !DILocation(line: 291, column: 9, scope: !3044)
!3056 = !DILocation(line: 291, column: 7, scope: !3057)
!3057 = distinct !DILexicalBlock(scope: !3054, file: !317, line: 291, column: 18)
!3058 = !DILocation(line: 280, column: 5, scope: !3044)
!3059 = !DILocation(line: 283, column: 38, scope: !3060)
!3060 = distinct !DILexicalBlock(scope: !3061, file: !317, line: 283, column: 5)
!3061 = distinct !DILexicalBlock(scope: !3044, file: !317, line: 282, column: 5)
!3062 = !DILocation(line: 283, column: 5, scope: !3060)
!3063 = !DILocation(line: 284, column: 5, scope: !3044)
!3064 = !DILocation(line: 287, column: 5, scope: !3065)
!3065 = distinct !DILexicalBlock(scope: !3066, file: !317, line: 287, column: 5)
!3066 = distinct !DILexicalBlock(scope: !3044, file: !317, line: 286, column: 5)
!3067 = !DILocation(line: 287, column: 15, scope: !3065)
!3068 = !DILocation(line: 287, column: 11, scope: !3069)
!3069 = distinct !DILexicalBlock(scope: !3070, file: !317, line: 291, column: 7)
!3070 = distinct !DILexicalBlock(scope: !3071, file: !317, line: 290, column: 7)
!3071 = distinct !DILexicalBlock(scope: !3065, file: !317, line: 287, column: 15)
!3072 = !DILocation(line: 287, column: 16, scope: !3073)
!3073 = distinct !DILexicalBlock(scope: !3071, file: !317, line: 287, column: 11)
!3074 = !DILocation(line: 287, column: 11, scope: !3071)
!3075 = !DILocation(line: 287, column: 9, scope: !3076)
!3076 = distinct !DILexicalBlock(scope: !3073, file: !317, line: 287, column: 24)
!3077 = !DILocation(line: 288, column: 13, scope: !3078)
!3078 = distinct !DILexicalBlock(scope: !3071, file: !317, line: 288, column: 11)
!3079 = !DILocation(line: 288, column: 11, scope: !3071)
!3080 = !DILocation(line: 288, column: 9, scope: !3081)
!3081 = distinct !DILexicalBlock(scope: !3078, file: !317, line: 288, column: 20)
!3082 = distinct !{!3082, !3064, !3083}
!3083 = !DILocation(line: 290, column: 5, scope: !3065)
!3084 = !DILocation(line: 292, column: 5, scope: !3065)
!3085 = !DILocation(line: 290, column: 5, scope: !3044)
!3086 = !DILocation(line: 294, column: 9, scope: !3087)
!3087 = distinct !DILexicalBlock(scope: !3044, file: !317, line: 294, column: 9)
!3088 = !DILocation(line: 294, column: 9, scope: !3044)
!3089 = !DILocation(line: 296, column: 40, scope: !3090)
!3090 = distinct !DILexicalBlock(scope: !3091, file: !317, line: 296, column: 7)
!3091 = distinct !DILexicalBlock(scope: !3092, file: !317, line: 295, column: 7)
!3092 = distinct !DILexicalBlock(scope: !3087, file: !317, line: 294, column: 17)
!3093 = !DILocation(line: 296, column: 7, scope: !3090)
!3094 = !DILocation(line: 297, column: 7, scope: !3092)
!3095 = !DILocation(line: 300, column: 5, scope: !3044)
!3096 = distinct !{!3096, !3027, !3097}
!3097 = !DILocation(line: 303, column: 3, scope: !3028)
!3098 = !DILocation(line: 305, column: 3, scope: !3028)
!3099 = !DILocation(line: 305, column: 9, scope: !3100)
!3100 = distinct !DILexicalBlock(scope: !3101, file: !317, line: 309, column: 3)
!3101 = distinct !DILexicalBlock(scope: !3030, file: !317, line: 308, column: 3)
!3102 = !DILocalVariable(name: "tmp", scope: !3017, file: !317, line: 276, type: !23)
!3103 = !DILocation(line: 305, column: 7, scope: !3104)
!3104 = distinct !DILexicalBlock(scope: !3030, file: !317, line: 305, column: 7)
!3105 = !DILocation(line: 305, column: 7, scope: !3030)
!3106 = !DILocation(line: 306, column: 5, scope: !3107)
!3107 = distinct !DILexicalBlock(scope: !3104, file: !317, line: 305, column: 12)
!3108 = !DILocation(line: 308, column: 3, scope: !3030)
!3109 = !DILocation(line: 0, scope: !3030)
!3110 = !DILocation(line: 310, column: 1, scope: !3017)
!3111 = distinct !DISubprogram(name: "skip_read_comment", scope: !317, file: !317, line: 316, type: !1198, scopeLine: 317, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !124)
!3112 = !DILocalVariable(name: "f", arg: 1, scope: !3111, file: !317, line: 316, type: !16)
!3113 = !DILocation(line: 0, scope: !3111)
!3114 = !DILocalVariable(name: "prev", scope: !3111, file: !317, line: 319, type: !23)
!3115 = !DILocalVariable(name: "prevprev", scope: !3111, file: !317, line: 320, type: !23)
!3116 = !DILocation(line: 323, column: 7, scope: !3117)
!3117 = distinct !DILexicalBlock(scope: !3118, file: !317, line: 321, column: 3)
!3118 = distinct !DILexicalBlock(scope: !3119, file: !317, line: 326, column: 3)
!3119 = distinct !DILexicalBlock(scope: !3111, file: !317, line: 325, column: 3)
!3120 = !DILocalVariable(name: "c", scope: !3111, file: !317, line: 318, type: !23)
!3121 = !DILocation(line: 323, column: 9, scope: !3122)
!3122 = distinct !DILexicalBlock(scope: !3119, file: !317, line: 323, column: 7)
!3123 = !DILocation(line: 323, column: 7, scope: !3119)
!3124 = !DILocation(line: 325, column: 5, scope: !3125)
!3125 = distinct !DILexicalBlock(scope: !3126, file: !317, line: 325, column: 5)
!3126 = distinct !DILexicalBlock(scope: !3127, file: !317, line: 324, column: 5)
!3127 = distinct !DILexicalBlock(scope: !3122, file: !317, line: 323, column: 16)
!3128 = !DILocation(line: 326, column: 11, scope: !3129)
!3129 = distinct !DILexicalBlock(scope: !3126, file: !317, line: 327, column: 5)
!3130 = !DILocalVariable(name: "tmp", scope: !3111, file: !317, line: 321, type: !23)
!3131 = !DILocation(line: 326, column: 5, scope: !3127)
!3132 = !DILocation(line: 328, column: 7, scope: !3133)
!3133 = distinct !DILexicalBlock(scope: !3134, file: !317, line: 329, column: 3)
!3134 = distinct !DILexicalBlock(scope: !3119, file: !317, line: 328, column: 3)
!3135 = !DILocation(line: 328, column: 9, scope: !3136)
!3136 = distinct !DILexicalBlock(scope: !3119, file: !317, line: 328, column: 7)
!3137 = !DILocation(line: 328, column: 7, scope: !3119)
!3138 = !DILocation(line: 330, column: 5, scope: !3139)
!3139 = distinct !DILexicalBlock(scope: !3140, file: !317, line: 330, column: 5)
!3140 = distinct !DILexicalBlock(scope: !3141, file: !317, line: 329, column: 5)
!3141 = distinct !DILexicalBlock(scope: !3136, file: !317, line: 328, column: 16)
!3142 = !DILocation(line: 331, column: 15, scope: !3143)
!3143 = distinct !DILexicalBlock(scope: !3140, file: !317, line: 332, column: 5)
!3144 = !DILocalVariable(name: "tmp___0", scope: !3111, file: !317, line: 322, type: !23)
!3145 = !DILocation(line: 331, column: 5, scope: !3141)
!3146 = !DILocation(line: 334, column: 3, scope: !3147)
!3147 = distinct !DILexicalBlock(scope: !3148, file: !317, line: 334, column: 3)
!3148 = distinct !DILexicalBlock(scope: !3119, file: !317, line: 333, column: 3)
!3149 = !DILocation(line: 0, scope: !3119)
!3150 = !DILocation(line: 334, column: 13, scope: !3147)
!3151 = !DILocation(line: 334, column: 9, scope: !3152)
!3152 = distinct !DILexicalBlock(scope: !3153, file: !317, line: 338, column: 5)
!3153 = distinct !DILexicalBlock(scope: !3154, file: !317, line: 337, column: 5)
!3154 = distinct !DILexicalBlock(scope: !3147, file: !317, line: 334, column: 13)
!3155 = !DILocation(line: 334, column: 14, scope: !3156)
!3156 = distinct !DILexicalBlock(scope: !3154, file: !317, line: 334, column: 9)
!3157 = !DILocation(line: 334, column: 9, scope: !3154)
!3158 = !DILocation(line: 334, column: 7, scope: !3159)
!3159 = distinct !DILexicalBlock(scope: !3156, file: !317, line: 334, column: 22)
!3160 = !DILocation(line: 336, column: 14, scope: !3161)
!3161 = distinct !DILexicalBlock(scope: !3154, file: !317, line: 336, column: 9)
!3162 = !DILocation(line: 336, column: 9, scope: !3154)
!3163 = !DILocation(line: 336, column: 20, scope: !3164)
!3164 = distinct !DILexicalBlock(scope: !3165, file: !317, line: 336, column: 11)
!3165 = distinct !DILexicalBlock(scope: !3161, file: !317, line: 336, column: 21)
!3166 = !DILocation(line: 336, column: 11, scope: !3165)
!3167 = !DILocation(line: 336, column: 15, scope: !3168)
!3168 = distinct !DILexicalBlock(scope: !3169, file: !317, line: 336, column: 13)
!3169 = distinct !DILexicalBlock(scope: !3164, file: !317, line: 336, column: 27)
!3170 = !DILocation(line: 336, column: 13, scope: !3169)
!3171 = !DILocation(line: 337, column: 11, scope: !3172)
!3172 = distinct !DILexicalBlock(scope: !3168, file: !317, line: 336, column: 22)
!3173 = !DILocation(line: 339, column: 7, scope: !3169)
!3174 = !DILocation(line: 340, column: 5, scope: !3165)
!3175 = distinct !{!3175, !3146, !3176}
!3176 = !DILocation(line: 340, column: 3, scope: !3147)
!3177 = !DILocation(line: 342, column: 3, scope: !3147)
!3178 = !DILocation(line: 342, column: 13, scope: !3179)
!3179 = distinct !DILexicalBlock(scope: !3180, file: !317, line: 346, column: 3)
!3180 = distinct !DILexicalBlock(scope: !3119, file: !317, line: 345, column: 3)
!3181 = !DILocalVariable(name: "tmp___1", scope: !3111, file: !317, line: 323, type: !23)
!3182 = !DILocation(line: 342, column: 7, scope: !3183)
!3183 = distinct !DILexicalBlock(scope: !3119, file: !317, line: 342, column: 7)
!3184 = !DILocation(line: 342, column: 7, scope: !3119)
!3185 = !DILocation(line: 343, column: 5, scope: !3186)
!3186 = distinct !DILexicalBlock(scope: !3183, file: !317, line: 342, column: 16)
!3187 = !DILocation(line: 346, column: 3, scope: !3119)
!3188 = !DILocation(line: 348, column: 1, scope: !3111)
