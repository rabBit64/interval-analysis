; ModuleID = '/tmp/tmp.ll'
source_filename = "c/gbsplay-0.0.91.c"
target datalayout = "e-m:o-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-apple-macosx10.15.0"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, i8*, i8*, i8*, i8*, i32, i32, [24 x i8] }
%struct._IO_marker = type { %struct._IO_marker*, %struct._IO_FILE*, i32 }
%struct.output_plugin = type { i8*, i8*, i64, i64 (i32, i64)*, i32 (i32)*, i32 (i64, i32, i8)*, i32 (i8*, i32)*, void ()* }
%union.__anonunion_gbcpu_regs_u_28 = type { %struct.__anonstruct_rn_29 }
%struct.__anonstruct_rn_29 = type { i8, i8, i8, i8, i8, i8, i8, i8, i16, i16 }
%struct.opinfo = type { void (i32, %struct.opinfo*)* }
%struct.gbhw_buffer = type { i16*, i64, i64, i64, i64, i64, i64 }
%struct.gbhw_channel = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.termios = type { i32, i32, i32, i32, i8, [32 x i8], i32, i32 }
%struct.cfg_option = type { i8*, i8*, void (i8*)* }
%struct.gbs = type { i8*, i64, i64, i64, i16, i16, i16, i16, i8, i8, i8*, i8*, i8*, i64, i8*, i8*, i32, i32, i32, %struct.gbs_subsong_info*, i8*, [99 x i8], i8*, i64, i64, i16, i16, i16, i16, i16, i16, i64, i64, i64, i64, i64, i64, i64 (%struct.gbs*, i8*)*, i8* }
%struct.gbs_subsong_info = type { i32, i8* }
%struct.stat = type { i64, i16, i64, i32, i32, i32, i32, i64, i16, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, i64, i64 }
%struct.timespec = type { i64, i64 }
%struct.sigaction = type { %union.__anonunion___sigaction_handler_47, %struct.__anonstruct___sigset_t_7, i32, void ()* }
%union.__anonunion___sigaction_handler_47 = type { void (i32)* }
%struct.__anonstruct___sigset_t_7 = type { [16 x i64] }

@c = internal global i64 0, align 8, !dbg !0
@.str = private unnamed_addr constant [6 x i8] c"[bln]\00", align 1
@state = internal global i64 0, align 8, !dbg !330
@nextstate = internal global i64 0, align 8, !dbg !332
@.str.1 = private unnamed_addr constant [11 x i8] c"[a-zA-Z_-]\00", align 1
@.str.2 = private unnamed_addr constant [6 x i8] c"[0-9]\00", align 1
@filename = internal global i8* null, align 8, !dbg !334
@.str.3 = private unnamed_addr constant [2 x i8] c"r\00", align 1
@cfg_file = internal global %struct._IO_FILE* null, align 8, !dbg !326
@nextchar_state = internal global i64 0, align 8, !dbg !328
@cfg_line = internal global i64 0, align 8, !dbg !321
@cfg_char = internal global i64 0, align 8, !dbg !324
@.str.4 = private unnamed_addr constant [9 x i8] c"[a-zA-Z]\00", align 1
@.str.5 = private unnamed_addr constant [2 x i8] c"=\00", align 1
@.str.6 = private unnamed_addr constant [35 x i8] c"Unknown option %s at %s line %ld.\0A\00", align 1
@stderr = external global %struct._IO_FILE*, align 8
@.str.7 = private unnamed_addr constant [5 x i8] c"HOME\00", align 1
@.str.8 = private unnamed_addr constant [26 x i8] c"Memory allocation failed!\00", align 1
@.str.9 = private unnamed_addr constant [4 x i8] c"%s\0A\00", align 1
@.str.10 = private unnamed_addr constant [6 x i8] c"%s/%s\00", align 1
@.str.11 = private unnamed_addr constant [5 x i8] c"midi\00", align 1
@.str.12 = private unnamed_addr constant [18 x i8] c"MIDI sound driver\00", align 1
@plugout_midi = constant %struct.output_plugin { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.11, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.12, i32 0, i32 0), i64 0, i64 (i32, i64)* @midi_open, i32 (i32)* @midi_skip, i32 (i64, i32, i8)* @midi_io, i32 (i8*, i32)* @midi_write, void ()* @midi_close }, align 8, !dbg !295
@putlookup = internal global [256 x void (i32, i8)*] [void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put, void (i32, i8)* @none_put], align 16, !dbg !479
@getlookup = internal global [256 x i32 (i32)*] [i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get, i32 (i32)* @none_get], align 16, !dbg !486
@gbcpu_regs = common global %union.__anonunion_gbcpu_regs_u_28 zeroinitializer, align 2, !dbg !336
@gbcpu_halted = common global i64 0, align 8, !dbg !359
@gbcpu_stopped = common global i64 0, align 8, !dbg !363
@gbcpu_if = common global i64 0, align 8, !dbg !361
@ops = internal constant [256 x %struct.opinfo] [%struct.opinfo { void (i32, %struct.opinfo*)* @op_nop }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_ld_reg16_imm }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_ld_reg16_a }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_inc16 }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_inc }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_dec }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_ld_reg8_imm }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_rlca }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_ld_ind16_sp }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_add_hl }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_ld_reg16_a }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_dec16 }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_inc }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_dec }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_ld_reg8_imm }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_rrca }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_stop }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_ld_reg16_imm }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_ld_reg16_a }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_inc16 }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_inc }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_dec }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_ld_reg8_imm }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_rla }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_jr }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_add_hl }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_ld_reg16_a }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_dec16 }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_inc }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_dec }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_ld_reg8_imm }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_rra }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_jr_cond }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_ld_reg16_imm }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_ld_reg16_a }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_inc16 }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_inc }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_dec }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_ld_reg8_imm }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_unknown }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_jr_cond }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_add_hl }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_ld_reg16_a }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_dec16 }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_inc }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_dec }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_ld_reg8_imm }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_cpl }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_jr_cond }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_ld_reg16_imm }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_ld_reg16_a }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_inc16 }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_inc }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_dec }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_ld_reg8_imm }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_scf }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_jr_cond }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_add_hl }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_ld_reg16_a }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_dec16 }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_inc }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_dec }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_ld_reg8_imm }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_ccf }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_ld }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_ld }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_ld }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_ld }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_ld }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_ld }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_ld }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_ld }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_ld }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_ld }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_ld }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_ld }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_ld }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_ld }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_ld }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_ld }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_ld }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_ld }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_ld }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_ld }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_ld }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_ld }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_ld }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_ld }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_ld }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_ld }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_ld }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_ld }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_ld }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_ld }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_ld }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_ld }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_ld }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_ld }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_ld }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_ld }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_ld }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_ld }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_ld }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_ld }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_ld }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_ld }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_ld }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_ld }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_ld }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_ld }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_ld }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_ld }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_ld }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_ld }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_ld }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_ld }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_ld }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_ld }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_halt }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_ld }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_ld }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_ld }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_ld }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_ld }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_ld }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_ld }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_ld }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_ld }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_add }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_add }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_add }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_add }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_add }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_add }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_add }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_add }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_adc }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_adc }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_adc }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_adc }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_adc }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_adc }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_adc }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_adc }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_sub }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_sub }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_sub }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_sub }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_sub }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_sub }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_sub }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_sub }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_sbc }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_sbc }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_sbc }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_sbc }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_sbc }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_sbc }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_sbc }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_sbc }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_and }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_and }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_and }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_and }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_and }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_and }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_and }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_and }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_xor }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_xor }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_xor }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_xor }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_xor }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_xor }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_xor }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_xor }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_or }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_or }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_or }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_or }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_or }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_or }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_or }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_or }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_cp }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_cp }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_cp }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_cp }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_cp }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_cp }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_cp }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_unknown }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_ret_cond }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_pop }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_jp_cond }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_jp }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_call_cond }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_push }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_add_imm }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_rst }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_ret_cond }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_ret }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_jp_cond }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_cbprefix }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_call_cond }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_call }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_adc_imm }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_rst }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_ret_cond }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_pop }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_jp_cond }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_unknown }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_call_cond }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_push }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_sub_imm }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_rst }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_ret_cond }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_reti }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_jp_cond }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_unknown }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_call_cond }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_unknown }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_sbc_imm }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_rst }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_ldh }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_pop }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_ldh }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_unknown }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_unknown }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_push }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_and_imm }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_rst }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_add_sp_imm }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_jp_hl }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_ld_ind16_a }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_unknown }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_unknown }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_unknown }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_xor_imm }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_rst }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_ldh }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_pop }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_ldh }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_di }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_unknown }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_push }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_or_imm }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_rst }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_ld_hlsp }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_ld_sphl }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_ld_imm }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_ei }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_unknown }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_unknown }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_cp_imm }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_rst }], align 16, !dbg !493
@.str.13 = private unnamed_addr constant [48 x i8] c"CPU locked up (halt with interrupts disabled).\0A\00", align 1
@crc_table = internal global [256 x i64] zeroinitializer, align 16, !dbg !366
@.str.14 = private unnamed_addr constant [47 x i8] c"Subsong number out of range (min=0, max=%ld).\0A\00", align 1
@.str.15 = private unnamed_addr constant [255 x i8] c"GBSVersion:     %ld\0ATitle:          \22%s\22\0AAuthor:         \22%s\22\0ACopyright:      \22%s\22\0ALoad address:   0x%04x\0AInit address:   0x%04x\0APlay address:   0x%04x\0AStack pointer:  0x%04x\0AFile size:      0x%08x\0AROM size:       0x%08lx (%ld banks)\0ASubsongs:       %ld\0A\00", align 1
@.str.16 = private unnamed_addr constant [3 x i8] c"OK\00", align 1
@.str.17 = private unnamed_addr constant [7 x i8] c"Failed\00", align 1
@.str.18 = private unnamed_addr constant [30 x i8] c"CRC32:\09\090x%08lx/0x%08lx (%s)\0A\00", align 1
@.str.19 = private unnamed_addr constant [16 x i8] c"Subsong %03ld:\09\00", align 1
@.str.20 = private unnamed_addr constant [6 x i8] c"\22%s\22 \00", align 1
@.str.21 = private unnamed_addr constant [9 x i8] c"untitled\00", align 1
@.str.22 = private unnamed_addr constant [4 x i8] c"%s \00", align 1
@.str.23 = private unnamed_addr constant [15 x i8] c"(%ld seconds)\0A\00", align 1
@.str.24 = private unnamed_addr constant [14 x i8] c"no time limit\00", align 1
@.str.25 = private unnamed_addr constant [23 x i8] c"Could not open %s: %s\0A\00", align 1
@.str.26 = private unnamed_addr constant [5 x i8] c"GBSX\00", align 1
@.str.27 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.28 = private unnamed_addr constant [4 x i8] c"GBS\00", align 1
@.str.29 = private unnamed_addr constant [20 x i8] c"Not a GBS-File: %s\0A\00", align 1
@.str.30 = private unnamed_addr constant [29 x i8] c"GBS Version %d unsupported.\0A\00", align 1
@.str.31 = private unnamed_addr constant [76 x i8] c"Warning: Extended header found, but CRC does not match (0x%08x != 0x%08x).\0A\00", align 1
@.str.32 = private unnamed_addr constant [54 x i8] c"Warning: File CRC does not match (0x%08x != 0x%08x).\0A\00", align 1
@playercode = internal constant [127 x i8] c"\F5\E5\010\00\11\10\FF!\9F\00*\12\13\0Bx\B1 \F8\E1\E5\01\0E\00\09*\E0\06*\E0\07\11\FF\FF\CBW>\01(\02>\04\12\E1\F1W\E5\01\08\00\09*foz\01\8C\00\C5\E9\FBv\E1\E5\01\0A\00\09*foz\01\9D\00\C5\E9\18\EE\80\BF\00\00\BF\00?\00\00\BF\7F\FF\9F\00\BF\00\FF\00\00\BFw\F3\F1\00\00\00\00\00\00\00\00\00\AC\DD\DAH6\02\CF\16,\04\E5,\AC\DD\DAH", align 16, !dbg !509
@master_dstvol = internal global i64 0, align 8, !dbg !429
@master_volume = internal global i64 0, align 8, !dbg !425
@master_fade = internal global i64 0, align 8, !dbg !427
@callback = internal global void (%struct.gbhw_buffer*, i8*)* null, align 8, !dbg !433
@callbackpriv = internal global i8* null, align 8, !dbg !438
@iocallback = internal global void (i64, i32, i8, i8*)* null, align 8, !dbg !440
@iocallback_priv = internal global i8* null, align 8, !dbg !445
@soundbuf = internal global %struct.gbhw_buffer* null, align 8, !dbg !515
@impbuf = internal global %struct.gbhw_buffer* null, align 8, !dbg !517
@impulse_w_shift = internal global i64 5, align 8, !dbg !519
@.str.33 = private unnamed_addr constant [27 x i8] c"Memory allocation failed!\0A\00", align 1
@.str.34 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@sound_div_tc = internal global i64 0, align 8, !dbg !521
@lminval = internal global i64 0, align 8, !dbg !417
@lmaxval = internal global i64 0, align 8, !dbg !419
@rminval = internal global i64 0, align 8, !dbg !421
@rmaxval = internal global i64 0, align 8, !dbg !423
@gbhw_ch = common global [4 x %struct.gbhw_channel] zeroinitializer, align 16, !dbg !372
@rom = internal global i8* null, align 8, !dbg !399
@lastbank = internal global i64 0, align 8, !dbg !415
@rombank = internal global i64 1, align 8, !dbg !523
@extram = internal global [8192 x i8] zeroinitializer, align 16, !dbg !406
@intram = internal global [8192 x i8] zeroinitializer, align 16, !dbg !401
@hiram = internal global [128 x i8] zeroinitializer, align 16, !dbg !413
@ioregs = internal global [128 x i8] zeroinitializer, align 16, !dbg !408
@sum_cycles = internal global i64 0, align 8, !dbg !431
@base_impulse = internal global i16* null, align 8, !dbg !534
@impulse_n_shift = internal global i64 7, align 8, !dbg !536
@impulse_cutoff = internal global double 1.000000e+00, align 8, !dbg !538
@pause_output = internal global i64 0, align 8, !dbg !540
@vblankctr = internal global i64 70256, align 8, !dbg !542
@timerctr = internal global i64 70256, align 8, !dbg !544
@timertc = internal global i64 70256, align 8, !dbg !562
@.str.35 = private unnamed_addr constant [4 x i8] c"oss\00", align 1
@.str.36 = private unnamed_addr constant [17 x i8] c"OSS sound driver\00", align 1
@plugout_devdsp = constant %struct.output_plugin { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.35, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.36, i32 0, i32 0), i64 0, i64 (i32, i64)* @devdsp_open, i32 (i32)* null, i32 (i64, i32, i8)* null, i32 (i8*, i32)* @devdsp_write, void ()* @devdsp_close }, align 8, !dbg !315
@.str.37 = private unnamed_addr constant [7 x i8] c"stdout\00", align 1
@.str.38 = private unnamed_addr constant [19 x i8] c"STDOUT file writer\00", align 1
@plugout_stdout = constant %struct.output_plugin { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.37, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.38, i32 0, i32 0), i64 1, i64 (i32, i64)* @stdout_open, i32 (i32)* null, i32 (i64, i32, i8)* null, i32 (i8*, i32)* @stdout_write, void ()* @stdout_close }, align 8, !dbg !318
@.str.39 = private unnamed_addr constant [4 x i8] c"big\00", align 1
@.str.40 = private unnamed_addr constant [7 x i8] c"little\00", align 1
@.str.41 = private unnamed_addr constant [7 x i8] c"native\00", align 1
@.str.42 = private unnamed_addr constant [8 x i8] c"invalid\00", align 1
@.str.43 = private unnamed_addr constant [31 x i8] c"\0ACaught signal %d, exiting...\0A\00", align 1
@ots = internal global %struct.termios zeroinitializer, align 4, !dbg !449
@redraw = internal global i64 0, align 8, !dbg !566
@random_seed = common global i64 0, align 8, !dbg !452
@cfgfile = internal constant [11 x i8] c".gbsplayrc\00", align 1, !dbg !568
@.str.44 = private unnamed_addr constant [15 x i8] c"/etc/gbsplayrc\00", align 1
@options = internal constant [11 x %struct.cfg_option] [%struct.cfg_option { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.92, i32 0, i32 0), i8* bitcast (i64* @rate to i8*), void (i8*)* @cfg_long }, %struct.cfg_option { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.93, i32 0, i32 0), i8* bitcast (i64* @refresh_delay to i8*), void (i8*)* @cfg_long }, %struct.cfg_option { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.94, i32 0, i32 0), i8* bitcast (i64* @verbosity to i8*), void (i8*)* @cfg_long }, %struct.cfg_option { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.95, i32 0, i32 0), i8* bitcast (i32* @endian to i8*), void (i8*)* @cfg_endian }, %struct.cfg_option { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.96, i32 0, i32 0), i8* bitcast (i64* @subsong_timeout to i8*), void (i8*)* @cfg_long }, %struct.cfg_option { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.97, i32 0, i32 0), i8* bitcast (i64* @subsong_gap to i8*), void (i8*)* @cfg_long }, %struct.cfg_option { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.98, i32 0, i32 0), i8* bitcast (i64* @fadeout to i8*), void (i8*)* @cfg_long }, %struct.cfg_option { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.99, i32 0, i32 0), i8* bitcast (i64* @silence_timeout to i8*), void (i8*)* @cfg_long }, %struct.cfg_option { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.100, i32 0, i32 0), i8* bitcast (i8** @sound_name to i8*), void (i8*)* @cfg_string }, %struct.cfg_option { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.101, i32 0, i32 0), i8* bitcast (i64* @loopmode to i8*), void (i8*)* @cfg_long }, %struct.cfg_option zeroinitializer], align 16, !dbg !573
@sound_open = internal global i64 (i32, i64)* null, align 8, !dbg !454
@endian = internal global i32 2, align 4, !dbg !613
@rate = internal global i64 44100, align 8, !dbg !615
@.str.45 = private unnamed_addr constant [35 x i8] c"Could not open output plugin \22%s\22\0A\00", align 1
@sound_name = internal global i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.35, i32 0, i32 0), align 8, !dbg !617
@.str.46 = private unnamed_addr constant [4 x i8] c"%ld\00", align 1
@subsong_start = internal global i64 -1, align 8, !dbg !619
@subsong_stop = internal global i64 -1, align 8, !dbg !621
@subsong_timeout = internal global i64 120, align 8, !dbg !623
@silence_timeout = internal global i64 2, align 8, !dbg !625
@subsong_gap = internal global i64 2, align 8, !dbg !627
@fadeout = internal global i64 3, align 8, !dbg !629
@buf = internal global %struct.gbhw_buffer { i16* getelementptr inbounds ([4096 x i16], [4096 x i16]* @samples, i32 0, i32 0), i64 0, i64 0, i64 0, i64 8192, i64 0, i64 0 }, align 8, !dbg !635
@sound_skip = internal global i32 (i32)* null, align 8, !dbg !456
@quit = internal global i64 0, align 8, !dbg !642
@refresh_delay = internal global i64 33, align 8, !dbg !644
@verbosity = internal global i64 3, align 8, !dbg !646
@sound_close = internal global void ()* null, align 8, !dbg !458
@.str.47 = private unnamed_addr constant [28 x i8] c"Available output plugins:\0A\0A\00", align 1
@plugouts = internal global [4 x %struct.output_plugin*] [%struct.output_plugin* @plugout_devdsp, %struct.output_plugin* @plugout_stdout, %struct.output_plugin* @plugout_midi, %struct.output_plugin* null], align 16, !dbg !653
@.str.48 = private unnamed_addr constant [31 x i8] c"No output plugins available.\0A\0A\00", align 1
@.str.49 = private unnamed_addr constant [9 x i8] c"%s\09- %s\0A\00", align 1
@stdout = external global %struct._IO_FILE*, align 8
@.str.50 = private unnamed_addr constant [117 x i8] c"Usage: %s [option] <gbs-file>\0A\0AAvailable options are:\0A  -h  display this help and exit\0A  -V  print version and exit\0A\00", align 1
@myname = common global i8* null, align 8, !dbg !460
@.str.51 = private unnamed_addr constant [15 x i8] c"gbsplay 0.0.91\00", align 1
@.str.52 = private unnamed_addr constant [3 x i8] c"hV\00", align 1
@optind = external global i32, align 4
@fd = common global i32 0, align 4, !dbg !447
@.str.53 = private unnamed_addr constant [40 x i8] c"'%s' expected at %s line %ld char %ld.\0A\00", align 1
@.str.54 = private unnamed_addr constant [24 x i8] c"cfg_file != ((void *)0)\00", align 1
@.str.55 = private unnamed_addr constant [56 x i8] c"/home/wslee/benchmarks/sound/gbsplay-0.0.91/cfgparser.c\00", align 1
@.str.56 = private unnamed_addr constant [9 x i8] c"nextchar\00", align 1
@cycles_prev = internal global i64 0, align 8, !dbg !463
@file = internal global %struct._IO_FILE* null, align 8, !dbg !465
@track_length_offset = internal global i64 0, align 8, !dbg !467
@track_length = internal global i64 0, align 8, !dbg !469
@.str.57 = private unnamed_addr constant [15 x i8] c"gbsplay-%d.mid\00", align 1
@.str.58 = private unnamed_addr constant [3 x i8] c"wb\00", align 1
@.str.59 = private unnamed_addr constant [5 x i8] c"MThd\00", align 1
@.str.60 = private unnamed_addr constant [5 x i8] c"MTrk\00", align 1
@volume = internal global [4 x i32] zeroinitializer, align 16, !dbg !471
@div___0 = internal global [4 x i64] zeroinitializer, align 16, !dbg !474
@note = internal global [4 x i64] zeroinitializer, align 16, !dbg !477
@.str.61 = private unnamed_addr constant [24 x i8] c"\0A\0AUnknown opcode %02x.\0A\00", align 1
@cbops = internal constant [8 x %struct.opinfo] [%struct.opinfo { void (i32, %struct.opinfo*)* @op_rlc }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_rrc }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_rl }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_rr }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_sla }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_sra }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_swap }, %struct.opinfo { void (i32, %struct.opinfo*)* @op_srl }], align 16, !dbg !504
@.str.62 = private unnamed_addr constant [30 x i8] c"\0A\0AUnknown CB subopcode %02x.\0A\00", align 1
@.str.63 = private unnamed_addr constant [18 x i8] c"sound_div_tc != 0\00", align 1
@.str.64 = private unnamed_addr constant [51 x i8] c"/home/wslee/benchmarks/sound/gbsplay-0.0.91/gbhw.c\00", align 1
@.str.65 = private unnamed_addr constant [18 x i8] c"gbhw_impbuf_reset\00", align 1
@.str.66 = private unnamed_addr constant [32 x i8] c"Bank %ld out of range (0-%ld)!\0A\00", align 1
@dutylookup = internal constant [4 x i8] c"\01\02\04\06", align 1, !dbg !525
@tap1 = internal global i32 16384, align 4, !dbg !528
@tap2 = internal global i32 8192, align 4, !dbg !530
@lfsr = internal global i32 -1, align 4, !dbg !532
@.str.67 = private unnamed_addr constant [45 x i8] c"iowrite to 0x%04x unimplemented (val=%02x).\0A\00", align 1
@.str.68 = private unnamed_addr constant [35 x i8] c"ioread from 0x%04x unimplemented.\0A\00", align 1
@.str.69 = private unnamed_addr constant [22 x i8] c"impbuf != ((void *)0)\00", align 1
@.str.70 = private unnamed_addr constant [9 x i8] c"gb_sound\00", align 1
@main_div = internal global i64 0, align 8, !dbg !550
@ch3pos = internal global i64 0, align 8, !dbg !552
@val___1 = internal global i64 0, align 8, !dbg !554
@old_l = internal global i64 0, align 8, !dbg !556
@old_r = internal global i64 0, align 8, !dbg !558
@sweep_div = internal global i64 0, align 8, !dbg !560
@.str.71 = private unnamed_addr constant [24 x i8] c"soundbuf != ((void *)0)\00", align 1
@.str.72 = private unnamed_addr constant [16 x i8] c"gb_flush_buffer\00", align 1
@.str.73 = private unnamed_addr constant [35 x i8] c"impbuf->bytes == impbuf->samples*4\00", align 1
@.str.74 = private unnamed_addr constant [39 x i8] c"soundbuf->bytes == soundbuf->samples*4\00", align 1
@.str.75 = private unnamed_addr constant [16 x i8] c"gb_change_level\00", align 1
@.str.76 = private unnamed_addr constant [30 x i8] c"pos + imp_r < impbuf->samples\00", align 1
@.str.77 = private unnamed_addr constant [17 x i8] c"pos + imp_l >= 0\00", align 1
@.str.78 = private unnamed_addr constant [9 x i8] c"/dev/dsp\00", align 1
@fd___0 = internal global i32 0, align 4, !dbg !564
@.str.79 = private unnamed_addr constant [29 x i8] c"Could not open /dev/dsp: %s\0A\00", align 1
@.str.80 = private unnamed_addr constant [27 x i8] c"fcntl(F_GETFL) failed: %s\0A\00", align 1
@.str.81 = private unnamed_addr constant [46 x i8] c"fcntl(F_SETFL, flags&~O_NONBLOCK) failed: %s\0A\00", align 1
@.str.82 = private unnamed_addr constant [45 x i8] c"ioctl(fd, SNDCTL_DSP_SETFMT, %d) failed: %s\0A\00", align 1
@.str.83 = private unnamed_addr constant [45 x i8] c"ioctl(fd, SNDCTL_DSP_SPEED, %ld) failed: %s\0A\00", align 1
@.str.84 = private unnamed_addr constant [33 x i8] c"Requested rate %ldHz, got %dHz.\0A\00", align 1
@.str.85 = private unnamed_addr constant [45 x i8] c"ioctl(fd, SNDCTL_DSP_STEREO, %d) failed: %s\0A\00", align 1
@.str.86 = private unnamed_addr constant [52 x i8] c"ioctl(fd, SNDCTL_DSP_SETFRAGMENT, %08x) failed: %s\0A\00", align 1
@.str.87 = private unnamed_addr constant [20 x i8] c"setlocale() failed\0A\00", align 1
@.str.88 = private unnamed_addr constant [8 x i8] c"gbsplay\00", align 1
@.str.89 = private unnamed_addr constant [24 x i8] c"/usr/local/share/locale\00", align 1
@.str.90 = private unnamed_addr constant [29 x i8] c"bindtextdomain() failed: %s\0A\00", align 1
@.str.91 = private unnamed_addr constant [25 x i8] c"textdomain() failed: %s\0A\00", align 1
@.str.92 = private unnamed_addr constant [5 x i8] c"rate\00", align 1
@.str.93 = private unnamed_addr constant [14 x i8] c"refresh_delay\00", align 1
@.str.94 = private unnamed_addr constant [10 x i8] c"verbosity\00", align 1
@.str.95 = private unnamed_addr constant [7 x i8] c"endian\00", align 1
@.str.96 = private unnamed_addr constant [16 x i8] c"subsong_timeout\00", align 1
@.str.97 = private unnamed_addr constant [12 x i8] c"subsong_gap\00", align 1
@.str.98 = private unnamed_addr constant [8 x i8] c"fadeout\00", align 1
@.str.99 = private unnamed_addr constant [16 x i8] c"silence_timeout\00", align 1
@.str.100 = private unnamed_addr constant [14 x i8] c"output_plugin\00", align 1
@.str.101 = private unnamed_addr constant [5 x i8] c"loop\00", align 1
@loopmode = internal global i64 0, align 8, !dbg !586
@myname___0 = internal global i8* null, align 8, !dbg !588
@.str.102 = private unnamed_addr constant [28 x i8] c"1234E:f:g:hlo:qr:R:t:T:vVzZ\00", align 1
@optarg = external global i8*, align 8
@.str.103 = private unnamed_addr constant [2 x i8] c"b\00", align 1
@.str.104 = private unnamed_addr constant [2 x i8] c"l\00", align 1
@.str.105 = private unnamed_addr constant [2 x i8] c"n\00", align 1
@.str.106 = private unnamed_addr constant [30 x i8] c"\22%s\22 is not a valid endian.\0A\0A\00", align 1
@playmode = internal global i64 1, align 8, !dbg !590
@.str.107 = private unnamed_addr constant [5 x i8] c"list\00", align 1
@.str.108 = private unnamed_addr constant [37 x i8] c"\22%s\22 is not a known output plugin.\0A\0A\00", align 1
@sound_io = internal global i32 (i64, i32, i8)* null, align 8, !dbg !592
@sound_write = internal global i32 (i8*, i32)* null, align 8, !dbg !594
@sound_description = internal global i8* null, align 8, !dbg !596
@.str.109 = private unnamed_addr constant [793 x i8] c"Usage: %s [option(s)] <gbs-file> [start_at_subsong [stop_at_subsong] ]\0A\0AAvailable options are:\0A  -E        endian, b == big, l == little, n == native (%s)\0A  -f        set fadeout (%ld seconds)\0A  -g        set subsong gap (%ld seconds)\0A  -h        display this help and exit\0A  -l        loop mode\0A  -o        select output plugin (%s)\0A            'list' shows available plugins\0A  -q        reduce verbosity\0A  -r        set samplerate (%ldHz)\0A  -R        set refresh delay (%ld milliseconds)\0A  -t        set subsong timeout (%ld seconds)\0A  -T        set silence timeout (%ld seconds)\0A  -v        increase verbosity\0A  -V        print version and exit\0A  -z        play subsongs in shuffle mode\0A  -Z        play subsongs in random mode (repetitions possible)\0A  -1 to -4  mute a channel on startup\0A\00", align 1
@notelookup = internal global [432 x i8] zeroinitializer, align 16, !dbg !598
@vollookup = internal global [80 x i8] zeroinitializer, align 16, !dbg !603
@vols = internal constant [5 x i8] c" -=#%", align 1, !dbg !608
@subsong_playlist = internal global i64* null, align 8, !dbg !631
@subsong_playlist_idx = internal global i64 0, align 8, !dbg !633
@samples = internal global [4096 x i16] zeroinitializer, align 16, !dbg !637
@.str.110 = private unnamed_addr constant [113 x i8] c"\0Acommands:  [p]revious subsong   [n]ext subsong   [q]uit player\0A           [ ] pause/resume   [1-4] mute channel\00", align 1
@.str.111 = private unnamed_addr constant [3 x i8] c"\0A\0A\00", align 1
@.str.112 = private unnamed_addr constant [9 x i8] c"Untitled\00", align 1
@.str.113 = private unnamed_addr constant [54 x i8] c"\0D\1B[A\1B[ASong %3ld/%3ld (%s)\1B[K\0A%02ld:%02ld/%02ld:%02ld\00", align 1
@.str.114 = private unnamed_addr constant [39 x i8] c"  %s %s  %s %s  %s %s  %s %s  [%s|%s]\0A\00", align 1
@buf___0 = internal global [5 x i8] zeroinitializer, align 1, !dbg !648
@.str.115 = private unnamed_addr constant [4 x i8] c"-M-\00", align 1
@.str.116 = private unnamed_addr constant [4 x i8] c"---\00", align 1
@.str.117 = private unnamed_addr constant [4 x i8] c"nse\00", align 1
@pause_mode = internal global i64 0, align 8, !dbg !651

; Function Attrs: noinline nounwind ssp uwtable
define void @cfg_endian(i8* %ptr) #0 !dbg !665 {
entry:
  call void @llvm.dbg.value(metadata i8* %ptr, metadata !667, metadata !DIExpression()), !dbg !668
  call void @llvm.dbg.declare(metadata !666, metadata !669, metadata !DIExpression()), !dbg !670
  %0 = bitcast i8* %ptr to i32*, !dbg !671
  call void @llvm.dbg.value(metadata i32* %0, metadata !674, metadata !DIExpression()), !dbg !668
  %1 = load i64, i64* @c, align 8, !dbg !675
  %conv = trunc i64 %1 to i32, !dbg !677
  %call = call i32 @tolower(i32 %conv) #8, !dbg !678
  call void @llvm.dbg.value(metadata i32 %call, metadata !679, metadata !DIExpression()), !dbg !668
  %conv1 = sext i32 %call to i64, !dbg !680
  store i64 %conv1, i64* @c, align 8, !dbg !681
  %2 = load i64, i64* @c, align 8, !dbg !682
  %cmp = icmp ne i64 %2, 98, !dbg !684
  br i1 %cmp, label %if.then, label %if.end10, !dbg !685

if.then:                                          ; preds = %entry
  %3 = load i64, i64* @c, align 8, !dbg !686
  %cmp3 = icmp ne i64 %3, 108, !dbg !689
  br i1 %cmp3, label %if.then5, label %if.end9, !dbg !690

if.then5:                                         ; preds = %if.then
  %4 = load i64, i64* @c, align 8, !dbg !691
  %cmp6 = icmp ne i64 %4, 110, !dbg !694
  br i1 %cmp6, label %if.then8, label %if.end, !dbg !695

if.then8:                                         ; preds = %if.then5
  call void @err_expect(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i32 0, i32 0)), !dbg !696
  br label %return, !dbg !700

if.end:                                           ; preds = %if.then5
  br label %if.end9, !dbg !701

if.end9:                                          ; preds = %if.end, %if.then
  br label %if.end10, !dbg !702

if.end10:                                         ; preds = %if.end9, %entry
  %5 = load i64, i64* @c, align 8, !dbg !703
  %cmp11 = icmp eq i64 %5, 98, !dbg !706
  br i1 %cmp11, label %if.then13, label %if.end14, !dbg !707

if.then13:                                        ; preds = %if.end10
  br label %case_98, !dbg !708

if.end14:                                         ; preds = %if.end10
  %6 = load i64, i64* @c, align 8, !dbg !710
  %cmp15 = icmp eq i64 %6, 108, !dbg !712
  br i1 %cmp15, label %if.then17, label %if.end18, !dbg !713

if.then17:                                        ; preds = %if.end14
  br label %case_108, !dbg !714

if.end18:                                         ; preds = %if.end14
  br label %switch_default, !dbg !716

case_98:                                          ; preds = %if.then13
  store i32 0, i32* %0, align 4, !dbg !717
  br label %switch_break, !dbg !718

case_108:                                         ; preds = %if.then17
  store i32 1, i32* %0, align 4, !dbg !719
  br label %switch_break, !dbg !720

switch_default:                                   ; preds = %if.end18
  store i32 2, i32* %0, align 4, !dbg !721
  br label %switch_break, !dbg !716

switch_break:                                     ; preds = %switch_default, %case_108, %case_98
  %call19 = call signext i8 @nextchar(), !dbg !722
  call void @llvm.dbg.value(metadata i8 %call19, metadata !725, metadata !DIExpression()), !dbg !668
  %conv20 = sext i8 %call19 to i64, !dbg !726
  store i64 %conv20, i64* @c, align 8, !dbg !727
  store i64 0, i64* @state, align 8, !dbg !728
  store i64 1, i64* @nextstate, align 8, !dbg !729
  br label %return, !dbg !730

return:                                           ; preds = %switch_break, %if.then8
  ret void, !dbg !731
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: nounwind readonly
declare i32 @tolower(i32) #2

; Function Attrs: noinline nounwind ssp uwtable
define internal void @err_expect(i8* %s) #0 !dbg !732 {
entry:
  call void @llvm.dbg.value(metadata i8* %s, metadata !735, metadata !DIExpression()), !dbg !736
  call void @llvm.dbg.declare(metadata !666, metadata !737, metadata !DIExpression()), !dbg !738
  %call = call i8* @_(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.53, i32 0, i32 0)), !dbg !739
  call void @llvm.dbg.value(metadata i8* %call, metadata !743, metadata !DIExpression()), !dbg !736
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !744
  %1 = load i8*, i8** @filename, align 8, !dbg !746
  %2 = load i64, i64* @cfg_line, align 8, !dbg !747
  %3 = load i64, i64* @cfg_char, align 8, !dbg !748
  %call1 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %0, i8* %call, i8* %s, i8* %1, i64 %2, i64 %3), !dbg !749
  %call2 = call signext i8 @nextchar(), !dbg !750
  call void @llvm.dbg.value(metadata i8 %call2, metadata !752, metadata !DIExpression()), !dbg !736
  %conv = sext i8 %call2 to i64, !dbg !753
  store i64 %conv, i64* @c, align 8, !dbg !754
  store i64 0, i64* @state, align 8, !dbg !755
  store i64 1, i64* @nextstate, align 8, !dbg !756
  ret void, !dbg !757
}

; Function Attrs: noinline nounwind ssp uwtable
define internal signext i8 @nextchar() #0 !dbg !758 {
entry:
  call void @llvm.dbg.declare(metadata !666, metadata !761, metadata !DIExpression()), !dbg !762
  call void @llvm.dbg.declare(metadata !666, metadata !763, metadata !DIExpression()), !dbg !764
  call void @llvm.dbg.declare(metadata !666, metadata !765, metadata !DIExpression()), !dbg !766
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @cfg_file, align 8, !dbg !767
  %1 = ptrtoint %struct._IO_FILE* %0 to i64, !dbg !770
  %cmp = icmp ne i64 %1, 0, !dbg !771
  br i1 %cmp, label %if.end, label %if.then, !dbg !772

if.then:                                          ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.54, i32 0, i32 0), i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.55, i32 0, i32 0), i32 30, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.56, i32 0, i32 0)) #9, !dbg !773
  unreachable, !dbg !773

if.end:                                           ; preds = %entry
  br label %while.body, !dbg !777

while.body:                                       ; preds = %if.end47, %if.end
  br label %while_continue___0, !dbg !780

while_continue___0:                               ; preds = %while.body
  br label %while_continue, !dbg !780

while_continue:                                   ; preds = %while_continue___0
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** @cfg_file, align 8, !dbg !781
  %call = call i32 @fgetc(%struct._IO_FILE* %2), !dbg !785
  call void @llvm.dbg.value(metadata i32 %call, metadata !786, metadata !DIExpression()), !dbg !787
  %conv = sext i32 %call to i64, !dbg !788
  call void @llvm.dbg.value(metadata i64 %conv, metadata !789, metadata !DIExpression()), !dbg !787
  %cmp1 = icmp eq i64 %conv, -1, !dbg !790
  br i1 %cmp1, label %if.then3, label %if.end4, !dbg !792

if.then3:                                         ; preds = %while_continue
  br label %return, !dbg !793

if.end4:                                          ; preds = %while_continue
  %cmp5 = icmp eq i64 %conv, 10, !dbg !795
  br i1 %cmp5, label %if.then7, label %if.else, !dbg !797

if.then7:                                         ; preds = %if.end4
  store i64 0, i64* @cfg_char, align 8, !dbg !798
  %3 = load i64, i64* @cfg_line, align 8, !dbg !800
  %inc = add nsw i64 %3, 1, !dbg !800
  store i64 %inc, i64* @cfg_line, align 8, !dbg !800
  br label %if.end9, !dbg !801

if.else:                                          ; preds = %if.end4
  %4 = load i64, i64* @cfg_char, align 8, !dbg !802
  %inc8 = add nsw i64 %4, 1, !dbg !802
  store i64 %inc8, i64* @cfg_char, align 8, !dbg !802
  br label %if.end9

if.end9:                                          ; preds = %if.else, %if.then7
  %5 = load i64, i64* @nextchar_state, align 8, !dbg !804
  %cmp10 = icmp eq i64 %5, 0, !dbg !807
  br i1 %cmp10, label %if.then12, label %if.end13, !dbg !808

if.then12:                                        ; preds = %if.end9
  br label %case_0, !dbg !809

if.end13:                                         ; preds = %if.end9
  %6 = load i64, i64* @nextchar_state, align 8, !dbg !811
  %cmp14 = icmp eq i64 %6, 1, !dbg !813
  br i1 %cmp14, label %if.then16, label %if.end17, !dbg !814

if.then16:                                        ; preds = %if.end13
  br label %case_1, !dbg !815

if.end17:                                         ; preds = %if.end13
  %7 = load i64, i64* @nextchar_state, align 8, !dbg !817
  %cmp18 = icmp eq i64 %7, 2, !dbg !819
  br i1 %cmp18, label %if.then20, label %if.end21, !dbg !820

if.then20:                                        ; preds = %if.end17
  br label %case_2, !dbg !821

if.end21:                                         ; preds = %if.end17
  br label %switch_break, !dbg !823

case_0:                                           ; preds = %if.then12
  %cmp22 = icmp eq i64 %conv, 92, !dbg !824
  br i1 %cmp22, label %if.then24, label %if.else25, !dbg !826

if.then24:                                        ; preds = %case_0
  store i64 1, i64* @nextchar_state, align 8, !dbg !827
  br label %if.end30, !dbg !829

if.else25:                                        ; preds = %case_0
  %cmp26 = icmp eq i64 %conv, 35, !dbg !830
  br i1 %cmp26, label %if.then28, label %if.end29, !dbg !832

if.then28:                                        ; preds = %if.else25
  store i64 2, i64* @nextchar_state, align 8, !dbg !833
  br label %if.end29, !dbg !835

if.end29:                                         ; preds = %if.then28, %if.else25
  br label %if.end30

if.end30:                                         ; preds = %if.end29, %if.then24
  br label %switch_break, !dbg !836

case_1:                                           ; preds = %if.then16
  store i64 0, i64* @nextchar_state, align 8, !dbg !837
  %cmp31 = icmp eq i64 %conv, 110, !dbg !838
  br i1 %cmp31, label %if.then33, label %if.end34, !dbg !840

if.then33:                                        ; preds = %case_1
  call void @llvm.dbg.value(metadata i64 10, metadata !789, metadata !DIExpression()), !dbg !787
  br label %if.end34, !dbg !841

if.end34:                                         ; preds = %if.then33, %case_1
  %c___3.0 = phi i64 [ 10, %if.then33 ], [ %conv, %case_1 ], !dbg !843
  call void @llvm.dbg.value(metadata i64 %c___3.0, metadata !789, metadata !DIExpression()), !dbg !787
  br label %switch_break, !dbg !844

case_2:                                           ; preds = %if.then20
  %cmp35 = icmp eq i64 %conv, 0, !dbg !845
  br i1 %cmp35, label %if.then37, label %if.else38, !dbg !847

if.then37:                                        ; preds = %case_2
  store i64 0, i64* @nextchar_state, align 8, !dbg !848
  br label %if.end43, !dbg !850

if.else38:                                        ; preds = %case_2
  %cmp39 = icmp eq i64 %conv, 10, !dbg !851
  br i1 %cmp39, label %if.then41, label %if.end42, !dbg !853

if.then41:                                        ; preds = %if.else38
  store i64 0, i64* @nextchar_state, align 8, !dbg !854
  br label %if.end42, !dbg !856

if.end42:                                         ; preds = %if.then41, %if.else38
  br label %if.end43

if.end43:                                         ; preds = %if.end42, %if.then37
  br label %switch_break, !dbg !857

switch_break:                                     ; preds = %if.end43, %if.end34, %if.end30, %if.end21
  %c___3.1 = phi i64 [ %conv, %if.end30 ], [ %c___3.0, %if.end34 ], [ %conv, %if.end43 ], [ %conv, %if.end21 ], !dbg !843
  call void @llvm.dbg.value(metadata i64 %c___3.1, metadata !789, metadata !DIExpression()), !dbg !787
  %8 = load i64, i64* @nextchar_state, align 8, !dbg !858
  %cmp44 = icmp ne i64 %8, 0, !dbg !860
  br i1 %cmp44, label %if.end47, label %if.then46, !dbg !861

if.then46:                                        ; preds = %switch_break
  br label %while_break, !dbg !862

if.end47:                                         ; preds = %switch_break
  br label %while.body, !dbg !777, !llvm.loop !864

while_break___0:                                  ; No predecessors!
  br label %while_break, !dbg !866

while_break:                                      ; preds = %while_break___0, %if.then46
  %conv48 = trunc i64 %c___3.1 to i8, !dbg !867
  br label %return, !dbg !868

return:                                           ; preds = %while_break, %if.then3
  %retval.0 = phi i8 [ 0, %if.then3 ], [ %conv48, %while_break ], !dbg !869
  ret i8 %retval.0, !dbg !870
}

; Function Attrs: noinline nounwind ssp uwtable
define void @cfg_string(i8* %ptr) #0 !dbg !871 {
entry:
  %s = alloca [200 x i8], align 16
  call void @llvm.dbg.value(metadata i8* %ptr, metadata !872, metadata !DIExpression()), !dbg !873
  call void @llvm.dbg.declare(metadata [200 x i8]* %s, metadata !874, metadata !DIExpression()), !dbg !878
  call void @llvm.dbg.declare(metadata !666, metadata !879, metadata !DIExpression()), !dbg !880
  call void @llvm.dbg.declare(metadata !666, metadata !881, metadata !DIExpression()), !dbg !882
  call void @llvm.dbg.value(metadata i64 0, metadata !883, metadata !DIExpression()), !dbg !873
  %call = call i16** @__ctype_b_loc() #10, !dbg !884
  call void @llvm.dbg.value(metadata i16** %call, metadata !888, metadata !DIExpression()), !dbg !873
  %0 = load i16*, i16** %call, align 8, !dbg !892
  %1 = load i64, i64* @c, align 8, !dbg !894
  %conv = trunc i64 %1 to i32, !dbg !895
  %idx.ext = sext i32 %conv to i64, !dbg !896
  %add.ptr = getelementptr inbounds i16, i16* %0, i64 %idx.ext, !dbg !896
  %2 = load i16, i16* %add.ptr, align 2, !dbg !897
  %conv1 = zext i16 %2 to i32, !dbg !898
  %and = and i32 %conv1, 1024, !dbg !899
  %tobool = icmp ne i32 %and, 0, !dbg !899
  br i1 %tobool, label %if.end8, label %if.then, !dbg !900

if.then:                                          ; preds = %entry
  %3 = load i64, i64* @c, align 8, !dbg !901
  %cmp = icmp ne i64 %3, 45, !dbg !904
  br i1 %cmp, label %if.then3, label %if.end7, !dbg !905

if.then3:                                         ; preds = %if.then
  %4 = load i64, i64* @c, align 8, !dbg !906
  %cmp4 = icmp ne i64 %4, 95, !dbg !909
  br i1 %cmp4, label %if.then6, label %if.end, !dbg !910

if.then6:                                         ; preds = %if.then3
  call void @err_expect(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i32 0, i32 0)), !dbg !911
  br label %return, !dbg !915

if.end:                                           ; preds = %if.then3
  br label %if.end7, !dbg !916

if.end7:                                          ; preds = %if.end, %if.then
  br label %if.end8, !dbg !917

if.end8:                                          ; preds = %if.end7, %entry
  br label %while.body, !dbg !918

while.body:                                       ; preds = %if.end34, %if.end8
  %n.0 = phi i64 [ 0, %if.end8 ], [ %inc, %if.end34 ], !dbg !921
  call void @llvm.dbg.value(metadata i64 %n.0, metadata !883, metadata !DIExpression()), !dbg !873
  br label %while_continue___0, !dbg !922

while_continue___0:                               ; preds = %while.body
  br label %while_continue, !dbg !922

while_continue:                                   ; preds = %while_continue___0
  call void @llvm.dbg.value(metadata i64 %n.0, metadata !923, metadata !DIExpression()), !dbg !873
  %inc = add i64 %n.0, 1, !dbg !924
  call void @llvm.dbg.value(metadata i64 %inc, metadata !883, metadata !DIExpression()), !dbg !873
  %5 = load i64, i64* @c, align 8, !dbg !927
  %conv9 = trunc i64 %5 to i8, !dbg !928
  %arrayidx = getelementptr inbounds [200 x i8], [200 x i8]* %s, i64 0, i64 %n.0, !dbg !929
  store i8 %conv9, i8* %arrayidx, align 1, !dbg !930
  %call10 = call signext i8 @nextchar(), !dbg !931
  call void @llvm.dbg.value(metadata i8 %call10, metadata !933, metadata !DIExpression()), !dbg !873
  %conv11 = sext i8 %call10 to i64, !dbg !934
  store i64 %conv11, i64* @c, align 8, !dbg !935
  %call12 = call i16** @__ctype_b_loc() #10, !dbg !936
  call void @llvm.dbg.value(metadata i16** %call12, metadata !938, metadata !DIExpression()), !dbg !873
  %6 = load i16*, i16** %call12, align 8, !dbg !939
  %7 = load i64, i64* @c, align 8, !dbg !941
  %conv13 = trunc i64 %7 to i32, !dbg !942
  %idx.ext14 = sext i32 %conv13 to i64, !dbg !943
  %add.ptr15 = getelementptr inbounds i16, i16* %6, i64 %idx.ext14, !dbg !943
  %8 = load i16, i16* %add.ptr15, align 2, !dbg !944
  %conv16 = zext i16 %8 to i32, !dbg !945
  %and17 = and i32 %conv16, 8, !dbg !946
  %tobool18 = icmp ne i32 %and17, 0, !dbg !946
  br i1 %tobool18, label %if.then19, label %if.else, !dbg !947

if.then19:                                        ; preds = %while_continue
  br label %_L, !dbg !948

if.else:                                          ; preds = %while_continue
  %9 = load i64, i64* @c, align 8, !dbg !950
  %cmp20 = icmp eq i64 %9, 45, !dbg !952
  br i1 %cmp20, label %if.then22, label %if.else23, !dbg !945

if.then22:                                        ; preds = %if.else
  br label %_L, !dbg !953

if.else23:                                        ; preds = %if.else
  %10 = load i64, i64* @c, align 8, !dbg !955
  %cmp24 = icmp eq i64 %10, 95, !dbg !957
  br i1 %cmp24, label %if.then26, label %if.else31, !dbg !950

if.then26:                                        ; preds = %if.else23
  br label %_L, !dbg !958

_L:                                               ; preds = %if.then26, %if.then22, %if.then19
  %cmp27 = icmp ult i64 %inc, 199, !dbg !959
  br i1 %cmp27, label %if.end30, label %if.then29, !dbg !962

if.then29:                                        ; preds = %_L
  br label %while_break, !dbg !963

if.end30:                                         ; preds = %_L
  br label %if.end32, !dbg !965

if.else31:                                        ; preds = %if.else23
  br label %while_break, !dbg !966

if.end32:                                         ; preds = %if.end30
  br label %if.end33

if.end33:                                         ; preds = %if.end32
  br label %if.end34

if.end34:                                         ; preds = %if.end33
  br label %while.body, !dbg !918, !llvm.loop !968

while_break___0:                                  ; No predecessors!
  br label %while_break, !dbg !970

while_break:                                      ; preds = %while_break___0, %if.else31, %if.then29
  %arrayidx35 = getelementptr inbounds [200 x i8], [200 x i8]* %s, i64 0, i64 %inc, !dbg !971
  store i8 0, i8* %arrayidx35, align 1, !dbg !973
  %arraydecay = getelementptr inbounds [200 x i8], [200 x i8]* %s, i32 0, i32 0, !dbg !974
  %call36 = call noalias i8* @strdup(i8* %arraydecay) #11, !dbg !976
  %11 = bitcast i8* %ptr to i8**, !dbg !977
  store i8* %call36, i8** %11, align 8, !dbg !978
  store i64 0, i64* @state, align 8, !dbg !979
  store i64 1, i64* @nextstate, align 8, !dbg !980
  br label %return, !dbg !981

return:                                           ; preds = %while_break, %if.then6
  ret void, !dbg !982
}

; Function Attrs: nounwind readnone
declare i16** @__ctype_b_loc() #3

; Function Attrs: nounwind
declare noalias i8* @strdup(i8*) #4

; Function Attrs: noinline nounwind ssp uwtable
define void @cfg_long(i8* %ptr) #0 !dbg !983 {
entry:
  %num = alloca [20 x i8], align 16
  call void @llvm.dbg.value(metadata i8* %ptr, metadata !984, metadata !DIExpression()), !dbg !985
  call void @llvm.dbg.declare(metadata [20 x i8]* %num, metadata !986, metadata !DIExpression()), !dbg !990
  call void @llvm.dbg.declare(metadata !666, metadata !991, metadata !DIExpression()), !dbg !992
  call void @llvm.dbg.declare(metadata !666, metadata !993, metadata !DIExpression()), !dbg !994
  call void @llvm.dbg.value(metadata i64 0, metadata !995, metadata !DIExpression()), !dbg !985
  %call = call i16** @__ctype_b_loc() #10, !dbg !996
  call void @llvm.dbg.value(metadata i16** %call, metadata !1000, metadata !DIExpression()), !dbg !985
  %0 = load i16*, i16** %call, align 8, !dbg !1001
  %1 = load i64, i64* @c, align 8, !dbg !1003
  %conv = trunc i64 %1 to i32, !dbg !1004
  %idx.ext = sext i32 %conv to i64, !dbg !1005
  %add.ptr = getelementptr inbounds i16, i16* %0, i64 %idx.ext, !dbg !1005
  %2 = load i16, i16* %add.ptr, align 2, !dbg !1006
  %conv1 = zext i16 %2 to i32, !dbg !1007
  %and = and i32 %conv1, 2048, !dbg !1008
  %tobool = icmp ne i32 %and, 0, !dbg !1008
  br i1 %tobool, label %if.end, label %if.then, !dbg !1009

if.then:                                          ; preds = %entry
  call void @err_expect(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i32 0, i32 0)), !dbg !1010
  br label %return, !dbg !1014

if.end:                                           ; preds = %entry
  br label %while.body, !dbg !1015

while.body:                                       ; preds = %if.end16, %if.end
  %n.0 = phi i64 [ 0, %if.end ], [ %inc, %if.end16 ], !dbg !1018
  call void @llvm.dbg.value(metadata i64 %n.0, metadata !995, metadata !DIExpression()), !dbg !985
  br label %while_continue___0, !dbg !1019

while_continue___0:                               ; preds = %while.body
  br label %while_continue, !dbg !1019

while_continue:                                   ; preds = %while_continue___0
  call void @llvm.dbg.value(metadata i64 %n.0, metadata !1020, metadata !DIExpression()), !dbg !985
  %inc = add i64 %n.0, 1, !dbg !1021
  call void @llvm.dbg.value(metadata i64 %inc, metadata !995, metadata !DIExpression()), !dbg !985
  %3 = load i64, i64* @c, align 8, !dbg !1024
  %conv2 = trunc i64 %3 to i8, !dbg !1025
  %arrayidx = getelementptr inbounds [20 x i8], [20 x i8]* %num, i64 0, i64 %n.0, !dbg !1026
  store i8 %conv2, i8* %arrayidx, align 1, !dbg !1027
  %call3 = call signext i8 @nextchar(), !dbg !1028
  call void @llvm.dbg.value(metadata i8 %call3, metadata !1030, metadata !DIExpression()), !dbg !985
  %conv4 = sext i8 %call3 to i64, !dbg !1031
  store i64 %conv4, i64* @c, align 8, !dbg !1032
  %call5 = call i16** @__ctype_b_loc() #10, !dbg !1033
  call void @llvm.dbg.value(metadata i16** %call5, metadata !1035, metadata !DIExpression()), !dbg !985
  %4 = load i16*, i16** %call5, align 8, !dbg !1036
  %5 = load i64, i64* @c, align 8, !dbg !1038
  %conv6 = trunc i64 %5 to i32, !dbg !1039
  %idx.ext7 = sext i32 %conv6 to i64, !dbg !1040
  %add.ptr8 = getelementptr inbounds i16, i16* %4, i64 %idx.ext7, !dbg !1040
  %6 = load i16, i16* %add.ptr8, align 2, !dbg !1041
  %conv9 = zext i16 %6 to i32, !dbg !1042
  %and10 = and i32 %conv9, 2048, !dbg !1043
  %tobool11 = icmp ne i32 %and10, 0, !dbg !1043
  br i1 %tobool11, label %if.then12, label %if.else, !dbg !1044

if.then12:                                        ; preds = %while_continue
  %cmp = icmp ult i64 %inc, 19, !dbg !1045
  br i1 %cmp, label %if.end15, label %if.then14, !dbg !1048

if.then14:                                        ; preds = %if.then12
  br label %while_break, !dbg !1049

if.end15:                                         ; preds = %if.then12
  br label %if.end16, !dbg !1051

if.else:                                          ; preds = %while_continue
  br label %while_break, !dbg !1052

if.end16:                                         ; preds = %if.end15
  br label %while.body, !dbg !1015, !llvm.loop !1054

while_break___0:                                  ; No predecessors!
  br label %while_break, !dbg !1056

while_break:                                      ; preds = %while_break___0, %if.else, %if.then14
  %arrayidx17 = getelementptr inbounds [20 x i8], [20 x i8]* %num, i64 0, i64 %inc, !dbg !1057
  store i8 0, i8* %arrayidx17, align 1, !dbg !1059
  %arraydecay = getelementptr inbounds [20 x i8], [20 x i8]* %num, i32 0, i32 0, !dbg !1060
  %call18 = call i32 @atoi(i8* %arraydecay) #8, !dbg !1062
  call void @llvm.dbg.value(metadata i32 %call18, metadata !1063, metadata !DIExpression()), !dbg !985
  %conv19 = sext i32 %call18 to i64, !dbg !1064
  %7 = bitcast i8* %ptr to i64*, !dbg !1065
  store i64 %conv19, i64* %7, align 8, !dbg !1066
  store i64 0, i64* @state, align 8, !dbg !1067
  store i64 1, i64* @nextstate, align 8, !dbg !1068
  br label %return, !dbg !1069

return:                                           ; preds = %while_break, %if.then
  ret void, !dbg !1070
}

; Function Attrs: nounwind readonly
declare i32 @atoi(i8*) #2

; Function Attrs: noinline nounwind ssp uwtable
define void @cfg_parse(i8* %fname, %struct.cfg_option* %options___1) #0 !dbg !1071 {
entry:
  %option = alloca [200 x i8], align 16
  call void @llvm.dbg.value(metadata i8* %fname, metadata !1075, metadata !DIExpression()), !dbg !1076
  call void @llvm.dbg.value(metadata %struct.cfg_option* %options___1, metadata !1077, metadata !DIExpression()), !dbg !1076
  call void @llvm.dbg.declare(metadata [200 x i8]* %option, metadata !1078, metadata !DIExpression()), !dbg !1079
  call void @llvm.dbg.declare(metadata !666, metadata !1080, metadata !DIExpression()), !dbg !1081
  call void @llvm.dbg.declare(metadata !666, metadata !1082, metadata !DIExpression()), !dbg !1083
  call void @llvm.dbg.declare(metadata !666, metadata !1084, metadata !DIExpression()), !dbg !1085
  call void @llvm.dbg.declare(metadata !666, metadata !1086, metadata !DIExpression()), !dbg !1087
  call void @llvm.dbg.declare(metadata !666, metadata !1088, metadata !DIExpression()), !dbg !1089
  store i8* %fname, i8** @filename, align 8, !dbg !1090
  %call = call %struct._IO_FILE* @fopen(i8* %fname, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i32 0, i32 0)), !dbg !1093
  store %struct._IO_FILE* %call, %struct._IO_FILE** @cfg_file, align 8, !dbg !1095
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @cfg_file, align 8, !dbg !1096
  %1 = ptrtoint %struct._IO_FILE* %0 to i64, !dbg !1098
  %cmp = icmp eq i64 %1, 0, !dbg !1099
  br i1 %cmp, label %if.then, label %if.end, !dbg !1100

if.then:                                          ; preds = %entry
  br label %return, !dbg !1101

if.end:                                           ; preds = %entry
  store i64 0, i64* @nextchar_state, align 8, !dbg !1103
  store i64 0, i64* @state, align 8, !dbg !1105
  store i64 1, i64* @nextstate, align 8, !dbg !1106
  store i64 1, i64* @cfg_line, align 8, !dbg !1107
  store i64 0, i64* @cfg_char, align 8, !dbg !1108
  %call1 = call signext i8 @nextchar(), !dbg !1109
  call void @llvm.dbg.value(metadata i8 %call1, metadata !1111, metadata !DIExpression()), !dbg !1076
  %conv = sext i8 %call1 to i64, !dbg !1112
  store i64 %conv, i64* @c, align 8, !dbg !1113
  %arrayidx = getelementptr inbounds [200 x i8], [200 x i8]* %option, i64 0, i64 0, !dbg !1114
  store i8 0, i8* %arrayidx, align 16, !dbg !1115
  call void @llvm.dbg.value(metadata i32 1, metadata !1116, metadata !DIExpression()), !dbg !1076
  br label %while.body, !dbg !1117

while.body:                                       ; preds = %if.end5, %if.end
  %tmp___0.0 = phi i32 [ 1, %if.end ], [ %inc, %if.end5 ], !dbg !1120
  call void @llvm.dbg.value(metadata i32 %tmp___0.0, metadata !1116, metadata !DIExpression()), !dbg !1076
  br label %while_continue___5, !dbg !1121

while_continue___5:                               ; preds = %while.body
  br label %while_continue, !dbg !1121

while_continue:                                   ; preds = %while_continue___5
  %cmp2 = icmp uge i32 %tmp___0.0, 200, !dbg !1122
  br i1 %cmp2, label %if.then4, label %if.end5, !dbg !1125

if.then4:                                         ; preds = %while_continue
  br label %while_break, !dbg !1126

if.end5:                                          ; preds = %while_continue
  %idxprom = zext i32 %tmp___0.0 to i64, !dbg !1128
  %arrayidx6 = getelementptr inbounds [200 x i8], [200 x i8]* %option, i64 0, i64 %idxprom, !dbg !1128
  store i8 0, i8* %arrayidx6, align 1, !dbg !1129
  %inc = add i32 %tmp___0.0, 1, !dbg !1130
  call void @llvm.dbg.value(metadata i32 %inc, metadata !1116, metadata !DIExpression()), !dbg !1076
  br label %while.body, !dbg !1117, !llvm.loop !1131

while_break___5:                                  ; No predecessors!
  br label %while_break, !dbg !1133

while_break:                                      ; preds = %while_break___5, %if.then4
  br label %while.body7, !dbg !1134

while.body7:                                      ; preds = %if.end133, %while_break
  br label %while_continue___6, !dbg !1137

while_continue___6:                               ; preds = %while.body7
  br label %while_continue___0, !dbg !1137

while_continue___0:                               ; preds = %while_continue___6
  %2 = load i64, i64* @state, align 8, !dbg !1138
  %cmp8 = icmp eq i64 %2, 0, !dbg !1142
  br i1 %cmp8, label %if.then10, label %if.end11, !dbg !1143

if.then10:                                        ; preds = %while_continue___0
  br label %case_0, !dbg !1144

if.end11:                                         ; preds = %while_continue___0
  %3 = load i64, i64* @state, align 8, !dbg !1146
  %cmp12 = icmp eq i64 %3, 1, !dbg !1148
  br i1 %cmp12, label %if.then14, label %if.end15, !dbg !1149

if.then14:                                        ; preds = %if.end11
  br label %case_1, !dbg !1150

if.end15:                                         ; preds = %if.end11
  %4 = load i64, i64* @state, align 8, !dbg !1152
  %cmp16 = icmp eq i64 %4, 2, !dbg !1154
  br i1 %cmp16, label %if.then18, label %if.end19, !dbg !1155

if.then18:                                        ; preds = %if.end15
  br label %case_2, !dbg !1156

if.end19:                                         ; preds = %if.end15
  %5 = load i64, i64* @state, align 8, !dbg !1158
  %cmp20 = icmp eq i64 %5, 3, !dbg !1160
  br i1 %cmp20, label %if.then22, label %if.end23, !dbg !1161

if.then22:                                        ; preds = %if.end19
  br label %case_3, !dbg !1162

if.end23:                                         ; preds = %if.end19
  br label %switch_break, !dbg !1164

case_0:                                           ; preds = %if.then10
  %call24 = call i16** @__ctype_b_loc() #10, !dbg !1165
  call void @llvm.dbg.value(metadata i16** %call24, metadata !1168, metadata !DIExpression()), !dbg !1076
  %6 = load i16*, i16** %call24, align 8, !dbg !1169
  %7 = load i64, i64* @c, align 8, !dbg !1171
  %conv25 = trunc i64 %7 to i32, !dbg !1172
  %idx.ext = sext i32 %conv25 to i64, !dbg !1173
  %add.ptr = getelementptr inbounds i16, i16* %6, i64 %idx.ext, !dbg !1173
  %8 = load i16, i16* %add.ptr, align 2, !dbg !1174
  %conv26 = zext i16 %8 to i32, !dbg !1175
  %and = and i32 %conv26, 8192, !dbg !1176
  %tobool = icmp ne i32 %and, 0, !dbg !1176
  br i1 %tobool, label %if.then27, label %if.end41, !dbg !1177

if.then27:                                        ; preds = %case_0
  br label %while.body29, !dbg !1178

while.body29:                                     ; preds = %if.end40, %if.then27
  br label %while_continue___7, !dbg !1182

while_continue___7:                               ; preds = %while.body29
  br label %while_continue___1, !dbg !1182

while_continue___1:                               ; preds = %while_continue___7
  %call30 = call i16** @__ctype_b_loc() #10, !dbg !1183
  call void @llvm.dbg.value(metadata i16** %call30, metadata !1187, metadata !DIExpression()), !dbg !1076
  %call31 = call signext i8 @nextchar(), !dbg !1188
  call void @llvm.dbg.value(metadata i8 %call31, metadata !1190, metadata !DIExpression()), !dbg !1076
  %conv32 = sext i8 %call31 to i64, !dbg !1191
  store i64 %conv32, i64* @c, align 8, !dbg !1192
  %9 = load i16*, i16** %call30, align 8, !dbg !1193
  %10 = load i64, i64* @c, align 8, !dbg !1195
  %conv33 = trunc i64 %10 to i32, !dbg !1196
  %idx.ext34 = sext i32 %conv33 to i64, !dbg !1197
  %add.ptr35 = getelementptr inbounds i16, i16* %9, i64 %idx.ext34, !dbg !1197
  %11 = load i16, i16* %add.ptr35, align 2, !dbg !1198
  %conv36 = zext i16 %11 to i32, !dbg !1199
  %and37 = and i32 %conv36, 8192, !dbg !1200
  %tobool38 = icmp ne i32 %and37, 0, !dbg !1200
  br i1 %tobool38, label %if.end40, label %if.then39, !dbg !1201

if.then39:                                        ; preds = %while_continue___1
  br label %while_break___1, !dbg !1202

if.end40:                                         ; preds = %while_continue___1
  br label %while.body29, !dbg !1178, !llvm.loop !1204

while_break___7:                                  ; No predecessors!
  br label %while_break___1, !dbg !1206

while_break___1:                                  ; preds = %while_break___7, %if.then39
  br label %if.end41, !dbg !1207

if.end41:                                         ; preds = %while_break___1, %case_0
  %12 = load i64, i64* @nextstate, align 8, !dbg !1208
  store i64 %12, i64* @state, align 8, !dbg !1209
  br label %switch_break, !dbg !1210

case_1:                                           ; preds = %if.then14
  call void @llvm.dbg.value(metadata i64 0, metadata !1211, metadata !DIExpression()), !dbg !1076
  %call42 = call i16** @__ctype_b_loc() #10, !dbg !1212
  call void @llvm.dbg.value(metadata i16** %call42, metadata !1215, metadata !DIExpression()), !dbg !1076
  %13 = load i16*, i16** %call42, align 8, !dbg !1216
  %14 = load i64, i64* @c, align 8, !dbg !1218
  %conv43 = trunc i64 %14 to i32, !dbg !1219
  %idx.ext44 = sext i32 %conv43 to i64, !dbg !1220
  %add.ptr45 = getelementptr inbounds i16, i16* %13, i64 %idx.ext44, !dbg !1220
  %15 = load i16, i16* %add.ptr45, align 2, !dbg !1221
  %conv46 = zext i16 %15 to i32, !dbg !1222
  %and47 = and i32 %conv46, 1024, !dbg !1223
  %tobool48 = icmp ne i32 %and47, 0, !dbg !1223
  br i1 %tobool48, label %if.end50, label %if.then49, !dbg !1224

if.then49:                                        ; preds = %case_1
  call void @err_expect(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.4, i32 0, i32 0)), !dbg !1225
  br label %switch_break, !dbg !1229

if.end50:                                         ; preds = %case_1
  br label %while.body52, !dbg !1230

while.body52:                                     ; preds = %if.end80, %if.end50
  %n.0 = phi i64 [ 0, %if.end50 ], [ %inc53, %if.end80 ], !dbg !1233
  call void @llvm.dbg.value(metadata i64 %n.0, metadata !1211, metadata !DIExpression()), !dbg !1076
  br label %while_continue___8, !dbg !1234

while_continue___8:                               ; preds = %while.body52
  br label %while_continue___2, !dbg !1234

while_continue___2:                               ; preds = %while_continue___8
  call void @llvm.dbg.value(metadata i64 %n.0, metadata !1235, metadata !DIExpression()), !dbg !1076
  %inc53 = add i64 %n.0, 1, !dbg !1236
  call void @llvm.dbg.value(metadata i64 %inc53, metadata !1211, metadata !DIExpression()), !dbg !1076
  %16 = load i64, i64* @c, align 8, !dbg !1239
  %conv54 = trunc i64 %16 to i8, !dbg !1240
  %arrayidx55 = getelementptr inbounds [200 x i8], [200 x i8]* %option, i64 0, i64 %n.0, !dbg !1241
  store i8 %conv54, i8* %arrayidx55, align 1, !dbg !1242
  %call56 = call signext i8 @nextchar(), !dbg !1243
  call void @llvm.dbg.value(metadata i8 %call56, metadata !1245, metadata !DIExpression()), !dbg !1076
  %conv57 = sext i8 %call56 to i64, !dbg !1246
  store i64 %conv57, i64* @c, align 8, !dbg !1247
  %call58 = call i16** @__ctype_b_loc() #10, !dbg !1248
  call void @llvm.dbg.value(metadata i16** %call58, metadata !1250, metadata !DIExpression()), !dbg !1076
  %17 = load i16*, i16** %call58, align 8, !dbg !1251
  %18 = load i64, i64* @c, align 8, !dbg !1253
  %conv59 = trunc i64 %18 to i32, !dbg !1254
  %idx.ext60 = sext i32 %conv59 to i64, !dbg !1255
  %add.ptr61 = getelementptr inbounds i16, i16* %17, i64 %idx.ext60, !dbg !1255
  %19 = load i16, i16* %add.ptr61, align 2, !dbg !1256
  %conv62 = zext i16 %19 to i32, !dbg !1257
  %and63 = and i32 %conv62, 8, !dbg !1258
  %tobool64 = icmp ne i32 %and63, 0, !dbg !1258
  br i1 %tobool64, label %if.then65, label %if.else, !dbg !1259

if.then65:                                        ; preds = %while_continue___2
  br label %_L, !dbg !1260

if.else:                                          ; preds = %while_continue___2
  %20 = load i64, i64* @c, align 8, !dbg !1262
  %cmp66 = icmp eq i64 %20, 45, !dbg !1264
  br i1 %cmp66, label %if.then68, label %if.else69, !dbg !1257

if.then68:                                        ; preds = %if.else
  br label %_L, !dbg !1265

if.else69:                                        ; preds = %if.else
  %21 = load i64, i64* @c, align 8, !dbg !1267
  %cmp70 = icmp eq i64 %21, 95, !dbg !1269
  br i1 %cmp70, label %if.then72, label %if.else77, !dbg !1262

if.then72:                                        ; preds = %if.else69
  br label %_L, !dbg !1270

_L:                                               ; preds = %if.then72, %if.then68, %if.then65
  %cmp73 = icmp ult i64 %inc53, 199, !dbg !1271
  br i1 %cmp73, label %if.end76, label %if.then75, !dbg !1274

if.then75:                                        ; preds = %_L
  br label %while_break___2, !dbg !1275

if.end76:                                         ; preds = %_L
  br label %if.end78, !dbg !1277

if.else77:                                        ; preds = %if.else69
  br label %while_break___2, !dbg !1278

if.end78:                                         ; preds = %if.end76
  br label %if.end79

if.end79:                                         ; preds = %if.end78
  br label %if.end80

if.end80:                                         ; preds = %if.end79
  br label %while.body52, !dbg !1230, !llvm.loop !1280

while_break___8:                                  ; No predecessors!
  br label %while_break___2, !dbg !1282

while_break___2:                                  ; preds = %while_break___8, %if.else77, %if.then75
  %arrayidx81 = getelementptr inbounds [200 x i8], [200 x i8]* %option, i64 0, i64 %inc53, !dbg !1283
  store i8 0, i8* %arrayidx81, align 1, !dbg !1284
  store i64 0, i64* @state, align 8, !dbg !1285
  store i64 2, i64* @nextstate, align 8, !dbg !1286
  br label %switch_break, !dbg !1287

case_2:                                           ; preds = %if.then18
  %22 = load i64, i64* @c, align 8, !dbg !1288
  %cmp82 = icmp ne i64 %22, 61, !dbg !1290
  br i1 %cmp82, label %if.then84, label %if.end85, !dbg !1291

if.then84:                                        ; preds = %case_2
  call void @err_expect(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i32 0, i32 0)), !dbg !1292
  br label %switch_break, !dbg !1296

if.end85:                                         ; preds = %case_2
  store i64 0, i64* @state, align 8, !dbg !1297
  store i64 3, i64* @nextstate, align 8, !dbg !1299
  %call86 = call signext i8 @nextchar(), !dbg !1300
  call void @llvm.dbg.value(metadata i8 %call86, metadata !1302, metadata !DIExpression()), !dbg !1076
  %conv87 = sext i8 %call86 to i64, !dbg !1303
  store i64 %conv87, i64* @c, align 8, !dbg !1304
  br label %switch_break, !dbg !1305

case_3:                                           ; preds = %if.then22
  call void @llvm.dbg.value(metadata i64 0, metadata !1211, metadata !DIExpression()), !dbg !1076
  br label %while.body89, !dbg !1306

while.body89:                                     ; preds = %if.end102, %case_3
  %n.1 = phi i64 [ 0, %case_3 ], [ %inc103, %if.end102 ], !dbg !1233
  call void @llvm.dbg.value(metadata i64 %n.1, metadata !1211, metadata !DIExpression()), !dbg !1076
  br label %while_continue___9, !dbg !1309

while_continue___9:                               ; preds = %while.body89
  br label %while_continue___3, !dbg !1309

while_continue___3:                               ; preds = %while_continue___9
  %add.ptr90 = getelementptr inbounds %struct.cfg_option, %struct.cfg_option* %options___1, i64 %n.1, !dbg !1310
  %name = getelementptr inbounds %struct.cfg_option, %struct.cfg_option* %add.ptr90, i32 0, i32 0, !dbg !1313
  %23 = load i8*, i8** %name, align 8, !dbg !1313
  %24 = ptrtoint i8* %23 to i64, !dbg !1314
  %cmp91 = icmp ne i64 %24, 0, !dbg !1315
  br i1 %cmp91, label %if.then93, label %if.else101, !dbg !1316

if.then93:                                        ; preds = %while_continue___3
  %add.ptr94 = getelementptr inbounds %struct.cfg_option, %struct.cfg_option* %options___1, i64 %n.1, !dbg !1317
  %name95 = getelementptr inbounds %struct.cfg_option, %struct.cfg_option* %add.ptr94, i32 0, i32 0, !dbg !1321
  %25 = load i8*, i8** %name95, align 8, !dbg !1321
  %arraydecay = getelementptr inbounds [200 x i8], [200 x i8]* %option, i32 0, i32 0, !dbg !1322
  %call96 = call i32 @strcmp(i8* %25, i8* %arraydecay) #8, !dbg !1323
  call void @llvm.dbg.value(metadata i32 %call96, metadata !1324, metadata !DIExpression()), !dbg !1076
  %cmp97 = icmp ne i32 %call96, 0, !dbg !1325
  br i1 %cmp97, label %if.end100, label %if.then99, !dbg !1327

if.then99:                                        ; preds = %if.then93
  br label %while_break___3, !dbg !1328

if.end100:                                        ; preds = %if.then93
  br label %if.end102, !dbg !1330

if.else101:                                       ; preds = %while_continue___3
  br label %while_break___3, !dbg !1331

if.end102:                                        ; preds = %if.end100
  %inc103 = add i64 %n.1, 1, !dbg !1333
  call void @llvm.dbg.value(metadata i64 %inc103, metadata !1211, metadata !DIExpression()), !dbg !1076
  br label %while.body89, !dbg !1306, !llvm.loop !1334

while_break___9:                                  ; No predecessors!
  br label %while_break___3, !dbg !1336

while_break___3:                                  ; preds = %while_break___9, %if.else101, %if.then99
  %add.ptr104 = getelementptr inbounds %struct.cfg_option, %struct.cfg_option* %options___1, i64 %n.1, !dbg !1337
  %parse_fn = getelementptr inbounds %struct.cfg_option, %struct.cfg_option* %add.ptr104, i32 0, i32 2, !dbg !1339
  %26 = load void (i8*)*, void (i8*)** %parse_fn, align 8, !dbg !1339
  %tobool105 = icmp ne void (i8*)* %26, null, !dbg !1340
  br i1 %tobool105, label %if.then106, label %if.else110, !dbg !1341

if.then106:                                       ; preds = %while_break___3
  %add.ptr107 = getelementptr inbounds %struct.cfg_option, %struct.cfg_option* %options___1, i64 %n.1, !dbg !1342
  %parse_fn108 = getelementptr inbounds %struct.cfg_option, %struct.cfg_option* %add.ptr107, i32 0, i32 2, !dbg !1346
  %27 = load void (i8*)*, void (i8*)** %parse_fn108, align 8, !dbg !1346
  %add.ptr109 = getelementptr inbounds %struct.cfg_option, %struct.cfg_option* %options___1, i64 %n.1, !dbg !1347
  %ptr = getelementptr inbounds %struct.cfg_option, %struct.cfg_option* %add.ptr109, i32 0, i32 1, !dbg !1348
  %28 = load i8*, i8** %ptr, align 8, !dbg !1348
  call void %27(i8* %28), !dbg !1349
  br label %if.end127, !dbg !1350

if.else110:                                       ; preds = %while_break___3
  %call111 = call i8* @_(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.6, i32 0, i32 0)), !dbg !1351
  call void @llvm.dbg.value(metadata i8* %call111, metadata !1355, metadata !DIExpression()), !dbg !1076
  %29 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !1356
  %arraydecay112 = getelementptr inbounds [200 x i8], [200 x i8]* %option, i32 0, i32 0, !dbg !1358
  %30 = load i64, i64* @cfg_line, align 8, !dbg !1359
  %call113 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %29, i8* %call111, i8* %arraydecay112, i8* %fname, i64 %30), !dbg !1360
  br label %while.body115, !dbg !1361

while.body115:                                    ; preds = %if.end126, %if.else110
  br label %while_continue___10, !dbg !1364

while_continue___10:                              ; preds = %while.body115
  br label %while_continue___4, !dbg !1364

while_continue___4:                               ; preds = %while_continue___10
  %call116 = call signext i8 @nextchar(), !dbg !1365
  call void @llvm.dbg.value(metadata i8 %call116, metadata !1369, metadata !DIExpression()), !dbg !1076
  %conv117 = sext i8 %call116 to i64, !dbg !1370
  store i64 %conv117, i64* @c, align 8, !dbg !1371
  %31 = load i64, i64* @c, align 8, !dbg !1372
  %cmp118 = icmp ne i64 %31, 10, !dbg !1374
  br i1 %cmp118, label %if.then120, label %if.else125, !dbg !1375

if.then120:                                       ; preds = %while_continue___4
  %32 = load i64, i64* @c, align 8, !dbg !1376
  %cmp121 = icmp ne i64 %32, 0, !dbg !1379
  br i1 %cmp121, label %if.end124, label %if.then123, !dbg !1380

if.then123:                                       ; preds = %if.then120
  br label %while_break___4, !dbg !1381

if.end124:                                        ; preds = %if.then120
  br label %if.end126, !dbg !1383

if.else125:                                       ; preds = %while_continue___4
  br label %while_break___4, !dbg !1384

if.end126:                                        ; preds = %if.end124
  br label %while.body115, !dbg !1361, !llvm.loop !1386

while_break___10:                                 ; No predecessors!
  br label %while_break___4, !dbg !1388

while_break___4:                                  ; preds = %while_break___10, %if.else125, %if.then123
  store i64 0, i64* @state, align 8, !dbg !1389
  store i64 1, i64* @nextstate, align 8, !dbg !1390
  br label %if.end127

if.end127:                                        ; preds = %while_break___4, %if.then106
  %call128 = call signext i8 @nextchar(), !dbg !1391
  call void @llvm.dbg.value(metadata i8 %call128, metadata !1394, metadata !DIExpression()), !dbg !1076
  %conv129 = sext i8 %call128 to i64, !dbg !1395
  store i64 %conv129, i64* @c, align 8, !dbg !1396
  br label %switch_break, !dbg !1397

switch_break:                                     ; preds = %if.end127, %if.end85, %if.then84, %while_break___2, %if.then49, %if.end41, %if.end23
  %33 = load i64, i64* @c, align 8, !dbg !1398
  %cmp130 = icmp ne i64 %33, 0, !dbg !1400
  br i1 %cmp130, label %if.end133, label %if.then132, !dbg !1401

if.then132:                                       ; preds = %switch_break
  br label %while_break___0, !dbg !1402

if.end133:                                        ; preds = %switch_break
  br label %while.body7, !dbg !1134, !llvm.loop !1404

while_break___6:                                  ; No predecessors!
  br label %while_break___0, !dbg !1406

while_break___0:                                  ; preds = %while_break___6, %if.then132
  %34 = load %struct._IO_FILE*, %struct._IO_FILE** @cfg_file, align 8, !dbg !1407
  %call134 = call i32 @fclose(%struct._IO_FILE* %34), !dbg !1410
  br label %return, !dbg !1411

return:                                           ; preds = %while_break___0, %if.then
  ret void, !dbg !1412
}

declare %struct._IO_FILE* @fopen(i8*, i8*) #5

; Function Attrs: nounwind readonly
declare i32 @strcmp(i8*, i8*) #2

; Function Attrs: noinline nounwind ssp uwtable
define internal i8* @_(i8* %msgid) #0 !dbg !1413 {
entry:
  call void @llvm.dbg.value(metadata i8* %msgid, metadata !1417, metadata !DIExpression()), !dbg !1418
  %call = call i8* @gettext(i8* %msgid) #11, !dbg !1419
  call void @llvm.dbg.value(metadata i8* %call, metadata !1423, metadata !DIExpression()), !dbg !1418
  ret i8* %call, !dbg !1424
}

declare i32 @fprintf(%struct._IO_FILE*, i8*, ...) #5

declare i32 @fclose(%struct._IO_FILE*) #5

; Function Attrs: noinline nounwind ssp uwtable
define i8* @get_userconfig(i8* %cfgfile___1) #0 !dbg !1425 {
entry:
  call void @llvm.dbg.value(metadata i8* %cfgfile___1, metadata !1426, metadata !DIExpression()), !dbg !1427
  call void @llvm.dbg.declare(metadata !666, metadata !1428, metadata !DIExpression()), !dbg !1429
  call void @llvm.dbg.declare(metadata !666, metadata !1430, metadata !DIExpression()), !dbg !1431
  call void @llvm.dbg.declare(metadata !666, metadata !1432, metadata !DIExpression()), !dbg !1433
  call void @llvm.dbg.declare(metadata !666, metadata !1434, metadata !DIExpression()), !dbg !1435
  %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.7, i32 0, i32 0)) #11, !dbg !1436
  call void @llvm.dbg.value(metadata i8* %call, metadata !1440, metadata !DIExpression()), !dbg !1427
  %tobool = icmp ne i8* %call, null, !dbg !1441
  br i1 %tobool, label %if.else, label %if.then, !dbg !1443

if.then:                                          ; preds = %entry
  br label %return, !dbg !1444

if.else:                                          ; preds = %entry
  %tobool1 = icmp ne i8* %cfgfile___1, null, !dbg !1446
  br i1 %tobool1, label %if.end, label %if.then2, !dbg !1448

if.then2:                                         ; preds = %if.else
  br label %return, !dbg !1449

if.end:                                           ; preds = %if.else
  br label %if.end3

if.end3:                                          ; preds = %if.end
  %call4 = call i32 @strlen(i8* %call) #8, !dbg !1451
  call void @llvm.dbg.value(metadata i32 %call4, metadata !1454, metadata !DIExpression()), !dbg !1427
  %call5 = call i32 @strlen(i8* %cfgfile___1) #8, !dbg !1455
  call void @llvm.dbg.value(metadata i32 %call5, metadata !1457, metadata !DIExpression()), !dbg !1427
  %add = add i32 %call4, %call5, !dbg !1458
  %add6 = add i32 %add, 2, !dbg !1459
  %conv = zext i32 %add6 to i64, !dbg !1460
  call void @llvm.dbg.value(metadata i64 %conv, metadata !1461, metadata !DIExpression()), !dbg !1427
  %conv7 = trunc i64 %conv to i32, !dbg !1462
  %call8 = call noalias i8* @malloc(i32 %conv7) #11, !dbg !1464
  call void @llvm.dbg.value(metadata i8* %call8, metadata !1465, metadata !DIExpression()), !dbg !1427
  call void @llvm.dbg.value(metadata i8* %call8, metadata !1466, metadata !DIExpression()), !dbg !1427
  %0 = ptrtoint i8* %call8 to i64, !dbg !1467
  %cmp = icmp eq i64 %0, 0, !dbg !1469
  br i1 %cmp, label %if.then10, label %if.end13, !dbg !1470

if.then10:                                        ; preds = %if.end3
  %call11 = call i8* @_(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.8, i32 0, i32 0)), !dbg !1471
  call void @llvm.dbg.value(metadata i8* %call11, metadata !1475, metadata !DIExpression()), !dbg !1427
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !1476
  %call12 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.9, i32 0, i32 0), i8* %call11), !dbg !1478
  br label %return, !dbg !1479

if.end13:                                         ; preds = %if.end3
  %conv14 = trunc i64 %conv to i32, !dbg !1480
  %call15 = call i32 (i8*, i32, i8*, ...) @snprintf(i8* %call8, i32 %conv14, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.10, i32 0, i32 0), i8* %call, i8* %cfgfile___1) #11, !dbg !1483
  br label %return, !dbg !1484

return:                                           ; preds = %if.end13, %if.then10, %if.then2, %if.then
  %retval.0 = phi i8* [ null, %if.then10 ], [ %call8, %if.end13 ], [ null, %if.then2 ], [ null, %if.then ], !dbg !1485
  ret i8* %retval.0, !dbg !1486
}

; Function Attrs: nounwind
declare i8* @getenv(i8*) #4

; Function Attrs: nounwind readonly
declare i32 @strlen(i8*) #2

; Function Attrs: nounwind
declare noalias i8* @malloc(i32) #4

; Function Attrs: nounwind
declare i32 @snprintf(i8*, i32, i8*, ...) #4

; Function Attrs: noinline nounwind ssp uwtable
define internal i64 @midi_open(i32 %endian___1, i64 %rate___1) #0 !dbg !1487 {
entry:
  call void @llvm.dbg.value(metadata i32 %endian___1, metadata !1488, metadata !DIExpression()), !dbg !1489
  call void @llvm.dbg.value(metadata i64 %rate___1, metadata !1490, metadata !DIExpression()), !dbg !1489
  ret i64 0, !dbg !1491
}

; Function Attrs: noinline nounwind ssp uwtable
define internal i32 @midi_skip(i32 %subsong) #0 !dbg !1493 {
entry:
  call void @llvm.dbg.value(metadata i32 %subsong, metadata !1494, metadata !DIExpression()), !dbg !1495
  store i64 0, i64* @cycles_prev, align 8, !dbg !1496
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @file, align 8, !dbg !1498
  %tobool = icmp ne %struct._IO_FILE* %0, null, !dbg !1498
  br i1 %tobool, label %if.then, label %if.end3, !dbg !1500

if.then:                                          ; preds = %entry
  %call = call i32 @midi_close_track(), !dbg !1501
  call void @llvm.dbg.value(metadata i32 %call, metadata !1505, metadata !DIExpression()), !dbg !1495
  %tobool1 = icmp ne i32 %call, 0, !dbg !1506
  br i1 %tobool1, label %if.then2, label %if.end, !dbg !1508

if.then2:                                         ; preds = %if.then
  br label %return, !dbg !1509

if.end:                                           ; preds = %if.then
  br label %if.end3, !dbg !1511

if.end3:                                          ; preds = %if.end, %entry
  %call4 = call i32 @midi_open_track(i32 %subsong), !dbg !1512
  call void @llvm.dbg.value(metadata i32 %call4, metadata !1515, metadata !DIExpression()), !dbg !1495
  br label %return, !dbg !1516

return:                                           ; preds = %if.end3, %if.then2
  %retval.0 = phi i32 [ 1, %if.then2 ], [ %call4, %if.end3 ], !dbg !1517
  ret i32 %retval.0, !dbg !1518
}

; Function Attrs: noinline nounwind ssp uwtable
define internal i32 @midi_io(i64 %cycles, i32 %addr, i8 zeroext %val) #0 !dbg !1519 {
entry:
  call void @llvm.dbg.value(metadata i64 %cycles, metadata !1520, metadata !DIExpression()), !dbg !1521
  call void @llvm.dbg.value(metadata i32 %addr, metadata !1522, metadata !DIExpression()), !dbg !1521
  call void @llvm.dbg.value(metadata i8 %val, metadata !1523, metadata !DIExpression()), !dbg !1521
  %sub = sub i32 %addr, 65296, !dbg !1524
  %div = udiv i32 %sub, 5, !dbg !1526
  %conv = zext i32 %div to i64, !dbg !1527
  call void @llvm.dbg.value(metadata i64 %conv, metadata !1528, metadata !DIExpression()), !dbg !1521
  %cmp = icmp eq i32 %addr, 65313, !dbg !1529
  br i1 %cmp, label %if.then, label %if.end, !dbg !1532

if.then:                                          ; preds = %entry
  br label %case_65313, !dbg !1533

if.end:                                           ; preds = %entry
  %cmp2 = icmp eq i32 %addr, 65303, !dbg !1535
  br i1 %cmp2, label %if.then4, label %if.end5, !dbg !1532

if.then4:                                         ; preds = %if.end
  br label %case_65313, !dbg !1537

if.end5:                                          ; preds = %if.end
  %cmp6 = icmp eq i32 %addr, 65298, !dbg !1539
  br i1 %cmp6, label %if.then8, label %if.end9, !dbg !1532

if.then8:                                         ; preds = %if.end5
  br label %case_65313, !dbg !1541

if.end9:                                          ; preds = %if.end5
  %cmp10 = icmp eq i32 %addr, 65309, !dbg !1543
  br i1 %cmp10, label %if.then12, label %if.end13, !dbg !1545

if.then12:                                        ; preds = %if.end9
  br label %case_65309, !dbg !1546

if.end13:                                         ; preds = %if.end9
  %cmp14 = icmp eq i32 %addr, 65304, !dbg !1548
  br i1 %cmp14, label %if.then16, label %if.end17, !dbg !1545

if.then16:                                        ; preds = %if.end13
  br label %case_65309, !dbg !1550

if.end17:                                         ; preds = %if.end13
  %cmp18 = icmp eq i32 %addr, 65299, !dbg !1552
  br i1 %cmp18, label %if.then20, label %if.end21, !dbg !1545

if.then20:                                        ; preds = %if.end17
  br label %case_65309, !dbg !1554

if.end21:                                         ; preds = %if.end17
  %cmp22 = icmp eq i32 %addr, 65310, !dbg !1556
  br i1 %cmp22, label %if.then24, label %if.end25, !dbg !1558

if.then24:                                        ; preds = %if.end21
  br label %case_65310, !dbg !1559

if.end25:                                         ; preds = %if.end21
  %cmp26 = icmp eq i32 %addr, 65305, !dbg !1561
  br i1 %cmp26, label %if.then28, label %if.end29, !dbg !1558

if.then28:                                        ; preds = %if.end25
  br label %case_65310, !dbg !1563

if.end29:                                         ; preds = %if.end25
  %cmp30 = icmp eq i32 %addr, 65300, !dbg !1565
  br i1 %cmp30, label %if.then32, label %if.end33, !dbg !1558

if.then32:                                        ; preds = %if.end29
  br label %case_65310, !dbg !1567

if.end33:                                         ; preds = %if.end29
  %cmp34 = icmp eq i32 %addr, 65306, !dbg !1569
  br i1 %cmp34, label %if.then36, label %if.end37, !dbg !1571

if.then36:                                        ; preds = %if.end33
  br label %case_65306, !dbg !1572

if.end37:                                         ; preds = %if.end33
  %cmp38 = icmp eq i32 %addr, 65308, !dbg !1574
  br i1 %cmp38, label %if.then40, label %if.end41, !dbg !1576

if.then40:                                        ; preds = %if.end37
  br label %case_65308, !dbg !1577

if.end41:                                         ; preds = %if.end37
  br label %switch_break, !dbg !1579

case_65313:                                       ; preds = %if.then8, %if.then4, %if.then
  br label %case_65303, !dbg !1579

case_65303:                                       ; preds = %case_65313
  br label %case_65298, !dbg !1579

case_65298:                                       ; preds = %case_65303
  %conv42 = zext i8 %val to i32, !dbg !1580
  %shr = ashr i32 %conv42, 4, !dbg !1581
  %mul = mul nsw i32 8, %shr, !dbg !1582
  %arrayidx = getelementptr inbounds [4 x i32], [4 x i32]* @volume, i64 0, i64 %conv, !dbg !1583
  store i32 %mul, i32* %arrayidx, align 4, !dbg !1584
  br label %switch_break, !dbg !1585

case_65309:                                       ; preds = %if.then20, %if.then16, %if.then12
  br label %case_65304, !dbg !1585

case_65304:                                       ; preds = %case_65309
  br label %case_65299, !dbg !1585

case_65299:                                       ; preds = %case_65304
  %arrayidx43 = getelementptr inbounds [4 x i64], [4 x i64]* @div___0, i64 0, i64 %conv, !dbg !1586
  %0 = load i64, i64* %arrayidx43, align 8, !dbg !1587
  %and = and i64 %0, 65280, !dbg !1587
  store i64 %and, i64* %arrayidx43, align 8, !dbg !1587
  %conv44 = zext i8 %val to i64, !dbg !1588
  %arrayidx45 = getelementptr inbounds [4 x i64], [4 x i64]* @div___0, i64 0, i64 %conv, !dbg !1589
  %1 = load i64, i64* %arrayidx45, align 8, !dbg !1590
  %or = or i64 %1, %conv44, !dbg !1590
  store i64 %or, i64* %arrayidx45, align 8, !dbg !1590
  br label %switch_break, !dbg !1591

case_65310:                                       ; preds = %if.then32, %if.then28, %if.then24
  br label %case_65305, !dbg !1591

case_65305:                                       ; preds = %case_65310
  br label %case_65300, !dbg !1591

case_65300:                                       ; preds = %case_65305
  %arrayidx46 = getelementptr inbounds [4 x i64], [4 x i64]* @div___0, i64 0, i64 %conv, !dbg !1592
  %2 = load i64, i64* %arrayidx46, align 8, !dbg !1594
  %and47 = and i64 %2, 255, !dbg !1594
  store i64 %and47, i64* %arrayidx46, align 8, !dbg !1594
  %conv48 = zext i8 %val to i32, !dbg !1595
  %and49 = and i32 %conv48, 7, !dbg !1596
  %conv50 = sext i32 %and49 to i64, !dbg !1597
  %shl = shl i64 %conv50, 8, !dbg !1598
  %arrayidx51 = getelementptr inbounds [4 x i64], [4 x i64]* @div___0, i64 0, i64 %conv, !dbg !1599
  %3 = load i64, i64* %arrayidx51, align 8, !dbg !1600
  %or52 = or i64 %3, %shl, !dbg !1600
  store i64 %or52, i64* %arrayidx51, align 8, !dbg !1600
  %arrayidx53 = getelementptr inbounds [4 x i64], [4 x i64]* @div___0, i64 0, i64 %conv, !dbg !1601
  %4 = load i64, i64* %arrayidx53, align 8, !dbg !1601
  %sub54 = sub nsw i64 2048, %4, !dbg !1603
  %div55 = sdiv i64 262144, %sub54, !dbg !1604
  %conv56 = sitofp i64 %div55 to double, !dbg !1605
  %5 = call double @llvm.log.f64(double %conv56), !dbg !1606
  call void @llvm.dbg.value(metadata double %5, metadata !1607, metadata !DIExpression()), !dbg !1521
  %div57 = fdiv double %5, 0x3FE62E42FEFA39EF, !dbg !1608
  %sub58 = fsub double %div57, 0x4017201CC2C0005A, !dbg !1609
  %mul59 = fmul double %sub58, 1.200000e+01, !dbg !1610
  %add = fadd double %mul59, 2.000000e-01, !dbg !1611
  %conv60 = fptosi double %add to i64, !dbg !1612
  %add61 = add nsw i64 %conv60, 21, !dbg !1613
  %conv62 = trunc i64 %add61 to i32, !dbg !1614
  call void @llvm.dbg.value(metadata i32 %conv62, metadata !1615, metadata !DIExpression()), !dbg !1521
  %conv63 = zext i8 %val to i32, !dbg !1616
  %and64 = and i32 %conv63, 128, !dbg !1618
  %tobool = icmp ne i32 %and64, 0, !dbg !1618
  br i1 %tobool, label %if.then65, label %if.else92, !dbg !1619

if.then65:                                        ; preds = %case_65300
  %arrayidx66 = getelementptr inbounds [4 x i64], [4 x i64]* @note, i64 0, i64 %conv, !dbg !1620
  %6 = load i64, i64* %arrayidx66, align 8, !dbg !1620
  %tobool67 = icmp ne i64 %6, 0, !dbg !1620
  br i1 %tobool67, label %if.then68, label %if.end75, !dbg !1623

if.then68:                                        ; preds = %if.then65
  %conv69 = trunc i64 %conv to i32, !dbg !1624
  %arrayidx70 = getelementptr inbounds [4 x i64], [4 x i64]* @note, i64 0, i64 %conv, !dbg !1628
  %7 = load i64, i64* %arrayidx70, align 8, !dbg !1628
  %conv71 = trunc i64 %7 to i32, !dbg !1629
  %call = call i32 @note_off(i64 %cycles, i32 %conv69, i32 %conv71), !dbg !1630
  call void @llvm.dbg.value(metadata i32 %call, metadata !1631, metadata !DIExpression()), !dbg !1521
  %tobool72 = icmp ne i32 %call, 0, !dbg !1632
  br i1 %tobool72, label %if.then73, label %if.end74, !dbg !1634

if.then73:                                        ; preds = %if.then68
  br label %return, !dbg !1635

if.end74:                                         ; preds = %if.then68
  br label %if.end75, !dbg !1637

if.end75:                                         ; preds = %if.end74, %if.then65
  %cmp76 = icmp slt i32 %conv62, 0, !dbg !1638
  br i1 %cmp76, label %if.then78, label %if.else, !dbg !1640

if.then78:                                        ; preds = %if.end75
  br label %switch_break, !dbg !1641

if.else:                                          ; preds = %if.end75
  %cmp79 = icmp sge i32 %conv62, 128, !dbg !1643
  br i1 %cmp79, label %if.then81, label %if.end82, !dbg !1645

if.then81:                                        ; preds = %if.else
  br label %switch_break, !dbg !1646

if.end82:                                         ; preds = %if.else
  br label %if.end83

if.end83:                                         ; preds = %if.end82
  %conv84 = trunc i64 %conv to i32, !dbg !1648
  %arrayidx85 = getelementptr inbounds [4 x i32], [4 x i32]* @volume, i64 0, i64 %conv, !dbg !1651
  %8 = load i32, i32* %arrayidx85, align 4, !dbg !1651
  %call86 = call i32 @note_on(i64 %cycles, i32 %conv84, i32 %conv62, i32 %8), !dbg !1652
  call void @llvm.dbg.value(metadata i32 %call86, metadata !1653, metadata !DIExpression()), !dbg !1521
  %tobool87 = icmp ne i32 %call86, 0, !dbg !1654
  br i1 %tobool87, label %if.then88, label %if.end89, !dbg !1656

if.then88:                                        ; preds = %if.end83
  br label %return, !dbg !1657

if.end89:                                         ; preds = %if.end83
  %conv90 = sext i32 %conv62 to i64, !dbg !1659
  %arrayidx91 = getelementptr inbounds [4 x i64], [4 x i64]* @note, i64 0, i64 %conv, !dbg !1660
  store i64 %conv90, i64* %arrayidx91, align 8, !dbg !1661
  br label %if.end101, !dbg !1662

if.else92:                                        ; preds = %case_65300
  %conv93 = trunc i64 %conv to i32, !dbg !1663
  %arrayidx94 = getelementptr inbounds [4 x i64], [4 x i64]* @note, i64 0, i64 %conv, !dbg !1667
  %9 = load i64, i64* %arrayidx94, align 8, !dbg !1667
  %conv95 = trunc i64 %9 to i32, !dbg !1668
  %call96 = call i32 @note_off(i64 %cycles, i32 %conv93, i32 %conv95), !dbg !1669
  call void @llvm.dbg.value(metadata i32 %call96, metadata !1670, metadata !DIExpression()), !dbg !1521
  %tobool97 = icmp ne i32 %call96, 0, !dbg !1671
  br i1 %tobool97, label %if.then98, label %if.end99, !dbg !1673

if.then98:                                        ; preds = %if.else92
  br label %return, !dbg !1674

if.end99:                                         ; preds = %if.else92
  %arrayidx100 = getelementptr inbounds [4 x i64], [4 x i64]* @note, i64 0, i64 %conv, !dbg !1676
  store i64 0, i64* %arrayidx100, align 8, !dbg !1677
  br label %if.end101

if.end101:                                        ; preds = %if.end99, %if.end89
  br label %switch_break, !dbg !1678

case_65306:                                       ; preds = %if.then36
  br label %switch_break, !dbg !1679

case_65308:                                       ; preds = %if.then40
  %conv102 = zext i8 %val to i32, !dbg !1680
  %shr103 = ashr i32 %conv102, 5, !dbg !1681
  %sub104 = sub nsw i32 4, %shr103, !dbg !1682
  %and105 = and i32 %sub104, 3, !dbg !1683
  %mul106 = mul nsw i32 32, %and105, !dbg !1684
  store i32 %mul106, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @volume, i64 0, i64 2), align 8, !dbg !1685
  br label %switch_break, !dbg !1686

switch_break:                                     ; preds = %case_65308, %case_65306, %if.end101, %if.then81, %if.then78, %case_65299, %case_65298, %if.end41
  br label %return, !dbg !1687

return:                                           ; preds = %switch_break, %if.then98, %if.then88, %if.then73
  %retval.0 = phi i32 [ 0, %switch_break ], [ 1, %if.then73 ], [ 1, %if.then88 ], [ 1, %if.then98 ], !dbg !1688
  ret i32 %retval.0, !dbg !1689
}

; Function Attrs: noinline nounwind ssp uwtable
define internal i32 @midi_write(i8* %buf___3, i32 %count) #0 !dbg !1690 {
entry:
  call void @llvm.dbg.value(metadata i8* %buf___3, metadata !1691, metadata !DIExpression()), !dbg !1692
  call void @llvm.dbg.value(metadata i32 %count, metadata !1693, metadata !DIExpression()), !dbg !1692
  ret i32 %count, !dbg !1694
}

; Function Attrs: noinline nounwind ssp uwtable
define internal void @midi_close() #0 !dbg !1696 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @file, align 8, !dbg !1697
  %tobool = icmp ne %struct._IO_FILE* %0, null, !dbg !1697
  br i1 %tobool, label %if.then, label %if.end, !dbg !1700

if.then:                                          ; preds = %entry
  %call = call i32 @midi_close_track(), !dbg !1701
  br label %if.end, !dbg !1705

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !1706
}

; Function Attrs: noinline nounwind ssp uwtable
define void @gbcpu_addmem(i32 %start, i32 %end, void (i32, i8)* %putfn, i32 (i32)* %getfn) #0 !dbg !1707 {
entry:
  call void @llvm.dbg.value(metadata i32 %start, metadata !1710, metadata !DIExpression()), !dbg !1711
  call void @llvm.dbg.value(metadata i32 %end, metadata !1712, metadata !DIExpression()), !dbg !1711
  call void @llvm.dbg.value(metadata void (i32, i8)* %putfn, metadata !1713, metadata !DIExpression()), !dbg !1711
  call void @llvm.dbg.value(metadata i32 (i32)* %getfn, metadata !1714, metadata !DIExpression()), !dbg !1711
  call void @llvm.dbg.value(metadata i32 %start, metadata !1715, metadata !DIExpression()), !dbg !1711
  br label %while.body, !dbg !1716

while.body:                                       ; preds = %if.end, %entry
  %i.0 = phi i32 [ %start, %entry ], [ %inc, %if.end ], !dbg !1720
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !1715, metadata !DIExpression()), !dbg !1711
  br label %while_continue___0, !dbg !1721

while_continue___0:                               ; preds = %while.body
  br label %while_continue, !dbg !1721

while_continue:                                   ; preds = %while_continue___0
  %cmp = icmp ule i32 %i.0, %end, !dbg !1722
  br i1 %cmp, label %if.end, label %if.then, !dbg !1725

if.then:                                          ; preds = %while_continue
  br label %while_break, !dbg !1726

if.end:                                           ; preds = %while_continue
  %idxprom = zext i32 %i.0 to i64, !dbg !1728
  %arrayidx = getelementptr inbounds [256 x void (i32, i8)*], [256 x void (i32, i8)*]* @putlookup, i64 0, i64 %idxprom, !dbg !1728
  store void (i32, i8)* %putfn, void (i32, i8)** %arrayidx, align 8, !dbg !1729
  %idxprom1 = zext i32 %i.0 to i64, !dbg !1730
  %arrayidx2 = getelementptr inbounds [256 x i32 (i32)*], [256 x i32 (i32)*]* @getlookup, i64 0, i64 %idxprom1, !dbg !1730
  store i32 (i32)* %getfn, i32 (i32)** %arrayidx2, align 8, !dbg !1731
  %inc = add i32 %i.0, 1, !dbg !1732
  call void @llvm.dbg.value(metadata i32 %inc, metadata !1715, metadata !DIExpression()), !dbg !1711
  br label %while.body, !dbg !1716, !llvm.loop !1733

while_break___0:                                  ; No predecessors!
  br label %while_break, !dbg !1735

while_break:                                      ; preds = %while_break___0, %if.then
  ret void, !dbg !1736
}

; Function Attrs: noinline nounwind ssp uwtable
define void @gbcpu_init() #0 !dbg !1737 {
entry:
  %call = call i8* @memset(i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 0), i32 0, i32 12) #11, !dbg !1738
  store i64 0, i64* @gbcpu_halted, align 8, !dbg !1742
  store i64 0, i64* @gbcpu_stopped, align 8, !dbg !1743
  store i64 0, i64* @gbcpu_if, align 8, !dbg !1744
  ret void, !dbg !1745
}

; Function Attrs: nounwind
declare i8* @memset(i8*, i32, i32) #4

; Function Attrs: noinline nounwind ssp uwtable
define void @gbcpu_intr(i64 %vec) #0 !dbg !1746 {
entry:
  call void @llvm.dbg.value(metadata i64 %vec, metadata !1749, metadata !DIExpression()), !dbg !1750
  store i64 0, i64* @gbcpu_halted, align 8, !dbg !1751
  %0 = load i16, i16* bitcast (i8* getelementptr inbounds ([12 x i8], [12 x i8]* bitcast (%union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs to [12 x i8]*), i64 0, i64 10) to i16*), align 2, !dbg !1754
  %conv = zext i16 %0 to i32, !dbg !1756
  call void @push(i32 %conv), !dbg !1757
  %conv1 = trunc i64 %vec to i16, !dbg !1758
  store i16 %conv1, i16* bitcast (i8* getelementptr inbounds ([12 x i8], [12 x i8]* bitcast (%union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs to [12 x i8]*), i64 0, i64 10) to i16*), align 2, !dbg !1759
  ret void, !dbg !1760
}

; Function Attrs: noinline nounwind ssp uwtable
define internal void @push(i32 %val) #0 !dbg !1761 {
entry:
  call void @llvm.dbg.value(metadata i32 %val, metadata !1764, metadata !DIExpression()), !dbg !1765
  %0 = load i16, i16* bitcast (i8* getelementptr inbounds ([12 x i8], [12 x i8]* bitcast (%union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs to [12 x i8]*), i64 0, i64 8) to i16*), align 2, !dbg !1766
  %conv = zext i16 %0 to i32, !dbg !1769
  %sub = sub nsw i32 %conv, 2, !dbg !1770
  call void @llvm.dbg.value(metadata i32 %sub, metadata !1771, metadata !DIExpression()), !dbg !1765
  %conv1 = trunc i32 %sub to i16, !dbg !1772
  store i16 %conv1, i16* bitcast (i8* getelementptr inbounds ([12 x i8], [12 x i8]* bitcast (%union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs to [12 x i8]*), i64 0, i64 8) to i16*), align 2, !dbg !1773
  %and = and i32 %val, 255, !dbg !1774
  call void @mem_put(i32 %sub, i32 %and), !dbg !1776
  %add = add i32 %sub, 1, !dbg !1777
  %shr = lshr i32 %val, 8, !dbg !1779
  call void @mem_put(i32 %add, i32 %shr), !dbg !1780
  ret void, !dbg !1781
}

; Function Attrs: noinline nounwind ssp uwtable
define i64 @gbcpu_step() #0 !dbg !1782 {
entry:
  call void @llvm.dbg.declare(metadata !666, metadata !1785, metadata !DIExpression()), !dbg !1786
  %0 = load i64, i64* @gbcpu_halted, align 8, !dbg !1787
  %tobool = icmp ne i64 %0, 0, !dbg !1787
  br i1 %tobool, label %if.end, label %if.then, !dbg !1790

if.then:                                          ; preds = %entry
  %1 = load i16, i16* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 9), align 2, !dbg !1791
  call void @llvm.dbg.value(metadata i16 %1, metadata !1794, metadata !DIExpression()), !dbg !1795
  %2 = load i16, i16* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 9), align 2, !dbg !1796
  %conv = zext i16 %2 to i32, !dbg !1797
  %add = add nsw i32 %conv, 1, !dbg !1798
  %conv1 = trunc i32 %add to i16, !dbg !1799
  store i16 %conv1, i16* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 9), align 2, !dbg !1800
  %conv2 = zext i16 %1 to i32, !dbg !1801
  %call = call i32 @mem_get(i32 %conv2), !dbg !1803
  call void @llvm.dbg.value(metadata i32 %call, metadata !1804, metadata !DIExpression()), !dbg !1795
  %conv3 = trunc i32 %call to i8, !dbg !1805
  call void @llvm.dbg.value(metadata i8 %conv3, metadata !1806, metadata !DIExpression()), !dbg !1795
  br label %while.body, !dbg !1807

while.body:                                       ; preds = %if.then
  br label %while_continue___0, !dbg !1810

while_continue___0:                               ; preds = %while.body
  br label %while_continue, !dbg !1810

while_continue:                                   ; preds = %while_continue___0
  br label %while_break, !dbg !1811

while_break___0:                                  ; No predecessors!
  br label %while_break, !dbg !1813

while_break:                                      ; preds = %while_break___0, %while_continue
  %idxprom = zext i8 %conv3 to i64, !dbg !1814
  %arrayidx = getelementptr inbounds [256 x %struct.opinfo], [256 x %struct.opinfo]* @ops, i64 0, i64 %idxprom, !dbg !1814
  %fn = getelementptr inbounds %struct.opinfo, %struct.opinfo* %arrayidx, i32 0, i32 0, !dbg !1817
  %3 = load void (i32, %struct.opinfo*)*, void (i32, %struct.opinfo*)** %fn, align 8, !dbg !1817
  %conv4 = zext i8 %conv3 to i32, !dbg !1818
  %idxprom5 = zext i8 %conv3 to i64, !dbg !1819
  %arrayidx6 = getelementptr inbounds [256 x %struct.opinfo], [256 x %struct.opinfo]* @ops, i64 0, i64 %idxprom5, !dbg !1819
  call void %3(i32 %conv4, %struct.opinfo* %arrayidx6), !dbg !1820
  br label %return, !dbg !1821

if.end:                                           ; preds = %entry
  %4 = load i64, i64* @gbcpu_halted, align 8, !dbg !1822
  %cmp = icmp eq i64 %4, 1, !dbg !1824
  br i1 %cmp, label %if.then8, label %if.end14, !dbg !1825

if.then8:                                         ; preds = %if.end
  %5 = load i64, i64* @gbcpu_if, align 8, !dbg !1826
  %cmp9 = icmp eq i64 %5, 0, !dbg !1829
  br i1 %cmp9, label %if.then11, label %if.end13, !dbg !1830

if.then11:                                        ; preds = %if.then8
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !1831
  %call12 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %6, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.13, i32 0, i32 0)), !dbg !1835
  store i64 1, i64* @gbcpu_stopped, align 8, !dbg !1836
  br label %if.end13, !dbg !1837

if.end13:                                         ; preds = %if.then11, %if.then8
  br label %if.end14, !dbg !1838

if.end14:                                         ; preds = %if.end13, %if.end
  %7 = load i64, i64* @gbcpu_stopped, align 8, !dbg !1839
  %tobool15 = icmp ne i64 %7, 0, !dbg !1839
  br i1 %tobool15, label %if.then16, label %if.end17, !dbg !1841

if.then16:                                        ; preds = %if.end14
  br label %return, !dbg !1842

if.end17:                                         ; preds = %if.end14
  br label %return, !dbg !1844

return:                                           ; preds = %if.end17, %if.then16, %while_break
  %retval.0 = phi i64 [ -1, %if.then16 ], [ 16, %if.end17 ], [ 1, %while_break ], !dbg !1845
  ret i64 %retval.0, !dbg !1846
}

; Function Attrs: noinline nounwind ssp uwtable
define internal i32 @mem_get(i32 %addr) #0 !dbg !1847 {
entry:
  call void @llvm.dbg.value(metadata i32 %addr, metadata !1848, metadata !DIExpression()), !dbg !1849
  %shr = lshr i32 %addr, 8, !dbg !1850
  %idxprom = zext i32 %shr to i64, !dbg !1853
  %arrayidx = getelementptr inbounds [256 x i32 (i32)*], [256 x i32 (i32)*]* @getlookup, i64 0, i64 %idxprom, !dbg !1853
  %0 = load i32 (i32)*, i32 (i32)** %arrayidx, align 8, !dbg !1853
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !1854, metadata !DIExpression()), !dbg !1849
  %call = call i32 %0(i32 %addr), !dbg !1855
  call void @llvm.dbg.value(metadata i32 %call, metadata !1857, metadata !DIExpression()), !dbg !1849
  ret i32 %call, !dbg !1858
}

; Function Attrs: noinline nounwind ssp uwtable
define i16* @gen_impulsetab(i64 %w_shift, i64 %n_shift, double %cutoff) #0 !dbg !1859 {
entry:
  call void @llvm.dbg.value(metadata i64 %w_shift, metadata !1863, metadata !DIExpression()), !dbg !1864
  call void @llvm.dbg.value(metadata i64 %n_shift, metadata !1865, metadata !DIExpression()), !dbg !1864
  call void @llvm.dbg.value(metadata double %cutoff, metadata !1866, metadata !DIExpression()), !dbg !1864
  %sh_prom = trunc i64 %w_shift to i32, !dbg !1867
  %shl = shl i32 1, %sh_prom, !dbg !1867
  %conv = sext i32 %shl to i64, !dbg !1870
  call void @llvm.dbg.value(metadata i64 %conv, metadata !1871, metadata !DIExpression()), !dbg !1864
  %sh_prom1 = trunc i64 %n_shift to i32, !dbg !1872
  %shl2 = shl i32 1, %sh_prom1, !dbg !1872
  %conv3 = sext i32 %shl2 to i64, !dbg !1873
  call void @llvm.dbg.value(metadata i64 %conv3, metadata !1874, metadata !DIExpression()), !dbg !1864
  %div = sdiv i64 %conv, 2, !dbg !1875
  call void @llvm.dbg.value(metadata i64 %div, metadata !1876, metadata !DIExpression()), !dbg !1864
  %mul = mul nsw i64 %conv, %conv3, !dbg !1877
  %mul4 = mul i64 %mul, 2, !dbg !1878
  call void @llvm.dbg.value(metadata i64 %mul4, metadata !1879, metadata !DIExpression()), !dbg !1864
  %conv5 = trunc i64 %mul4 to i32, !dbg !1880
  %call = call noalias i8* @malloc(i32 %conv5) #11, !dbg !1882
  call void @llvm.dbg.value(metadata i8* %call, metadata !1883, metadata !DIExpression()), !dbg !1864
  %0 = bitcast i8* %call to i16*, !dbg !1884
  call void @llvm.dbg.value(metadata i16* %0, metadata !1885, metadata !DIExpression()), !dbg !1864
  call void @llvm.dbg.value(metadata i16* %0, metadata !1886, metadata !DIExpression()), !dbg !1864
  %tobool = icmp ne i16* %0, null, !dbg !1887
  br i1 %tobool, label %if.end, label %if.then, !dbg !1889

if.then:                                          ; preds = %entry
  br label %return, !dbg !1890

if.end:                                           ; preds = %entry
  call void @llvm.dbg.value(metadata double 0.000000e+00, metadata !1892, metadata !DIExpression()), !dbg !1864
  br label %while.body, !dbg !1893

while.body:                                       ; preds = %while_break___2, %if.end
  %ptr.0 = phi i16* [ %0, %if.end ], [ %ptr.1, %while_break___2 ], !dbg !1896
  %j.0 = phi double [ 0.000000e+00, %if.end ], [ %add86, %while_break___2 ], !dbg !1897
  call void @llvm.dbg.value(metadata double %j.0, metadata !1892, metadata !DIExpression()), !dbg !1864
  call void @llvm.dbg.value(metadata i16* %ptr.0, metadata !1886, metadata !DIExpression()), !dbg !1864
  br label %while_continue___3, !dbg !1898

while_continue___3:                               ; preds = %while.body
  br label %while_continue, !dbg !1898

while_continue:                                   ; preds = %while_continue___3
  %cmp = fcmp olt double %j.0, 1.000000e+00, !dbg !1899
  br i1 %cmp, label %if.end8, label %if.then7, !dbg !1902

if.then7:                                         ; preds = %while_continue
  br label %while_break, !dbg !1903

if.end8:                                          ; preds = %while_continue
  call void @llvm.dbg.value(metadata i64 0, metadata !1905, metadata !DIExpression()), !dbg !1864
  call void @llvm.dbg.value(metadata i64 0, metadata !1906, metadata !DIExpression()), !dbg !1864
  call void @llvm.dbg.value(metadata double 2.560000e+02, metadata !1907, metadata !DIExpression()), !dbg !1864
  call void @llvm.dbg.value(metadata double %cutoff, metadata !1908, metadata !DIExpression()), !dbg !1864
  br label %while.body10, !dbg !1909

while.body10:                                     ; preds = %if.end50, %if.end8
  %n___0.0 = phi i64 [ 0, %if.end8 ], [ %inc45, %if.end50 ], !dbg !1912
  %div___2.0 = phi double [ 2.560000e+02, %if.end8 ], [ %mul41, %if.end50 ], !dbg !1912
  %dcorr.0 = phi double [ %cutoff, %if.end8 ], [ %mul40, %if.end50 ], !dbg !1912
  call void @llvm.dbg.value(metadata double %dcorr.0, metadata !1908, metadata !DIExpression()), !dbg !1864
  call void @llvm.dbg.value(metadata double %div___2.0, metadata !1907, metadata !DIExpression()), !dbg !1864
  call void @llvm.dbg.value(metadata i64 %n___0.0, metadata !1906, metadata !DIExpression()), !dbg !1864
  br label %while_continue___4, !dbg !1913

while_continue___4:                               ; preds = %while.body10
  br label %while_continue___0, !dbg !1913

while_continue___0:                               ; preds = %while_continue___4
  call void @llvm.dbg.value(metadata i64 0, metadata !1905, metadata !DIExpression()), !dbg !1864
  %sub = sub nsw i64 0, %div, !dbg !1914
  %add = add nsw i64 %sub, 1, !dbg !1916
  call void @llvm.dbg.value(metadata i64 %add, metadata !1917, metadata !DIExpression()), !dbg !1864
  br label %while.body12, !dbg !1918

while.body12:                                     ; preds = %if.end16, %while_continue___0
  %sum.0 = phi i64 [ 0, %while_continue___0 ], [ %add33, %if.end16 ], !dbg !1921
  %i.0 = phi i64 [ %add, %while_continue___0 ], [ %inc, %if.end16 ], !dbg !1921
  call void @llvm.dbg.value(metadata i64 %i.0, metadata !1917, metadata !DIExpression()), !dbg !1864
  call void @llvm.dbg.value(metadata i64 %sum.0, metadata !1905, metadata !DIExpression()), !dbg !1864
  br label %while_continue___5, !dbg !1922

while_continue___5:                               ; preds = %while.body12
  br label %while_continue___1, !dbg !1922

while_continue___1:                               ; preds = %while_continue___5
  %cmp13 = icmp sle i64 %i.0, %div, !dbg !1923
  br i1 %cmp13, label %if.end16, label %if.then15, !dbg !1926

if.then15:                                        ; preds = %while_continue___1
  br label %while_break___1, !dbg !1927

if.end16:                                         ; preds = %while_continue___1
  %conv17 = sitofp i64 %i.0 to double, !dbg !1929
  %sub18 = fsub double %conv17, %j.0, !dbg !1932
  %mul19 = fmul double %sub18, %cutoff, !dbg !1933
  %call20 = call double @sinc(double %mul19), !dbg !1934
  call void @llvm.dbg.value(metadata double %call20, metadata !1935, metadata !DIExpression()), !dbg !1864
  %conv21 = sitofp i64 %i.0 to double, !dbg !1936
  %sub22 = fsub double %conv21, %j.0, !dbg !1938
  %div23 = sdiv i64 %conv, 2, !dbg !1939
  %conv24 = sitofp i64 %div23 to double, !dbg !1940
  %add25 = fadd double %sub22, %conv24, !dbg !1941
  %conv26 = sitofp i64 %conv to double, !dbg !1942
  %call27 = call double @blackman(double %add25, double %conv26), !dbg !1943
  call void @llvm.dbg.value(metadata double %call27, metadata !1944, metadata !DIExpression()), !dbg !1864
  %mul28 = fmul double %dcorr.0, 2.560000e+02, !dbg !1945
  %mul29 = fmul double %mul28, %call20, !dbg !1946
  %mul30 = fmul double %mul29, %call27, !dbg !1947
  call void @llvm.dbg.value(metadata double %mul30, metadata !1948, metadata !DIExpression()), !dbg !1864
  %1 = call double @llvm.rint.f64(double %mul30), !dbg !1949
  call void @llvm.dbg.value(metadata double %1, metadata !1951, metadata !DIExpression()), !dbg !1864
  %conv31 = fptosi double %1 to i16, !dbg !1952
  call void @llvm.dbg.value(metadata i16 %conv31, metadata !1953, metadata !DIExpression()), !dbg !1864
  %conv32 = sext i16 %conv31 to i64, !dbg !1954
  %add33 = add nsw i64 %sum.0, %conv32, !dbg !1955
  call void @llvm.dbg.value(metadata i64 %add33, metadata !1905, metadata !DIExpression()), !dbg !1864
  %inc = add nsw i64 %i.0, 1, !dbg !1956
  call void @llvm.dbg.value(metadata i64 %inc, metadata !1917, metadata !DIExpression()), !dbg !1864
  br label %while.body12, !dbg !1918, !llvm.loop !1957

while_break___5:                                  ; No predecessors!
  br label %while_break___1, !dbg !1959

while_break___1:                                  ; preds = %while_break___5, %if.then15
  %conv34 = sitofp i64 %sum.0 to double, !dbg !1960
  %sub35 = fsub double 2.560000e+02, %conv34, !dbg !1961
  %conv36 = fptosi double %sub35 to i64, !dbg !1962
  call void @llvm.dbg.value(metadata i64 %conv36, metadata !1963, metadata !DIExpression()), !dbg !1864
  %conv37 = sitofp i64 %conv36 to double, !dbg !1964
  %div38 = fdiv double %conv37, %div___2.0, !dbg !1965
  %add39 = fadd double 1.000000e+00, %div38, !dbg !1966
  %mul40 = fmul double %dcorr.0, %add39, !dbg !1967
  call void @llvm.dbg.value(metadata double %mul40, metadata !1908, metadata !DIExpression()), !dbg !1864
  %mul41 = fmul double %div___2.0, 1.300000e+00, !dbg !1968
  call void @llvm.dbg.value(metadata double %mul41, metadata !1907, metadata !DIExpression()), !dbg !1864
  %cmp42 = icmp ne i64 %conv36, 0, !dbg !1969
  br i1 %cmp42, label %if.then44, label %if.else, !dbg !1971

if.then44:                                        ; preds = %while_break___1
  call void @llvm.dbg.value(metadata i64 %n___0.0, metadata !1972, metadata !DIExpression()), !dbg !1864
  %inc45 = add nsw i64 %n___0.0, 1, !dbg !1973
  call void @llvm.dbg.value(metadata i64 %inc45, metadata !1906, metadata !DIExpression()), !dbg !1864
  %cmp46 = icmp slt i64 %n___0.0, 20, !dbg !1975
  br i1 %cmp46, label %if.end49, label %if.then48, !dbg !1977

if.then48:                                        ; preds = %if.then44
  br label %while_break___0, !dbg !1978

if.end49:                                         ; preds = %if.then44
  br label %if.end50, !dbg !1980

if.else:                                          ; preds = %while_break___1
  br label %while_break___0, !dbg !1981

if.end50:                                         ; preds = %if.end49
  br label %while.body10, !dbg !1909, !llvm.loop !1983

while_break___4:                                  ; No predecessors!
  br label %while_break___0, !dbg !1985

while_break___0:                                  ; preds = %while_break___4, %if.else, %if.then48
  call void @llvm.dbg.value(metadata i64 0, metadata !1905, metadata !DIExpression()), !dbg !1864
  %sub51 = sub nsw i64 0, %div, !dbg !1986
  %add52 = add nsw i64 %sub51, 1, !dbg !1987
  call void @llvm.dbg.value(metadata i64 %add52, metadata !1917, metadata !DIExpression()), !dbg !1864
  br label %while.body54, !dbg !1988

while.body54:                                     ; preds = %if.end58, %while_break___0
  %ptr.1 = phi i16* [ %ptr.0, %while_break___0 ], [ %incdec.ptr, %if.end58 ], !dbg !1897
  %sum.1 = phi i64 [ 0, %while_break___0 ], [ %add75, %if.end58 ], !dbg !1912
  %i.1 = phi i64 [ %add52, %while_break___0 ], [ %inc76, %if.end58 ], !dbg !1912
  call void @llvm.dbg.value(metadata i64 %i.1, metadata !1917, metadata !DIExpression()), !dbg !1864
  call void @llvm.dbg.value(metadata i64 %sum.1, metadata !1905, metadata !DIExpression()), !dbg !1864
  call void @llvm.dbg.value(metadata i16* %ptr.1, metadata !1886, metadata !DIExpression()), !dbg !1864
  br label %while_continue___6, !dbg !1991

while_continue___6:                               ; preds = %while.body54
  br label %while_continue___2, !dbg !1991

while_continue___2:                               ; preds = %while_continue___6
  %cmp55 = icmp sle i64 %i.1, %div, !dbg !1992
  br i1 %cmp55, label %if.end58, label %if.then57, !dbg !1995

if.then57:                                        ; preds = %while_continue___2
  br label %while_break___2, !dbg !1996

if.end58:                                         ; preds = %while_continue___2
  %conv59 = sitofp i64 %i.1 to double, !dbg !1998
  %sub60 = fsub double %conv59, %j.0, !dbg !2001
  %mul61 = fmul double %sub60, %cutoff, !dbg !2002
  %call62 = call double @sinc(double %mul61), !dbg !2003
  call void @llvm.dbg.value(metadata double %call62, metadata !2004, metadata !DIExpression()), !dbg !1864
  %conv63 = sitofp i64 %i.1 to double, !dbg !2005
  %sub64 = fsub double %conv63, %j.0, !dbg !2007
  %div65 = sdiv i64 %conv, 2, !dbg !2008
  %conv66 = sitofp i64 %div65 to double, !dbg !2009
  %add67 = fadd double %sub64, %conv66, !dbg !2010
  %conv68 = sitofp i64 %conv to double, !dbg !2011
  %call69 = call double @blackman(double %add67, double %conv68), !dbg !2012
  call void @llvm.dbg.value(metadata double %call69, metadata !2013, metadata !DIExpression()), !dbg !1864
  %mul70 = fmul double %mul40, 2.560000e+02, !dbg !2014
  %mul71 = fmul double %mul70, %call62, !dbg !2015
  %mul72 = fmul double %mul71, %call69, !dbg !2016
  call void @llvm.dbg.value(metadata double %mul72, metadata !2017, metadata !DIExpression()), !dbg !1864
  %2 = call double @llvm.rint.f64(double %mul72), !dbg !2018
  call void @llvm.dbg.value(metadata double %2, metadata !2020, metadata !DIExpression()), !dbg !1864
  %conv73 = fptosi double %2 to i16, !dbg !2021
  call void @llvm.dbg.value(metadata i16 %conv73, metadata !2022, metadata !DIExpression()), !dbg !1864
  call void @llvm.dbg.value(metadata i16* %ptr.1, metadata !2023, metadata !DIExpression()), !dbg !1864
  %incdec.ptr = getelementptr inbounds i16, i16* %ptr.1, i32 1, !dbg !2024
  call void @llvm.dbg.value(metadata i16* %incdec.ptr, metadata !1886, metadata !DIExpression()), !dbg !1864
  store i16 %conv73, i16* %ptr.1, align 2, !dbg !2025
  %conv74 = sext i16 %conv73 to i64, !dbg !2026
  %add75 = add nsw i64 %sum.1, %conv74, !dbg !2027
  call void @llvm.dbg.value(metadata i64 %add75, metadata !1905, metadata !DIExpression()), !dbg !1864
  %inc76 = add nsw i64 %i.1, 1, !dbg !2028
  call void @llvm.dbg.value(metadata i64 %inc76, metadata !1917, metadata !DIExpression()), !dbg !1864
  br label %while.body54, !dbg !1988, !llvm.loop !2029

while_break___6:                                  ; No predecessors!
  br label %while_break___2, !dbg !2031

while_break___2:                                  ; preds = %while_break___6, %if.then57
  %idx.neg = sub i64 0, %div, !dbg !2032
  %add.ptr = getelementptr inbounds i16, i16* %ptr.1, i64 %idx.neg, !dbg !2032
  %3 = load i16, i16* %add.ptr, align 2, !dbg !2033
  %conv77 = sitofp i16 %3 to double, !dbg !2034
  %conv78 = sitofp i64 %sum.1 to double, !dbg !2035
  %sub79 = fsub double 2.560000e+02, %conv78, !dbg !2036
  %add80 = fadd double %conv77, %sub79, !dbg !2037
  %conv81 = fptosi double %add80 to i16, !dbg !2038
  %idx.neg82 = sub i64 0, %div, !dbg !2039
  %add.ptr83 = getelementptr inbounds i16, i16* %ptr.1, i64 %idx.neg82, !dbg !2039
  store i16 %conv81, i16* %add.ptr83, align 2, !dbg !2040
  %conv84 = sitofp i64 %conv3 to double, !dbg !2041
  %div85 = fdiv double 1.000000e+00, %conv84, !dbg !2042
  %add86 = fadd double %j.0, %div85, !dbg !2043
  call void @llvm.dbg.value(metadata double %add86, metadata !1892, metadata !DIExpression()), !dbg !1864
  br label %while.body, !dbg !1893, !llvm.loop !2044

while_break___3:                                  ; No predecessors!
  br label %while_break, !dbg !2046

while_break:                                      ; preds = %while_break___3, %if.then7
  br label %return, !dbg !2047

return:                                           ; preds = %while_break, %if.then
  %retval.0 = phi i16* [ %0, %while_break ], [ null, %if.then ], !dbg !1897
  ret i16* %retval.0, !dbg !2048
}

; Function Attrs: noinline nounwind ssp uwtable
define internal double @sinc(double %x) #0 !dbg !2049 {
entry:
  call void @llvm.dbg.value(metadata double %x, metadata !2052, metadata !DIExpression()), !dbg !2053
  %mul = fmul double 0x400921FB54442D18, %x, !dbg !2054
  call void @llvm.dbg.value(metadata double %mul, metadata !2056, metadata !DIExpression()), !dbg !2053
  %cmp = fcmp oeq double %mul, 0.000000e+00, !dbg !2057
  br i1 %cmp, label %if.then, label %if.end, !dbg !2059

if.then:                                          ; preds = %entry
  br label %return, !dbg !2060

if.end:                                           ; preds = %entry
  %0 = call double @llvm.sin.f64(double %mul), !dbg !2062
  call void @llvm.dbg.value(metadata double %0, metadata !2065, metadata !DIExpression()), !dbg !2053
  %div = fdiv double %0, %mul, !dbg !2066
  br label %return, !dbg !2067

return:                                           ; preds = %if.end, %if.then
  %retval.0 = phi double [ 1.000000e+00, %if.then ], [ %div, %if.end ], !dbg !2068
  ret double %retval.0, !dbg !2069
}

; Function Attrs: noinline nounwind ssp uwtable
define internal double @blackman(double %n, double %m) #0 !dbg !2070 {
entry:
  call void @llvm.dbg.value(metadata double %n, metadata !2073, metadata !DIExpression()), !dbg !2074
  call void @llvm.dbg.value(metadata double %m, metadata !2075, metadata !DIExpression()), !dbg !2074
  %mul = fmul double 2.000000e+00, %n, !dbg !2076
  %mul1 = fmul double %mul, 0x400921FB54442D18, !dbg !2080
  %div = fdiv double %mul1, %m, !dbg !2081
  %0 = call double @llvm.cos.f64(double %div), !dbg !2082
  call void @llvm.dbg.value(metadata double %0, metadata !2083, metadata !DIExpression()), !dbg !2074
  %mul2 = fmul double 4.000000e+00, %n, !dbg !2084
  %mul3 = fmul double %mul2, 0x400921FB54442D18, !dbg !2086
  %div4 = fdiv double %mul3, %m, !dbg !2087
  %1 = call double @llvm.cos.f64(double %div4), !dbg !2088
  call void @llvm.dbg.value(metadata double %1, metadata !2089, metadata !DIExpression()), !dbg !2074
  %mul5 = fmul double 5.000000e-01, %0, !dbg !2090
  %sub = fsub double 4.200000e-01, %mul5, !dbg !2091
  %mul6 = fmul double 8.000000e-02, %1, !dbg !2092
  %add = fadd double %sub, %mul6, !dbg !2093
  ret double %add, !dbg !2094
}

; Function Attrs: nounwind readnone speculatable willreturn
declare double @llvm.rint.f64(double) #1

; Function Attrs: noinline nounwind ssp uwtable
define i64 @gbs_crc32(i64 %crc, i8* %buf___3, i32 %len) #0 !dbg !2095 {
entry:
  call void @llvm.dbg.value(metadata i64 %crc, metadata !2098, metadata !DIExpression()), !dbg !2099
  call void @llvm.dbg.value(metadata i8* %buf___3, metadata !2100, metadata !DIExpression()), !dbg !2099
  call void @llvm.dbg.value(metadata i32 %len, metadata !2101, metadata !DIExpression()), !dbg !2099
  %0 = load i64, i64* getelementptr inbounds ([256 x i64], [256 x i64]* @crc_table, i64 0, i64 255), align 8, !dbg !2102
  %cmp = icmp eq i64 %0, 0, !dbg !2105
  br i1 %cmp, label %if.then, label %if.end, !dbg !2106

if.then:                                          ; preds = %entry
  call void @make_crc_table(), !dbg !2107
  br label %if.end, !dbg !2111

if.end:                                           ; preds = %if.then, %entry
  %xor = xor i64 %crc, 4294967295, !dbg !2112
  call void @llvm.dbg.value(metadata i64 %xor, metadata !2098, metadata !DIExpression()), !dbg !2099
  br label %while.body, !dbg !2113

while.body:                                       ; preds = %if.end2, %if.end
  %len.addr.0 = phi i32 [ %len, %if.end ], [ %dec, %if.end2 ]
  %buf___3.addr.0 = phi i8* [ %buf___3, %if.end ], [ %incdec.ptr, %if.end2 ]
  %crc.addr.0 = phi i64 [ %xor, %if.end ], [ %xor4, %if.end2 ], !dbg !2116
  call void @llvm.dbg.value(metadata i64 %crc.addr.0, metadata !2098, metadata !DIExpression()), !dbg !2099
  call void @llvm.dbg.value(metadata i8* %buf___3.addr.0, metadata !2100, metadata !DIExpression()), !dbg !2099
  call void @llvm.dbg.value(metadata i32 %len.addr.0, metadata !2101, metadata !DIExpression()), !dbg !2099
  br label %while_continue___0, !dbg !2117

while_continue___0:                               ; preds = %while.body
  br label %while_continue, !dbg !2117

while_continue:                                   ; preds = %while_continue___0
  call void @llvm.dbg.value(metadata i32 %len.addr.0, metadata !2118, metadata !DIExpression()), !dbg !2099
  %dec = add i32 %len.addr.0, -1, !dbg !2119
  call void @llvm.dbg.value(metadata i32 %dec, metadata !2101, metadata !DIExpression()), !dbg !2099
  %tobool = icmp ne i32 %len.addr.0, 0, !dbg !2121
  br i1 %tobool, label %if.end2, label %if.then1, !dbg !2119

if.then1:                                         ; preds = %while_continue
  br label %while_break, !dbg !2123

if.end2:                                          ; preds = %while_continue
  call void @llvm.dbg.value(metadata i8* %buf___3.addr.0, metadata !2125, metadata !DIExpression()), !dbg !2099
  %incdec.ptr = getelementptr inbounds i8, i8* %buf___3.addr.0, i32 1, !dbg !2126
  call void @llvm.dbg.value(metadata i8* %incdec.ptr, metadata !2100, metadata !DIExpression()), !dbg !2099
  %shr = lshr i64 %crc.addr.0, 8, !dbg !2127
  %1 = load i8, i8* %buf___3.addr.0, align 1, !dbg !2128
  %conv = zext i8 %1 to i64, !dbg !2129
  %xor3 = xor i64 %crc.addr.0, %conv, !dbg !2130
  %and = and i64 %xor3, 255, !dbg !2131
  %arrayidx = getelementptr inbounds [256 x i64], [256 x i64]* @crc_table, i64 0, i64 %and, !dbg !2132
  %2 = load i64, i64* %arrayidx, align 8, !dbg !2132
  %xor4 = xor i64 %shr, %2, !dbg !2133
  call void @llvm.dbg.value(metadata i64 %xor4, metadata !2098, metadata !DIExpression()), !dbg !2099
  br label %while.body, !dbg !2113, !llvm.loop !2134

while_break___0:                                  ; No predecessors!
  br label %while_break, !dbg !2136

while_break:                                      ; preds = %while_break___0, %if.then1
  %xor5 = xor i64 %crc.addr.0, 4294967295, !dbg !2137
  ret i64 %xor5, !dbg !2138
}

; Function Attrs: noinline nounwind ssp uwtable
define internal void @make_crc_table() #0 !dbg !2139 {
entry:
  call void @llvm.dbg.value(metadata i64 1, metadata !2140, metadata !DIExpression()), !dbg !2141
  store i64 0, i64* getelementptr inbounds ([256 x i64], [256 x i64]* @crc_table, i64 0, i64 0), align 16, !dbg !2142
  call void @llvm.dbg.value(metadata i64 128, metadata !2144, metadata !DIExpression()), !dbg !2141
  br label %while.body, !dbg !2145

while.body:                                       ; preds = %while_break___0, %entry
  %h.0 = phi i64 [ 1, %entry ], [ %xor, %while_break___0 ], !dbg !2148
  %i.0 = phi i64 [ 128, %entry ], [ %shr11, %while_break___0 ], !dbg !2148
  call void @llvm.dbg.value(metadata i64 %i.0, metadata !2144, metadata !DIExpression()), !dbg !2141
  call void @llvm.dbg.value(metadata i64 %h.0, metadata !2140, metadata !DIExpression()), !dbg !2141
  br label %while_continue___1, !dbg !2149

while_continue___1:                               ; preds = %while.body
  br label %while_continue, !dbg !2149

while_continue:                                   ; preds = %while_continue___1
  %tobool = icmp ne i64 %i.0, 0, !dbg !2150
  br i1 %tobool, label %if.end, label %if.then, !dbg !2153

if.then:                                          ; preds = %while_continue
  br label %while_break, !dbg !2154

if.end:                                           ; preds = %while_continue
  %and = and i64 %h.0, 1, !dbg !2156
  %tobool1 = icmp ne i64 %and, 0, !dbg !2156
  br i1 %tobool1, label %if.then2, label %if.else, !dbg !2158

if.then2:                                         ; preds = %if.end
  call void @llvm.dbg.value(metadata i64 3988292384, metadata !2159, metadata !DIExpression()), !dbg !2141
  br label %if.end3, !dbg !2160

if.else:                                          ; preds = %if.end
  call void @llvm.dbg.value(metadata i64 0, metadata !2159, metadata !DIExpression()), !dbg !2141
  br label %if.end3

if.end3:                                          ; preds = %if.else, %if.then2
  %tmp.0 = phi i64 [ 3988292384, %if.then2 ], [ 0, %if.else ], !dbg !2162
  call void @llvm.dbg.value(metadata i64 %tmp.0, metadata !2159, metadata !DIExpression()), !dbg !2141
  %shr = lshr i64 %h.0, 1, !dbg !2163
  %xor = xor i64 %shr, %tmp.0, !dbg !2164
  call void @llvm.dbg.value(metadata i64 %xor, metadata !2140, metadata !DIExpression()), !dbg !2141
  call void @llvm.dbg.value(metadata i64 0, metadata !2165, metadata !DIExpression()), !dbg !2141
  br label %while.body5, !dbg !2166

while.body5:                                      ; preds = %if.end7, %if.end3
  %j.0 = phi i64 [ 0, %if.end3 ], [ %add10, %if.end7 ], !dbg !2169
  call void @llvm.dbg.value(metadata i64 %j.0, metadata !2165, metadata !DIExpression()), !dbg !2141
  br label %while_continue___2, !dbg !2170

while_continue___2:                               ; preds = %while.body5
  br label %while_continue___0, !dbg !2170

while_continue___0:                               ; preds = %while_continue___2
  %cmp = icmp ult i64 %j.0, 256, !dbg !2171
  br i1 %cmp, label %if.end7, label %if.then6, !dbg !2174

if.then6:                                         ; preds = %while_continue___0
  br label %while_break___0, !dbg !2175

if.end7:                                          ; preds = %while_continue___0
  %arrayidx = getelementptr inbounds [256 x i64], [256 x i64]* @crc_table, i64 0, i64 %j.0, !dbg !2177
  %0 = load i64, i64* %arrayidx, align 8, !dbg !2177
  %xor8 = xor i64 %0, %xor, !dbg !2178
  %add = add i64 %i.0, %j.0, !dbg !2179
  %arrayidx9 = getelementptr inbounds [256 x i64], [256 x i64]* @crc_table, i64 0, i64 %add, !dbg !2180
  store i64 %xor8, i64* %arrayidx9, align 8, !dbg !2181
  %mul = mul i64 2, %i.0, !dbg !2182
  %add10 = add i64 %j.0, %mul, !dbg !2183
  call void @llvm.dbg.value(metadata i64 %add10, metadata !2165, metadata !DIExpression()), !dbg !2141
  br label %while.body5, !dbg !2166, !llvm.loop !2184

while_break___2:                                  ; No predecessors!
  br label %while_break___0, !dbg !2186

while_break___0:                                  ; preds = %while_break___2, %if.then6
  %shr11 = lshr i64 %i.0, 1, !dbg !2187
  call void @llvm.dbg.value(metadata i64 %shr11, metadata !2144, metadata !DIExpression()), !dbg !2141
  br label %while.body, !dbg !2145, !llvm.loop !2188

while_break___1:                                  ; No predecessors!
  br label %while_break, !dbg !2190

while_break:                                      ; preds = %while_break___1, %if.then
  ret void, !dbg !2191
}

; Function Attrs: noinline nounwind ssp uwtable
define i64 @gbs_init(%struct.gbs* %gbs, i64 %subsong) #0 !dbg !2192 {
entry:
  call void @llvm.dbg.value(metadata %struct.gbs* %gbs, metadata !2195, metadata !DIExpression()), !dbg !2196
  call void @llvm.dbg.value(metadata i64 %subsong, metadata !2197, metadata !DIExpression()), !dbg !2196
  call void @llvm.dbg.declare(metadata !666, metadata !2198, metadata !DIExpression()), !dbg !2199
  %rom = getelementptr inbounds %struct.gbs, %struct.gbs* %gbs, i32 0, i32 22, !dbg !2200
  %0 = load i8*, i8** %rom, align 8, !dbg !2200
  %romsize = getelementptr inbounds %struct.gbs, %struct.gbs* %gbs, i32 0, i32 23, !dbg !2204
  %1 = load i64, i64* %romsize, align 8, !dbg !2204
  %conv = trunc i64 %1 to i32, !dbg !2205
  call void @gbhw_init(i8* %0, i32 %conv), !dbg !2206
  %cmp = icmp eq i64 %subsong, -1, !dbg !2207
  br i1 %cmp, label %if.then, label %if.end, !dbg !2209

if.then:                                          ; preds = %entry
  %defaultsong = getelementptr inbounds %struct.gbs, %struct.gbs* %gbs, i32 0, i32 3, !dbg !2210
  %2 = load i64, i64* %defaultsong, align 8, !dbg !2210
  %sub = sub nsw i64 %2, 1, !dbg !2212
  call void @llvm.dbg.value(metadata i64 %sub, metadata !2197, metadata !DIExpression()), !dbg !2196
  br label %if.end, !dbg !2213

if.end:                                           ; preds = %if.then, %entry
  %subsong.addr.0 = phi i64 [ %sub, %if.then ], [ %subsong, %entry ]
  call void @llvm.dbg.value(metadata i64 %subsong.addr.0, metadata !2197, metadata !DIExpression()), !dbg !2196
  %songs = getelementptr inbounds %struct.gbs, %struct.gbs* %gbs, i32 0, i32 2, !dbg !2214
  %3 = load i64, i64* %songs, align 8, !dbg !2214
  %cmp2 = icmp sge i64 %subsong.addr.0, %3, !dbg !2216
  br i1 %cmp2, label %if.then4, label %if.end8, !dbg !2217

if.then4:                                         ; preds = %if.end
  %call = call i8* @_(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.14, i32 0, i32 0)), !dbg !2218
  call void @llvm.dbg.value(metadata i8* %call, metadata !2222, metadata !DIExpression()), !dbg !2196
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !2223
  %songs5 = getelementptr inbounds %struct.gbs, %struct.gbs* %gbs, i32 0, i32 2, !dbg !2225
  %5 = load i64, i64* %songs5, align 8, !dbg !2225
  %sub6 = sub nsw i64 %5, 1, !dbg !2226
  %call7 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %4, i8* %call, i64 %sub6), !dbg !2227
  br label %return, !dbg !2228

if.end8:                                          ; preds = %if.end
  %subsong9 = getelementptr inbounds %struct.gbs, %struct.gbs* %gbs, i32 0, i32 36, !dbg !2229
  store i64 %subsong.addr.0, i64* %subsong9, align 8, !dbg !2230
  store i16 80, i16* bitcast (i8* getelementptr inbounds ([12 x i8], [12 x i8]* bitcast (%union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs to [12 x i8]*), i64 0, i64 10) to i16*), align 2, !dbg !2231
  %stack = getelementptr inbounds %struct.gbs, %struct.gbs* %gbs, i32 0, i32 7, !dbg !2232
  %6 = load i16, i16* %stack, align 2, !dbg !2232
  store i16 %6, i16* bitcast (i8* getelementptr inbounds ([12 x i8], [12 x i8]* bitcast (%union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs to [12 x i8]*), i64 0, i64 8) to i16*), align 2, !dbg !2233
  %load = getelementptr inbounds %struct.gbs, %struct.gbs* %gbs, i32 0, i32 4, !dbg !2234
  %7 = load i16, i16* %load, align 8, !dbg !2234
  %conv10 = zext i16 %7 to i32, !dbg !2235
  %sub11 = sub nsw i32 %conv10, 112, !dbg !2236
  %conv12 = trunc i32 %sub11 to i16, !dbg !2237
  store i16 %conv12, i16* bitcast (i8* getelementptr inbounds ([12 x i8], [12 x i8]* bitcast (%union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs to [12 x i8]*), i64 0, i64 4) to i16*), align 2, !dbg !2238
  %conv13 = trunc i64 %subsong.addr.0 to i8, !dbg !2239
  store i8 %conv13, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 6), align 2, !dbg !2240
  %ticks = getelementptr inbounds %struct.gbs, %struct.gbs* %gbs, i32 0, i32 24, !dbg !2241
  store i64 0, i64* %ticks, align 8, !dbg !2242
  br label %return, !dbg !2243

return:                                           ; preds = %if.end8, %if.then4
  %retval.0 = phi i64 [ 0, %if.then4 ], [ 1, %if.end8 ], !dbg !2244
  ret i64 %retval.0, !dbg !2245
}

; Function Attrs: noinline nounwind ssp uwtable
define void @gbhw_init(i8* %rombuf, i32 %size) #0 !dbg !2246 {
entry:
  %mute_tmp = alloca [4 x i32], align 16
  call void @llvm.dbg.value(metadata i8* %rombuf, metadata !2249, metadata !DIExpression()), !dbg !2250
  call void @llvm.dbg.value(metadata i32 %size, metadata !2251, metadata !DIExpression()), !dbg !2250
  call void @llvm.dbg.declare(metadata [4 x i32]* %mute_tmp, metadata !2252, metadata !DIExpression()), !dbg !2253
  call void @llvm.dbg.declare(metadata !666, metadata !2254, metadata !DIExpression()), !dbg !2255
  call void @llvm.dbg.value(metadata i64 0, metadata !2256, metadata !DIExpression()), !dbg !2250
  br label %while.body, !dbg !2257

while.body:                                       ; preds = %if.end, %entry
  %i.0 = phi i64 [ 0, %entry ], [ %inc, %if.end ], !dbg !2261
  call void @llvm.dbg.value(metadata i64 %i.0, metadata !2256, metadata !DIExpression()), !dbg !2250
  br label %while_continue___1, !dbg !2262

while_continue___1:                               ; preds = %while.body
  br label %while_continue, !dbg !2262

while_continue:                                   ; preds = %while_continue___1
  %cmp = icmp slt i64 %i.0, 4, !dbg !2263
  br i1 %cmp, label %if.end, label %if.then, !dbg !2266

if.then:                                          ; preds = %while_continue
  br label %while_break, !dbg !2267

if.end:                                           ; preds = %while_continue
  %arrayidx = getelementptr inbounds [4 x %struct.gbhw_channel], [4 x %struct.gbhw_channel]* @gbhw_ch, i64 0, i64 %i.0, !dbg !2269
  %mute = getelementptr inbounds %struct.gbhw_channel, %struct.gbhw_channel* %arrayidx, i32 0, i32 0, !dbg !2270
  %0 = load i64, i64* %mute, align 16, !dbg !2270
  %conv = trunc i64 %0 to i32, !dbg !2271
  %arrayidx1 = getelementptr inbounds [4 x i32], [4 x i32]* %mute_tmp, i64 0, i64 %i.0, !dbg !2272
  store i32 %conv, i32* %arrayidx1, align 4, !dbg !2273
  %inc = add nsw i64 %i.0, 1, !dbg !2274
  call void @llvm.dbg.value(metadata i64 %inc, metadata !2256, metadata !DIExpression()), !dbg !2250
  br label %while.body, !dbg !2257, !llvm.loop !2275

while_break___1:                                  ; No predecessors!
  br label %while_break, !dbg !2277

while_break:                                      ; preds = %while_break___1, %if.then
  %1 = load %struct.gbhw_buffer*, %struct.gbhw_buffer** @impbuf, align 8, !dbg !2278
  %tobool = icmp ne %struct.gbhw_buffer* %1, null, !dbg !2278
  br i1 %tobool, label %if.then2, label %if.end3, !dbg !2280

if.then2:                                         ; preds = %while_break
  %2 = load %struct.gbhw_buffer*, %struct.gbhw_buffer** @impbuf, align 8, !dbg !2281
  call void @gbhw_impbuf_reset(%struct.gbhw_buffer* %2), !dbg !2285
  br label %if.end3, !dbg !2286

if.end3:                                          ; preds = %if.then2, %while_break
  store i8* %rombuf, i8** @rom, align 8, !dbg !2287
  %add = add i32 %size, 16383, !dbg !2288
  %div = udiv i32 %add, 16384, !dbg !2289
  %sub = sub i32 %div, 1, !dbg !2290
  %conv4 = zext i32 %sub to i64, !dbg !2291
  store i64 %conv4, i64* @lastbank, align 8, !dbg !2292
  store i64 1, i64* @rombank, align 8, !dbg !2293
  store i64 65536, i64* @master_volume, align 8, !dbg !2294
  store i64 0, i64* @master_fade, align 8, !dbg !2295
  %3 = load %struct.gbhw_buffer*, %struct.gbhw_buffer** @soundbuf, align 8, !dbg !2296
  %tobool5 = icmp ne %struct.gbhw_buffer* %3, null, !dbg !2296
  br i1 %tobool5, label %if.then6, label %if.end7, !dbg !2298

if.then6:                                         ; preds = %if.end3
  %4 = load %struct.gbhw_buffer*, %struct.gbhw_buffer** @soundbuf, align 8, !dbg !2299
  %pos = getelementptr inbounds %struct.gbhw_buffer, %struct.gbhw_buffer* %4, i32 0, i32 1, !dbg !2301
  store i64 0, i64* %pos, align 8, !dbg !2302
  %5 = load %struct.gbhw_buffer*, %struct.gbhw_buffer** @soundbuf, align 8, !dbg !2303
  %l_lvl = getelementptr inbounds %struct.gbhw_buffer, %struct.gbhw_buffer* %5, i32 0, i32 2, !dbg !2304
  store i64 0, i64* %l_lvl, align 8, !dbg !2305
  %6 = load %struct.gbhw_buffer*, %struct.gbhw_buffer** @soundbuf, align 8, !dbg !2306
  %r_lvl = getelementptr inbounds %struct.gbhw_buffer, %struct.gbhw_buffer* %6, i32 0, i32 3, !dbg !2307
  store i64 0, i64* %r_lvl, align 8, !dbg !2308
  br label %if.end7, !dbg !2309

if.end7:                                          ; preds = %if.then6, %if.end3
  store i64 2147483647, i64* @rminval, align 8, !dbg !2310
  %7 = load i64, i64* @rminval, align 8, !dbg !2311
  store i64 %7, i64* @lminval, align 8, !dbg !2310
  store i64 -2147483648, i64* @rmaxval, align 8, !dbg !2312
  %8 = load i64, i64* @rmaxval, align 8, !dbg !2313
  store i64 %8, i64* @lmaxval, align 8, !dbg !2312
  call void @llvm.dbg.value(metadata i64 0, metadata !2256, metadata !DIExpression()), !dbg !2250
  br label %while.body8, !dbg !2314

while.body8:                                      ; preds = %if.end12, %if.end7
  %i.1 = phi i64 [ 0, %if.end7 ], [ %inc20, %if.end12 ], !dbg !2261
  call void @llvm.dbg.value(metadata i64 %i.1, metadata !2256, metadata !DIExpression()), !dbg !2250
  br label %while_continue___2, !dbg !2317

while_continue___2:                               ; preds = %while.body8
  br label %while_continue___0, !dbg !2317

while_continue___0:                               ; preds = %while_continue___2
  %cmp9 = icmp slt i64 %i.1, 4, !dbg !2318
  br i1 %cmp9, label %if.end12, label %if.then11, !dbg !2321

if.then11:                                        ; preds = %while_continue___0
  br label %while_break___0, !dbg !2322

if.end12:                                         ; preds = %while_continue___0
  %arrayidx13 = getelementptr inbounds [4 x %struct.gbhw_channel], [4 x %struct.gbhw_channel]* @gbhw_ch, i64 0, i64 %i.1, !dbg !2324
  %duty_ctr = getelementptr inbounds %struct.gbhw_channel, %struct.gbhw_channel* %arrayidx13, i32 0, i32 19, !dbg !2325
  store i64 4, i64* %duty_ctr, align 8, !dbg !2326
  %arrayidx14 = getelementptr inbounds [4 x %struct.gbhw_channel], [4 x %struct.gbhw_channel]* @gbhw_ch, i64 0, i64 %i.1, !dbg !2327
  %div_tc = getelementptr inbounds %struct.gbhw_channel, %struct.gbhw_channel* %arrayidx14, i32 0, i32 16, !dbg !2328
  store i64 1, i64* %div_tc, align 16, !dbg !2329
  %arrayidx15 = getelementptr inbounds [4 x %struct.gbhw_channel], [4 x %struct.gbhw_channel]* @gbhw_ch, i64 0, i64 %i.1, !dbg !2330
  %master = getelementptr inbounds %struct.gbhw_channel, %struct.gbhw_channel* %arrayidx15, i32 0, i32 1, !dbg !2331
  store i64 1, i64* %master, align 8, !dbg !2332
  %arrayidx16 = getelementptr inbounds [4 x i32], [4 x i32]* %mute_tmp, i64 0, i64 %i.1, !dbg !2333
  %9 = load i32, i32* %arrayidx16, align 4, !dbg !2333
  %conv17 = sext i32 %9 to i64, !dbg !2334
  %arrayidx18 = getelementptr inbounds [4 x %struct.gbhw_channel], [4 x %struct.gbhw_channel]* @gbhw_ch, i64 0, i64 %i.1, !dbg !2335
  %mute19 = getelementptr inbounds %struct.gbhw_channel, %struct.gbhw_channel* %arrayidx18, i32 0, i32 0, !dbg !2336
  store i64 %conv17, i64* %mute19, align 16, !dbg !2337
  %inc20 = add nsw i64 %i.1, 1, !dbg !2338
  call void @llvm.dbg.value(metadata i64 %inc20, metadata !2256, metadata !DIExpression()), !dbg !2250
  br label %while.body8, !dbg !2314, !llvm.loop !2339

while_break___2:                                  ; No predecessors!
  br label %while_break___0, !dbg !2341

while_break___0:                                  ; preds = %while_break___2, %if.then11
  %call = call i8* @memset(i8* getelementptr inbounds ([8192 x i8], [8192 x i8]* @extram, i32 0, i32 0), i32 0, i32 8192) #11, !dbg !2342
  %call21 = call i8* @memset(i8* getelementptr inbounds ([8192 x i8], [8192 x i8]* @intram, i32 0, i32 0), i32 0, i32 8192) #11, !dbg !2345
  %call22 = call i8* @memset(i8* getelementptr inbounds ([128 x i8], [128 x i8]* @hiram, i32 0, i32 0), i32 0, i32 128) #11, !dbg !2347
  %call23 = call i8* @memset(i8* getelementptr inbounds ([128 x i8], [128 x i8]* @ioregs, i32 0, i32 0), i32 0, i32 128) #11, !dbg !2349
  store i64 0, i64* @sum_cycles, align 8, !dbg !2351
  call void @gbcpu_init(), !dbg !2352
  call void @gbcpu_addmem(i32 0, i32 63, void (i32, i8)* @rom_put, i32 (i32)* @rom_get), !dbg !2354
  call void @gbcpu_addmem(i32 64, i32 127, void (i32, i8)* @rom_put, i32 (i32)* @rombank_get), !dbg !2356
  call void @gbcpu_addmem(i32 160, i32 191, void (i32, i8)* @extram_put, i32 (i32)* @extram_get), !dbg !2358
  call void @gbcpu_addmem(i32 192, i32 254, void (i32, i8)* @intram_put, i32 (i32)* @intram_get), !dbg !2360
  call void @gbcpu_addmem(i32 255, i32 255, void (i32, i8)* @io_put, i32 (i32)* @io_get), !dbg !2362
  %10 = load i16*, i16** @base_impulse, align 8, !dbg !2364
  %tobool24 = icmp ne i16* %10, null, !dbg !2364
  br i1 %tobool24, label %if.then25, label %if.end26, !dbg !2366

if.then25:                                        ; preds = %while_break___0
  %11 = load i16*, i16** @base_impulse, align 8, !dbg !2367
  %12 = bitcast i16* %11 to i8*, !dbg !2371
  call void @free(i8* %12) #11, !dbg !2372
  br label %if.end26, !dbg !2373

if.end26:                                         ; preds = %if.then25, %while_break___0
  %13 = load i64, i64* @impulse_w_shift, align 8, !dbg !2374
  %14 = load i64, i64* @impulse_n_shift, align 8, !dbg !2377
  %15 = load double, double* @impulse_cutoff, align 8, !dbg !2378
  %call27 = call i16* @gen_impulsetab(i64 %13, i64 %14, double %15), !dbg !2379
  store i16* %call27, i16** @base_impulse, align 8, !dbg !2380
  ret void, !dbg !2381
}

; Function Attrs: noinline nounwind ssp uwtable
define void @gbs_set_nextsubsong_cb(%struct.gbs* %gbs, i64 (%struct.gbs*, i8*)* %cb, i8* %priv) #0 !dbg !2382 {
entry:
  call void @llvm.dbg.value(metadata %struct.gbs* %gbs, metadata !2385, metadata !DIExpression()), !dbg !2386
  call void @llvm.dbg.value(metadata i64 (%struct.gbs*, i8*)* %cb, metadata !2387, metadata !DIExpression()), !dbg !2386
  call void @llvm.dbg.value(metadata i8* %priv, metadata !2388, metadata !DIExpression()), !dbg !2386
  %nextsubsong_cb = getelementptr inbounds %struct.gbs, %struct.gbs* %gbs, i32 0, i32 37, !dbg !2389
  store i64 (%struct.gbs*, i8*)* %cb, i64 (%struct.gbs*, i8*)** %nextsubsong_cb, align 8, !dbg !2391
  %nextsubsong_cb_priv = getelementptr inbounds %struct.gbs, %struct.gbs* %gbs, i32 0, i32 38, !dbg !2392
  store i8* %priv, i8** %nextsubsong_cb_priv, align 8, !dbg !2393
  ret void, !dbg !2394
}

; Function Attrs: noinline nounwind ssp uwtable
define i64 @gbs_step(%struct.gbs* %gbs, i64 %time_to_work) #0 !dbg !2395 {
entry:
  call void @llvm.dbg.value(metadata %struct.gbs* %gbs, metadata !2396, metadata !DIExpression()), !dbg !2397
  call void @llvm.dbg.value(metadata i64 %time_to_work, metadata !2398, metadata !DIExpression()), !dbg !2397
  %call = call i64 @gbhw_step(i64 %time_to_work), !dbg !2399
  call void @llvm.dbg.value(metadata i64 %call, metadata !2403, metadata !DIExpression()), !dbg !2397
  call void @llvm.dbg.value(metadata i64 %call, metadata !2404, metadata !DIExpression()), !dbg !2397
  %cmp = icmp slt i64 %call, 0, !dbg !2405
  br i1 %cmp, label %if.then, label %if.end, !dbg !2407

if.then:                                          ; preds = %entry
  br label %return, !dbg !2408

if.end:                                           ; preds = %entry
  %ticks = getelementptr inbounds %struct.gbs, %struct.gbs* %gbs, i32 0, i32 24, !dbg !2410
  %0 = load i64, i64* %ticks, align 8, !dbg !2412
  %add = add nsw i64 %0, %call, !dbg !2412
  store i64 %add, i64* %ticks, align 8, !dbg !2412
  %lmin = getelementptr inbounds %struct.gbs, %struct.gbs* %gbs, i32 0, i32 25, !dbg !2413
  %lmax = getelementptr inbounds %struct.gbs, %struct.gbs* %gbs, i32 0, i32 26, !dbg !2415
  %rmin = getelementptr inbounds %struct.gbs, %struct.gbs* %gbs, i32 0, i32 28, !dbg !2416
  %rmax = getelementptr inbounds %struct.gbs, %struct.gbs* %gbs, i32 0, i32 29, !dbg !2417
  call void @gbhw_getminmax(i16* %lmin, i16* %lmax, i16* %rmin, i16* %rmax), !dbg !2418
  %lmin1 = getelementptr inbounds %struct.gbs, %struct.gbs* %gbs, i32 0, i32 25, !dbg !2419
  %1 = load i16, i16* %lmin1, align 8, !dbg !2419
  %conv = sext i16 %1 to i32, !dbg !2421
  %sub = sub nsw i32 0, %conv, !dbg !2422
  %lmax2 = getelementptr inbounds %struct.gbs, %struct.gbs* %gbs, i32 0, i32 26, !dbg !2423
  %2 = load i16, i16* %lmax2, align 2, !dbg !2423
  %conv3 = sext i16 %2 to i32, !dbg !2424
  %cmp4 = icmp sgt i32 %sub, %conv3, !dbg !2425
  br i1 %cmp4, label %if.then6, label %if.else, !dbg !2426

if.then6:                                         ; preds = %if.end
  %lmin7 = getelementptr inbounds %struct.gbs, %struct.gbs* %gbs, i32 0, i32 25, !dbg !2427
  %3 = load i16, i16* %lmin7, align 8, !dbg !2427
  %conv8 = sext i16 %3 to i32, !dbg !2429
  %sub9 = sub nsw i32 0, %conv8, !dbg !2430
  %conv10 = trunc i32 %sub9 to i16, !dbg !2431
  %lvol = getelementptr inbounds %struct.gbs, %struct.gbs* %gbs, i32 0, i32 27, !dbg !2432
  store i16 %conv10, i16* %lvol, align 4, !dbg !2433
  br label %if.end13, !dbg !2434

if.else:                                          ; preds = %if.end
  %lmax11 = getelementptr inbounds %struct.gbs, %struct.gbs* %gbs, i32 0, i32 26, !dbg !2435
  %4 = load i16, i16* %lmax11, align 2, !dbg !2435
  %lvol12 = getelementptr inbounds %struct.gbs, %struct.gbs* %gbs, i32 0, i32 27, !dbg !2437
  store i16 %4, i16* %lvol12, align 4, !dbg !2438
  br label %if.end13

if.end13:                                         ; preds = %if.else, %if.then6
  %rmin14 = getelementptr inbounds %struct.gbs, %struct.gbs* %gbs, i32 0, i32 28, !dbg !2439
  %5 = load i16, i16* %rmin14, align 2, !dbg !2439
  %conv15 = sext i16 %5 to i32, !dbg !2441
  %sub16 = sub nsw i32 0, %conv15, !dbg !2442
  %rmax17 = getelementptr inbounds %struct.gbs, %struct.gbs* %gbs, i32 0, i32 29, !dbg !2443
  %6 = load i16, i16* %rmax17, align 8, !dbg !2443
  %conv18 = sext i16 %6 to i32, !dbg !2444
  %cmp19 = icmp sgt i32 %sub16, %conv18, !dbg !2445
  br i1 %cmp19, label %if.then21, label %if.else26, !dbg !2446

if.then21:                                        ; preds = %if.end13
  %rmin22 = getelementptr inbounds %struct.gbs, %struct.gbs* %gbs, i32 0, i32 28, !dbg !2447
  %7 = load i16, i16* %rmin22, align 2, !dbg !2447
  %conv23 = sext i16 %7 to i32, !dbg !2449
  %sub24 = sub nsw i32 0, %conv23, !dbg !2450
  %conv25 = trunc i32 %sub24 to i16, !dbg !2451
  %rvol = getelementptr inbounds %struct.gbs, %struct.gbs* %gbs, i32 0, i32 30, !dbg !2452
  store i16 %conv25, i16* %rvol, align 2, !dbg !2453
  br label %if.end29, !dbg !2454

if.else26:                                        ; preds = %if.end13
  %rmax27 = getelementptr inbounds %struct.gbs, %struct.gbs* %gbs, i32 0, i32 29, !dbg !2455
  %8 = load i16, i16* %rmax27, align 8, !dbg !2455
  %rvol28 = getelementptr inbounds %struct.gbs, %struct.gbs* %gbs, i32 0, i32 30, !dbg !2457
  store i16 %8, i16* %rvol28, align 2, !dbg !2458
  br label %if.end29

if.end29:                                         ; preds = %if.else26, %if.then21
  %ticks30 = getelementptr inbounds %struct.gbs, %struct.gbs* %gbs, i32 0, i32 24, !dbg !2459
  %9 = load i64, i64* %ticks30, align 8, !dbg !2459
  %div = sdiv i64 %9, 4194304, !dbg !2460
  call void @llvm.dbg.value(metadata i64 %div, metadata !2461, metadata !DIExpression()), !dbg !2397
  %silence_timeout = getelementptr inbounds %struct.gbs, %struct.gbs* %gbs, i32 0, i32 32, !dbg !2462
  %10 = load i64, i64* %silence_timeout, align 8, !dbg !2462
  %tobool = icmp ne i64 %10, 0, !dbg !2464
  br i1 %tobool, label %if.then31, label %if.end58, !dbg !2465

if.then31:                                        ; preds = %if.end29
  %lmin32 = getelementptr inbounds %struct.gbs, %struct.gbs* %gbs, i32 0, i32 25, !dbg !2466
  %11 = load i16, i16* %lmin32, align 8, !dbg !2466
  %conv33 = sext i16 %11 to i32, !dbg !2469
  %lmax34 = getelementptr inbounds %struct.gbs, %struct.gbs* %gbs, i32 0, i32 26, !dbg !2470
  %12 = load i16, i16* %lmax34, align 2, !dbg !2470
  %conv35 = sext i16 %12 to i32, !dbg !2471
  %cmp36 = icmp eq i32 %conv33, %conv35, !dbg !2472
  br i1 %cmp36, label %if.then38, label %if.else55, !dbg !2473

if.then38:                                        ; preds = %if.then31
  %rmin39 = getelementptr inbounds %struct.gbs, %struct.gbs* %gbs, i32 0, i32 28, !dbg !2474
  %13 = load i16, i16* %rmin39, align 2, !dbg !2474
  %conv40 = sext i16 %13 to i32, !dbg !2477
  %rmax41 = getelementptr inbounds %struct.gbs, %struct.gbs* %gbs, i32 0, i32 29, !dbg !2478
  %14 = load i16, i16* %rmax41, align 8, !dbg !2478
  %conv42 = sext i16 %14 to i32, !dbg !2479
  %cmp43 = icmp eq i32 %conv40, %conv42, !dbg !2480
  br i1 %cmp43, label %if.then45, label %if.else52, !dbg !2481

if.then45:                                        ; preds = %if.then38
  %silence_start = getelementptr inbounds %struct.gbs, %struct.gbs* %gbs, i32 0, i32 35, !dbg !2482
  %15 = load i64, i64* %silence_start, align 8, !dbg !2482
  %cmp46 = icmp eq i64 %15, 0, !dbg !2485
  br i1 %cmp46, label %if.then48, label %if.end51, !dbg !2486

if.then48:                                        ; preds = %if.then45
  %ticks49 = getelementptr inbounds %struct.gbs, %struct.gbs* %gbs, i32 0, i32 24, !dbg !2487
  %16 = load i64, i64* %ticks49, align 8, !dbg !2487
  %silence_start50 = getelementptr inbounds %struct.gbs, %struct.gbs* %gbs, i32 0, i32 35, !dbg !2489
  store i64 %16, i64* %silence_start50, align 8, !dbg !2490
  br label %if.end51, !dbg !2491

if.end51:                                         ; preds = %if.then48, %if.then45
  br label %if.end54, !dbg !2492

if.else52:                                        ; preds = %if.then38
  %silence_start53 = getelementptr inbounds %struct.gbs, %struct.gbs* %gbs, i32 0, i32 35, !dbg !2493
  store i64 0, i64* %silence_start53, align 8, !dbg !2495
  br label %if.end54

if.end54:                                         ; preds = %if.else52, %if.end51
  br label %if.end57, !dbg !2496

if.else55:                                        ; preds = %if.then31
  %silence_start56 = getelementptr inbounds %struct.gbs, %struct.gbs* %gbs, i32 0, i32 35, !dbg !2497
  store i64 0, i64* %silence_start56, align 8, !dbg !2499
  br label %if.end57

if.end57:                                         ; preds = %if.else55, %if.end54
  br label %if.end58, !dbg !2500

if.end58:                                         ; preds = %if.end57, %if.end29
  %fadeout = getelementptr inbounds %struct.gbs, %struct.gbs* %gbs, i32 0, i32 33, !dbg !2501
  %17 = load i64, i64* %fadeout, align 8, !dbg !2501
  %tobool59 = icmp ne i64 %17, 0, !dbg !2503
  br i1 %tobool59, label %if.then60, label %if.end74, !dbg !2504

if.then60:                                        ; preds = %if.end58
  %subsong_timeout = getelementptr inbounds %struct.gbs, %struct.gbs* %gbs, i32 0, i32 31, !dbg !2505
  %18 = load i64, i64* %subsong_timeout, align 8, !dbg !2505
  %tobool61 = icmp ne i64 %18, 0, !dbg !2508
  br i1 %tobool61, label %if.then62, label %if.end73, !dbg !2509

if.then62:                                        ; preds = %if.then60
  %subsong_timeout63 = getelementptr inbounds %struct.gbs, %struct.gbs* %gbs, i32 0, i32 31, !dbg !2510
  %19 = load i64, i64* %subsong_timeout63, align 8, !dbg !2510
  %fadeout64 = getelementptr inbounds %struct.gbs, %struct.gbs* %gbs, i32 0, i32 33, !dbg !2513
  %20 = load i64, i64* %fadeout64, align 8, !dbg !2513
  %sub65 = sub nsw i64 %19, %20, !dbg !2514
  %gap = getelementptr inbounds %struct.gbs, %struct.gbs* %gbs, i32 0, i32 34, !dbg !2515
  %21 = load i64, i64* %gap, align 8, !dbg !2515
  %sub66 = sub nsw i64 %sub65, %21, !dbg !2516
  %cmp67 = icmp sge i64 %div, %sub66, !dbg !2517
  br i1 %cmp67, label %if.then69, label %if.end72, !dbg !2518

if.then69:                                        ; preds = %if.then62
  %fadeout70 = getelementptr inbounds %struct.gbs, %struct.gbs* %gbs, i32 0, i32 33, !dbg !2519
  %22 = load i64, i64* %fadeout70, align 8, !dbg !2519
  %div71 = sdiv i64 128, %22, !dbg !2523
  call void @gbhw_master_fade(i64 %div71, i64 0), !dbg !2524
  br label %if.end72, !dbg !2525

if.end72:                                         ; preds = %if.then69, %if.then62
  br label %if.end73, !dbg !2526

if.end73:                                         ; preds = %if.end72, %if.then60
  br label %if.end74, !dbg !2527

if.end74:                                         ; preds = %if.end73, %if.end58
  %subsong_timeout75 = getelementptr inbounds %struct.gbs, %struct.gbs* %gbs, i32 0, i32 31, !dbg !2528
  %23 = load i64, i64* %subsong_timeout75, align 8, !dbg !2528
  %tobool76 = icmp ne i64 %23, 0, !dbg !2530
  br i1 %tobool76, label %if.then77, label %if.end85, !dbg !2531

if.then77:                                        ; preds = %if.end74
  %subsong_timeout78 = getelementptr inbounds %struct.gbs, %struct.gbs* %gbs, i32 0, i32 31, !dbg !2532
  %24 = load i64, i64* %subsong_timeout78, align 8, !dbg !2532
  %gap79 = getelementptr inbounds %struct.gbs, %struct.gbs* %gbs, i32 0, i32 34, !dbg !2535
  %25 = load i64, i64* %gap79, align 8, !dbg !2535
  %sub80 = sub nsw i64 %24, %25, !dbg !2536
  %cmp81 = icmp sge i64 %div, %sub80, !dbg !2537
  br i1 %cmp81, label %if.then83, label %if.end84, !dbg !2538

if.then83:                                        ; preds = %if.then77
  call void @gbhw_master_fade(i64 2048, i64 0), !dbg !2539
  br label %if.end84, !dbg !2543

if.end84:                                         ; preds = %if.then83, %if.then77
  br label %if.end85, !dbg !2544

if.end85:                                         ; preds = %if.end84, %if.end74
  %silence_start86 = getelementptr inbounds %struct.gbs, %struct.gbs* %gbs, i32 0, i32 35, !dbg !2545
  %26 = load i64, i64* %silence_start86, align 8, !dbg !2545
  %tobool87 = icmp ne i64 %26, 0, !dbg !2547
  br i1 %tobool87, label %if.then88, label %if.end110, !dbg !2548

if.then88:                                        ; preds = %if.end85
  %ticks89 = getelementptr inbounds %struct.gbs, %struct.gbs* %gbs, i32 0, i32 24, !dbg !2549
  %27 = load i64, i64* %ticks89, align 8, !dbg !2549
  %silence_start90 = getelementptr inbounds %struct.gbs, %struct.gbs* %gbs, i32 0, i32 35, !dbg !2552
  %28 = load i64, i64* %silence_start90, align 8, !dbg !2552
  %sub91 = sub nsw i64 %27, %28, !dbg !2553
  %div92 = sdiv i64 %sub91, 4194304, !dbg !2554
  %silence_timeout93 = getelementptr inbounds %struct.gbs, %struct.gbs* %gbs, i32 0, i32 32, !dbg !2555
  %29 = load i64, i64* %silence_timeout93, align 8, !dbg !2555
  %cmp94 = icmp sge i64 %div92, %29, !dbg !2556
  br i1 %cmp94, label %if.then96, label %if.end109, !dbg !2557

if.then96:                                        ; preds = %if.then88
  %subsong_info = getelementptr inbounds %struct.gbs, %struct.gbs* %gbs, i32 0, i32 19, !dbg !2558
  %30 = load %struct.gbs_subsong_info*, %struct.gbs_subsong_info** %subsong_info, align 8, !dbg !2558
  %subsong = getelementptr inbounds %struct.gbs, %struct.gbs* %gbs, i32 0, i32 36, !dbg !2561
  %31 = load i64, i64* %subsong, align 8, !dbg !2561
  %add.ptr = getelementptr inbounds %struct.gbs_subsong_info, %struct.gbs_subsong_info* %30, i64 %31, !dbg !2562
  %len = getelementptr inbounds %struct.gbs_subsong_info, %struct.gbs_subsong_info* %add.ptr, i32 0, i32 0, !dbg !2563
  %32 = load i32, i32* %len, align 8, !dbg !2563
  %cmp97 = icmp eq i32 %32, 0, !dbg !2564
  br i1 %cmp97, label %if.then99, label %if.end107, !dbg !2565

if.then99:                                        ; preds = %if.then96
  %ticks100 = getelementptr inbounds %struct.gbs, %struct.gbs* %gbs, i32 0, i32 24, !dbg !2566
  %33 = load i64, i64* %ticks100, align 8, !dbg !2566
  %mul = mul nsw i64 %33, 1024, !dbg !2568
  %div101 = sdiv i64 %mul, 4194304, !dbg !2569
  %conv102 = trunc i64 %div101 to i32, !dbg !2570
  %subsong_info103 = getelementptr inbounds %struct.gbs, %struct.gbs* %gbs, i32 0, i32 19, !dbg !2571
  %34 = load %struct.gbs_subsong_info*, %struct.gbs_subsong_info** %subsong_info103, align 8, !dbg !2571
  %subsong104 = getelementptr inbounds %struct.gbs, %struct.gbs* %gbs, i32 0, i32 36, !dbg !2572
  %35 = load i64, i64* %subsong104, align 8, !dbg !2572
  %add.ptr105 = getelementptr inbounds %struct.gbs_subsong_info, %struct.gbs_subsong_info* %34, i64 %35, !dbg !2573
  %len106 = getelementptr inbounds %struct.gbs_subsong_info, %struct.gbs_subsong_info* %add.ptr105, i32 0, i32 0, !dbg !2574
  store i32 %conv102, i32* %len106, align 8, !dbg !2575
  br label %if.end107, !dbg !2576

if.end107:                                        ; preds = %if.then99, %if.then96
  %call108 = call i64 @gbs_nextsubsong(%struct.gbs* %gbs), !dbg !2577
  call void @llvm.dbg.value(metadata i64 %call108, metadata !2580, metadata !DIExpression()), !dbg !2397
  br label %return, !dbg !2581

if.end109:                                        ; preds = %if.then88
  br label %if.end110, !dbg !2582

if.end110:                                        ; preds = %if.end109, %if.end85
  %subsong_timeout111 = getelementptr inbounds %struct.gbs, %struct.gbs* %gbs, i32 0, i32 31, !dbg !2583
  %36 = load i64, i64* %subsong_timeout111, align 8, !dbg !2583
  %tobool112 = icmp ne i64 %36, 0, !dbg !2585
  br i1 %tobool112, label %if.then113, label %if.end120, !dbg !2586

if.then113:                                       ; preds = %if.end110
  %subsong_timeout114 = getelementptr inbounds %struct.gbs, %struct.gbs* %gbs, i32 0, i32 31, !dbg !2587
  %37 = load i64, i64* %subsong_timeout114, align 8, !dbg !2587
  %cmp115 = icmp sge i64 %div, %37, !dbg !2590
  br i1 %cmp115, label %if.then117, label %if.end119, !dbg !2591

if.then117:                                       ; preds = %if.then113
  %call118 = call i64 @gbs_nextsubsong(%struct.gbs* %gbs), !dbg !2592
  call void @llvm.dbg.value(metadata i64 %call118, metadata !2596, metadata !DIExpression()), !dbg !2397
  br label %return, !dbg !2597

if.end119:                                        ; preds = %if.then113
  br label %if.end120, !dbg !2598

if.end120:                                        ; preds = %if.end119, %if.end110
  br label %return, !dbg !2599

return:                                           ; preds = %if.end120, %if.then117, %if.end107, %if.then
  %retval.0 = phi i64 [ 0, %if.then ], [ %call108, %if.end107 ], [ %call118, %if.then117 ], [ 1, %if.end120 ], !dbg !2600
  ret i64 %retval.0, !dbg !2601
}

; Function Attrs: noinline nounwind ssp uwtable
define i64 @gbhw_step(i64 %time_to_work) #0 !dbg !2602 {
entry:
  call void @llvm.dbg.value(metadata i64 %time_to_work, metadata !2605, metadata !DIExpression()), !dbg !2606
  call void @llvm.dbg.value(metadata i64 0, metadata !2607, metadata !DIExpression()), !dbg !2606
  %0 = load i64, i64* @pause_output, align 8, !dbg !2608
  %tobool = icmp ne i64 %0, 0, !dbg !2608
  br i1 %tobool, label %if.then, label %if.end, !dbg !2611

if.then:                                          ; preds = %entry
  %mul = mul nsw i64 %time_to_work, 1000, !dbg !2612
  %conv = trunc i64 %mul to i32, !dbg !2616
  %call = call i32 @usleep(i32 %conv), !dbg !2617
  br label %return, !dbg !2618

if.end:                                           ; preds = %entry
  %mul1 = mul nsw i64 %time_to_work, 4194, !dbg !2619
  call void @llvm.dbg.value(metadata i64 %mul1, metadata !2605, metadata !DIExpression()), !dbg !2606
  br label %while.body, !dbg !2620

while.body:                                       ; preds = %if.end67, %if.end
  %cycles_total.0 = phi i64 [ 0, %if.end ], [ %add68, %if.end67 ], !dbg !2623
  call void @llvm.dbg.value(metadata i64 %cycles_total.0, metadata !2607, metadata !DIExpression()), !dbg !2606
  br label %while_continue___1, !dbg !2624

while_continue___1:                               ; preds = %while.body
  br label %while_continue, !dbg !2624

while_continue:                                   ; preds = %while_continue___1
  %cmp = icmp slt i64 %cycles_total.0, %mul1, !dbg !2625
  br i1 %cmp, label %if.end4, label %if.then3, !dbg !2628

if.then3:                                         ; preds = %while_continue
  br label %while_break, !dbg !2629

if.end4:                                          ; preds = %while_continue
  %sub = sub nsw i64 %mul1, %cycles_total.0, !dbg !2631
  call void @llvm.dbg.value(metadata i64 %sub, metadata !2632, metadata !DIExpression()), !dbg !2606
  call void @llvm.dbg.value(metadata i64 0, metadata !2633, metadata !DIExpression()), !dbg !2606
  %1 = load i64, i64* @vblankctr, align 8, !dbg !2634
  %cmp5 = icmp sgt i64 %1, 0, !dbg !2636
  br i1 %cmp5, label %if.then7, label %if.end12, !dbg !2637

if.then7:                                         ; preds = %if.end4
  %2 = load i64, i64* @vblankctr, align 8, !dbg !2638
  %cmp8 = icmp slt i64 %2, %sub, !dbg !2641
  br i1 %cmp8, label %if.then10, label %if.end11, !dbg !2642

if.then10:                                        ; preds = %if.then7
  %3 = load i64, i64* @vblankctr, align 8, !dbg !2643
  call void @llvm.dbg.value(metadata i64 %3, metadata !2632, metadata !DIExpression()), !dbg !2606
  br label %if.end11, !dbg !2645

if.end11:                                         ; preds = %if.then10, %if.then7
  %maxcycles.0 = phi i64 [ %3, %if.then10 ], [ %sub, %if.then7 ], !dbg !2646
  call void @llvm.dbg.value(metadata i64 %maxcycles.0, metadata !2632, metadata !DIExpression()), !dbg !2606
  br label %if.end12, !dbg !2647

if.end12:                                         ; preds = %if.end11, %if.end4
  %maxcycles.1 = phi i64 [ %maxcycles.0, %if.end11 ], [ %sub, %if.end4 ], !dbg !2646
  call void @llvm.dbg.value(metadata i64 %maxcycles.1, metadata !2632, metadata !DIExpression()), !dbg !2606
  %4 = load i64, i64* @timerctr, align 8, !dbg !2648
  %cmp13 = icmp sgt i64 %4, 0, !dbg !2650
  br i1 %cmp13, label %if.then15, label %if.end20, !dbg !2651

if.then15:                                        ; preds = %if.end12
  %5 = load i64, i64* @timerctr, align 8, !dbg !2652
  %cmp16 = icmp slt i64 %5, %maxcycles.1, !dbg !2655
  br i1 %cmp16, label %if.then18, label %if.end19, !dbg !2656

if.then18:                                        ; preds = %if.then15
  %6 = load i64, i64* @timerctr, align 8, !dbg !2657
  call void @llvm.dbg.value(metadata i64 %6, metadata !2632, metadata !DIExpression()), !dbg !2606
  br label %if.end19, !dbg !2659

if.end19:                                         ; preds = %if.then18, %if.then15
  %maxcycles.2 = phi i64 [ %6, %if.then18 ], [ %maxcycles.1, %if.then15 ], !dbg !2646
  call void @llvm.dbg.value(metadata i64 %maxcycles.2, metadata !2632, metadata !DIExpression()), !dbg !2606
  br label %if.end20, !dbg !2660

if.end20:                                         ; preds = %if.end19, %if.end12
  %maxcycles.3 = phi i64 [ %maxcycles.2, %if.end19 ], [ %maxcycles.1, %if.end12 ], !dbg !2646
  call void @llvm.dbg.value(metadata i64 %maxcycles.3, metadata !2632, metadata !DIExpression()), !dbg !2606
  br label %while.body22, !dbg !2661

while.body22:                                     ; preds = %if.end31, %if.end20
  %cycles.0 = phi i64 [ 0, %if.end20 ], [ %add, %if.end31 ], !dbg !2646
  call void @llvm.dbg.value(metadata i64 %cycles.0, metadata !2633, metadata !DIExpression()), !dbg !2606
  br label %while_continue___2, !dbg !2664

while_continue___2:                               ; preds = %while.body22
  br label %while_continue___0, !dbg !2664

while_continue___0:                               ; preds = %while_continue___2
  %cmp23 = icmp slt i64 %cycles.0, %maxcycles.3, !dbg !2665
  br i1 %cmp23, label %if.end26, label %if.then25, !dbg !2668

if.then25:                                        ; preds = %while_continue___0
  br label %while_break___0, !dbg !2669

if.end26:                                         ; preds = %while_continue___0
  %call27 = call i64 @gbcpu_step(), !dbg !2671
  call void @llvm.dbg.value(metadata i64 %call27, metadata !2674, metadata !DIExpression()), !dbg !2606
  call void @llvm.dbg.value(metadata i64 %call27, metadata !2675, metadata !DIExpression()), !dbg !2606
  %cmp28 = icmp slt i64 %call27, 0, !dbg !2676
  br i1 %cmp28, label %if.then30, label %if.end31, !dbg !2678

if.then30:                                        ; preds = %if.end26
  br label %return, !dbg !2679

if.end31:                                         ; preds = %if.end26
  %add = add nsw i64 %cycles.0, %call27, !dbg !2681
  call void @llvm.dbg.value(metadata i64 %add, metadata !2633, metadata !DIExpression()), !dbg !2606
  %7 = load i64, i64* @sum_cycles, align 8, !dbg !2683
  %add32 = add nsw i64 %7, %call27, !dbg !2683
  store i64 %add32, i64* @sum_cycles, align 8, !dbg !2683
  call void @gb_sound(i64 %call27), !dbg !2684
  br label %while.body22, !dbg !2661, !llvm.loop !2686

while_break___2:                                  ; No predecessors!
  br label %while_break___0, !dbg !2688

while_break___0:                                  ; preds = %while_break___2, %if.then25
  %8 = load i64, i64* @vblankctr, align 8, !dbg !2689
  %cmp33 = icmp sgt i64 %8, 0, !dbg !2691
  br i1 %cmp33, label %if.then35, label %if.end37, !dbg !2692

if.then35:                                        ; preds = %while_break___0
  %9 = load i64, i64* @vblankctr, align 8, !dbg !2693
  %sub36 = sub nsw i64 %9, %cycles.0, !dbg !2693
  store i64 %sub36, i64* @vblankctr, align 8, !dbg !2693
  br label %if.end37, !dbg !2695

if.end37:                                         ; preds = %if.then35, %while_break___0
  %10 = load i64, i64* @vblankctr, align 8, !dbg !2696
  %cmp38 = icmp sle i64 %10, 0, !dbg !2698
  br i1 %cmp38, label %if.then40, label %if.end49, !dbg !2699

if.then40:                                        ; preds = %if.end37
  %11 = load i64, i64* @gbcpu_if, align 8, !dbg !2700
  %tobool41 = icmp ne i64 %11, 0, !dbg !2700
  br i1 %tobool41, label %if.then42, label %if.end48, !dbg !2703

if.then42:                                        ; preds = %if.then40
  %12 = load i8, i8* getelementptr inbounds ([128 x i8], [128 x i8]* @ioregs, i64 0, i64 127), align 1, !dbg !2704
  %conv43 = zext i8 %12 to i32, !dbg !2707
  %and = and i32 %conv43, 1, !dbg !2708
  %tobool44 = icmp ne i32 %and, 0, !dbg !2708
  br i1 %tobool44, label %if.then45, label %if.end47, !dbg !2709

if.then45:                                        ; preds = %if.then42
  %13 = load i64, i64* @vblankctr, align 8, !dbg !2710
  %add46 = add nsw i64 %13, 70256, !dbg !2710
  store i64 %add46, i64* @vblankctr, align 8, !dbg !2710
  call void @gbcpu_intr(i64 64), !dbg !2713
  br label %if.end47, !dbg !2715

if.end47:                                         ; preds = %if.then45, %if.then42
  br label %if.end48, !dbg !2716

if.end48:                                         ; preds = %if.end47, %if.then40
  br label %if.end49, !dbg !2717

if.end49:                                         ; preds = %if.end48, %if.end37
  %14 = load i64, i64* @timerctr, align 8, !dbg !2718
  %cmp50 = icmp sgt i64 %14, 0, !dbg !2720
  br i1 %cmp50, label %if.then52, label %if.end54, !dbg !2721

if.then52:                                        ; preds = %if.end49
  %15 = load i64, i64* @timerctr, align 8, !dbg !2722
  %sub53 = sub nsw i64 %15, %cycles.0, !dbg !2722
  store i64 %sub53, i64* @timerctr, align 8, !dbg !2722
  br label %if.end54, !dbg !2724

if.end54:                                         ; preds = %if.then52, %if.end49
  %16 = load i64, i64* @timerctr, align 8, !dbg !2725
  %cmp55 = icmp sle i64 %16, 0, !dbg !2727
  br i1 %cmp55, label %if.then57, label %if.end67, !dbg !2728

if.then57:                                        ; preds = %if.end54
  %17 = load i64, i64* @gbcpu_if, align 8, !dbg !2729
  %tobool58 = icmp ne i64 %17, 0, !dbg !2729
  br i1 %tobool58, label %if.then59, label %if.end66, !dbg !2732

if.then59:                                        ; preds = %if.then57
  %18 = load i8, i8* getelementptr inbounds ([128 x i8], [128 x i8]* @ioregs, i64 0, i64 127), align 1, !dbg !2733
  %conv60 = zext i8 %18 to i32, !dbg !2736
  %and61 = and i32 %conv60, 4, !dbg !2737
  %tobool62 = icmp ne i32 %and61, 0, !dbg !2737
  br i1 %tobool62, label %if.then63, label %if.end65, !dbg !2738

if.then63:                                        ; preds = %if.then59
  %19 = load i64, i64* @timertc, align 8, !dbg !2739
  %20 = load i64, i64* @timerctr, align 8, !dbg !2742
  %add64 = add nsw i64 %20, %19, !dbg !2742
  store i64 %add64, i64* @timerctr, align 8, !dbg !2742
  call void @gbcpu_intr(i64 72), !dbg !2743
  br label %if.end65, !dbg !2745

if.end65:                                         ; preds = %if.then63, %if.then59
  br label %if.end66, !dbg !2746

if.end66:                                         ; preds = %if.end65, %if.then57
  br label %if.end67, !dbg !2747

if.end67:                                         ; preds = %if.end66, %if.end54
  %add68 = add nsw i64 %cycles_total.0, %cycles.0, !dbg !2748
  call void @llvm.dbg.value(metadata i64 %add68, metadata !2607, metadata !DIExpression()), !dbg !2606
  br label %while.body, !dbg !2620, !llvm.loop !2749

while_break___1:                                  ; No predecessors!
  br label %while_break, !dbg !2751

while_break:                                      ; preds = %while_break___1, %if.then3
  br label %return, !dbg !2752

return:                                           ; preds = %while_break, %if.then30, %if.then
  %retval.0 = phi i64 [ 0, %if.then ], [ %call27, %if.then30 ], [ %cycles_total.0, %while_break ], !dbg !2623
  ret i64 %retval.0, !dbg !2753
}

; Function Attrs: noinline nounwind ssp uwtable
define void @gbhw_getminmax(i16* %lmin, i16* %lmax, i16* %rmin, i16* %rmax) #0 !dbg !2754 {
entry:
  call void @llvm.dbg.value(metadata i16* %lmin, metadata !2757, metadata !DIExpression()), !dbg !2758
  call void @llvm.dbg.value(metadata i16* %lmax, metadata !2759, metadata !DIExpression()), !dbg !2758
  call void @llvm.dbg.value(metadata i16* %rmin, metadata !2760, metadata !DIExpression()), !dbg !2758
  call void @llvm.dbg.value(metadata i16* %rmax, metadata !2761, metadata !DIExpression()), !dbg !2758
  %0 = load i64, i64* @lminval, align 8, !dbg !2762
  %cmp = icmp eq i64 %0, 2147483647, !dbg !2765
  br i1 %cmp, label %if.then, label %if.end, !dbg !2766

if.then:                                          ; preds = %entry
  br label %return, !dbg !2767

if.end:                                           ; preds = %entry
  %1 = load i64, i64* @lminval, align 8, !dbg !2769
  %conv = trunc i64 %1 to i16, !dbg !2770
  store i16 %conv, i16* %lmin, align 2, !dbg !2771
  %2 = load i64, i64* @lmaxval, align 8, !dbg !2772
  %conv1 = trunc i64 %2 to i16, !dbg !2773
  store i16 %conv1, i16* %lmax, align 2, !dbg !2774
  %3 = load i64, i64* @rminval, align 8, !dbg !2775
  %conv2 = trunc i64 %3 to i16, !dbg !2776
  store i16 %conv2, i16* %rmin, align 2, !dbg !2777
  %4 = load i64, i64* @rmaxval, align 8, !dbg !2778
  %conv3 = trunc i64 %4 to i16, !dbg !2779
  store i16 %conv3, i16* %rmax, align 2, !dbg !2780
  store i64 2147483647, i64* @rminval, align 8, !dbg !2781
  %5 = load i64, i64* @rminval, align 8, !dbg !2782
  store i64 %5, i64* @lminval, align 8, !dbg !2781
  store i64 -2147483648, i64* @rmaxval, align 8, !dbg !2783
  %6 = load i64, i64* @rmaxval, align 8, !dbg !2784
  store i64 %6, i64* @lmaxval, align 8, !dbg !2783
  br label %return, !dbg !2785

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !2786
}

; Function Attrs: noinline nounwind ssp uwtable
define void @gbhw_master_fade(i64 %speed, i64 %dstvol) #0 !dbg !2787 {
entry:
  call void @llvm.dbg.value(metadata i64 %speed, metadata !2790, metadata !DIExpression()), !dbg !2791
  call void @llvm.dbg.value(metadata i64 %dstvol, metadata !2792, metadata !DIExpression()), !dbg !2791
  %cmp = icmp slt i64 %dstvol, 0, !dbg !2793
  br i1 %cmp, label %if.then, label %if.end, !dbg !2796

if.then:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata i64 0, metadata !2792, metadata !DIExpression()), !dbg !2791
  br label %if.end, !dbg !2797

if.end:                                           ; preds = %if.then, %entry
  %dstvol.addr.0 = phi i64 [ 0, %if.then ], [ %dstvol, %entry ]
  call void @llvm.dbg.value(metadata i64 %dstvol.addr.0, metadata !2792, metadata !DIExpression()), !dbg !2791
  %cmp1 = icmp sgt i64 %dstvol.addr.0, 65536, !dbg !2799
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !2801

if.then2:                                         ; preds = %if.end
  call void @llvm.dbg.value(metadata i64 65536, metadata !2792, metadata !DIExpression()), !dbg !2791
  br label %if.end3, !dbg !2802

if.end3:                                          ; preds = %if.then2, %if.end
  %dstvol.addr.1 = phi i64 [ 65536, %if.then2 ], [ %dstvol.addr.0, %if.end ], !dbg !2804
  call void @llvm.dbg.value(metadata i64 %dstvol.addr.1, metadata !2792, metadata !DIExpression()), !dbg !2791
  store i64 %dstvol.addr.1, i64* @master_dstvol, align 8, !dbg !2805
  %0 = load i64, i64* @master_volume, align 8, !dbg !2806
  %cmp4 = icmp sgt i64 %dstvol.addr.1, %0, !dbg !2808
  br i1 %cmp4, label %if.then5, label %if.else, !dbg !2809

if.then5:                                         ; preds = %if.end3
  store i64 %speed, i64* @master_fade, align 8, !dbg !2810
  br label %if.end6, !dbg !2812

if.else:                                          ; preds = %if.end3
  %sub = sub nsw i64 0, %speed, !dbg !2813
  store i64 %sub, i64* @master_fade, align 8, !dbg !2815
  br label %if.end6

if.end6:                                          ; preds = %if.else, %if.then5
  ret void, !dbg !2816
}

; Function Attrs: noinline nounwind ssp uwtable
define internal i64 @gbs_nextsubsong(%struct.gbs* %gbs) #0 !dbg !2817 {
entry:
  call void @llvm.dbg.value(metadata %struct.gbs* %gbs, metadata !2820, metadata !DIExpression()), !dbg !2821
  %nextsubsong_cb = getelementptr inbounds %struct.gbs, %struct.gbs* %gbs, i32 0, i32 37, !dbg !2822
  %0 = load i64 (%struct.gbs*, i8*)*, i64 (%struct.gbs*, i8*)** %nextsubsong_cb, align 8, !dbg !2822
  %1 = ptrtoint i64 (%struct.gbs*, i8*)* %0 to i64, !dbg !2825
  %cmp = icmp ne i64 %1, 0, !dbg !2826
  br i1 %cmp, label %if.then, label %if.else, !dbg !2827

if.then:                                          ; preds = %entry
  %nextsubsong_cb1 = getelementptr inbounds %struct.gbs, %struct.gbs* %gbs, i32 0, i32 37, !dbg !2828
  %2 = load i64 (%struct.gbs*, i8*)*, i64 (%struct.gbs*, i8*)** %nextsubsong_cb1, align 8, !dbg !2828
  %nextsubsong_cb_priv = getelementptr inbounds %struct.gbs, %struct.gbs* %gbs, i32 0, i32 38, !dbg !2832
  %3 = load i8*, i8** %nextsubsong_cb_priv, align 8, !dbg !2832
  %call = call i64 %2(%struct.gbs* %gbs, i8* %3), !dbg !2833
  call void @llvm.dbg.value(metadata i64 %call, metadata !2834, metadata !DIExpression()), !dbg !2821
  br label %return, !dbg !2835

if.else:                                          ; preds = %entry
  %subsong = getelementptr inbounds %struct.gbs, %struct.gbs* %gbs, i32 0, i32 36, !dbg !2836
  %4 = load i64, i64* %subsong, align 8, !dbg !2838
  %inc = add nsw i64 %4, 1, !dbg !2838
  store i64 %inc, i64* %subsong, align 8, !dbg !2838
  %subsong2 = getelementptr inbounds %struct.gbs, %struct.gbs* %gbs, i32 0, i32 36, !dbg !2839
  %5 = load i64, i64* %subsong2, align 8, !dbg !2839
  %songs = getelementptr inbounds %struct.gbs, %struct.gbs* %gbs, i32 0, i32 2, !dbg !2841
  %6 = load i64, i64* %songs, align 8, !dbg !2841
  %cmp3 = icmp sge i64 %5, %6, !dbg !2842
  br i1 %cmp3, label %if.then4, label %if.end, !dbg !2843

if.then4:                                         ; preds = %if.else
  br label %return, !dbg !2844

if.end:                                           ; preds = %if.else
  %subsong5 = getelementptr inbounds %struct.gbs, %struct.gbs* %gbs, i32 0, i32 36, !dbg !2846
  %7 = load i64, i64* %subsong5, align 8, !dbg !2846
  %call6 = call i64 @gbs_init(%struct.gbs* %gbs, i64 %7), !dbg !2849
  br label %if.end7

if.end7:                                          ; preds = %if.end
  br label %return, !dbg !2850

return:                                           ; preds = %if.end7, %if.then4, %if.then
  %retval.0 = phi i64 [ %call, %if.then ], [ 0, %if.then4 ], [ 1, %if.end7 ], !dbg !2851
  ret i64 %retval.0, !dbg !2852
}

; Function Attrs: noinline nounwind ssp uwtable
define void @gbs_printinfo(%struct.gbs* %gbs, i64 %verbose) #0 !dbg !2853 {
entry:
  call void @llvm.dbg.value(metadata %struct.gbs* %gbs, metadata !2856, metadata !DIExpression()), !dbg !2857
  call void @llvm.dbg.value(metadata i64 %verbose, metadata !2858, metadata !DIExpression()), !dbg !2857
  call void @llvm.dbg.declare(metadata !666, metadata !2859, metadata !DIExpression()), !dbg !2860
  call void @llvm.dbg.declare(metadata !666, metadata !2861, metadata !DIExpression()), !dbg !2862
  call void @llvm.dbg.declare(metadata !666, metadata !2863, metadata !DIExpression()), !dbg !2864
  call void @llvm.dbg.declare(metadata !666, metadata !2865, metadata !DIExpression()), !dbg !2866
  call void @llvm.dbg.declare(metadata !666, metadata !2867, metadata !DIExpression()), !dbg !2868
  call void @llvm.dbg.declare(metadata !666, metadata !2869, metadata !DIExpression()), !dbg !2870
  call void @llvm.dbg.declare(metadata !666, metadata !2871, metadata !DIExpression()), !dbg !2872
  call void @llvm.dbg.declare(metadata !666, metadata !2873, metadata !DIExpression()), !dbg !2874
  call void @llvm.dbg.declare(metadata !666, metadata !2875, metadata !DIExpression()), !dbg !2876
  call void @llvm.dbg.declare(metadata !666, metadata !2877, metadata !DIExpression()), !dbg !2878
  call void @llvm.dbg.declare(metadata !666, metadata !2879, metadata !DIExpression()), !dbg !2880
  %call = call i8* @_(i8* getelementptr inbounds ([255 x i8], [255 x i8]* @.str.15, i32 0, i32 0)), !dbg !2881
  call void @llvm.dbg.value(metadata i8* %call, metadata !2885, metadata !DIExpression()), !dbg !2857
  %version = getelementptr inbounds %struct.gbs, %struct.gbs* %gbs, i32 0, i32 1, !dbg !2886
  %0 = load i64, i64* %version, align 8, !dbg !2886
  %title = getelementptr inbounds %struct.gbs, %struct.gbs* %gbs, i32 0, i32 10, !dbg !2888
  %1 = load i8*, i8** %title, align 8, !dbg !2888
  %author = getelementptr inbounds %struct.gbs, %struct.gbs* %gbs, i32 0, i32 11, !dbg !2889
  %2 = load i8*, i8** %author, align 8, !dbg !2889
  %copyright = getelementptr inbounds %struct.gbs, %struct.gbs* %gbs, i32 0, i32 12, !dbg !2890
  %3 = load i8*, i8** %copyright, align 8, !dbg !2890
  %load = getelementptr inbounds %struct.gbs, %struct.gbs* %gbs, i32 0, i32 4, !dbg !2891
  %4 = load i16, i16* %load, align 8, !dbg !2891
  %conv = zext i16 %4 to i32, !dbg !2892
  %init = getelementptr inbounds %struct.gbs, %struct.gbs* %gbs, i32 0, i32 5, !dbg !2893
  %5 = load i16, i16* %init, align 2, !dbg !2893
  %conv1 = zext i16 %5 to i32, !dbg !2894
  %play = getelementptr inbounds %struct.gbs, %struct.gbs* %gbs, i32 0, i32 6, !dbg !2895
  %6 = load i16, i16* %play, align 4, !dbg !2895
  %conv2 = zext i16 %6 to i32, !dbg !2896
  %stack = getelementptr inbounds %struct.gbs, %struct.gbs* %gbs, i32 0, i32 7, !dbg !2897
  %7 = load i16, i16* %stack, align 2, !dbg !2897
  %conv3 = zext i16 %7 to i32, !dbg !2898
  %filesize = getelementptr inbounds %struct.gbs, %struct.gbs* %gbs, i32 0, i32 16, !dbg !2899
  %8 = load i32, i32* %filesize, align 8, !dbg !2899
  %romsize = getelementptr inbounds %struct.gbs, %struct.gbs* %gbs, i32 0, i32 23, !dbg !2900
  %9 = load i64, i64* %romsize, align 8, !dbg !2900
  %romsize4 = getelementptr inbounds %struct.gbs, %struct.gbs* %gbs, i32 0, i32 23, !dbg !2901
  %10 = load i64, i64* %romsize4, align 8, !dbg !2901
  %div = udiv i64 %10, 16384, !dbg !2902
  %songs = getelementptr inbounds %struct.gbs, %struct.gbs* %gbs, i32 0, i32 2, !dbg !2903
  %11 = load i64, i64* %songs, align 8, !dbg !2903
  %call5 = call i32 (i8*, ...) @printf(i8* %call, i64 %0, i8* %1, i8* %2, i8* %3, i32 %conv, i32 %conv1, i32 %conv2, i32 %conv3, i32 %8, i64 %9, i64 %div, i64 %11), !dbg !2904
  %version6 = getelementptr inbounds %struct.gbs, %struct.gbs* %gbs, i32 0, i32 1, !dbg !2905
  %12 = load i64, i64* %version6, align 8, !dbg !2905
  %cmp = icmp eq i64 %12, 2, !dbg !2907
  br i1 %cmp, label %if.then, label %if.end19, !dbg !2908

if.then:                                          ; preds = %entry
  %crc = getelementptr inbounds %struct.gbs, %struct.gbs* %gbs, i32 0, i32 17, !dbg !2909
  %13 = load i32, i32* %crc, align 4, !dbg !2909
  %crcnow = getelementptr inbounds %struct.gbs, %struct.gbs* %gbs, i32 0, i32 18, !dbg !2912
  %14 = load i32, i32* %crcnow, align 8, !dbg !2912
  %cmp8 = icmp eq i32 %13, %14, !dbg !2913
  br i1 %cmp8, label %if.then10, label %if.else, !dbg !2914

if.then10:                                        ; preds = %if.then
  %call11 = call i8* @_(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.16, i32 0, i32 0)), !dbg !2915
  call void @llvm.dbg.value(metadata i8* %call11, metadata !2919, metadata !DIExpression()), !dbg !2857
  call void @llvm.dbg.value(metadata i8* %call11, metadata !2920, metadata !DIExpression()), !dbg !2857
  br label %if.end, !dbg !2921

if.else:                                          ; preds = %if.then
  %call12 = call i8* @_(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.17, i32 0, i32 0)), !dbg !2922
  call void @llvm.dbg.value(metadata i8* %call12, metadata !2926, metadata !DIExpression()), !dbg !2857
  call void @llvm.dbg.value(metadata i8* %call12, metadata !2920, metadata !DIExpression()), !dbg !2857
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then10
  %tmp___2.0 = phi i8* [ %call11, %if.then10 ], [ %call12, %if.else ], !dbg !2927
  call void @llvm.dbg.value(metadata i8* %tmp___2.0, metadata !2920, metadata !DIExpression()), !dbg !2857
  %call13 = call i8* @_(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.18, i32 0, i32 0)), !dbg !2928
  call void @llvm.dbg.value(metadata i8* %call13, metadata !2931, metadata !DIExpression()), !dbg !2857
  %crc14 = getelementptr inbounds %struct.gbs, %struct.gbs* %gbs, i32 0, i32 17, !dbg !2932
  %15 = load i32, i32* %crc14, align 4, !dbg !2932
  %conv15 = zext i32 %15 to i64, !dbg !2934
  %crcnow16 = getelementptr inbounds %struct.gbs, %struct.gbs* %gbs, i32 0, i32 18, !dbg !2935
  %16 = load i32, i32* %crcnow16, align 8, !dbg !2935
  %conv17 = zext i32 %16 to i64, !dbg !2936
  %call18 = call i32 (i8*, ...) @printf(i8* %call13, i64 %conv15, i64 %conv17, i8* %tmp___2.0), !dbg !2937
  br label %if.end19, !dbg !2938

if.end19:                                         ; preds = %if.end, %entry
  %tobool = icmp ne i64 %verbose, 0, !dbg !2939
  br i1 %tobool, label %if.then20, label %if.end58, !dbg !2941

if.then20:                                        ; preds = %if.end19
  %version21 = getelementptr inbounds %struct.gbs, %struct.gbs* %gbs, i32 0, i32 1, !dbg !2942
  %17 = load i64, i64* %version21, align 8, !dbg !2942
  %cmp22 = icmp eq i64 %17, 2, !dbg !2945
  br i1 %cmp22, label %if.then24, label %if.end57, !dbg !2946

if.then24:                                        ; preds = %if.then20
  call void @llvm.dbg.value(metadata i64 0, metadata !2947, metadata !DIExpression()), !dbg !2857
  br label %while.body, !dbg !2948

while.body:                                       ; preds = %if.end56, %if.then24
  %i.0 = phi i64 [ 0, %if.then24 ], [ %inc, %if.end56 ], !dbg !2952
  call void @llvm.dbg.value(metadata i64 %i.0, metadata !2947, metadata !DIExpression()), !dbg !2857
  br label %while_continue___0, !dbg !2953

while_continue___0:                               ; preds = %while.body
  br label %while_continue, !dbg !2953

while_continue:                                   ; preds = %while_continue___0
  %songs25 = getelementptr inbounds %struct.gbs, %struct.gbs* %gbs, i32 0, i32 2, !dbg !2954
  %18 = load i64, i64* %songs25, align 8, !dbg !2954
  %cmp26 = icmp slt i64 %i.0, %18, !dbg !2957
  br i1 %cmp26, label %if.end29, label %if.then28, !dbg !2958

if.then28:                                        ; preds = %while_continue
  br label %while_break, !dbg !2959

if.end29:                                         ; preds = %while_continue
  %call30 = call i8* @_(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.19, i32 0, i32 0)), !dbg !2961
  call void @llvm.dbg.value(metadata i8* %call30, metadata !2964, metadata !DIExpression()), !dbg !2857
  %call31 = call i32 (i8*, ...) @printf(i8* %call30, i64 %i.0), !dbg !2965
  %subsong_info = getelementptr inbounds %struct.gbs, %struct.gbs* %gbs, i32 0, i32 19, !dbg !2967
  %19 = load %struct.gbs_subsong_info*, %struct.gbs_subsong_info** %subsong_info, align 8, !dbg !2967
  %add.ptr = getelementptr inbounds %struct.gbs_subsong_info, %struct.gbs_subsong_info* %19, i64 %i.0, !dbg !2969
  %title32 = getelementptr inbounds %struct.gbs_subsong_info, %struct.gbs_subsong_info* %add.ptr, i32 0, i32 1, !dbg !2970
  %20 = load i8*, i8** %title32, align 8, !dbg !2970
  %tobool33 = icmp ne i8* %20, null, !dbg !2971
  br i1 %tobool33, label %if.then34, label %if.else39, !dbg !2972

if.then34:                                        ; preds = %if.end29
  %subsong_info35 = getelementptr inbounds %struct.gbs, %struct.gbs* %gbs, i32 0, i32 19, !dbg !2973
  %21 = load %struct.gbs_subsong_info*, %struct.gbs_subsong_info** %subsong_info35, align 8, !dbg !2973
  %add.ptr36 = getelementptr inbounds %struct.gbs_subsong_info, %struct.gbs_subsong_info* %21, i64 %i.0, !dbg !2977
  %title37 = getelementptr inbounds %struct.gbs_subsong_info, %struct.gbs_subsong_info* %add.ptr36, i32 0, i32 1, !dbg !2978
  %22 = load i8*, i8** %title37, align 8, !dbg !2978
  %call38 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.20, i32 0, i32 0), i8* %22), !dbg !2979
  br label %if.end42, !dbg !2980

if.else39:                                        ; preds = %if.end29
  %call40 = call i8* @_(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.21, i32 0, i32 0)), !dbg !2981
  call void @llvm.dbg.value(metadata i8* %call40, metadata !2985, metadata !DIExpression()), !dbg !2857
  %call41 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.22, i32 0, i32 0), i8* %call40), !dbg !2986
  br label %if.end42

if.end42:                                         ; preds = %if.else39, %if.then34
  %subsong_info43 = getelementptr inbounds %struct.gbs, %struct.gbs* %gbs, i32 0, i32 19, !dbg !2988
  %23 = load %struct.gbs_subsong_info*, %struct.gbs_subsong_info** %subsong_info43, align 8, !dbg !2988
  %add.ptr44 = getelementptr inbounds %struct.gbs_subsong_info, %struct.gbs_subsong_info* %23, i64 %i.0, !dbg !2990
  %len = getelementptr inbounds %struct.gbs_subsong_info, %struct.gbs_subsong_info* %add.ptr44, i32 0, i32 0, !dbg !2991
  %24 = load i32, i32* %len, align 8, !dbg !2991
  %tobool45 = icmp ne i32 %24, 0, !dbg !2992
  br i1 %tobool45, label %if.then46, label %if.else53, !dbg !2993

if.then46:                                        ; preds = %if.end42
  %call47 = call i8* @_(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.23, i32 0, i32 0)), !dbg !2994
  call void @llvm.dbg.value(metadata i8* %call47, metadata !2998, metadata !DIExpression()), !dbg !2857
  %subsong_info48 = getelementptr inbounds %struct.gbs, %struct.gbs* %gbs, i32 0, i32 19, !dbg !2999
  %25 = load %struct.gbs_subsong_info*, %struct.gbs_subsong_info** %subsong_info48, align 8, !dbg !2999
  %add.ptr49 = getelementptr inbounds %struct.gbs_subsong_info, %struct.gbs_subsong_info* %25, i64 %i.0, !dbg !3001
  %len50 = getelementptr inbounds %struct.gbs_subsong_info, %struct.gbs_subsong_info* %add.ptr49, i32 0, i32 0, !dbg !3002
  %26 = load i32, i32* %len50, align 8, !dbg !3002
  %shr = lshr i32 %26, 10, !dbg !3003
  %conv51 = zext i32 %shr to i64, !dbg !3004
  %call52 = call i32 (i8*, ...) @printf(i8* %call47, i64 %conv51), !dbg !3005
  br label %if.end56, !dbg !3006

if.else53:                                        ; preds = %if.end42
  %call54 = call i8* @_(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.24, i32 0, i32 0)), !dbg !3007
  call void @llvm.dbg.value(metadata i8* %call54, metadata !3011, metadata !DIExpression()), !dbg !2857
  %call55 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.9, i32 0, i32 0), i8* %call54), !dbg !3012
  br label %if.end56

if.end56:                                         ; preds = %if.else53, %if.then46
  %inc = add nsw i64 %i.0, 1, !dbg !3014
  call void @llvm.dbg.value(metadata i64 %inc, metadata !2947, metadata !DIExpression()), !dbg !2857
  br label %while.body, !dbg !2948, !llvm.loop !3015

while_break___0:                                  ; No predecessors!
  br label %while_break, !dbg !3017

while_break:                                      ; preds = %while_break___0, %if.then28
  br label %if.end57, !dbg !3018

if.end57:                                         ; preds = %while_break, %if.then20
  br label %if.end58, !dbg !3019

if.end58:                                         ; preds = %if.end57, %if.end19
  ret void, !dbg !3020
}

declare i32 @printf(i8*, ...) #5

; Function Attrs: noinline nounwind ssp uwtable
define void @gbs_close(%struct.gbs* %gbs) #0 !dbg !3021 {
entry:
  call void @llvm.dbg.value(metadata %struct.gbs* %gbs, metadata !3024, metadata !DIExpression()), !dbg !3025
  %subsong_info = getelementptr inbounds %struct.gbs, %struct.gbs* %gbs, i32 0, i32 19, !dbg !3026
  %0 = load %struct.gbs_subsong_info*, %struct.gbs_subsong_info** %subsong_info, align 8, !dbg !3026
  %1 = bitcast %struct.gbs_subsong_info* %0 to i8*, !dbg !3030
  call void @free(i8* %1) #11, !dbg !3031
  %2 = bitcast %struct.gbs* %gbs to i8*, !dbg !3032
  call void @free(i8* %2) #11, !dbg !3034
  ret void, !dbg !3035
}

; Function Attrs: nounwind
declare void @free(i8*) #4

; Function Attrs: noinline nounwind ssp uwtable
define i64 @gbs_write(%struct.gbs* %gbs, i8* %name, i64 %version___2) #0 !dbg !3036 {
entry:
  %pad = alloca [16 x i8], align 16
  %strings = alloca [65536 x i8], align 16
  call void @llvm.dbg.value(metadata %struct.gbs* %gbs, metadata !3039, metadata !DIExpression()), !dbg !3040
  call void @llvm.dbg.value(metadata i8* %name, metadata !3041, metadata !DIExpression()), !dbg !3040
  call void @llvm.dbg.value(metadata i64 %version___2, metadata !3042, metadata !DIExpression()), !dbg !3040
  call void @llvm.dbg.declare(metadata [16 x i8]* %pad, metadata !3043, metadata !DIExpression()), !dbg !3045
  call void @llvm.dbg.declare(metadata [65536 x i8]* %strings, metadata !3046, metadata !DIExpression()), !dbg !3050
  call void @llvm.dbg.declare(metadata !666, metadata !3051, metadata !DIExpression()), !dbg !3052
  call void @llvm.dbg.declare(metadata !666, metadata !3053, metadata !DIExpression()), !dbg !3054
  call void @llvm.dbg.declare(metadata !666, metadata !3055, metadata !DIExpression()), !dbg !3056
  call void @llvm.dbg.declare(metadata !666, metadata !3057, metadata !DIExpression()), !dbg !3058
  call void @llvm.dbg.declare(metadata !666, metadata !3059, metadata !DIExpression()), !dbg !3060
  %codelen1 = getelementptr inbounds %struct.gbs, %struct.gbs* %gbs, i32 0, i32 13, !dbg !3061
  %0 = load i64, i64* %codelen1, align 8, !dbg !3061
  %add = add i64 %0, 15, !dbg !3064
  %shr = lshr i64 %add, 4, !dbg !3065
  call void @llvm.dbg.value(metadata i64 %shr, metadata !3066, metadata !DIExpression()), !dbg !3040
  call void @llvm.dbg.value(metadata i64 0, metadata !3067, metadata !DIExpression()), !dbg !3040
  %filesize = getelementptr inbounds %struct.gbs, %struct.gbs* %gbs, i32 0, i32 16, !dbg !3068
  %1 = load i32, i32* %filesize, align 8, !dbg !3068
  %conv = zext i32 %1 to i64, !dbg !3069
  call void @llvm.dbg.value(metadata i64 %conv, metadata !3070, metadata !DIExpression()), !dbg !3040
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %pad, i32 0, i32 0, !dbg !3071
  %call = call i8* @memset(i8* %arraydecay, i32 255, i32 16) #11, !dbg !3073
  %call2 = call i32 (i8*, i32, ...) @open(i8* %name, i32 577, i32 420), !dbg !3074
  call void @llvm.dbg.value(metadata i32 %call2, metadata !3076, metadata !DIExpression()), !dbg !3040
  %conv3 = sext i32 %call2 to i64, !dbg !3077
  call void @llvm.dbg.value(metadata i64 %conv3, metadata !3078, metadata !DIExpression()), !dbg !3040
  %cmp = icmp eq i64 %conv3, -1, !dbg !3079
  br i1 %cmp, label %if.then, label %if.end, !dbg !3081

if.then:                                          ; preds = %entry
  %call5 = call i32* @__errno_location() #10, !dbg !3082
  call void @llvm.dbg.value(metadata i32* %call5, metadata !3086, metadata !DIExpression()), !dbg !3040
  %2 = load i32, i32* %call5, align 4, !dbg !3088
  %call6 = call i8* @strerror(i32 %2) #11, !dbg !3090
  call void @llvm.dbg.value(metadata i8* %call6, metadata !3091, metadata !DIExpression()), !dbg !3040
  %call7 = call i8* @_(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.25, i32 0, i32 0)), !dbg !3092
  call void @llvm.dbg.value(metadata i8* %call7, metadata !3094, metadata !DIExpression()), !dbg !3040
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !3095
  %call8 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %3, i8* %call7, i8* %name, i8* %call6), !dbg !3097
  br label %return, !dbg !3098

if.end:                                           ; preds = %entry
  %cmp9 = icmp eq i64 %version___2, 2, !dbg !3099
  br i1 %cmp9, label %if.then11, label %if.else189, !dbg !3101

if.then11:                                        ; preds = %if.end
  %songs = getelementptr inbounds %struct.gbs, %struct.gbs* %gbs, i32 0, i32 2, !dbg !3102
  %4 = load i64, i64* %songs, align 8, !dbg !3102
  %mul = mul nsw i64 8, %4, !dbg !3105
  %add12 = add nsw i64 32, %mul, !dbg !3106
  call void @llvm.dbg.value(metadata i64 %add12, metadata !3107, metadata !DIExpression()), !dbg !3040
  %mul13 = mul nsw i64 %shr, 16, !dbg !3108
  %add14 = add nsw i64 112, %mul13, !dbg !3109
  %add15 = add nsw i64 %add14, %add12, !dbg !3110
  call void @llvm.dbg.value(metadata i64 %add15, metadata !3070, metadata !DIExpression()), !dbg !3040
  %buf = getelementptr inbounds %struct.gbs, %struct.gbs* %gbs, i32 0, i32 0, !dbg !3111
  %5 = load i8*, i8** %buf, align 8, !dbg !3111
  %add.ptr = getelementptr inbounds i8, i8* %5, i64 3, !dbg !3112
  store i8 1, i8* %add.ptr, align 1, !dbg !3113
  %buf16 = getelementptr inbounds %struct.gbs, %struct.gbs* %gbs, i32 0, i32 0, !dbg !3114
  %6 = load i8*, i8** %buf16, align 8, !dbg !3114
  %add17 = add nsw i64 %add15, 65536, !dbg !3116
  %conv18 = trunc i64 %add17 to i32, !dbg !3117
  %call19 = call i8* @realloc(i8* %6, i32 %conv18) #11, !dbg !3118
  call void @llvm.dbg.value(metadata i8* %call19, metadata !3119, metadata !DIExpression()), !dbg !3040
  %buf20 = getelementptr inbounds %struct.gbs, %struct.gbs* %gbs, i32 0, i32 0, !dbg !3120
  store i8* %call19, i8** %buf20, align 8, !dbg !3121
  %buf21 = getelementptr inbounds %struct.gbs, %struct.gbs* %gbs, i32 0, i32 0, !dbg !3122
  %7 = load i8*, i8** %buf21, align 8, !dbg !3122
  %add.ptr22 = getelementptr inbounds i8, i8* %7, i64 112, !dbg !3123
  %code = getelementptr inbounds %struct.gbs, %struct.gbs* %gbs, i32 0, i32 14, !dbg !3124
  store i8* %add.ptr22, i8** %code, align 8, !dbg !3125
  %code23 = getelementptr inbounds %struct.gbs, %struct.gbs* %gbs, i32 0, i32 14, !dbg !3126
  %8 = load i8*, i8** %code23, align 8, !dbg !3126
  %mul24 = mul nsw i64 %shr, 16, !dbg !3127
  %add.ptr25 = getelementptr inbounds i8, i8* %8, i64 %mul24, !dbg !3128
  %exthdr = getelementptr inbounds %struct.gbs, %struct.gbs* %gbs, i32 0, i32 15, !dbg !3129
  store i8* %add.ptr25, i8** %exthdr, align 8, !dbg !3130
  %buf26 = getelementptr inbounds %struct.gbs, %struct.gbs* %gbs, i32 0, i32 0, !dbg !3131
  %9 = load i8*, i8** %buf26, align 8, !dbg !3131
  %add.ptr27 = getelementptr inbounds i8, i8* %9, i64 110, !dbg !3133
  %conv28 = trunc i64 %shr to i32, !dbg !3134
  call void @writeint(i8* %add.ptr27, i32 %conv28, i64 2), !dbg !3135
  %code29 = getelementptr inbounds %struct.gbs, %struct.gbs* %gbs, i32 0, i32 14, !dbg !3136
  %10 = load i8*, i8** %code29, align 8, !dbg !3136
  %codelen30 = getelementptr inbounds %struct.gbs, %struct.gbs* %gbs, i32 0, i32 13, !dbg !3138
  %11 = load i64, i64* %codelen30, align 8, !dbg !3138
  %add.ptr31 = getelementptr inbounds i8, i8* %10, i64 %11, !dbg !3139
  %mul32 = mul nsw i64 %shr, 16, !dbg !3140
  %codelen33 = getelementptr inbounds %struct.gbs, %struct.gbs* %gbs, i32 0, i32 13, !dbg !3141
  %12 = load i64, i64* %codelen33, align 8, !dbg !3141
  %sub = sub i64 %mul32, %12, !dbg !3142
  %conv34 = trunc i64 %sub to i32, !dbg !3143
  %call35 = call i8* @memset(i8* %add.ptr31, i32 0, i32 %conv34) #11, !dbg !3144
  %exthdr36 = getelementptr inbounds %struct.gbs, %struct.gbs* %gbs, i32 0, i32 15, !dbg !3145
  %13 = load i8*, i8** %exthdr36, align 8, !dbg !3145
  %add37 = add nsw i64 %add12, 65536, !dbg !3147
  %conv38 = trunc i64 %add37 to i32, !dbg !3148
  %call39 = call i8* @memset(i8* %13, i32 0, i32 %conv38) #11, !dbg !3149
  %exthdr40 = getelementptr inbounds %struct.gbs, %struct.gbs* %gbs, i32 0, i32 15, !dbg !3150
  %14 = load i8*, i8** %exthdr40, align 8, !dbg !3150
  %call41 = call i8* @strncpy(i8* %14, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.26, i32 0, i32 0), i32 4) #11, !dbg !3152
  %songs42 = getelementptr inbounds %struct.gbs, %struct.gbs* %gbs, i32 0, i32 2, !dbg !3153
  %15 = load i64, i64* %songs42, align 8, !dbg !3153
  %conv43 = trunc i64 %15 to i8, !dbg !3154
  %exthdr44 = getelementptr inbounds %struct.gbs, %struct.gbs* %gbs, i32 0, i32 15, !dbg !3155
  %16 = load i8*, i8** %exthdr44, align 8, !dbg !3155
  %add.ptr45 = getelementptr inbounds i8, i8* %16, i64 28, !dbg !3156
  store i8 %conv43, i8* %add.ptr45, align 1, !dbg !3157
  %title = getelementptr inbounds %struct.gbs, %struct.gbs* %gbs, i32 0, i32 10, !dbg !3158
  %17 = load i8*, i8** %title, align 8, !dbg !3158
  %call46 = call i32 @strlen(i8* %17) #8, !dbg !3160
  call void @llvm.dbg.value(metadata i32 %call46, metadata !3161, metadata !DIExpression()), !dbg !3040
  %conv47 = zext i32 %call46 to i64, !dbg !3162
  call void @llvm.dbg.value(metadata i64 %conv47, metadata !3163, metadata !DIExpression()), !dbg !3040
  %cmp48 = icmp sgt i64 %conv47, 32, !dbg !3164
  br i1 %cmp48, label %if.then50, label %if.else, !dbg !3166

if.then50:                                        ; preds = %if.then11
  %arraydecay51 = getelementptr inbounds [65536 x i8], [65536 x i8]* %strings, i32 0, i32 0, !dbg !3167
  %add.ptr52 = getelementptr inbounds i8, i8* %arraydecay51, i64 0, !dbg !3171
  %title53 = getelementptr inbounds %struct.gbs, %struct.gbs* %gbs, i32 0, i32 10, !dbg !3172
  %18 = load i8*, i8** %title53, align 8, !dbg !3172
  %add54 = add nsw i64 %conv47, 1, !dbg !3173
  %conv55 = trunc i64 %add54 to i32, !dbg !3174
  %call56 = call i8* @memcpy(i8* %add.ptr52, i8* %18, i32 %conv55) #11, !dbg !3175
  %exthdr57 = getelementptr inbounds %struct.gbs, %struct.gbs* %gbs, i32 0, i32 15, !dbg !3176
  %19 = load i8*, i8** %exthdr57, align 8, !dbg !3176
  %add.ptr58 = getelementptr inbounds i8, i8* %19, i64 20, !dbg !3178
  %conv59 = trunc i64 0 to i32, !dbg !3179
  call void @writeint(i8* %add.ptr58, i32 %conv59, i64 2), !dbg !3180
  %add60 = add nsw i64 %conv47, 1, !dbg !3181
  %add61 = add nsw i64 0, %add60, !dbg !3182
  call void @llvm.dbg.value(metadata i64 %add61, metadata !3067, metadata !DIExpression()), !dbg !3040
  br label %if.end64, !dbg !3183

if.else:                                          ; preds = %if.then11
  %exthdr62 = getelementptr inbounds %struct.gbs, %struct.gbs* %gbs, i32 0, i32 15, !dbg !3184
  %20 = load i8*, i8** %exthdr62, align 8, !dbg !3184
  %add.ptr63 = getelementptr inbounds i8, i8* %20, i64 20, !dbg !3188
  call void @writeint(i8* %add.ptr63, i32 65535, i64 2), !dbg !3189
  br label %if.end64

if.end64:                                         ; preds = %if.else, %if.then50
  %stringofs.0 = phi i64 [ %add61, %if.then50 ], [ 0, %if.else ], !dbg !3190
  call void @llvm.dbg.value(metadata i64 %stringofs.0, metadata !3067, metadata !DIExpression()), !dbg !3040
  %author = getelementptr inbounds %struct.gbs, %struct.gbs* %gbs, i32 0, i32 11, !dbg !3191
  %21 = load i8*, i8** %author, align 8, !dbg !3191
  %call65 = call i32 @strlen(i8* %21) #8, !dbg !3194
  call void @llvm.dbg.value(metadata i32 %call65, metadata !3195, metadata !DIExpression()), !dbg !3040
  %conv66 = zext i32 %call65 to i64, !dbg !3196
  call void @llvm.dbg.value(metadata i64 %conv66, metadata !3163, metadata !DIExpression()), !dbg !3040
  %cmp67 = icmp sgt i64 %conv66, 32, !dbg !3197
  br i1 %cmp67, label %if.then69, label %if.else81, !dbg !3199

if.then69:                                        ; preds = %if.end64
  %arraydecay70 = getelementptr inbounds [65536 x i8], [65536 x i8]* %strings, i32 0, i32 0, !dbg !3200
  %add.ptr71 = getelementptr inbounds i8, i8* %arraydecay70, i64 %stringofs.0, !dbg !3204
  %author72 = getelementptr inbounds %struct.gbs, %struct.gbs* %gbs, i32 0, i32 11, !dbg !3205
  %22 = load i8*, i8** %author72, align 8, !dbg !3205
  %add73 = add nsw i64 %conv66, 1, !dbg !3206
  %conv74 = trunc i64 %add73 to i32, !dbg !3207
  %call75 = call i8* @memcpy(i8* %add.ptr71, i8* %22, i32 %conv74) #11, !dbg !3208
  %exthdr76 = getelementptr inbounds %struct.gbs, %struct.gbs* %gbs, i32 0, i32 15, !dbg !3209
  %23 = load i8*, i8** %exthdr76, align 8, !dbg !3209
  %add.ptr77 = getelementptr inbounds i8, i8* %23, i64 22, !dbg !3211
  %conv78 = trunc i64 %stringofs.0 to i32, !dbg !3212
  call void @writeint(i8* %add.ptr77, i32 %conv78, i64 2), !dbg !3213
  %add79 = add nsw i64 %conv66, 1, !dbg !3214
  %add80 = add nsw i64 %stringofs.0, %add79, !dbg !3215
  call void @llvm.dbg.value(metadata i64 %add80, metadata !3067, metadata !DIExpression()), !dbg !3040
  br label %if.end84, !dbg !3216

if.else81:                                        ; preds = %if.end64
  %exthdr82 = getelementptr inbounds %struct.gbs, %struct.gbs* %gbs, i32 0, i32 15, !dbg !3217
  %24 = load i8*, i8** %exthdr82, align 8, !dbg !3217
  %add.ptr83 = getelementptr inbounds i8, i8* %24, i64 22, !dbg !3221
  call void @writeint(i8* %add.ptr83, i32 65535, i64 2), !dbg !3222
  br label %if.end84

if.end84:                                         ; preds = %if.else81, %if.then69
  %stringofs.1 = phi i64 [ %add80, %if.then69 ], [ %stringofs.0, %if.else81 ], !dbg !3223
  call void @llvm.dbg.value(metadata i64 %stringofs.1, metadata !3067, metadata !DIExpression()), !dbg !3040
  %copyright = getelementptr inbounds %struct.gbs, %struct.gbs* %gbs, i32 0, i32 12, !dbg !3224
  %25 = load i8*, i8** %copyright, align 8, !dbg !3224
  %call85 = call i32 @strlen(i8* %25) #8, !dbg !3227
  call void @llvm.dbg.value(metadata i32 %call85, metadata !3228, metadata !DIExpression()), !dbg !3040
  %conv86 = zext i32 %call85 to i64, !dbg !3229
  call void @llvm.dbg.value(metadata i64 %conv86, metadata !3163, metadata !DIExpression()), !dbg !3040
  %cmp87 = icmp sgt i64 %conv86, 30, !dbg !3230
  br i1 %cmp87, label %if.then89, label %if.else101, !dbg !3232

if.then89:                                        ; preds = %if.end84
  %arraydecay90 = getelementptr inbounds [65536 x i8], [65536 x i8]* %strings, i32 0, i32 0, !dbg !3233
  %add.ptr91 = getelementptr inbounds i8, i8* %arraydecay90, i64 %stringofs.1, !dbg !3237
  %copyright92 = getelementptr inbounds %struct.gbs, %struct.gbs* %gbs, i32 0, i32 12, !dbg !3238
  %26 = load i8*, i8** %copyright92, align 8, !dbg !3238
  %add93 = add nsw i64 %conv86, 1, !dbg !3239
  %conv94 = trunc i64 %add93 to i32, !dbg !3240
  %call95 = call i8* @memcpy(i8* %add.ptr91, i8* %26, i32 %conv94) #11, !dbg !3241
  %exthdr96 = getelementptr inbounds %struct.gbs, %struct.gbs* %gbs, i32 0, i32 15, !dbg !3242
  %27 = load i8*, i8** %exthdr96, align 8, !dbg !3242
  %add.ptr97 = getelementptr inbounds i8, i8* %27, i64 24, !dbg !3244
  %conv98 = trunc i64 %stringofs.1 to i32, !dbg !3245
  call void @writeint(i8* %add.ptr97, i32 %conv98, i64 2), !dbg !3246
  %add99 = add nsw i64 %conv86, 1, !dbg !3247
  %add100 = add nsw i64 %stringofs.1, %add99, !dbg !3248
  call void @llvm.dbg.value(metadata i64 %add100, metadata !3067, metadata !DIExpression()), !dbg !3040
  br label %if.end104, !dbg !3249

if.else101:                                       ; preds = %if.end84
  %exthdr102 = getelementptr inbounds %struct.gbs, %struct.gbs* %gbs, i32 0, i32 15, !dbg !3250
  %28 = load i8*, i8** %exthdr102, align 8, !dbg !3250
  %add.ptr103 = getelementptr inbounds i8, i8* %28, i64 24, !dbg !3254
  call void @writeint(i8* %add.ptr103, i32 65535, i64 2), !dbg !3255
  br label %if.end104

if.end104:                                        ; preds = %if.else101, %if.then89
  %stringofs.2 = phi i64 [ %add100, %if.then89 ], [ %stringofs.1, %if.else101 ], !dbg !3223
  call void @llvm.dbg.value(metadata i64 %stringofs.2, metadata !3067, metadata !DIExpression()), !dbg !3040
  call void @llvm.dbg.value(metadata i64 0, metadata !3256, metadata !DIExpression()), !dbg !3040
  br label %while.body, !dbg !3257

while.body:                                       ; preds = %if.end160, %if.end104
  %stringofs.3 = phi i64 [ %stringofs.2, %if.end104 ], [ %stringofs.5, %if.end160 ], !dbg !3223
  %i.0 = phi i64 [ 0, %if.end104 ], [ %inc, %if.end160 ], !dbg !3223
  call void @llvm.dbg.value(metadata i64 %i.0, metadata !3256, metadata !DIExpression()), !dbg !3040
  call void @llvm.dbg.value(metadata i64 %stringofs.3, metadata !3067, metadata !DIExpression()), !dbg !3040
  br label %while_continue___0, !dbg !3260

while_continue___0:                               ; preds = %while.body
  br label %while_continue, !dbg !3260

while_continue:                                   ; preds = %while_continue___0
  %songs105 = getelementptr inbounds %struct.gbs, %struct.gbs* %gbs, i32 0, i32 2, !dbg !3261
  %29 = load i64, i64* %songs105, align 8, !dbg !3261
  %cmp106 = icmp slt i64 %i.0, %29, !dbg !3264
  br i1 %cmp106, label %if.end109, label %if.then108, !dbg !3265

if.then108:                                       ; preds = %while_continue
  br label %while_break, !dbg !3266

if.end109:                                        ; preds = %while_continue
  %exthdr110 = getelementptr inbounds %struct.gbs, %struct.gbs* %gbs, i32 0, i32 15, !dbg !3268
  %30 = load i8*, i8** %exthdr110, align 8, !dbg !3268
  %mul111 = mul nsw i64 8, %i.0, !dbg !3271
  %add112 = add nsw i64 32, %mul111, !dbg !3272
  %add.ptr113 = getelementptr inbounds i8, i8* %30, i64 %add112, !dbg !3273
  %subsong_info = getelementptr inbounds %struct.gbs, %struct.gbs* %gbs, i32 0, i32 19, !dbg !3274
  %31 = load %struct.gbs_subsong_info*, %struct.gbs_subsong_info** %subsong_info, align 8, !dbg !3274
  %add.ptr114 = getelementptr inbounds %struct.gbs_subsong_info, %struct.gbs_subsong_info* %31, i64 %i.0, !dbg !3275
  %len115 = getelementptr inbounds %struct.gbs_subsong_info, %struct.gbs_subsong_info* %add.ptr114, i32 0, i32 0, !dbg !3276
  %32 = load i32, i32* %len115, align 8, !dbg !3276
  call void @writeint(i8* %add.ptr113, i32 %32, i64 4), !dbg !3277
  %subsong_info116 = getelementptr inbounds %struct.gbs, %struct.gbs* %gbs, i32 0, i32 19, !dbg !3278
  %33 = load %struct.gbs_subsong_info*, %struct.gbs_subsong_info** %subsong_info116, align 8, !dbg !3278
  %add.ptr117 = getelementptr inbounds %struct.gbs_subsong_info, %struct.gbs_subsong_info* %33, i64 %i.0, !dbg !3280
  %title118 = getelementptr inbounds %struct.gbs_subsong_info, %struct.gbs_subsong_info* %add.ptr117, i32 0, i32 1, !dbg !3281
  %34 = load i8*, i8** %title118, align 8, !dbg !3281
  %tobool = icmp ne i8* %34, null, !dbg !3282
  br i1 %tobool, label %if.then119, label %if.else154, !dbg !3283

if.then119:                                       ; preds = %if.end109
  %subsong_info120 = getelementptr inbounds %struct.gbs, %struct.gbs* %gbs, i32 0, i32 19, !dbg !3284
  %35 = load %struct.gbs_subsong_info*, %struct.gbs_subsong_info** %subsong_info120, align 8, !dbg !3284
  %add.ptr121 = getelementptr inbounds %struct.gbs_subsong_info, %struct.gbs_subsong_info* %35, i64 %i.0, !dbg !3288
  %title122 = getelementptr inbounds %struct.gbs_subsong_info, %struct.gbs_subsong_info* %add.ptr121, i32 0, i32 1, !dbg !3289
  %36 = load i8*, i8** %title122, align 8, !dbg !3289
  %call123 = call i32 @strcmp(i8* %36, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.27, i32 0, i32 0)) #8, !dbg !3290
  call void @llvm.dbg.value(metadata i32 %call123, metadata !3291, metadata !DIExpression()), !dbg !3040
  %cmp124 = icmp ne i32 %call123, 0, !dbg !3292
  br i1 %cmp124, label %if.then126, label %if.else147, !dbg !3294

if.then126:                                       ; preds = %if.then119
  %subsong_info127 = getelementptr inbounds %struct.gbs, %struct.gbs* %gbs, i32 0, i32 19, !dbg !3295
  %37 = load %struct.gbs_subsong_info*, %struct.gbs_subsong_info** %subsong_info127, align 8, !dbg !3295
  %add.ptr128 = getelementptr inbounds %struct.gbs_subsong_info, %struct.gbs_subsong_info* %37, i64 %i.0, !dbg !3299
  %title129 = getelementptr inbounds %struct.gbs_subsong_info, %struct.gbs_subsong_info* %add.ptr128, i32 0, i32 1, !dbg !3300
  %38 = load i8*, i8** %title129, align 8, !dbg !3300
  %call130 = call i32 @strlen(i8* %38) #8, !dbg !3301
  call void @llvm.dbg.value(metadata i32 %call130, metadata !3302, metadata !DIExpression()), !dbg !3040
  %add131 = add i32 %call130, 1, !dbg !3303
  %conv132 = zext i32 %add131 to i64, !dbg !3304
  call void @llvm.dbg.value(metadata i64 %conv132, metadata !3163, metadata !DIExpression()), !dbg !3040
  %arraydecay133 = getelementptr inbounds [65536 x i8], [65536 x i8]* %strings, i32 0, i32 0, !dbg !3305
  %add.ptr134 = getelementptr inbounds i8, i8* %arraydecay133, i64 %stringofs.3, !dbg !3307
  %subsong_info135 = getelementptr inbounds %struct.gbs, %struct.gbs* %gbs, i32 0, i32 19, !dbg !3308
  %39 = load %struct.gbs_subsong_info*, %struct.gbs_subsong_info** %subsong_info135, align 8, !dbg !3308
  %add.ptr136 = getelementptr inbounds %struct.gbs_subsong_info, %struct.gbs_subsong_info* %39, i64 %i.0, !dbg !3309
  %title137 = getelementptr inbounds %struct.gbs_subsong_info, %struct.gbs_subsong_info* %add.ptr136, i32 0, i32 1, !dbg !3310
  %40 = load i8*, i8** %title137, align 8, !dbg !3310
  %conv138 = trunc i64 %conv132 to i32, !dbg !3311
  %call139 = call i8* @memcpy(i8* %add.ptr134, i8* %40, i32 %conv138) #11, !dbg !3312
  %exthdr140 = getelementptr inbounds %struct.gbs, %struct.gbs* %gbs, i32 0, i32 15, !dbg !3313
  %41 = load i8*, i8** %exthdr140, align 8, !dbg !3313
  %mul141 = mul nsw i64 8, %i.0, !dbg !3315
  %add142 = add nsw i64 32, %mul141, !dbg !3316
  %add143 = add nsw i64 %add142, 4, !dbg !3317
  %add.ptr144 = getelementptr inbounds i8, i8* %41, i64 %add143, !dbg !3318
  %conv145 = trunc i64 %stringofs.3 to i32, !dbg !3319
  call void @writeint(i8* %add.ptr144, i32 %conv145, i64 2), !dbg !3320
  %add146 = add nsw i64 %stringofs.3, %conv132, !dbg !3321
  call void @llvm.dbg.value(metadata i64 %add146, metadata !3067, metadata !DIExpression()), !dbg !3040
  br label %if.end153, !dbg !3322

if.else147:                                       ; preds = %if.then119
  %exthdr148 = getelementptr inbounds %struct.gbs, %struct.gbs* %gbs, i32 0, i32 15, !dbg !3323
  %42 = load i8*, i8** %exthdr148, align 8, !dbg !3323
  %mul149 = mul nsw i64 8, %i.0, !dbg !3327
  %add150 = add nsw i64 32, %mul149, !dbg !3328
  %add151 = add nsw i64 %add150, 4, !dbg !3329
  %add.ptr152 = getelementptr inbounds i8, i8* %42, i64 %add151, !dbg !3330
  call void @writeint(i8* %add.ptr152, i32 65535, i64 2), !dbg !3331
  br label %if.end153

if.end153:                                        ; preds = %if.else147, %if.then126
  %stringofs.4 = phi i64 [ %add146, %if.then126 ], [ %stringofs.3, %if.else147 ], !dbg !3223
  call void @llvm.dbg.value(metadata i64 %stringofs.4, metadata !3067, metadata !DIExpression()), !dbg !3040
  br label %if.end160, !dbg !3332

if.else154:                                       ; preds = %if.end109
  %exthdr155 = getelementptr inbounds %struct.gbs, %struct.gbs* %gbs, i32 0, i32 15, !dbg !3333
  %43 = load i8*, i8** %exthdr155, align 8, !dbg !3333
  %mul156 = mul nsw i64 8, %i.0, !dbg !3337
  %add157 = add nsw i64 32, %mul156, !dbg !3338
  %add158 = add nsw i64 %add157, 4, !dbg !3339
  %add.ptr159 = getelementptr inbounds i8, i8* %43, i64 %add158, !dbg !3340
  call void @writeint(i8* %add.ptr159, i32 65535, i64 2), !dbg !3341
  br label %if.end160

if.end160:                                        ; preds = %if.else154, %if.end153
  %stringofs.5 = phi i64 [ %stringofs.4, %if.end153 ], [ %stringofs.3, %if.else154 ], !dbg !3223
  call void @llvm.dbg.value(metadata i64 %stringofs.5, metadata !3067, metadata !DIExpression()), !dbg !3040
  %inc = add nsw i64 %i.0, 1, !dbg !3342
  call void @llvm.dbg.value(metadata i64 %inc, metadata !3256, metadata !DIExpression()), !dbg !3040
  br label %while.body, !dbg !3257, !llvm.loop !3343

while_break___0:                                  ; No predecessors!
  br label %while_break, !dbg !3345

while_break:                                      ; preds = %while_break___0, %if.then108
  %buf161 = getelementptr inbounds %struct.gbs, %struct.gbs* %gbs, i32 0, i32 0, !dbg !3346
  %44 = load i8*, i8** %buf161, align 8, !dbg !3346
  %add.ptr162 = getelementptr inbounds i8, i8* %44, i64 %add15, !dbg !3349
  %arraydecay163 = getelementptr inbounds [65536 x i8], [65536 x i8]* %strings, i32 0, i32 0, !dbg !3350
  %conv164 = trunc i64 %stringofs.3 to i32, !dbg !3351
  %call165 = call i8* @memcpy(i8* %add.ptr162, i8* %arraydecay163, i32 %conv164) #11, !dbg !3352
  %add166 = add nsw i64 %add15, %stringofs.3, !dbg !3353
  call void @llvm.dbg.value(metadata i64 %add166, metadata !3070, metadata !DIExpression()), !dbg !3040
  %exthdr167 = getelementptr inbounds %struct.gbs, %struct.gbs* %gbs, i32 0, i32 15, !dbg !3354
  %45 = load i8*, i8** %exthdr167, align 8, !dbg !3354
  %add.ptr168 = getelementptr inbounds i8, i8* %45, i64 4, !dbg !3356
  %add169 = add nsw i64 %add12, %stringofs.3, !dbg !3357
  %sub170 = sub nsw i64 %add169, 8, !dbg !3358
  %conv171 = trunc i64 %sub170 to i32, !dbg !3359
  call void @writeint(i8* %add.ptr168, i32 %conv171, i64 4), !dbg !3360
  %exthdr172 = getelementptr inbounds %struct.gbs, %struct.gbs* %gbs, i32 0, i32 15, !dbg !3361
  %46 = load i8*, i8** %exthdr172, align 8, !dbg !3361
  %add.ptr173 = getelementptr inbounds i8, i8* %46, i64 12, !dbg !3363
  %filesize174 = getelementptr inbounds %struct.gbs, %struct.gbs* %gbs, i32 0, i32 16, !dbg !3364
  %47 = load i32, i32* %filesize174, align 8, !dbg !3364
  call void @writeint(i8* %add.ptr173, i32 %47, i64 4), !dbg !3365
  %buf175 = getelementptr inbounds %struct.gbs, %struct.gbs* %gbs, i32 0, i32 0, !dbg !3366
  %48 = load i8*, i8** %buf175, align 8, !dbg !3366
  %filesize176 = getelementptr inbounds %struct.gbs, %struct.gbs* %gbs, i32 0, i32 16, !dbg !3368
  %49 = load i32, i32* %filesize176, align 8, !dbg !3368
  %call177 = call i64 @gbs_crc32(i64 0, i8* %48, i32 %49), !dbg !3369
  call void @llvm.dbg.value(metadata i64 %call177, metadata !3370, metadata !DIExpression()), !dbg !3040
  %conv178 = trunc i64 %call177 to i32, !dbg !3371
  %crc = getelementptr inbounds %struct.gbs, %struct.gbs* %gbs, i32 0, i32 17, !dbg !3372
  store i32 %conv178, i32* %crc, align 4, !dbg !3373
  %exthdr179 = getelementptr inbounds %struct.gbs, %struct.gbs* %gbs, i32 0, i32 15, !dbg !3374
  %50 = load i8*, i8** %exthdr179, align 8, !dbg !3374
  %add.ptr180 = getelementptr inbounds i8, i8* %50, i64 16, !dbg !3376
  %crc181 = getelementptr inbounds %struct.gbs, %struct.gbs* %gbs, i32 0, i32 17, !dbg !3377
  %51 = load i32, i32* %crc181, align 4, !dbg !3377
  call void @writeint(i8* %add.ptr180, i32 %51, i64 4), !dbg !3378
  %exthdr182 = getelementptr inbounds %struct.gbs, %struct.gbs* %gbs, i32 0, i32 15, !dbg !3379
  %52 = load i8*, i8** %exthdr182, align 8, !dbg !3379
  %add183 = add nsw i64 %add12, %stringofs.3, !dbg !3381
  %conv184 = trunc i64 %add183 to i32, !dbg !3382
  %call185 = call i64 @gbs_crc32(i64 0, i8* %52, i32 %conv184), !dbg !3383
  call void @llvm.dbg.value(metadata i64 %call185, metadata !3384, metadata !DIExpression()), !dbg !3040
  %conv186 = trunc i64 %call185 to i32, !dbg !3385
  call void @llvm.dbg.value(metadata i32 %conv186, metadata !3386, metadata !DIExpression()), !dbg !3040
  %exthdr187 = getelementptr inbounds %struct.gbs, %struct.gbs* %gbs, i32 0, i32 15, !dbg !3387
  %53 = load i8*, i8** %exthdr187, align 8, !dbg !3387
  %add.ptr188 = getelementptr inbounds i8, i8* %53, i64 8, !dbg !3389
  call void @writeint(i8* %add.ptr188, i32 %conv186, i64 4), !dbg !3390
  br label %if.end196, !dbg !3391

if.else189:                                       ; preds = %if.end
  %version = getelementptr inbounds %struct.gbs, %struct.gbs* %gbs, i32 0, i32 1, !dbg !3392
  %54 = load i64, i64* %version, align 8, !dbg !3392
  %cmp190 = icmp eq i64 %54, 2, !dbg !3394
  br i1 %cmp190, label %if.then192, label %if.end195, !dbg !3395

if.then192:                                       ; preds = %if.else189
  %buf193 = getelementptr inbounds %struct.gbs, %struct.gbs* %gbs, i32 0, i32 0, !dbg !3396
  %55 = load i8*, i8** %buf193, align 8, !dbg !3396
  %add.ptr194 = getelementptr inbounds i8, i8* %55, i64 3, !dbg !3398
  store i8 1, i8* %add.ptr194, align 1, !dbg !3399
  br label %if.end195, !dbg !3400

if.end195:                                        ; preds = %if.then192, %if.else189
  br label %if.end196

if.end196:                                        ; preds = %if.end195, %while_break
  %newlen.0 = phi i64 [ %add166, %while_break ], [ %conv, %if.end195 ], !dbg !3190
  call void @llvm.dbg.value(metadata i64 %newlen.0, metadata !3070, metadata !DIExpression()), !dbg !3040
  %conv197 = trunc i64 %conv3 to i32, !dbg !3401
  %buf198 = getelementptr inbounds %struct.gbs, %struct.gbs* %gbs, i32 0, i32 0, !dbg !3404
  %56 = load i8*, i8** %buf198, align 8, !dbg !3404
  %conv199 = trunc i64 %newlen.0 to i32, !dbg !3405
  %call200 = call i32 @write(i32 %conv197, i8* %56, i32 %conv199), !dbg !3406
  %conv201 = trunc i64 %conv3 to i32, !dbg !3407
  %call202 = call i32 @close(i32 %conv201), !dbg !3409
  br label %return, !dbg !3410

return:                                           ; preds = %if.end196, %if.then
  %retval.0 = phi i64 [ 0, %if.then ], [ 1, %if.end196 ], !dbg !3190
  ret i64 %retval.0, !dbg !3411
}

declare i32 @open(i8*, i32, ...) #5

; Function Attrs: nounwind readnone
declare i32* @__errno_location() #3

; Function Attrs: nounwind
declare i8* @strerror(i32) #4

; Function Attrs: nounwind
declare i8* @realloc(i8*, i32) #4

; Function Attrs: noinline nounwind ssp uwtable
define internal void @writeint(i8* %buf___3, i32 %val, i64 %bytes) #0 !dbg !3412 {
entry:
  call void @llvm.dbg.value(metadata i8* %buf___3, metadata !3415, metadata !DIExpression()), !dbg !3416
  call void @llvm.dbg.value(metadata i32 %val, metadata !3417, metadata !DIExpression()), !dbg !3416
  call void @llvm.dbg.value(metadata i64 %bytes, metadata !3418, metadata !DIExpression()), !dbg !3416
  call void @llvm.dbg.value(metadata i64 0, metadata !3419, metadata !DIExpression()), !dbg !3416
  call void @llvm.dbg.value(metadata i64 0, metadata !3420, metadata !DIExpression()), !dbg !3416
  br label %while.body, !dbg !3421

while.body:                                       ; preds = %if.end, %entry
  %shift.0 = phi i64 [ 0, %entry ], [ %add, %if.end ], !dbg !3425
  %i.0 = phi i64 [ 0, %entry ], [ %inc, %if.end ], !dbg !3425
  call void @llvm.dbg.value(metadata i64 %i.0, metadata !3420, metadata !DIExpression()), !dbg !3416
  call void @llvm.dbg.value(metadata i64 %shift.0, metadata !3419, metadata !DIExpression()), !dbg !3416
  br label %while_continue___0, !dbg !3426

while_continue___0:                               ; preds = %while.body
  br label %while_continue, !dbg !3426

while_continue:                                   ; preds = %while_continue___0
  %cmp = icmp slt i64 %i.0, %bytes, !dbg !3427
  br i1 %cmp, label %if.end, label %if.then, !dbg !3430

if.then:                                          ; preds = %while_continue
  br label %while_break, !dbg !3431

if.end:                                           ; preds = %while_continue
  %sh_prom = trunc i64 %shift.0 to i32, !dbg !3433
  %shr = lshr i32 %val, %sh_prom, !dbg !3433
  %and = and i32 %shr, 255, !dbg !3434
  %conv = trunc i32 %and to i8, !dbg !3435
  %add.ptr = getelementptr inbounds i8, i8* %buf___3, i64 %i.0, !dbg !3436
  store i8 %conv, i8* %add.ptr, align 1, !dbg !3437
  %add = add nsw i64 %shift.0, 8, !dbg !3438
  call void @llvm.dbg.value(metadata i64 %add, metadata !3419, metadata !DIExpression()), !dbg !3416
  %inc = add nsw i64 %i.0, 1, !dbg !3439
  call void @llvm.dbg.value(metadata i64 %inc, metadata !3420, metadata !DIExpression()), !dbg !3416
  br label %while.body, !dbg !3421, !llvm.loop !3440

while_break___0:                                  ; No predecessors!
  br label %while_break, !dbg !3442

while_break:                                      ; preds = %while_break___0, %if.then
  ret void, !dbg !3443
}

; Function Attrs: nounwind
declare i8* @strncpy(i8*, i8*, i32) #4

; Function Attrs: nounwind
declare i8* @memcpy(i8*, i8*, i32) #4

declare i32 @write(i32, i8*, i32) #5

declare i32 @close(i32) #5

; Function Attrs: noinline nounwind ssp uwtable
define %struct.gbs* @gbs_open(i8* %name) #0 !dbg !3444 {
entry:
  %st = alloca %struct.stat, align 8
  call void @llvm.dbg.value(metadata i8* %name, metadata !3447, metadata !DIExpression()), !dbg !3448
  call void @llvm.dbg.declare(metadata %struct.stat* %st, metadata !3449, metadata !DIExpression()), !dbg !3483
  call void @llvm.dbg.declare(metadata !666, metadata !3484, metadata !DIExpression()), !dbg !3485
  call void @llvm.dbg.declare(metadata !666, metadata !3486, metadata !DIExpression()), !dbg !3487
  call void @llvm.dbg.declare(metadata !666, metadata !3488, metadata !DIExpression()), !dbg !3489
  call void @llvm.dbg.declare(metadata !666, metadata !3490, metadata !DIExpression()), !dbg !3491
  call void @llvm.dbg.declare(metadata !666, metadata !3492, metadata !DIExpression()), !dbg !3493
  call void @llvm.dbg.declare(metadata !666, metadata !3494, metadata !DIExpression()), !dbg !3495
  call void @llvm.dbg.declare(metadata !666, metadata !3496, metadata !DIExpression()), !dbg !3497
  call void @llvm.dbg.declare(metadata !666, metadata !3498, metadata !DIExpression()), !dbg !3499
  %call = call noalias i8* @malloc(i32 336) #11, !dbg !3500
  call void @llvm.dbg.value(metadata i8* %call, metadata !3504, metadata !DIExpression()), !dbg !3448
  %0 = bitcast i8* %call to %struct.gbs*, !dbg !3505
  call void @llvm.dbg.value(metadata %struct.gbs* %0, metadata !3506, metadata !DIExpression()), !dbg !3448
  call void @llvm.dbg.value(metadata i8* null, metadata !3507, metadata !DIExpression()), !dbg !3448
  call void @llvm.dbg.value(metadata i64 0, metadata !3508, metadata !DIExpression()), !dbg !3448
  %1 = bitcast %struct.gbs* %0 to i8*, !dbg !3509
  %call1 = call i8* @memset(i8* %1, i32 0, i32 336) #11, !dbg !3511
  %silence_timeout = getelementptr inbounds %struct.gbs, %struct.gbs* %0, i32 0, i32 32, !dbg !3512
  store i64 2, i64* %silence_timeout, align 8, !dbg !3513
  %subsong_timeout = getelementptr inbounds %struct.gbs, %struct.gbs* %0, i32 0, i32 31, !dbg !3514
  store i64 120, i64* %subsong_timeout, align 8, !dbg !3515
  %gap = getelementptr inbounds %struct.gbs, %struct.gbs* %0, i32 0, i32 34, !dbg !3516
  store i64 2, i64* %gap, align 8, !dbg !3517
  %fadeout = getelementptr inbounds %struct.gbs, %struct.gbs* %0, i32 0, i32 33, !dbg !3518
  store i64 3, i64* %fadeout, align 8, !dbg !3519
  %call2 = call i32 (i8*, i32, ...) @open(i8* %name, i32 0), !dbg !3520
  call void @llvm.dbg.value(metadata i32 %call2, metadata !3522, metadata !DIExpression()), !dbg !3448
  %conv = sext i32 %call2 to i64, !dbg !3523
  call void @llvm.dbg.value(metadata i64 %conv, metadata !3524, metadata !DIExpression()), !dbg !3448
  %cmp = icmp eq i64 %conv, -1, !dbg !3525
  br i1 %cmp, label %if.then, label %if.end, !dbg !3527

if.then:                                          ; preds = %entry
  %call4 = call i32* @__errno_location() #10, !dbg !3528
  call void @llvm.dbg.value(metadata i32* %call4, metadata !3532, metadata !DIExpression()), !dbg !3448
  %2 = load i32, i32* %call4, align 4, !dbg !3533
  %call5 = call i8* @strerror(i32 %2) #11, !dbg !3535
  call void @llvm.dbg.value(metadata i8* %call5, metadata !3536, metadata !DIExpression()), !dbg !3448
  %call6 = call i8* @_(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.25, i32 0, i32 0)), !dbg !3537
  call void @llvm.dbg.value(metadata i8* %call6, metadata !3539, metadata !DIExpression()), !dbg !3448
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !3540
  %call7 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %3, i8* %call6, i8* %name, i8* %call5), !dbg !3542
  br label %return, !dbg !3543

if.end:                                           ; preds = %entry
  %conv8 = trunc i64 %conv to i32, !dbg !3544
  %call9 = call i32 @fstat(i32 %conv8, %struct.stat* %st) #11, !dbg !3547
  %st_size = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 9, !dbg !3548
  %4 = load i64, i64* %st_size, align 8, !dbg !3548
  %conv10 = trunc i64 %4 to i32, !dbg !3550
  %call11 = call noalias i8* @malloc(i32 %conv10) #11, !dbg !3551
  call void @llvm.dbg.value(metadata i8* %call11, metadata !3552, metadata !DIExpression()), !dbg !3448
  call void @llvm.dbg.value(metadata i8* %call11, metadata !3553, metadata !DIExpression()), !dbg !3448
  %buf = getelementptr inbounds %struct.gbs, %struct.gbs* %0, i32 0, i32 0, !dbg !3554
  store i8* %call11, i8** %buf, align 8, !dbg !3555
  %conv12 = trunc i64 %conv to i32, !dbg !3556
  %st_size13 = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 9, !dbg !3558
  %5 = load i64, i64* %st_size13, align 8, !dbg !3558
  %conv14 = trunc i64 %5 to i32, !dbg !3559
  %call15 = call i32 @read(i32 %conv12, i8* %call11, i32 %conv14), !dbg !3560
  %call16 = call i32 @strncmp(i8* %call11, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.28, i32 0, i32 0), i32 3) #8, !dbg !3561
  call void @llvm.dbg.value(metadata i32 %call16, metadata !3563, metadata !DIExpression()), !dbg !3448
  %cmp17 = icmp ne i32 %call16, 0, !dbg !3564
  br i1 %cmp17, label %if.then19, label %if.end22, !dbg !3566

if.then19:                                        ; preds = %if.end
  %call20 = call i8* @_(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.29, i32 0, i32 0)), !dbg !3567
  call void @llvm.dbg.value(metadata i8* %call20, metadata !3571, metadata !DIExpression()), !dbg !3448
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !3572
  %call21 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %6, i8* %call20, i8* %name), !dbg !3574
  br label %return, !dbg !3575

if.end22:                                         ; preds = %if.end
  %add.ptr = getelementptr inbounds i8, i8* %call11, i64 3, !dbg !3576
  %7 = load i8, i8* %add.ptr, align 1, !dbg !3577
  %conv23 = sext i8 %7 to i64, !dbg !3578
  %version = getelementptr inbounds %struct.gbs, %struct.gbs* %0, i32 0, i32 1, !dbg !3579
  store i64 %conv23, i64* %version, align 8, !dbg !3580
  %version24 = getelementptr inbounds %struct.gbs, %struct.gbs* %0, i32 0, i32 1, !dbg !3581
  %8 = load i64, i64* %version24, align 8, !dbg !3581
  %cmp25 = icmp ne i64 %8, 1, !dbg !3583
  br i1 %cmp25, label %if.then27, label %if.end32, !dbg !3584

if.then27:                                        ; preds = %if.end22
  %call28 = call i8* @_(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.30, i32 0, i32 0)), !dbg !3585
  call void @llvm.dbg.value(metadata i8* %call28, metadata !3589, metadata !DIExpression()), !dbg !3448
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !3590
  %add.ptr29 = getelementptr inbounds i8, i8* %call11, i64 3, !dbg !3592
  %10 = load i8, i8* %add.ptr29, align 1, !dbg !3593
  %conv30 = sext i8 %10 to i32, !dbg !3594
  %call31 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %9, i8* %call28, i32 %conv30), !dbg !3595
  br label %return, !dbg !3596

if.end32:                                         ; preds = %if.end22
  %add.ptr33 = getelementptr inbounds i8, i8* %call11, i64 4, !dbg !3597
  %11 = load i8, i8* %add.ptr33, align 1, !dbg !3599
  %conv34 = sext i8 %11 to i64, !dbg !3600
  %songs = getelementptr inbounds %struct.gbs, %struct.gbs* %0, i32 0, i32 2, !dbg !3601
  store i64 %conv34, i64* %songs, align 8, !dbg !3602
  %add.ptr35 = getelementptr inbounds i8, i8* %call11, i64 5, !dbg !3603
  %12 = load i8, i8* %add.ptr35, align 1, !dbg !3604
  %conv36 = sext i8 %12 to i64, !dbg !3605
  %defaultsong = getelementptr inbounds %struct.gbs, %struct.gbs* %0, i32 0, i32 3, !dbg !3606
  store i64 %conv36, i64* %defaultsong, align 8, !dbg !3607
  %add.ptr37 = getelementptr inbounds i8, i8* %call11, i64 6, !dbg !3608
  %call38 = call i32 @readint(i8* %add.ptr37, i64 2), !dbg !3610
  call void @llvm.dbg.value(metadata i32 %call38, metadata !3611, metadata !DIExpression()), !dbg !3448
  %conv39 = trunc i32 %call38 to i16, !dbg !3612
  %load = getelementptr inbounds %struct.gbs, %struct.gbs* %0, i32 0, i32 4, !dbg !3613
  store i16 %conv39, i16* %load, align 8, !dbg !3614
  %add.ptr40 = getelementptr inbounds i8, i8* %call11, i64 8, !dbg !3615
  %call41 = call i32 @readint(i8* %add.ptr40, i64 2), !dbg !3617
  call void @llvm.dbg.value(metadata i32 %call41, metadata !3618, metadata !DIExpression()), !dbg !3448
  %conv42 = trunc i32 %call41 to i16, !dbg !3619
  %init = getelementptr inbounds %struct.gbs, %struct.gbs* %0, i32 0, i32 5, !dbg !3620
  store i16 %conv42, i16* %init, align 2, !dbg !3621
  %add.ptr43 = getelementptr inbounds i8, i8* %call11, i64 10, !dbg !3622
  %call44 = call i32 @readint(i8* %add.ptr43, i64 2), !dbg !3624
  call void @llvm.dbg.value(metadata i32 %call44, metadata !3625, metadata !DIExpression()), !dbg !3448
  %conv45 = trunc i32 %call44 to i16, !dbg !3626
  %play = getelementptr inbounds %struct.gbs, %struct.gbs* %0, i32 0, i32 6, !dbg !3627
  store i16 %conv45, i16* %play, align 4, !dbg !3628
  %add.ptr46 = getelementptr inbounds i8, i8* %call11, i64 12, !dbg !3629
  %call47 = call i32 @readint(i8* %add.ptr46, i64 2), !dbg !3631
  call void @llvm.dbg.value(metadata i32 %call47, metadata !3632, metadata !DIExpression()), !dbg !3448
  %conv48 = trunc i32 %call47 to i16, !dbg !3633
  %stack = getelementptr inbounds %struct.gbs, %struct.gbs* %0, i32 0, i32 7, !dbg !3634
  store i16 %conv48, i16* %stack, align 2, !dbg !3635
  %add.ptr49 = getelementptr inbounds i8, i8* %call11, i64 14, !dbg !3636
  %13 = load i8, i8* %add.ptr49, align 1, !dbg !3637
  %tma = getelementptr inbounds %struct.gbs, %struct.gbs* %0, i32 0, i32 8, !dbg !3638
  store i8 %13, i8* %tma, align 8, !dbg !3639
  %add.ptr50 = getelementptr inbounds i8, i8* %call11, i64 15, !dbg !3640
  %14 = load i8, i8* %add.ptr50, align 1, !dbg !3641
  %tmc = getelementptr inbounds %struct.gbs, %struct.gbs* %0, i32 0, i32 9, !dbg !3642
  store i8 %14, i8* %tmc, align 1, !dbg !3643
  %v1strings = getelementptr inbounds %struct.gbs, %struct.gbs* %0, i32 0, i32 21, !dbg !3644
  %arraydecay = getelementptr inbounds [99 x i8], [99 x i8]* %v1strings, i32 0, i32 0, !dbg !3646
  %add.ptr51 = getelementptr inbounds i8, i8* %call11, i64 16, !dbg !3647
  %call52 = call i8* @memcpy(i8* %arraydecay, i8* %add.ptr51, i32 32) #11, !dbg !3648
  %v1strings53 = getelementptr inbounds %struct.gbs, %struct.gbs* %0, i32 0, i32 21, !dbg !3649
  %arraydecay54 = getelementptr inbounds [99 x i8], [99 x i8]* %v1strings53, i32 0, i32 0, !dbg !3651
  %add.ptr55 = getelementptr inbounds i8, i8* %arraydecay54, i64 33, !dbg !3652
  %add.ptr56 = getelementptr inbounds i8, i8* %call11, i64 48, !dbg !3653
  %call57 = call i8* @memcpy(i8* %add.ptr55, i8* %add.ptr56, i32 32) #11, !dbg !3654
  %v1strings58 = getelementptr inbounds %struct.gbs, %struct.gbs* %0, i32 0, i32 21, !dbg !3655
  %arraydecay59 = getelementptr inbounds [99 x i8], [99 x i8]* %v1strings58, i32 0, i32 0, !dbg !3657
  %add.ptr60 = getelementptr inbounds i8, i8* %arraydecay59, i64 66, !dbg !3658
  %add.ptr61 = getelementptr inbounds i8, i8* %call11, i64 80, !dbg !3659
  %call62 = call i8* @memcpy(i8* %add.ptr60, i8* %add.ptr61, i32 30) #11, !dbg !3660
  %v1strings63 = getelementptr inbounds %struct.gbs, %struct.gbs* %0, i32 0, i32 21, !dbg !3661
  %arraydecay64 = getelementptr inbounds [99 x i8], [99 x i8]* %v1strings63, i32 0, i32 0, !dbg !3662
  %title = getelementptr inbounds %struct.gbs, %struct.gbs* %0, i32 0, i32 10, !dbg !3663
  store i8* %arraydecay64, i8** %title, align 8, !dbg !3664
  %v1strings65 = getelementptr inbounds %struct.gbs, %struct.gbs* %0, i32 0, i32 21, !dbg !3665
  %arraydecay66 = getelementptr inbounds [99 x i8], [99 x i8]* %v1strings65, i32 0, i32 0, !dbg !3666
  %add.ptr67 = getelementptr inbounds i8, i8* %arraydecay66, i64 33, !dbg !3667
  %author = getelementptr inbounds %struct.gbs, %struct.gbs* %0, i32 0, i32 11, !dbg !3668
  store i8* %add.ptr67, i8** %author, align 8, !dbg !3669
  %v1strings68 = getelementptr inbounds %struct.gbs, %struct.gbs* %0, i32 0, i32 21, !dbg !3670
  %arraydecay69 = getelementptr inbounds [99 x i8], [99 x i8]* %v1strings68, i32 0, i32 0, !dbg !3671
  %add.ptr70 = getelementptr inbounds i8, i8* %arraydecay69, i64 66, !dbg !3672
  %copyright = getelementptr inbounds %struct.gbs, %struct.gbs* %0, i32 0, i32 12, !dbg !3673
  store i8* %add.ptr70, i8** %copyright, align 8, !dbg !3674
  %add.ptr71 = getelementptr inbounds i8, i8* %call11, i64 112, !dbg !3675
  %code = getelementptr inbounds %struct.gbs, %struct.gbs* %0, i32 0, i32 14, !dbg !3676
  store i8* %add.ptr71, i8** %code, align 8, !dbg !3677
  %st_size72 = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 9, !dbg !3678
  %15 = load i64, i64* %st_size72, align 8, !dbg !3678
  %conv73 = trunc i64 %15 to i32, !dbg !3679
  %filesize = getelementptr inbounds %struct.gbs, %struct.gbs* %0, i32 0, i32 16, !dbg !3680
  store i32 %conv73, i32* %filesize, align 8, !dbg !3681
  %songs74 = getelementptr inbounds %struct.gbs, %struct.gbs* %0, i32 0, i32 2, !dbg !3682
  %16 = load i64, i64* %songs74, align 8, !dbg !3682
  %mul = mul i64 %16, 16, !dbg !3684
  %conv75 = trunc i64 %mul to i32, !dbg !3685
  %call76 = call noalias i8* @malloc(i32 %conv75) #11, !dbg !3686
  call void @llvm.dbg.value(metadata i8* %call76, metadata !3687, metadata !DIExpression()), !dbg !3448
  %17 = bitcast i8* %call76 to %struct.gbs_subsong_info*, !dbg !3688
  %subsong_info = getelementptr inbounds %struct.gbs, %struct.gbs* %0, i32 0, i32 19, !dbg !3689
  store %struct.gbs_subsong_info* %17, %struct.gbs_subsong_info** %subsong_info, align 8, !dbg !3690
  %subsong_info77 = getelementptr inbounds %struct.gbs, %struct.gbs* %0, i32 0, i32 19, !dbg !3691
  %18 = load %struct.gbs_subsong_info*, %struct.gbs_subsong_info** %subsong_info77, align 8, !dbg !3691
  %19 = bitcast %struct.gbs_subsong_info* %18 to i8*, !dbg !3693
  %songs78 = getelementptr inbounds %struct.gbs, %struct.gbs* %0, i32 0, i32 2, !dbg !3694
  %20 = load i64, i64* %songs78, align 8, !dbg !3694
  %mul79 = mul i64 %20, 16, !dbg !3695
  %conv80 = trunc i64 %mul79 to i32, !dbg !3696
  %call81 = call i8* @memset(i8* %19, i32 0, i32 %conv80) #11, !dbg !3697
  %add.ptr82 = getelementptr inbounds i8, i8* %call11, i64 110, !dbg !3698
  %21 = load i8, i8* %add.ptr82, align 1, !dbg !3699
  %conv83 = sext i8 %21 to i32, !dbg !3700
  %add.ptr84 = getelementptr inbounds i8, i8* %call11, i64 111, !dbg !3701
  %22 = load i8, i8* %add.ptr84, align 1, !dbg !3702
  %conv85 = sext i8 %22 to i32, !dbg !3703
  %shl = shl i32 %conv85, 8, !dbg !3704
  %add = add nsw i32 %conv83, %shl, !dbg !3705
  %shl86 = shl i32 %add, 4, !dbg !3706
  %conv87 = sext i32 %shl86 to i64, !dbg !3707
  %codelen = getelementptr inbounds %struct.gbs, %struct.gbs* %0, i32 0, i32 13, !dbg !3708
  store i64 %conv87, i64* %codelen, align 8, !dbg !3709
  %codelen88 = getelementptr inbounds %struct.gbs, %struct.gbs* %0, i32 0, i32 13, !dbg !3710
  %23 = load i64, i64* %codelen88, align 8, !dbg !3710
  %add89 = add i64 112, %23, !dbg !3712
  %filesize90 = getelementptr inbounds %struct.gbs, %struct.gbs* %0, i32 0, i32 16, !dbg !3713
  %24 = load i32, i32* %filesize90, align 8, !dbg !3713
  %sub = sub i32 %24, 8, !dbg !3714
  %conv91 = zext i32 %sub to i64, !dbg !3715
  %cmp92 = icmp ult i64 %add89, %conv91, !dbg !3716
  br i1 %cmp92, label %if.then94, label %if.end124, !dbg !3717

if.then94:                                        ; preds = %if.end32
  %codelen95 = getelementptr inbounds %struct.gbs, %struct.gbs* %0, i32 0, i32 13, !dbg !3718
  %25 = load i64, i64* %codelen95, align 8, !dbg !3718
  %add96 = add i64 112, %25, !dbg !3722
  %add.ptr97 = getelementptr inbounds i8, i8* %call11, i64 %add96, !dbg !3723
  %call98 = call i32 @strncmp(i8* %add.ptr97, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.26, i32 0, i32 0), i32 4) #8, !dbg !3724
  call void @llvm.dbg.value(metadata i32 %call98, metadata !3725, metadata !DIExpression()), !dbg !3448
  %cmp99 = icmp eq i32 %call98, 0, !dbg !3726
  br i1 %cmp99, label %if.then101, label %if.end123, !dbg !3728

if.then101:                                       ; preds = %if.then94
  %code102 = getelementptr inbounds %struct.gbs, %struct.gbs* %0, i32 0, i32 14, !dbg !3729
  %26 = load i8*, i8** %code102, align 8, !dbg !3729
  %codelen103 = getelementptr inbounds %struct.gbs, %struct.gbs* %0, i32 0, i32 13, !dbg !3732
  %27 = load i64, i64* %codelen103, align 8, !dbg !3732
  %add.ptr104 = getelementptr inbounds i8, i8* %26, i64 %27, !dbg !3733
  %exthdr = getelementptr inbounds %struct.gbs, %struct.gbs* %0, i32 0, i32 15, !dbg !3734
  store i8* %add.ptr104, i8** %exthdr, align 8, !dbg !3735
  %exthdr105 = getelementptr inbounds %struct.gbs, %struct.gbs* %0, i32 0, i32 15, !dbg !3736
  %28 = load i8*, i8** %exthdr105, align 8, !dbg !3736
  %add.ptr106 = getelementptr inbounds i8, i8* %28, i64 4, !dbg !3738
  %call107 = call i32 @readint(i8* %add.ptr106, i64 4), !dbg !3739
  call void @llvm.dbg.value(metadata i32 %call107, metadata !3740, metadata !DIExpression()), !dbg !3448
  %add108 = add i32 %call107, 8, !dbg !3741
  call void @llvm.dbg.value(metadata i32 %add108, metadata !3742, metadata !DIExpression()), !dbg !3448
  %exthdr109 = getelementptr inbounds %struct.gbs, %struct.gbs* %0, i32 0, i32 15, !dbg !3743
  %29 = load i8*, i8** %exthdr109, align 8, !dbg !3743
  %add.ptr110 = getelementptr inbounds i8, i8* %29, i64 8, !dbg !3745
  %call111 = call i32 @readint(i8* %add.ptr110, i64 4), !dbg !3746
  call void @llvm.dbg.value(metadata i32 %call111, metadata !3747, metadata !DIExpression()), !dbg !3448
  %exthdr112 = getelementptr inbounds %struct.gbs, %struct.gbs* %0, i32 0, i32 15, !dbg !3748
  %30 = load i8*, i8** %exthdr112, align 8, !dbg !3748
  %add.ptr113 = getelementptr inbounds i8, i8* %30, i64 8, !dbg !3750
  call void @writeint(i8* %add.ptr113, i32 0, i64 4), !dbg !3751
  %exthdr114 = getelementptr inbounds %struct.gbs, %struct.gbs* %0, i32 0, i32 15, !dbg !3752
  %31 = load i8*, i8** %exthdr114, align 8, !dbg !3752
  %call115 = call i64 @gbs_crc32(i64 0, i8* %31, i32 %add108), !dbg !3754
  call void @llvm.dbg.value(metadata i64 %call115, metadata !3755, metadata !DIExpression()), !dbg !3448
  %conv116 = trunc i64 %call115 to i32, !dbg !3756
  call void @llvm.dbg.value(metadata i32 %conv116, metadata !3757, metadata !DIExpression()), !dbg !3448
  %cmp117 = icmp eq i32 %conv116, %call111, !dbg !3758
  br i1 %cmp117, label %if.then119, label %if.else, !dbg !3760

if.then119:                                       ; preds = %if.then101
  call void @llvm.dbg.value(metadata i64 1, metadata !3508, metadata !DIExpression()), !dbg !3448
  br label %if.end122, !dbg !3761

if.else:                                          ; preds = %if.then101
  %call120 = call i8* @_(i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.31, i32 0, i32 0)), !dbg !3763
  call void @llvm.dbg.value(metadata i8* %call120, metadata !3767, metadata !DIExpression()), !dbg !3448
  %32 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !3768
  %call121 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %32, i8* %call120, i32 %call111, i32 %conv116), !dbg !3770
  br label %if.end122

if.end122:                                        ; preds = %if.else, %if.then119
  %have_ehdr.0 = phi i64 [ 1, %if.then119 ], [ 0, %if.else ], !dbg !3771
  call void @llvm.dbg.value(metadata i64 %have_ehdr.0, metadata !3508, metadata !DIExpression()), !dbg !3448
  br label %if.end123, !dbg !3772

if.end123:                                        ; preds = %if.end122, %if.then94
  %have_ehdr.1 = phi i64 [ %have_ehdr.0, %if.end122 ], [ 0, %if.then94 ], !dbg !3771
  call void @llvm.dbg.value(metadata i64 %have_ehdr.1, metadata !3508, metadata !DIExpression()), !dbg !3448
  br label %if.end124, !dbg !3773

if.end124:                                        ; preds = %if.end123, %if.end32
  %have_ehdr.2 = phi i64 [ %have_ehdr.1, %if.end123 ], [ 0, %if.end32 ], !dbg !3771
  call void @llvm.dbg.value(metadata i64 %have_ehdr.2, metadata !3508, metadata !DIExpression()), !dbg !3448
  %tobool = icmp ne i64 %have_ehdr.2, 0, !dbg !3774
  br i1 %tobool, label %if.then125, label %if.else134, !dbg !3776

if.then125:                                       ; preds = %if.end124
  %exthdr126 = getelementptr inbounds %struct.gbs, %struct.gbs* %0, i32 0, i32 15, !dbg !3777
  %33 = load i8*, i8** %exthdr126, align 8, !dbg !3777
  call void @llvm.dbg.value(metadata i8* %33, metadata !3507, metadata !DIExpression()), !dbg !3448
  %add.ptr127 = getelementptr inbounds i8, i8* %33, i64 12, !dbg !3780
  %call128 = call i32 @readint(i8* %add.ptr127, i64 4), !dbg !3782
  %filesize129 = getelementptr inbounds %struct.gbs, %struct.gbs* %0, i32 0, i32 16, !dbg !3783
  store i32 %call128, i32* %filesize129, align 8, !dbg !3784
  %add.ptr130 = getelementptr inbounds i8, i8* %33, i64 16, !dbg !3785
  %call131 = call i32 @readint(i8* %add.ptr130, i64 4), !dbg !3787
  %crc132 = getelementptr inbounds %struct.gbs, %struct.gbs* %0, i32 0, i32 17, !dbg !3788
  store i32 %call131, i32* %crc132, align 4, !dbg !3789
  %add.ptr133 = getelementptr inbounds i8, i8* %33, i64 16, !dbg !3790
  call void @writeint(i8* %add.ptr133, i32 0, i64 4), !dbg !3792
  br label %if.end143, !dbg !3793

if.else134:                                       ; preds = %if.end124
  %v1strings135 = getelementptr inbounds %struct.gbs, %struct.gbs* %0, i32 0, i32 21, !dbg !3794
  %arraydecay136 = getelementptr inbounds [99 x i8], [99 x i8]* %v1strings135, i32 0, i32 0, !dbg !3798
  %add.ptr137 = getelementptr inbounds i8, i8* %arraydecay136, i64 66, !dbg !3799
  %add.ptr138 = getelementptr inbounds i8, i8* %call11, i64 80, !dbg !3800
  %call139 = call i8* @memcpy(i8* %add.ptr137, i8* %add.ptr138, i32 32) #11, !dbg !3801
  %st_size140 = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 9, !dbg !3802
  %34 = load i64, i64* %st_size140, align 8, !dbg !3802
  %sub141 = sub nsw i64 %34, 112, !dbg !3803
  %codelen142 = getelementptr inbounds %struct.gbs, %struct.gbs* %0, i32 0, i32 13, !dbg !3804
  store i64 %sub141, i64* %codelen142, align 8, !dbg !3805
  br label %if.end143

if.end143:                                        ; preds = %if.else134, %if.then125
  %buf2.0 = phi i8* [ %33, %if.then125 ], [ null, %if.else134 ], !dbg !3771
  call void @llvm.dbg.value(metadata i8* %buf2.0, metadata !3507, metadata !DIExpression()), !dbg !3448
  %filesize144 = getelementptr inbounds %struct.gbs, %struct.gbs* %0, i32 0, i32 16, !dbg !3806
  %35 = load i32, i32* %filesize144, align 8, !dbg !3806
  %call145 = call i64 @gbs_crc32(i64 0, i8* %call11, i32 %35), !dbg !3809
  call void @llvm.dbg.value(metadata i64 %call145, metadata !3810, metadata !DIExpression()), !dbg !3448
  %conv146 = trunc i64 %call145 to i32, !dbg !3811
  %crcnow = getelementptr inbounds %struct.gbs, %struct.gbs* %0, i32 0, i32 18, !dbg !3812
  store i32 %conv146, i32* %crcnow, align 8, !dbg !3813
  %tobool147 = icmp ne i64 %have_ehdr.2, 0, !dbg !3814
  br i1 %tobool147, label %if.then148, label %if.end225, !dbg !3816

if.then148:                                       ; preds = %if.end143
  %version149 = getelementptr inbounds %struct.gbs, %struct.gbs* %0, i32 0, i32 1, !dbg !3817
  store i64 2, i64* %version149, align 8, !dbg !3820
  %add.ptr150 = getelementptr inbounds i8, i8* %buf2.0, i64 28, !dbg !3821
  %36 = load i8, i8* %add.ptr150, align 1, !dbg !3822
  %conv151 = sext i8 %36 to i64, !dbg !3823
  call void @llvm.dbg.value(metadata i64 %conv151, metadata !3824, metadata !DIExpression()), !dbg !3448
  %exthdr152 = getelementptr inbounds %struct.gbs, %struct.gbs* %0, i32 0, i32 15, !dbg !3825
  %37 = load i8*, i8** %exthdr152, align 8, !dbg !3825
  %add.ptr153 = getelementptr inbounds i8, i8* %37, i64 32, !dbg !3826
  %mul154 = mul nsw i64 8, %conv151, !dbg !3827
  %add.ptr155 = getelementptr inbounds i8, i8* %add.ptr153, i64 %mul154, !dbg !3828
  %strings = getelementptr inbounds %struct.gbs, %struct.gbs* %0, i32 0, i32 20, !dbg !3829
  store i8* %add.ptr155, i8** %strings, align 8, !dbg !3830
  %add.ptr156 = getelementptr inbounds i8, i8* %buf2.0, i64 20, !dbg !3831
  %call157 = call i32 @readint(i8* %add.ptr156, i64 2), !dbg !3833
  call void @llvm.dbg.value(metadata i32 %call157, metadata !3834, metadata !DIExpression()), !dbg !3448
  %conv158 = zext i32 %call157 to i64, !dbg !3835
  call void @llvm.dbg.value(metadata i64 %conv158, metadata !3836, metadata !DIExpression()), !dbg !3448
  %add.ptr159 = getelementptr inbounds i8, i8* %buf2.0, i64 22, !dbg !3837
  %call160 = call i32 @readint(i8* %add.ptr159, i64 2), !dbg !3839
  call void @llvm.dbg.value(metadata i32 %call160, metadata !3840, metadata !DIExpression()), !dbg !3448
  %conv161 = zext i32 %call160 to i64, !dbg !3841
  call void @llvm.dbg.value(metadata i64 %conv161, metadata !3842, metadata !DIExpression()), !dbg !3448
  %add.ptr162 = getelementptr inbounds i8, i8* %buf2.0, i64 24, !dbg !3843
  %call163 = call i32 @readint(i8* %add.ptr162, i64 2), !dbg !3845
  call void @llvm.dbg.value(metadata i32 %call163, metadata !3846, metadata !DIExpression()), !dbg !3448
  %conv164 = zext i32 %call163 to i64, !dbg !3847
  call void @llvm.dbg.value(metadata i64 %conv164, metadata !3848, metadata !DIExpression()), !dbg !3448
  %cmp165 = icmp ne i64 %conv158, 65535, !dbg !3849
  br i1 %cmp165, label %if.then167, label %if.end171, !dbg !3851

if.then167:                                       ; preds = %if.then148
  %strings168 = getelementptr inbounds %struct.gbs, %struct.gbs* %0, i32 0, i32 20, !dbg !3852
  %38 = load i8*, i8** %strings168, align 8, !dbg !3852
  %add.ptr169 = getelementptr inbounds i8, i8* %38, i64 %conv158, !dbg !3854
  %title170 = getelementptr inbounds %struct.gbs, %struct.gbs* %0, i32 0, i32 10, !dbg !3855
  store i8* %add.ptr169, i8** %title170, align 8, !dbg !3856
  br label %if.end171, !dbg !3857

if.end171:                                        ; preds = %if.then167, %if.then148
  %cmp172 = icmp ne i64 %conv161, 65535, !dbg !3858
  br i1 %cmp172, label %if.then174, label %if.end178, !dbg !3860

if.then174:                                       ; preds = %if.end171
  %strings175 = getelementptr inbounds %struct.gbs, %struct.gbs* %0, i32 0, i32 20, !dbg !3861
  %39 = load i8*, i8** %strings175, align 8, !dbg !3861
  %add.ptr176 = getelementptr inbounds i8, i8* %39, i64 %conv161, !dbg !3863
  %author177 = getelementptr inbounds %struct.gbs, %struct.gbs* %0, i32 0, i32 11, !dbg !3864
  store i8* %add.ptr176, i8** %author177, align 8, !dbg !3865
  br label %if.end178, !dbg !3866

if.end178:                                        ; preds = %if.then174, %if.end171
  %cmp179 = icmp ne i64 %conv164, 65535, !dbg !3867
  br i1 %cmp179, label %if.then181, label %if.end185, !dbg !3869

if.then181:                                       ; preds = %if.end178
  %strings182 = getelementptr inbounds %struct.gbs, %struct.gbs* %0, i32 0, i32 20, !dbg !3870
  %40 = load i8*, i8** %strings182, align 8, !dbg !3870
  %add.ptr183 = getelementptr inbounds i8, i8* %40, i64 %conv164, !dbg !3872
  %copyright184 = getelementptr inbounds %struct.gbs, %struct.gbs* %0, i32 0, i32 12, !dbg !3873
  store i8* %add.ptr183, i8** %copyright184, align 8, !dbg !3874
  br label %if.end185, !dbg !3875

if.end185:                                        ; preds = %if.then181, %if.end178
  call void @llvm.dbg.value(metadata i64 0, metadata !3876, metadata !DIExpression()), !dbg !3448
  br label %while.body, !dbg !3877

while.body:                                       ; preds = %if.end214, %if.end185
  %i.0 = phi i64 [ 0, %if.end185 ], [ %inc, %if.end214 ], !dbg !3880
  call void @llvm.dbg.value(metadata i64 %i.0, metadata !3876, metadata !DIExpression()), !dbg !3448
  br label %while_continue___1, !dbg !3881

while_continue___1:                               ; preds = %while.body
  br label %while_continue, !dbg !3881

while_continue:                                   ; preds = %while_continue___1
  %cmp186 = icmp slt i64 %i.0, %conv151, !dbg !3882
  br i1 %cmp186, label %if.end189, label %if.then188, !dbg !3885

if.then188:                                       ; preds = %while_continue
  br label %while_break, !dbg !3886

if.end189:                                        ; preds = %while_continue
  %mul190 = mul nsw i64 8, %i.0, !dbg !3888
  %add191 = add nsw i64 32, %mul190, !dbg !3891
  %add192 = add nsw i64 %add191, 4, !dbg !3892
  %add.ptr193 = getelementptr inbounds i8, i8* %buf2.0, i64 %add192, !dbg !3893
  %call194 = call i32 @readint(i8* %add.ptr193, i64 2), !dbg !3894
  call void @llvm.dbg.value(metadata i32 %call194, metadata !3895, metadata !DIExpression()), !dbg !3448
  %conv195 = zext i32 %call194 to i64, !dbg !3896
  call void @llvm.dbg.value(metadata i64 %conv195, metadata !3897, metadata !DIExpression()), !dbg !3448
  %mul196 = mul nsw i64 8, %i.0, !dbg !3898
  %add197 = add nsw i64 32, %mul196, !dbg !3900
  %add.ptr198 = getelementptr inbounds i8, i8* %buf2.0, i64 %add197, !dbg !3901
  %call199 = call i32 @readint(i8* %add.ptr198, i64 4), !dbg !3902
  %subsong_info200 = getelementptr inbounds %struct.gbs, %struct.gbs* %0, i32 0, i32 19, !dbg !3903
  %41 = load %struct.gbs_subsong_info*, %struct.gbs_subsong_info** %subsong_info200, align 8, !dbg !3903
  %add.ptr201 = getelementptr inbounds %struct.gbs_subsong_info, %struct.gbs_subsong_info* %41, i64 %i.0, !dbg !3904
  %len = getelementptr inbounds %struct.gbs_subsong_info, %struct.gbs_subsong_info* %add.ptr201, i32 0, i32 0, !dbg !3905
  store i32 %call199, i32* %len, align 8, !dbg !3906
  %cmp202 = icmp eq i64 %conv195, 65535, !dbg !3907
  br i1 %cmp202, label %if.then204, label %if.else208, !dbg !3909

if.then204:                                       ; preds = %if.end189
  %subsong_info205 = getelementptr inbounds %struct.gbs, %struct.gbs* %0, i32 0, i32 19, !dbg !3910
  %42 = load %struct.gbs_subsong_info*, %struct.gbs_subsong_info** %subsong_info205, align 8, !dbg !3910
  %add.ptr206 = getelementptr inbounds %struct.gbs_subsong_info, %struct.gbs_subsong_info* %42, i64 %i.0, !dbg !3912
  %title207 = getelementptr inbounds %struct.gbs_subsong_info, %struct.gbs_subsong_info* %add.ptr206, i32 0, i32 1, !dbg !3913
  store i8* null, i8** %title207, align 8, !dbg !3914
  br label %if.end214, !dbg !3915

if.else208:                                       ; preds = %if.end189
  %strings209 = getelementptr inbounds %struct.gbs, %struct.gbs* %0, i32 0, i32 20, !dbg !3916
  %43 = load i8*, i8** %strings209, align 8, !dbg !3916
  %add.ptr210 = getelementptr inbounds i8, i8* %43, i64 %conv195, !dbg !3918
  %subsong_info211 = getelementptr inbounds %struct.gbs, %struct.gbs* %0, i32 0, i32 19, !dbg !3919
  %44 = load %struct.gbs_subsong_info*, %struct.gbs_subsong_info** %subsong_info211, align 8, !dbg !3919
  %add.ptr212 = getelementptr inbounds %struct.gbs_subsong_info, %struct.gbs_subsong_info* %44, i64 %i.0, !dbg !3920
  %title213 = getelementptr inbounds %struct.gbs_subsong_info, %struct.gbs_subsong_info* %add.ptr212, i32 0, i32 1, !dbg !3921
  store i8* %add.ptr210, i8** %title213, align 8, !dbg !3922
  br label %if.end214

if.end214:                                        ; preds = %if.else208, %if.then204
  %inc = add nsw i64 %i.0, 1, !dbg !3923
  call void @llvm.dbg.value(metadata i64 %inc, metadata !3876, metadata !DIExpression()), !dbg !3448
  br label %while.body, !dbg !3877, !llvm.loop !3924

while_break___1:                                  ; No predecessors!
  br label %while_break, !dbg !3926

while_break:                                      ; preds = %while_break___1, %if.then188
  %crc215 = getelementptr inbounds %struct.gbs, %struct.gbs* %0, i32 0, i32 17, !dbg !3927
  %45 = load i32, i32* %crc215, align 4, !dbg !3927
  %crcnow216 = getelementptr inbounds %struct.gbs, %struct.gbs* %0, i32 0, i32 18, !dbg !3929
  %46 = load i32, i32* %crcnow216, align 8, !dbg !3929
  %cmp217 = icmp ne i32 %45, %46, !dbg !3930
  br i1 %cmp217, label %if.then219, label %if.end224, !dbg !3931

if.then219:                                       ; preds = %while_break
  %call220 = call i8* @_(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.32, i32 0, i32 0)), !dbg !3932
  call void @llvm.dbg.value(metadata i8* %call220, metadata !3936, metadata !DIExpression()), !dbg !3448
  %47 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !3937
  %crc221 = getelementptr inbounds %struct.gbs, %struct.gbs* %0, i32 0, i32 17, !dbg !3939
  %48 = load i32, i32* %crc221, align 4, !dbg !3939
  %crcnow222 = getelementptr inbounds %struct.gbs, %struct.gbs* %0, i32 0, i32 18, !dbg !3940
  %49 = load i32, i32* %crcnow222, align 8, !dbg !3940
  %call223 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %47, i8* %call220, i32 %48, i32 %49), !dbg !3941
  br label %if.end224, !dbg !3942

if.end224:                                        ; preds = %if.then219, %while_break
  br label %if.end225, !dbg !3943

if.end225:                                        ; preds = %if.end224, %if.end143
  %codelen226 = getelementptr inbounds %struct.gbs, %struct.gbs* %0, i32 0, i32 13, !dbg !3944
  %50 = load i64, i64* %codelen226, align 8, !dbg !3944
  %load227 = getelementptr inbounds %struct.gbs, %struct.gbs* %0, i32 0, i32 4, !dbg !3946
  %51 = load i16, i16* %load227, align 8, !dbg !3946
  %conv228 = zext i16 %51 to i64, !dbg !3947
  %add229 = add i64 %50, %conv228, !dbg !3948
  %add230 = add i64 %add229, 16383, !dbg !3949
  %and = and i64 %add230, -16384, !dbg !3950
  %romsize = getelementptr inbounds %struct.gbs, %struct.gbs* %0, i32 0, i32 23, !dbg !3951
  store i64 %and, i64* %romsize, align 8, !dbg !3952
  %romsize231 = getelementptr inbounds %struct.gbs, %struct.gbs* %0, i32 0, i32 23, !dbg !3953
  %52 = load i64, i64* %romsize231, align 8, !dbg !3953
  %conv232 = trunc i64 %52 to i32, !dbg !3955
  %call233 = call noalias i8* @calloc(i32 1, i32 %conv232) #11, !dbg !3956
  call void @llvm.dbg.value(metadata i8* %call233, metadata !3957, metadata !DIExpression()), !dbg !3448
  %rom = getelementptr inbounds %struct.gbs, %struct.gbs* %0, i32 0, i32 22, !dbg !3958
  store i8* %call233, i8** %rom, align 8, !dbg !3959
  %rom234 = getelementptr inbounds %struct.gbs, %struct.gbs* %0, i32 0, i32 22, !dbg !3960
  %53 = load i8*, i8** %rom234, align 8, !dbg !3960
  %load235 = getelementptr inbounds %struct.gbs, %struct.gbs* %0, i32 0, i32 4, !dbg !3962
  %54 = load i16, i16* %load235, align 8, !dbg !3962
  %conv236 = zext i16 %54 to i32, !dbg !3963
  %sub237 = sub nsw i32 %conv236, 112, !dbg !3964
  %idx.ext = sext i32 %sub237 to i64, !dbg !3965
  %add.ptr238 = getelementptr inbounds i8, i8* %53, i64 %idx.ext, !dbg !3965
  %codelen239 = getelementptr inbounds %struct.gbs, %struct.gbs* %0, i32 0, i32 13, !dbg !3966
  %55 = load i64, i64* %codelen239, align 8, !dbg !3966
  %add240 = add i64 112, %55, !dbg !3967
  %conv241 = trunc i64 %add240 to i32, !dbg !3968
  %call242 = call i8* @memcpy(i8* %add.ptr238, i8* %call11, i32 %conv241) #11, !dbg !3969
  %rom243 = getelementptr inbounds %struct.gbs, %struct.gbs* %0, i32 0, i32 22, !dbg !3970
  %56 = load i8*, i8** %rom243, align 8, !dbg !3970
  %add.ptr244 = getelementptr inbounds i8, i8* %56, i64 80, !dbg !3972
  %call245 = call i8* @memcpy(i8* %add.ptr244, i8* getelementptr inbounds ([127 x i8], [127 x i8]* @playercode, i32 0, i32 0), i32 127) #11, !dbg !3973
  call void @llvm.dbg.value(metadata i64 0, metadata !3876, metadata !DIExpression()), !dbg !3448
  br label %while.body246, !dbg !3974

while.body246:                                    ; preds = %if.end250, %if.end225
  %i.1 = phi i64 [ 0, %if.end225 ], [ %inc269, %if.end250 ], !dbg !3771
  call void @llvm.dbg.value(metadata i64 %i.1, metadata !3876, metadata !DIExpression()), !dbg !3448
  br label %while_continue___2, !dbg !3977

while_continue___2:                               ; preds = %while.body246
  br label %while_continue___0, !dbg !3977

while_continue___0:                               ; preds = %while_continue___2
  %cmp247 = icmp slt i64 %i.1, 8, !dbg !3978
  br i1 %cmp247, label %if.end250, label %if.then249, !dbg !3981

if.then249:                                       ; preds = %while_continue___0
  br label %while_break___0, !dbg !3982

if.end250:                                        ; preds = %while_continue___0
  %load251 = getelementptr inbounds %struct.gbs, %struct.gbs* %0, i32 0, i32 4, !dbg !3984
  %57 = load i16, i16* %load251, align 8, !dbg !3984
  %conv252 = zext i16 %57 to i64, !dbg !3985
  %mul253 = mul nsw i64 8, %i.1, !dbg !3986
  %add254 = add nsw i64 %conv252, %mul253, !dbg !3987
  call void @llvm.dbg.value(metadata i64 %add254, metadata !3988, metadata !DIExpression()), !dbg !3448
  %rom255 = getelementptr inbounds %struct.gbs, %struct.gbs* %0, i32 0, i32 22, !dbg !3989
  %58 = load i8*, i8** %rom255, align 8, !dbg !3989
  %mul256 = mul nsw i64 8, %i.1, !dbg !3990
  %add.ptr257 = getelementptr inbounds i8, i8* %58, i64 %mul256, !dbg !3991
  store i8 -61, i8* %add.ptr257, align 1, !dbg !3992
  %and258 = and i64 %add254, 255, !dbg !3993
  %conv259 = trunc i64 %and258 to i8, !dbg !3994
  %rom260 = getelementptr inbounds %struct.gbs, %struct.gbs* %0, i32 0, i32 22, !dbg !3995
  %59 = load i8*, i8** %rom260, align 8, !dbg !3995
  %mul261 = mul nsw i64 8, %i.1, !dbg !3996
  %add262 = add nsw i64 %mul261, 1, !dbg !3997
  %add.ptr263 = getelementptr inbounds i8, i8* %59, i64 %add262, !dbg !3998
  store i8 %conv259, i8* %add.ptr263, align 1, !dbg !3999
  %shr = ashr i64 %add254, 8, !dbg !4000
  %conv264 = trunc i64 %shr to i8, !dbg !4001
  %rom265 = getelementptr inbounds %struct.gbs, %struct.gbs* %0, i32 0, i32 22, !dbg !4002
  %60 = load i8*, i8** %rom265, align 8, !dbg !4002
  %mul266 = mul nsw i64 8, %i.1, !dbg !4003
  %add267 = add nsw i64 %mul266, 2, !dbg !4004
  %add.ptr268 = getelementptr inbounds i8, i8* %60, i64 %add267, !dbg !4005
  store i8 %conv264, i8* %add.ptr268, align 1, !dbg !4006
  %inc269 = add nsw i64 %i.1, 1, !dbg !4007
  call void @llvm.dbg.value(metadata i64 %inc269, metadata !3876, metadata !DIExpression()), !dbg !3448
  br label %while.body246, !dbg !3974, !llvm.loop !4008

while_break___2:                                  ; No predecessors!
  br label %while_break___0, !dbg !4010

while_break___0:                                  ; preds = %while_break___2, %if.then249
  %rom270 = getelementptr inbounds %struct.gbs, %struct.gbs* %0, i32 0, i32 22, !dbg !4011
  %61 = load i8*, i8** %rom270, align 8, !dbg !4011
  %add.ptr271 = getelementptr inbounds i8, i8* %61, i64 64, !dbg !4013
  store i8 -55, i8* %add.ptr271, align 1, !dbg !4014
  %rom272 = getelementptr inbounds %struct.gbs, %struct.gbs* %0, i32 0, i32 22, !dbg !4015
  %62 = load i8*, i8** %rom272, align 8, !dbg !4015
  %add.ptr273 = getelementptr inbounds i8, i8* %62, i64 72, !dbg !4016
  store i8 -55, i8* %add.ptr273, align 1, !dbg !4017
  %conv274 = trunc i64 %conv to i32, !dbg !4018
  %call275 = call i32 @close(i32 %conv274), !dbg !4020
  br label %return, !dbg !4021

return:                                           ; preds = %while_break___0, %if.then27, %if.then19, %if.then
  %retval.0 = phi %struct.gbs* [ null, %if.then ], [ null, %if.then19 ], [ null, %if.then27 ], [ %0, %while_break___0 ], !dbg !3771
  ret %struct.gbs* %retval.0, !dbg !4022
}

; Function Attrs: nounwind
declare i32 @fstat(i32, %struct.stat*) #4

declare i32 @read(i32, i8*, i32) #5

; Function Attrs: nounwind readonly
declare i32 @strncmp(i8*, i8*, i32) #2

; Function Attrs: noinline nounwind ssp uwtable
define internal i32 @readint(i8* %buf___3, i64 %bytes) #0 !dbg !4023 {
entry:
  call void @llvm.dbg.value(metadata i8* %buf___3, metadata !4026, metadata !DIExpression()), !dbg !4027
  call void @llvm.dbg.value(metadata i64 %bytes, metadata !4028, metadata !DIExpression()), !dbg !4027
  call void @llvm.dbg.value(metadata i64 0, metadata !4029, metadata !DIExpression()), !dbg !4027
  call void @llvm.dbg.value(metadata i32 0, metadata !4030, metadata !DIExpression()), !dbg !4027
  call void @llvm.dbg.value(metadata i64 0, metadata !4031, metadata !DIExpression()), !dbg !4027
  br label %while.body, !dbg !4032

while.body:                                       ; preds = %if.end, %entry
  %i.0 = phi i64 [ 0, %entry ], [ %inc, %if.end ], !dbg !4036
  %shift.0 = phi i64 [ 0, %entry ], [ %add, %if.end ], !dbg !4036
  %res.0 = phi i32 [ 0, %entry ], [ %or, %if.end ], !dbg !4036
  call void @llvm.dbg.value(metadata i32 %res.0, metadata !4030, metadata !DIExpression()), !dbg !4027
  call void @llvm.dbg.value(metadata i64 %shift.0, metadata !4029, metadata !DIExpression()), !dbg !4027
  call void @llvm.dbg.value(metadata i64 %i.0, metadata !4031, metadata !DIExpression()), !dbg !4027
  br label %while_continue___0, !dbg !4037

while_continue___0:                               ; preds = %while.body
  br label %while_continue, !dbg !4037

while_continue:                                   ; preds = %while_continue___0
  %cmp = icmp slt i64 %i.0, %bytes, !dbg !4038
  br i1 %cmp, label %if.end, label %if.then, !dbg !4041

if.then:                                          ; preds = %while_continue
  br label %while_break, !dbg !4042

if.end:                                           ; preds = %while_continue
  %add.ptr = getelementptr inbounds i8, i8* %buf___3, i64 %i.0, !dbg !4044
  %0 = load i8, i8* %add.ptr, align 1, !dbg !4045
  %conv = zext i8 %0 to i32, !dbg !4046
  %sh_prom = trunc i64 %shift.0 to i32, !dbg !4047
  %shl = shl i32 %conv, %sh_prom, !dbg !4047
  %or = or i32 %res.0, %shl, !dbg !4048
  call void @llvm.dbg.value(metadata i32 %or, metadata !4030, metadata !DIExpression()), !dbg !4027
  %add = add nsw i64 %shift.0, 8, !dbg !4049
  call void @llvm.dbg.value(metadata i64 %add, metadata !4029, metadata !DIExpression()), !dbg !4027
  %inc = add nsw i64 %i.0, 1, !dbg !4050
  call void @llvm.dbg.value(metadata i64 %inc, metadata !4031, metadata !DIExpression()), !dbg !4027
  br label %while.body, !dbg !4032, !llvm.loop !4051

while_break___0:                                  ; No predecessors!
  br label %while_break, !dbg !4053

while_break:                                      ; preds = %while_break___0, %if.then
  ret i32 %res.0, !dbg !4054
}

; Function Attrs: nounwind
declare noalias i8* @calloc(i32, i32) #4

; Function Attrs: noinline nounwind ssp uwtable
define void @gbhw_setcallback(void (%struct.gbhw_buffer*, i8*)* %fn, i8* %priv) #0 !dbg !4055 {
entry:
  call void @llvm.dbg.value(metadata void (%struct.gbhw_buffer*, i8*)* %fn, metadata !4058, metadata !DIExpression()), !dbg !4059
  call void @llvm.dbg.value(metadata i8* %priv, metadata !4060, metadata !DIExpression()), !dbg !4059
  store void (%struct.gbhw_buffer*, i8*)* %fn, void (%struct.gbhw_buffer*, i8*)** @callback, align 8, !dbg !4061
  store i8* %priv, i8** @callbackpriv, align 8, !dbg !4063
  ret void, !dbg !4064
}

; Function Attrs: noinline nounwind ssp uwtable
define void @gbhw_setiocallback(void (i64, i32, i8, i8*)* %fn, i8* %priv) #0 !dbg !4065 {
entry:
  call void @llvm.dbg.value(metadata void (i64, i32, i8, i8*)* %fn, metadata !4068, metadata !DIExpression()), !dbg !4069
  call void @llvm.dbg.value(metadata i8* %priv, metadata !4070, metadata !DIExpression()), !dbg !4069
  store void (i64, i32, i8, i8*)* %fn, void (i64, i32, i8, i8*)** @iocallback, align 8, !dbg !4071
  store i8* %priv, i8** @iocallback_priv, align 8, !dbg !4073
  ret void, !dbg !4074
}

; Function Attrs: noinline nounwind ssp uwtable
define void @gbhw_setbuffer(%struct.gbhw_buffer* %buffer) #0 !dbg !4075 {
entry:
  call void @llvm.dbg.value(metadata %struct.gbhw_buffer* %buffer, metadata !4078, metadata !DIExpression()), !dbg !4079
  call void @llvm.dbg.declare(metadata !666, metadata !4080, metadata !DIExpression()), !dbg !4081
  call void @llvm.dbg.declare(metadata !666, metadata !4082, metadata !DIExpression()), !dbg !4083
  store %struct.gbhw_buffer* %buffer, %struct.gbhw_buffer** @soundbuf, align 8, !dbg !4084
  %0 = load %struct.gbhw_buffer*, %struct.gbhw_buffer** @soundbuf, align 8, !dbg !4086
  %bytes = getelementptr inbounds %struct.gbhw_buffer, %struct.gbhw_buffer* %0, i32 0, i32 4, !dbg !4087
  %1 = load i64, i64* %bytes, align 8, !dbg !4087
  %div = sdiv i64 %1, 4, !dbg !4088
  %2 = load %struct.gbhw_buffer*, %struct.gbhw_buffer** @soundbuf, align 8, !dbg !4089
  %samples = getelementptr inbounds %struct.gbhw_buffer, %struct.gbhw_buffer* %2, i32 0, i32 5, !dbg !4090
  store i64 %div, i64* %samples, align 8, !dbg !4091
  %3 = load %struct.gbhw_buffer*, %struct.gbhw_buffer** @impbuf, align 8, !dbg !4092
  %tobool = icmp ne %struct.gbhw_buffer* %3, null, !dbg !4092
  br i1 %tobool, label %if.then, label %if.end, !dbg !4094

if.then:                                          ; preds = %entry
  %4 = load %struct.gbhw_buffer*, %struct.gbhw_buffer** @impbuf, align 8, !dbg !4095
  %5 = bitcast %struct.gbhw_buffer* %4 to i8*, !dbg !4099
  call void @free(i8* %5) #11, !dbg !4100
  br label %if.end, !dbg !4101

if.end:                                           ; preds = %if.then, %entry
  %6 = load %struct.gbhw_buffer*, %struct.gbhw_buffer** @soundbuf, align 8, !dbg !4102
  %samples1 = getelementptr inbounds %struct.gbhw_buffer, %struct.gbhw_buffer* %6, i32 0, i32 5, !dbg !4105
  %7 = load i64, i64* %samples1, align 8, !dbg !4105
  %8 = load i64, i64* @impulse_w_shift, align 8, !dbg !4106
  %sh_prom = trunc i64 %8 to i32, !dbg !4107
  %shl = shl i32 1, %sh_prom, !dbg !4107
  %conv = sext i32 %shl to i64, !dbg !4108
  %add = add nsw i64 %7, %conv, !dbg !4109
  %add2 = add nsw i64 %add, 1, !dbg !4110
  %mul = mul nsw i64 %add2, 4, !dbg !4111
  %add3 = add i64 56, %mul, !dbg !4112
  %conv4 = trunc i64 %add3 to i32, !dbg !4113
  %call = call noalias i8* @malloc(i32 %conv4) #11, !dbg !4114
  call void @llvm.dbg.value(metadata i8* %call, metadata !4115, metadata !DIExpression()), !dbg !4079
  %9 = bitcast i8* %call to %struct.gbhw_buffer*, !dbg !4116
  store %struct.gbhw_buffer* %9, %struct.gbhw_buffer** @impbuf, align 8, !dbg !4117
  %10 = load %struct.gbhw_buffer*, %struct.gbhw_buffer** @impbuf, align 8, !dbg !4118
  %11 = ptrtoint %struct.gbhw_buffer* %10 to i64, !dbg !4120
  %cmp = icmp eq i64 %11, 0, !dbg !4121
  br i1 %cmp, label %if.then6, label %if.end9, !dbg !4122

if.then6:                                         ; preds = %if.end
  %call7 = call i8* @_(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.33, i32 0, i32 0)), !dbg !4123
  call void @llvm.dbg.value(metadata i8* %call7, metadata !4127, metadata !DIExpression()), !dbg !4079
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !4128
  %call8 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %12, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.34, i32 0, i32 0), i8* %call7), !dbg !4130
  br label %return, !dbg !4131

if.end9:                                          ; preds = %if.end
  %13 = load %struct.gbhw_buffer*, %struct.gbhw_buffer** @impbuf, align 8, !dbg !4132
  %14 = bitcast %struct.gbhw_buffer* %13 to i8*, !dbg !4135
  %call10 = call i8* @memset(i8* %14, i32 0, i32 56) #11, !dbg !4136
  %15 = load %struct.gbhw_buffer*, %struct.gbhw_buffer** @impbuf, align 8, !dbg !4137
  %add.ptr = getelementptr inbounds %struct.gbhw_buffer, %struct.gbhw_buffer* %15, i64 1, !dbg !4138
  %16 = bitcast %struct.gbhw_buffer* %add.ptr to i8*, !dbg !4139
  %17 = bitcast i8* %16 to i16*, !dbg !4140
  %18 = load %struct.gbhw_buffer*, %struct.gbhw_buffer** @impbuf, align 8, !dbg !4141
  %data = getelementptr inbounds %struct.gbhw_buffer, %struct.gbhw_buffer* %18, i32 0, i32 0, !dbg !4142
  store i16* %17, i16** %data, align 8, !dbg !4143
  %19 = load %struct.gbhw_buffer*, %struct.gbhw_buffer** @soundbuf, align 8, !dbg !4144
  %samples11 = getelementptr inbounds %struct.gbhw_buffer, %struct.gbhw_buffer* %19, i32 0, i32 5, !dbg !4145
  %20 = load i64, i64* %samples11, align 8, !dbg !4145
  %21 = load i64, i64* @impulse_w_shift, align 8, !dbg !4146
  %sh_prom12 = trunc i64 %21 to i32, !dbg !4147
  %shl13 = shl i32 1, %sh_prom12, !dbg !4147
  %conv14 = sext i32 %shl13 to i64, !dbg !4148
  %add15 = add nsw i64 %20, %conv14, !dbg !4149
  %add16 = add nsw i64 %add15, 1, !dbg !4150
  %22 = load %struct.gbhw_buffer*, %struct.gbhw_buffer** @impbuf, align 8, !dbg !4151
  %samples17 = getelementptr inbounds %struct.gbhw_buffer, %struct.gbhw_buffer* %22, i32 0, i32 5, !dbg !4152
  store i64 %add16, i64* %samples17, align 8, !dbg !4153
  %23 = load %struct.gbhw_buffer*, %struct.gbhw_buffer** @impbuf, align 8, !dbg !4154
  %samples18 = getelementptr inbounds %struct.gbhw_buffer, %struct.gbhw_buffer* %23, i32 0, i32 5, !dbg !4155
  %24 = load i64, i64* %samples18, align 8, !dbg !4155
  %mul19 = mul nsw i64 %24, 4, !dbg !4156
  %25 = load %struct.gbhw_buffer*, %struct.gbhw_buffer** @impbuf, align 8, !dbg !4157
  %bytes20 = getelementptr inbounds %struct.gbhw_buffer, %struct.gbhw_buffer* %25, i32 0, i32 4, !dbg !4158
  store i64 %mul19, i64* %bytes20, align 8, !dbg !4159
  %26 = load %struct.gbhw_buffer*, %struct.gbhw_buffer** @impbuf, align 8, !dbg !4160
  call void @gbhw_impbuf_reset(%struct.gbhw_buffer* %26), !dbg !4162
  br label %return, !dbg !4163

return:                                           ; preds = %if.end9, %if.then6
  ret void, !dbg !4164
}

; Function Attrs: noinline nounwind ssp uwtable
define internal void @gbhw_impbuf_reset(%struct.gbhw_buffer* %impbuf___3) #0 !dbg !4165 {
entry:
  call void @llvm.dbg.value(metadata %struct.gbhw_buffer* %impbuf___3, metadata !4166, metadata !DIExpression()), !dbg !4167
  call void @llvm.dbg.declare(metadata !666, metadata !4168, metadata !DIExpression()), !dbg !4169
  call void @llvm.dbg.declare(metadata !666, metadata !4170, metadata !DIExpression()), !dbg !4171
  call void @llvm.dbg.declare(metadata !666, metadata !4172, metadata !DIExpression()), !dbg !4173
  %0 = load i64, i64* @sound_div_tc, align 8, !dbg !4174
  %cmp = icmp ne i64 %0, 0, !dbg !4177
  br i1 %cmp, label %if.end, label %if.then, !dbg !4178

if.then:                                          ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.63, i32 0, i32 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.64, i32 0, i32 0), i32 557, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.65, i32 0, i32 0)) #9, !dbg !4179
  unreachable, !dbg !4179

if.end:                                           ; preds = %entry
  %1 = load i64, i64* @sound_div_tc, align 8, !dbg !4183
  %2 = load i64, i64* @impulse_w_shift, align 8, !dbg !4185
  %sh_prom = trunc i64 %2 to i32, !dbg !4186
  %shl = shl i32 1, %sh_prom, !dbg !4186
  %conv = sext i32 %shl to i64, !dbg !4187
  %mul = mul nsw i64 %1, %conv, !dbg !4188
  %div = sdiv i64 %mul, 2, !dbg !4189
  %div1 = sdiv i64 %div, 65536, !dbg !4190
  %cycles = getelementptr inbounds %struct.gbhw_buffer, %struct.gbhw_buffer* %impbuf___3, i32 0, i32 6, !dbg !4191
  store i64 %div1, i64* %cycles, align 8, !dbg !4192
  %l_lvl = getelementptr inbounds %struct.gbhw_buffer, %struct.gbhw_buffer* %impbuf___3, i32 0, i32 2, !dbg !4193
  store i64 0, i64* %l_lvl, align 8, !dbg !4194
  %r_lvl = getelementptr inbounds %struct.gbhw_buffer, %struct.gbhw_buffer* %impbuf___3, i32 0, i32 3, !dbg !4195
  store i64 0, i64* %r_lvl, align 8, !dbg !4196
  %data = getelementptr inbounds %struct.gbhw_buffer, %struct.gbhw_buffer* %impbuf___3, i32 0, i32 0, !dbg !4197
  %3 = load i16*, i16** %data, align 8, !dbg !4197
  %4 = bitcast i16* %3 to i8*, !dbg !4199
  %bytes = getelementptr inbounds %struct.gbhw_buffer, %struct.gbhw_buffer* %impbuf___3, i32 0, i32 4, !dbg !4200
  %5 = load i64, i64* %bytes, align 8, !dbg !4200
  %conv2 = trunc i64 %5 to i32, !dbg !4201
  %call = call i8* @memset(i8* %4, i32 0, i32 %conv2) #11, !dbg !4202
  ret void, !dbg !4203
}

; Function Attrs: noinline nounwind ssp uwtable
define void @gbhw_setrate(i64 %rate___1) #0 !dbg !4204 {
entry:
  call void @llvm.dbg.value(metadata i64 %rate___1, metadata !4205, metadata !DIExpression()), !dbg !4206
  %div = sdiv i64 274877906944, %rate___1, !dbg !4207
  store i64 %div, i64* @sound_div_tc, align 8, !dbg !4209
  ret void, !dbg !4210
}

; Function Attrs: noinline nounwind ssp uwtable
define internal void @rom_put(i32 %addr, i8 zeroext %val) #0 !dbg !4211 {
entry:
  call void @llvm.dbg.value(metadata i32 %addr, metadata !4212, metadata !DIExpression()), !dbg !4213
  call void @llvm.dbg.value(metadata i8 %val, metadata !4214, metadata !DIExpression()), !dbg !4213
  call void @llvm.dbg.declare(metadata !666, metadata !4215, metadata !DIExpression()), !dbg !4216
  %cmp = icmp uge i32 %addr, 8192, !dbg !4217
  br i1 %cmp, label %if.then, label %if.end13, !dbg !4220

if.then:                                          ; preds = %entry
  %cmp1 = icmp ule i32 %addr, 16383, !dbg !4221
  br i1 %cmp1, label %if.then2, label %if.end12, !dbg !4224

if.then2:                                         ; preds = %if.then
  %conv = zext i8 %val to i32, !dbg !4225
  %and = and i32 %conv, 31, !dbg !4227
  %conv3 = trunc i32 %and to i8, !dbg !4228
  call void @llvm.dbg.value(metadata i8 %conv3, metadata !4214, metadata !DIExpression()), !dbg !4213
  %conv4 = zext i8 %conv3 to i32, !dbg !4229
  %conv5 = zext i8 %conv3 to i32, !dbg !4230
  %cmp6 = icmp eq i32 %conv5, 0, !dbg !4231
  %conv7 = zext i1 %cmp6 to i32, !dbg !4231
  %add = add nsw i32 %conv4, %conv7, !dbg !4232
  %conv8 = sext i32 %add to i64, !dbg !4233
  store i64 %conv8, i64* @rombank, align 8, !dbg !4234
  %0 = load i64, i64* @rombank, align 8, !dbg !4235
  %1 = load i64, i64* @lastbank, align 8, !dbg !4237
  %cmp9 = icmp sgt i64 %0, %1, !dbg !4238
  br i1 %cmp9, label %if.then11, label %if.end, !dbg !4239

if.then11:                                        ; preds = %if.then2
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !4240
  %3 = load i64, i64* @rombank, align 8, !dbg !4244
  %4 = load i64, i64* @lastbank, align 8, !dbg !4245
  %call = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %2, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.66, i32 0, i32 0), i64 %3, i64 %4), !dbg !4246
  %5 = load i64, i64* @lastbank, align 8, !dbg !4247
  store i64 %5, i64* @rombank, align 8, !dbg !4248
  br label %if.end, !dbg !4249

if.end:                                           ; preds = %if.then11, %if.then2
  br label %if.end12, !dbg !4250

if.end12:                                         ; preds = %if.end, %if.then
  br label %if.end13, !dbg !4251

if.end13:                                         ; preds = %if.end12, %entry
  ret void, !dbg !4252
}

; Function Attrs: noinline nounwind ssp uwtable
define internal i32 @rom_get(i32 %addr) #0 !dbg !4253 {
entry:
  call void @llvm.dbg.value(metadata i32 %addr, metadata !4254, metadata !DIExpression()), !dbg !4255
  %0 = load i8*, i8** @rom, align 8, !dbg !4256
  %and = and i32 %addr, 16383, !dbg !4258
  %idx.ext = zext i32 %and to i64, !dbg !4259
  %add.ptr = getelementptr inbounds i8, i8* %0, i64 %idx.ext, !dbg !4259
  %1 = load i8, i8* %add.ptr, align 1, !dbg !4260
  %conv = zext i8 %1 to i32, !dbg !4261
  ret i32 %conv, !dbg !4262
}

; Function Attrs: noinline nounwind ssp uwtable
define internal i32 @rombank_get(i32 %addr) #0 !dbg !4263 {
entry:
  call void @llvm.dbg.value(metadata i32 %addr, metadata !4264, metadata !DIExpression()), !dbg !4265
  %0 = load i8*, i8** @rom, align 8, !dbg !4266
  %and = and i32 %addr, 16383, !dbg !4268
  %conv = zext i32 %and to i64, !dbg !4269
  %1 = load i64, i64* @rombank, align 8, !dbg !4270
  %mul = mul nsw i64 16384, %1, !dbg !4271
  %add = add nsw i64 %conv, %mul, !dbg !4272
  %add.ptr = getelementptr inbounds i8, i8* %0, i64 %add, !dbg !4273
  %2 = load i8, i8* %add.ptr, align 1, !dbg !4274
  %conv1 = zext i8 %2 to i32, !dbg !4275
  ret i32 %conv1, !dbg !4276
}

; Function Attrs: noinline nounwind ssp uwtable
define internal void @extram_put(i32 %addr, i8 zeroext %val) #0 !dbg !4277 {
entry:
  call void @llvm.dbg.value(metadata i32 %addr, metadata !4278, metadata !DIExpression()), !dbg !4279
  call void @llvm.dbg.value(metadata i8 %val, metadata !4280, metadata !DIExpression()), !dbg !4279
  %and = and i32 %addr, 8191, !dbg !4281
  %idxprom = zext i32 %and to i64, !dbg !4283
  %arrayidx = getelementptr inbounds [8192 x i8], [8192 x i8]* @extram, i64 0, i64 %idxprom, !dbg !4283
  store i8 %val, i8* %arrayidx, align 1, !dbg !4284
  ret void, !dbg !4285
}

; Function Attrs: noinline nounwind ssp uwtable
define internal i32 @extram_get(i32 %addr) #0 !dbg !4286 {
entry:
  call void @llvm.dbg.value(metadata i32 %addr, metadata !4287, metadata !DIExpression()), !dbg !4288
  %and = and i32 %addr, 8191, !dbg !4289
  %idxprom = zext i32 %and to i64, !dbg !4291
  %arrayidx = getelementptr inbounds [8192 x i8], [8192 x i8]* @extram, i64 0, i64 %idxprom, !dbg !4291
  %0 = load i8, i8* %arrayidx, align 1, !dbg !4291
  %conv = zext i8 %0 to i32, !dbg !4292
  ret i32 %conv, !dbg !4293
}

; Function Attrs: noinline nounwind ssp uwtable
define internal void @intram_put(i32 %addr, i8 zeroext %val) #0 !dbg !4294 {
entry:
  call void @llvm.dbg.value(metadata i32 %addr, metadata !4295, metadata !DIExpression()), !dbg !4296
  call void @llvm.dbg.value(metadata i8 %val, metadata !4297, metadata !DIExpression()), !dbg !4296
  %and = and i32 %addr, 8191, !dbg !4298
  %idxprom = zext i32 %and to i64, !dbg !4300
  %arrayidx = getelementptr inbounds [8192 x i8], [8192 x i8]* @intram, i64 0, i64 %idxprom, !dbg !4300
  store i8 %val, i8* %arrayidx, align 1, !dbg !4301
  ret void, !dbg !4302
}

; Function Attrs: noinline nounwind ssp uwtable
define internal i32 @intram_get(i32 %addr) #0 !dbg !4303 {
entry:
  call void @llvm.dbg.value(metadata i32 %addr, metadata !4304, metadata !DIExpression()), !dbg !4305
  %and = and i32 %addr, 8191, !dbg !4306
  %idxprom = zext i32 %and to i64, !dbg !4308
  %arrayidx = getelementptr inbounds [8192 x i8], [8192 x i8]* @intram, i64 0, i64 %idxprom, !dbg !4308
  %0 = load i8, i8* %arrayidx, align 1, !dbg !4308
  %conv = zext i8 %0 to i32, !dbg !4309
  ret i32 %conv, !dbg !4310
}

; Function Attrs: noinline nounwind ssp uwtable
define internal void @io_put(i32 %addr, i8 zeroext %val) #0 !dbg !4311 {
entry:
  call void @llvm.dbg.value(metadata i32 %addr, metadata !4312, metadata !DIExpression()), !dbg !4313
  call void @llvm.dbg.value(metadata i8 %val, metadata !4314, metadata !DIExpression()), !dbg !4313
  call void @llvm.dbg.declare(metadata !666, metadata !4315, metadata !DIExpression()), !dbg !4316
  %0 = load void (i64, i32, i8, i8*)*, void (i64, i32, i8, i8*)** @iocallback, align 8, !dbg !4317
  %1 = load i64, i64* @sum_cycles, align 8, !dbg !4321
  %2 = load i8*, i8** @iocallback_priv, align 8, !dbg !4322
  call void %0(i64 %1, i32 %addr, i8 zeroext %val, i8* %2), !dbg !4323
  %sub = sub i32 %addr, 65296, !dbg !4324
  %div = udiv i32 %sub, 5, !dbg !4325
  %conv = zext i32 %div to i64, !dbg !4326
  call void @llvm.dbg.value(metadata i64 %conv, metadata !4327, metadata !DIExpression()), !dbg !4313
  %cmp = icmp uge i32 %addr, 65408, !dbg !4328
  br i1 %cmp, label %if.then, label %if.end5, !dbg !4330

if.then:                                          ; preds = %entry
  %cmp2 = icmp ule i32 %addr, 65534, !dbg !4331
  br i1 %cmp2, label %if.then4, label %if.end, !dbg !4334

if.then4:                                         ; preds = %if.then
  %and = and i32 %addr, 127, !dbg !4335
  %idxprom = zext i32 %and to i64, !dbg !4337
  %arrayidx = getelementptr inbounds [128 x i8], [128 x i8]* @hiram, i64 0, i64 %idxprom, !dbg !4337
  store i8 %val, i8* %arrayidx, align 1, !dbg !4338
  br label %return, !dbg !4339

if.end:                                           ; preds = %if.then
  br label %if.end5, !dbg !4340

if.end5:                                          ; preds = %if.end, %entry
  %and6 = and i32 %addr, 127, !dbg !4341
  %idxprom7 = zext i32 %and6 to i64, !dbg !4342
  %arrayidx8 = getelementptr inbounds [128 x i8], [128 x i8]* @ioregs, i64 0, i64 %idxprom7, !dbg !4342
  store i8 %val, i8* %arrayidx8, align 1, !dbg !4343
  br label %while.body, !dbg !4344

while.body:                                       ; preds = %if.end5
  br label %while_continue___0, !dbg !4347

while_continue___0:                               ; preds = %while.body
  br label %while_continue, !dbg !4347

while_continue:                                   ; preds = %while_continue___0
  br label %while_break, !dbg !4348

while_break___0:                                  ; No predecessors!
  br label %while_break, !dbg !4350

while_break:                                      ; preds = %while_break___0, %while_continue
  %cmp9 = icmp eq i32 %addr, 65287, !dbg !4351
  br i1 %cmp9, label %if.then11, label %if.end12, !dbg !4354

if.then11:                                        ; preds = %while_break
  br label %case_65287, !dbg !4355

if.end12:                                         ; preds = %while_break
  %cmp13 = icmp eq i32 %addr, 65286, !dbg !4357
  br i1 %cmp13, label %if.then15, label %if.end16, !dbg !4354

if.then15:                                        ; preds = %if.end12
  br label %case_65287, !dbg !4359

if.end16:                                         ; preds = %if.end12
  %cmp17 = icmp eq i32 %addr, 65296, !dbg !4361
  br i1 %cmp17, label %if.then19, label %if.end20, !dbg !4363

if.then19:                                        ; preds = %if.end16
  br label %case_65296, !dbg !4364

if.end20:                                         ; preds = %if.end16
  %cmp21 = icmp eq i32 %addr, 65312, !dbg !4366
  br i1 %cmp21, label %if.then23, label %if.end24, !dbg !4368

if.then23:                                        ; preds = %if.end20
  br label %case_65312, !dbg !4369

if.end24:                                         ; preds = %if.end20
  %cmp25 = icmp eq i32 %addr, 65302, !dbg !4371
  br i1 %cmp25, label %if.then27, label %if.end28, !dbg !4368

if.then27:                                        ; preds = %if.end24
  br label %case_65312, !dbg !4373

if.end28:                                         ; preds = %if.end24
  %cmp29 = icmp eq i32 %addr, 65297, !dbg !4375
  br i1 %cmp29, label %if.then31, label %if.end32, !dbg !4368

if.then31:                                        ; preds = %if.end28
  br label %case_65312, !dbg !4377

if.end32:                                         ; preds = %if.end28
  %cmp33 = icmp eq i32 %addr, 65313, !dbg !4379
  br i1 %cmp33, label %if.then35, label %if.end36, !dbg !4381

if.then35:                                        ; preds = %if.end32
  br label %case_65313, !dbg !4382

if.end36:                                         ; preds = %if.end32
  %cmp37 = icmp eq i32 %addr, 65303, !dbg !4384
  br i1 %cmp37, label %if.then39, label %if.end40, !dbg !4381

if.then39:                                        ; preds = %if.end36
  br label %case_65313, !dbg !4386

if.end40:                                         ; preds = %if.end36
  %cmp41 = icmp eq i32 %addr, 65298, !dbg !4388
  br i1 %cmp41, label %if.then43, label %if.end44, !dbg !4381

if.then43:                                        ; preds = %if.end40
  br label %case_65313, !dbg !4390

if.end44:                                         ; preds = %if.end40
  %cmp45 = icmp eq i32 %addr, 65310, !dbg !4392
  br i1 %cmp45, label %if.then47, label %if.end48, !dbg !4394

if.then47:                                        ; preds = %if.end44
  br label %case_65310, !dbg !4395

if.end48:                                         ; preds = %if.end44
  %cmp49 = icmp eq i32 %addr, 65309, !dbg !4397
  br i1 %cmp49, label %if.then51, label %if.end52, !dbg !4394

if.then51:                                        ; preds = %if.end48
  br label %case_65310, !dbg !4399

if.end52:                                         ; preds = %if.end48
  %cmp53 = icmp eq i32 %addr, 65305, !dbg !4401
  br i1 %cmp53, label %if.then55, label %if.end56, !dbg !4394

if.then55:                                        ; preds = %if.end52
  br label %case_65310, !dbg !4403

if.end56:                                         ; preds = %if.end52
  %cmp57 = icmp eq i32 %addr, 65304, !dbg !4405
  br i1 %cmp57, label %if.then59, label %if.end60, !dbg !4394

if.then59:                                        ; preds = %if.end56
  br label %case_65310, !dbg !4407

if.end60:                                         ; preds = %if.end56
  %cmp61 = icmp eq i32 %addr, 65300, !dbg !4409
  br i1 %cmp61, label %if.then63, label %if.end64, !dbg !4394

if.then63:                                        ; preds = %if.end60
  br label %case_65310, !dbg !4411

if.end64:                                         ; preds = %if.end60
  %cmp65 = icmp eq i32 %addr, 65299, !dbg !4413
  br i1 %cmp65, label %if.then67, label %if.end68, !dbg !4394

if.then67:                                        ; preds = %if.end64
  br label %case_65310, !dbg !4415

if.end68:                                         ; preds = %if.end64
  %cmp69 = icmp eq i32 %addr, 65301, !dbg !4417
  br i1 %cmp69, label %if.then71, label %if.end72, !dbg !4419

if.then71:                                        ; preds = %if.end68
  br label %case_65301, !dbg !4420

if.end72:                                         ; preds = %if.end68
  %cmp73 = icmp eq i32 %addr, 65306, !dbg !4422
  br i1 %cmp73, label %if.then75, label %if.end76, !dbg !4424

if.then75:                                        ; preds = %if.end72
  br label %case_65306, !dbg !4425

if.end76:                                         ; preds = %if.end72
  %cmp77 = icmp eq i32 %addr, 65307, !dbg !4427
  br i1 %cmp77, label %if.then79, label %if.end80, !dbg !4429

if.then79:                                        ; preds = %if.end76
  br label %case_65307, !dbg !4430

if.end80:                                         ; preds = %if.end76
  %cmp81 = icmp eq i32 %addr, 65308, !dbg !4432
  br i1 %cmp81, label %if.then83, label %if.end84, !dbg !4434

if.then83:                                        ; preds = %if.end80
  br label %case_65308, !dbg !4435

if.end84:                                         ; preds = %if.end80
  %cmp85 = icmp eq i32 %addr, 65311, !dbg !4437
  br i1 %cmp85, label %if.then87, label %if.end88, !dbg !4439

if.then87:                                        ; preds = %if.end84
  br label %case_65311, !dbg !4440

if.end88:                                         ; preds = %if.end84
  %cmp89 = icmp eq i32 %addr, 65315, !dbg !4442
  br i1 %cmp89, label %if.then91, label %if.end92, !dbg !4444

if.then91:                                        ; preds = %if.end88
  br label %case_65315, !dbg !4445

if.end92:                                         ; preds = %if.end88
  %cmp93 = icmp eq i32 %addr, 65314, !dbg !4447
  br i1 %cmp93, label %if.then95, label %if.end96, !dbg !4444

if.then95:                                        ; preds = %if.end92
  br label %case_65315, !dbg !4449

if.end96:                                         ; preds = %if.end92
  %cmp97 = icmp eq i32 %addr, 65317, !dbg !4451
  br i1 %cmp97, label %if.then99, label %if.end100, !dbg !4453

if.then99:                                        ; preds = %if.end96
  br label %case_65317, !dbg !4454

if.end100:                                        ; preds = %if.end96
  %cmp101 = icmp eq i32 %addr, 65318, !dbg !4456
  br i1 %cmp101, label %if.then103, label %if.end104, !dbg !4458

if.then103:                                       ; preds = %if.end100
  br label %case_65318, !dbg !4459

if.end104:                                        ; preds = %if.end100
  %cmp105 = icmp eq i32 %addr, 65535, !dbg !4461
  br i1 %cmp105, label %if.then107, label %if.end108, !dbg !4463

if.then107:                                       ; preds = %if.end104
  br label %case_65535, !dbg !4464

if.end108:                                        ; preds = %if.end104
  %cmp109 = icmp eq i32 %addr, 65343, !dbg !4466
  br i1 %cmp109, label %if.then111, label %if.end112, !dbg !4463

if.then111:                                       ; preds = %if.end108
  br label %case_65535, !dbg !4468

if.end112:                                        ; preds = %if.end108
  %cmp113 = icmp eq i32 %addr, 65342, !dbg !4470
  br i1 %cmp113, label %if.then115, label %if.end116, !dbg !4463

if.then115:                                       ; preds = %if.end112
  br label %case_65535, !dbg !4472

if.end116:                                        ; preds = %if.end112
  %cmp117 = icmp eq i32 %addr, 65341, !dbg !4474
  br i1 %cmp117, label %if.then119, label %if.end120, !dbg !4463

if.then119:                                       ; preds = %if.end116
  br label %case_65535, !dbg !4476

if.end120:                                        ; preds = %if.end116
  %cmp121 = icmp eq i32 %addr, 65340, !dbg !4478
  br i1 %cmp121, label %if.then123, label %if.end124, !dbg !4463

if.then123:                                       ; preds = %if.end120
  br label %case_65535, !dbg !4480

if.end124:                                        ; preds = %if.end120
  %cmp125 = icmp eq i32 %addr, 65339, !dbg !4482
  br i1 %cmp125, label %if.then127, label %if.end128, !dbg !4463

if.then127:                                       ; preds = %if.end124
  br label %case_65535, !dbg !4484

if.end128:                                        ; preds = %if.end124
  %cmp129 = icmp eq i32 %addr, 65338, !dbg !4486
  br i1 %cmp129, label %if.then131, label %if.end132, !dbg !4463

if.then131:                                       ; preds = %if.end128
  br label %case_65535, !dbg !4488

if.end132:                                        ; preds = %if.end128
  %cmp133 = icmp eq i32 %addr, 65337, !dbg !4490
  br i1 %cmp133, label %if.then135, label %if.end136, !dbg !4463

if.then135:                                       ; preds = %if.end132
  br label %case_65535, !dbg !4492

if.end136:                                        ; preds = %if.end132
  %cmp137 = icmp eq i32 %addr, 65336, !dbg !4494
  br i1 %cmp137, label %if.then139, label %if.end140, !dbg !4463

if.then139:                                       ; preds = %if.end136
  br label %case_65535, !dbg !4496

if.end140:                                        ; preds = %if.end136
  %cmp141 = icmp eq i32 %addr, 65335, !dbg !4498
  br i1 %cmp141, label %if.then143, label %if.end144, !dbg !4463

if.then143:                                       ; preds = %if.end140
  br label %case_65535, !dbg !4500

if.end144:                                        ; preds = %if.end140
  %cmp145 = icmp eq i32 %addr, 65334, !dbg !4502
  br i1 %cmp145, label %if.then147, label %if.end148, !dbg !4463

if.then147:                                       ; preds = %if.end144
  br label %case_65535, !dbg !4504

if.end148:                                        ; preds = %if.end144
  %cmp149 = icmp eq i32 %addr, 65333, !dbg !4506
  br i1 %cmp149, label %if.then151, label %if.end152, !dbg !4463

if.then151:                                       ; preds = %if.end148
  br label %case_65535, !dbg !4508

if.end152:                                        ; preds = %if.end148
  %cmp153 = icmp eq i32 %addr, 65332, !dbg !4510
  br i1 %cmp153, label %if.then155, label %if.end156, !dbg !4463

if.then155:                                       ; preds = %if.end152
  br label %case_65535, !dbg !4512

if.end156:                                        ; preds = %if.end152
  %cmp157 = icmp eq i32 %addr, 65331, !dbg !4514
  br i1 %cmp157, label %if.then159, label %if.end160, !dbg !4463

if.then159:                                       ; preds = %if.end156
  br label %case_65535, !dbg !4516

if.end160:                                        ; preds = %if.end156
  %cmp161 = icmp eq i32 %addr, 65330, !dbg !4518
  br i1 %cmp161, label %if.then163, label %if.end164, !dbg !4463

if.then163:                                       ; preds = %if.end160
  br label %case_65535, !dbg !4520

if.end164:                                        ; preds = %if.end160
  %cmp165 = icmp eq i32 %addr, 65329, !dbg !4522
  br i1 %cmp165, label %if.then167, label %if.end168, !dbg !4463

if.then167:                                       ; preds = %if.end164
  br label %case_65535, !dbg !4524

if.end168:                                        ; preds = %if.end164
  %cmp169 = icmp eq i32 %addr, 65328, !dbg !4526
  br i1 %cmp169, label %if.then171, label %if.end172, !dbg !4463

if.then171:                                       ; preds = %if.end168
  br label %case_65535, !dbg !4528

if.end172:                                        ; preds = %if.end168
  %cmp173 = icmp eq i32 %addr, 65327, !dbg !4530
  br i1 %cmp173, label %if.then175, label %if.end176, !dbg !4463

if.then175:                                       ; preds = %if.end172
  br label %case_65535, !dbg !4532

if.end176:                                        ; preds = %if.end172
  %cmp177 = icmp eq i32 %addr, 65326, !dbg !4534
  br i1 %cmp177, label %if.then179, label %if.end180, !dbg !4463

if.then179:                                       ; preds = %if.end176
  br label %case_65535, !dbg !4536

if.end180:                                        ; preds = %if.end176
  %cmp181 = icmp eq i32 %addr, 65325, !dbg !4538
  br i1 %cmp181, label %if.then183, label %if.end184, !dbg !4463

if.then183:                                       ; preds = %if.end180
  br label %case_65535, !dbg !4540

if.end184:                                        ; preds = %if.end180
  %cmp185 = icmp eq i32 %addr, 65324, !dbg !4542
  br i1 %cmp185, label %if.then187, label %if.end188, !dbg !4463

if.then187:                                       ; preds = %if.end184
  br label %case_65535, !dbg !4544

if.end188:                                        ; preds = %if.end184
  %cmp189 = icmp eq i32 %addr, 65323, !dbg !4546
  br i1 %cmp189, label %if.then191, label %if.end192, !dbg !4463

if.then191:                                       ; preds = %if.end188
  br label %case_65535, !dbg !4548

if.end192:                                        ; preds = %if.end188
  %cmp193 = icmp eq i32 %addr, 65322, !dbg !4550
  br i1 %cmp193, label %if.then195, label %if.end196, !dbg !4463

if.then195:                                       ; preds = %if.end192
  br label %case_65535, !dbg !4552

if.end196:                                        ; preds = %if.end192
  %cmp197 = icmp eq i32 %addr, 65321, !dbg !4554
  br i1 %cmp197, label %if.then199, label %if.end200, !dbg !4463

if.then199:                                       ; preds = %if.end196
  br label %case_65535, !dbg !4556

if.end200:                                        ; preds = %if.end196
  %cmp201 = icmp eq i32 %addr, 65320, !dbg !4558
  br i1 %cmp201, label %if.then203, label %if.end204, !dbg !4463

if.then203:                                       ; preds = %if.end200
  br label %case_65535, !dbg !4560

if.end204:                                        ; preds = %if.end200
  %cmp205 = icmp eq i32 %addr, 65319, !dbg !4562
  br i1 %cmp205, label %if.then207, label %if.end208, !dbg !4463

if.then207:                                       ; preds = %if.end204
  br label %case_65535, !dbg !4564

if.end208:                                        ; preds = %if.end204
  %cmp209 = icmp eq i32 %addr, 65316, !dbg !4566
  br i1 %cmp209, label %if.then211, label %if.end212, !dbg !4463

if.then211:                                       ; preds = %if.end208
  br label %case_65535, !dbg !4568

if.end212:                                        ; preds = %if.end208
  %cmp213 = icmp eq i32 %addr, 65280, !dbg !4570
  br i1 %cmp213, label %if.then215, label %if.end216, !dbg !4463

if.then215:                                       ; preds = %if.end212
  br label %case_65535, !dbg !4572

if.end216:                                        ; preds = %if.end212
  br label %switch_default, !dbg !4574

case_65287:                                       ; preds = %if.then15, %if.then11
  br label %case_65286, !dbg !4574

case_65286:                                       ; preds = %case_65287
  %3 = load i8, i8* getelementptr inbounds ([128 x i8], [128 x i8]* @ioregs, i64 0, i64 6), align 2, !dbg !4575
  %conv217 = zext i8 %3 to i32, !dbg !4576
  %sub218 = sub nsw i32 256, %conv217, !dbg !4577
  %4 = load i8, i8* getelementptr inbounds ([128 x i8], [128 x i8]* @ioregs, i64 0, i64 7), align 1, !dbg !4578
  %conv219 = zext i8 %4 to i32, !dbg !4579
  %add = add nsw i32 %conv219, 3, !dbg !4580
  %and220 = and i32 %add, 3, !dbg !4581
  %shl = shl i32 %and220, 1, !dbg !4582
  %shl221 = shl i32 16, %shl, !dbg !4583
  %mul = mul nsw i32 %sub218, %shl221, !dbg !4584
  %conv222 = sext i32 %mul to i64, !dbg !4585
  store i64 %conv222, i64* @timertc, align 8, !dbg !4586
  %5 = load i8, i8* getelementptr inbounds ([128 x i8], [128 x i8]* @ioregs, i64 0, i64 7), align 1, !dbg !4587
  %conv223 = zext i8 %5 to i32, !dbg !4589
  %and224 = and i32 %conv223, 240, !dbg !4590
  %cmp225 = icmp eq i32 %and224, 128, !dbg !4591
  br i1 %cmp225, label %if.then227, label %if.end229, !dbg !4592

if.then227:                                       ; preds = %case_65286
  %6 = load i64, i64* @timertc, align 8, !dbg !4593
  %div228 = sdiv i64 %6, 2, !dbg !4593
  store i64 %div228, i64* @timertc, align 8, !dbg !4593
  br label %if.end229, !dbg !4595

if.end229:                                        ; preds = %if.then227, %case_65286
  br label %switch_break, !dbg !4596

case_65296:                                       ; preds = %if.then19
  %conv230 = zext i8 %val to i32, !dbg !4597
  %shr = ashr i32 %conv230, 4, !dbg !4598
  %and231 = and i32 %shr, 7, !dbg !4599
  %conv232 = sext i32 %and231 to i64, !dbg !4600
  store i64 %conv232, i64* getelementptr inbounds ([4 x %struct.gbhw_channel], [4 x %struct.gbhw_channel]* @gbhw_ch, i64 0, i64 0, i32 11), align 8, !dbg !4601
  %7 = load i64, i64* getelementptr inbounds ([4 x %struct.gbhw_channel], [4 x %struct.gbhw_channel]* @gbhw_ch, i64 0, i64 0, i32 11), align 8, !dbg !4602
  store i64 %7, i64* getelementptr inbounds ([4 x %struct.gbhw_channel], [4 x %struct.gbhw_channel]* @gbhw_ch, i64 0, i64 0, i32 12), align 16, !dbg !4603
  %conv233 = zext i8 %val to i32, !dbg !4604
  %shr234 = ashr i32 %conv233, 3, !dbg !4605
  %and235 = and i32 %shr234, 1, !dbg !4606
  %conv236 = sext i32 %and235 to i64, !dbg !4607
  store i64 %conv236, i64* getelementptr inbounds ([4 x %struct.gbhw_channel], [4 x %struct.gbhw_channel]* @gbhw_ch, i64 0, i64 0, i32 10), align 16, !dbg !4608
  %conv237 = zext i8 %val to i32, !dbg !4609
  %and238 = and i32 %conv237, 7, !dbg !4610
  %conv239 = sext i32 %and238 to i64, !dbg !4611
  store i64 %conv239, i64* getelementptr inbounds ([4 x %struct.gbhw_channel], [4 x %struct.gbhw_channel]* @gbhw_ch, i64 0, i64 0, i32 13), align 8, !dbg !4612
  br label %switch_break, !dbg !4613

case_65312:                                       ; preds = %if.then31, %if.then27, %if.then23
  br label %case_65302, !dbg !4613

case_65302:                                       ; preds = %case_65312
  br label %case_65297, !dbg !4613

case_65297:                                       ; preds = %case_65302
  %conv240 = zext i8 %val to i32, !dbg !4614
  %shr241 = ashr i32 %conv240, 6, !dbg !4615
  %conv242 = sext i32 %shr241 to i64, !dbg !4616
  call void @llvm.dbg.value(metadata i64 %conv242, metadata !4617, metadata !DIExpression()), !dbg !4313
  %conv243 = zext i8 %val to i32, !dbg !4618
  %and244 = and i32 %conv243, 63, !dbg !4619
  %conv245 = sext i32 %and244 to i64, !dbg !4620
  call void @llvm.dbg.value(metadata i64 %conv245, metadata !4621, metadata !DIExpression()), !dbg !4313
  %arrayidx246 = getelementptr inbounds [4 x i8], [4 x i8]* @dutylookup, i64 0, i64 %conv242, !dbg !4622
  %8 = load i8, i8* %arrayidx246, align 1, !dbg !4622
  %conv247 = sext i8 %8 to i64, !dbg !4623
  %arrayidx248 = getelementptr inbounds [4 x %struct.gbhw_channel], [4 x %struct.gbhw_channel]* @gbhw_ch, i64 0, i64 %conv, !dbg !4624
  %duty_ctr249 = getelementptr inbounds %struct.gbhw_channel, %struct.gbhw_channel* %arrayidx248, i32 0, i32 19, !dbg !4625
  store i64 %conv247, i64* %duty_ctr249, align 8, !dbg !4626
  %arrayidx250 = getelementptr inbounds [4 x %struct.gbhw_channel], [4 x %struct.gbhw_channel]* @gbhw_ch, i64 0, i64 %conv, !dbg !4627
  %div_tc = getelementptr inbounds %struct.gbhw_channel, %struct.gbhw_channel* %arrayidx250, i32 0, i32 16, !dbg !4628
  %9 = load i64, i64* %div_tc, align 16, !dbg !4628
  %arrayidx251 = getelementptr inbounds [4 x %struct.gbhw_channel], [4 x %struct.gbhw_channel]* @gbhw_ch, i64 0, i64 %conv, !dbg !4629
  %duty_ctr252 = getelementptr inbounds %struct.gbhw_channel, %struct.gbhw_channel* %arrayidx251, i32 0, i32 19, !dbg !4630
  %10 = load i64, i64* %duty_ctr252, align 8, !dbg !4630
  %mul253 = mul nsw i64 %9, %10, !dbg !4631
  %div254 = sdiv i64 %mul253, 8, !dbg !4632
  %arrayidx255 = getelementptr inbounds [4 x %struct.gbhw_channel], [4 x %struct.gbhw_channel]* @gbhw_ch, i64 0, i64 %conv, !dbg !4633
  %duty_tc = getelementptr inbounds %struct.gbhw_channel, %struct.gbhw_channel* %arrayidx255, i32 0, i32 18, !dbg !4634
  store i64 %div254, i64* %duty_tc, align 16, !dbg !4635
  %sub256 = sub nsw i64 64, %conv245, !dbg !4636
  %mul257 = mul nsw i64 %sub256, 2, !dbg !4637
  %arrayidx258 = getelementptr inbounds [4 x %struct.gbhw_channel], [4 x %struct.gbhw_channel]* @gbhw_ch, i64 0, i64 %conv, !dbg !4638
  %len259 = getelementptr inbounds %struct.gbhw_channel, %struct.gbhw_channel* %arrayidx258, i32 0, i32 14, !dbg !4639
  store i64 %mul257, i64* %len259, align 16, !dbg !4640
  br label %switch_break, !dbg !4641

case_65313:                                       ; preds = %if.then43, %if.then39, %if.then35
  br label %case_65303, !dbg !4641

case_65303:                                       ; preds = %case_65313
  br label %case_65298, !dbg !4641

case_65298:                                       ; preds = %case_65303
  %conv260 = zext i8 %val to i32, !dbg !4642
  %shr261 = ashr i32 %conv260, 4, !dbg !4643
  %conv262 = sext i32 %shr261 to i64, !dbg !4644
  call void @llvm.dbg.value(metadata i64 %conv262, metadata !4645, metadata !DIExpression()), !dbg !4313
  %conv263 = zext i8 %val to i32, !dbg !4646
  %shr264 = ashr i32 %conv263, 3, !dbg !4647
  %and265 = and i32 %shr264, 1, !dbg !4648
  %conv266 = sext i32 %and265 to i64, !dbg !4649
  call void @llvm.dbg.value(metadata i64 %conv266, metadata !4650, metadata !DIExpression()), !dbg !4313
  %conv267 = zext i8 %val to i32, !dbg !4651
  %and268 = and i32 %conv267, 7, !dbg !4652
  %conv269 = sext i32 %and268 to i64, !dbg !4653
  call void @llvm.dbg.value(metadata i64 %conv269, metadata !4654, metadata !DIExpression()), !dbg !4313
  %arrayidx270 = getelementptr inbounds [4 x %struct.gbhw_channel], [4 x %struct.gbhw_channel]* @gbhw_ch, i64 0, i64 %conv, !dbg !4655
  %volume = getelementptr inbounds %struct.gbhw_channel, %struct.gbhw_channel* %arrayidx270, i32 0, i32 6, !dbg !4656
  store i64 %conv262, i64* %volume, align 16, !dbg !4657
  %arrayidx271 = getelementptr inbounds [4 x %struct.gbhw_channel], [4 x %struct.gbhw_channel]* @gbhw_ch, i64 0, i64 %conv, !dbg !4658
  %env_dir = getelementptr inbounds %struct.gbhw_channel, %struct.gbhw_channel* %arrayidx271, i32 0, i32 7, !dbg !4659
  store i64 %conv266, i64* %env_dir, align 8, !dbg !4660
  %mul272 = mul nsw i64 %conv269, 8, !dbg !4661
  call void @llvm.dbg.value(metadata i64 %mul272, metadata !4662, metadata !DIExpression()), !dbg !4313
  %arrayidx273 = getelementptr inbounds [4 x %struct.gbhw_channel], [4 x %struct.gbhw_channel]* @gbhw_ch, i64 0, i64 %conv, !dbg !4663
  %env_tc = getelementptr inbounds %struct.gbhw_channel, %struct.gbhw_channel* %arrayidx273, i32 0, i32 8, !dbg !4661
  store i64 %mul272, i64* %env_tc, align 16, !dbg !4664
  %arrayidx274 = getelementptr inbounds [4 x %struct.gbhw_channel], [4 x %struct.gbhw_channel]* @gbhw_ch, i64 0, i64 %conv, !dbg !4663
  %env_ctr = getelementptr inbounds %struct.gbhw_channel, %struct.gbhw_channel* %arrayidx274, i32 0, i32 9, !dbg !4661
  store i64 %mul272, i64* %env_ctr, align 8, !dbg !4665
  br label %switch_break, !dbg !4666

case_65310:                                       ; preds = %if.then67, %if.then63, %if.then59, %if.then55, %if.then51, %if.then47
  br label %case_65309, !dbg !4666

case_65309:                                       ; preds = %case_65310
  br label %case_65305, !dbg !4666

case_65305:                                       ; preds = %case_65309
  br label %case_65304, !dbg !4666

case_65304:                                       ; preds = %case_65305
  br label %case_65300, !dbg !4666

case_65300:                                       ; preds = %case_65304
  br label %case_65299, !dbg !4666

case_65299:                                       ; preds = %case_65300
  %mul275 = mul nsw i64 5, %conv, !dbg !4667
  %add276 = add nsw i64 19, %mul275, !dbg !4668
  %arrayidx277 = getelementptr inbounds [128 x i8], [128 x i8]* @ioregs, i64 0, i64 %add276, !dbg !4669
  %11 = load i8, i8* %arrayidx277, align 1, !dbg !4669
  %conv278 = zext i8 %11 to i64, !dbg !4670
  call void @llvm.dbg.value(metadata i64 %conv278, metadata !4671, metadata !DIExpression()), !dbg !4313
  %mul279 = mul nsw i64 5, %conv, !dbg !4672
  %add280 = add nsw i64 20, %mul279, !dbg !4673
  %arrayidx281 = getelementptr inbounds [128 x i8], [128 x i8]* @ioregs, i64 0, i64 %add280, !dbg !4674
  %12 = load i8, i8* %arrayidx281, align 1, !dbg !4674
  %conv282 = zext i8 %12 to i64, !dbg !4675
  %and283 = and i64 %conv282, 7, !dbg !4676
  %shl284 = shl i64 %and283, 8, !dbg !4677
  %or = or i64 %conv278, %shl284, !dbg !4678
  call void @llvm.dbg.value(metadata i64 %or, metadata !4671, metadata !DIExpression()), !dbg !4313
  %sub285 = sub nsw i64 2048, %or, !dbg !4679
  %arrayidx286 = getelementptr inbounds [4 x %struct.gbhw_channel], [4 x %struct.gbhw_channel]* @gbhw_ch, i64 0, i64 %conv, !dbg !4680
  %div_tc287 = getelementptr inbounds %struct.gbhw_channel, %struct.gbhw_channel* %arrayidx286, i32 0, i32 16, !dbg !4681
  store i64 %sub285, i64* %div_tc287, align 16, !dbg !4682
  %arrayidx288 = getelementptr inbounds [4 x %struct.gbhw_channel], [4 x %struct.gbhw_channel]* @gbhw_ch, i64 0, i64 %conv, !dbg !4683
  %div_tc289 = getelementptr inbounds %struct.gbhw_channel, %struct.gbhw_channel* %arrayidx288, i32 0, i32 16, !dbg !4684
  %13 = load i64, i64* %div_tc289, align 16, !dbg !4684
  %arrayidx290 = getelementptr inbounds [4 x %struct.gbhw_channel], [4 x %struct.gbhw_channel]* @gbhw_ch, i64 0, i64 %conv, !dbg !4685
  %duty_ctr291 = getelementptr inbounds %struct.gbhw_channel, %struct.gbhw_channel* %arrayidx290, i32 0, i32 19, !dbg !4686
  %14 = load i64, i64* %duty_ctr291, align 8, !dbg !4686
  %mul292 = mul nsw i64 %13, %14, !dbg !4687
  %div293 = sdiv i64 %mul292, 8, !dbg !4688
  %arrayidx294 = getelementptr inbounds [4 x %struct.gbhw_channel], [4 x %struct.gbhw_channel]* @gbhw_ch, i64 0, i64 %conv, !dbg !4689
  %duty_tc295 = getelementptr inbounds %struct.gbhw_channel, %struct.gbhw_channel* %arrayidx294, i32 0, i32 18, !dbg !4690
  store i64 %div293, i64* %duty_tc295, align 16, !dbg !4691
  %cmp296 = icmp eq i32 %addr, 65299, !dbg !4692
  br i1 %cmp296, label %if.then298, label %if.else, !dbg !4694

if.then298:                                       ; preds = %case_65299
  br label %switch_break, !dbg !4695

if.else:                                          ; preds = %case_65299
  %cmp299 = icmp eq i32 %addr, 65304, !dbg !4697
  br i1 %cmp299, label %if.then301, label %if.else302, !dbg !4699

if.then301:                                       ; preds = %if.else
  br label %switch_break, !dbg !4700

if.else302:                                       ; preds = %if.else
  %cmp303 = icmp eq i32 %addr, 65309, !dbg !4702
  br i1 %cmp303, label %if.then305, label %if.end306, !dbg !4704

if.then305:                                       ; preds = %if.else302
  br label %switch_break, !dbg !4705

if.end306:                                        ; preds = %if.else302
  br label %if.end307

if.end307:                                        ; preds = %if.end306
  br label %if.end308

if.end308:                                        ; preds = %if.end307
  %mul309 = mul nsw i64 5, %conv, !dbg !4707
  %add310 = add nsw i64 20, %mul309, !dbg !4708
  %arrayidx311 = getelementptr inbounds [128 x i8], [128 x i8]* @ioregs, i64 0, i64 %add310, !dbg !4709
  %15 = load i8, i8* %arrayidx311, align 1, !dbg !4709
  %conv312 = zext i8 %15 to i32, !dbg !4710
  %and313 = and i32 %conv312, 64, !dbg !4711
  %cmp314 = icmp sgt i32 %and313, 0, !dbg !4712
  %conv315 = zext i1 %cmp314 to i32, !dbg !4712
  %conv316 = sext i32 %conv315 to i64, !dbg !4713
  %arrayidx317 = getelementptr inbounds [4 x %struct.gbhw_channel], [4 x %struct.gbhw_channel]* @gbhw_ch, i64 0, i64 %conv, !dbg !4714
  %len_enable = getelementptr inbounds %struct.gbhw_channel, %struct.gbhw_channel* %arrayidx317, i32 0, i32 15, !dbg !4715
  store i64 %conv316, i64* %len_enable, align 8, !dbg !4716
  br label %switch_break, !dbg !4717

case_65301:                                       ; preds = %if.then71
  br label %switch_break, !dbg !4718

case_65306:                                       ; preds = %if.then75
  %16 = load i8, i8* getelementptr inbounds ([128 x i8], [128 x i8]* @ioregs, i64 0, i64 26), align 2, !dbg !4719
  %conv318 = zext i8 %16 to i32, !dbg !4720
  %and319 = and i32 %conv318, 128, !dbg !4721
  %cmp320 = icmp sgt i32 %and319, 0, !dbg !4722
  %conv321 = zext i1 %cmp320 to i32, !dbg !4722
  %conv322 = sext i32 %conv321 to i64, !dbg !4723
  store i64 %conv322, i64* getelementptr inbounds ([4 x %struct.gbhw_channel], [4 x %struct.gbhw_channel]* @gbhw_ch, i64 0, i64 2, i32 1), align 8, !dbg !4724
  br label %switch_break, !dbg !4725

case_65307:                                       ; preds = %if.then79
  %conv323 = zext i8 %val to i32, !dbg !4726
  %sub324 = sub nsw i32 256, %conv323, !dbg !4727
  %mul325 = mul nsw i32 %sub324, 2, !dbg !4728
  %conv326 = sext i32 %mul325 to i64, !dbg !4729
  store i64 %conv326, i64* getelementptr inbounds ([4 x %struct.gbhw_channel], [4 x %struct.gbhw_channel]* @gbhw_ch, i64 0, i64 2, i32 14), align 16, !dbg !4730
  br label %switch_break, !dbg !4731

case_65308:                                       ; preds = %if.then83
  %17 = load i8, i8* getelementptr inbounds ([128 x i8], [128 x i8]* @ioregs, i64 0, i64 28), align 4, !dbg !4732
  %conv327 = zext i8 %17 to i32, !dbg !4733
  %shr328 = ashr i32 %conv327, 5, !dbg !4734
  %and329 = and i32 %shr328, 3, !dbg !4735
  %conv330 = sext i32 %and329 to i64, !dbg !4736
  call void @llvm.dbg.value(metadata i64 %conv330, metadata !4737, metadata !DIExpression()), !dbg !4313
  store i64 %conv330, i64* getelementptr inbounds ([4 x %struct.gbhw_channel], [4 x %struct.gbhw_channel]* @gbhw_ch, i64 0, i64 2, i32 6), align 16, !dbg !4738
  br label %switch_break, !dbg !4739

case_65311:                                       ; preds = %if.then87
  br label %switch_break, !dbg !4740

case_65315:                                       ; preds = %if.then95, %if.then91
  br label %case_65314, !dbg !4740

case_65314:                                       ; preds = %case_65315
  %18 = load i8, i8* getelementptr inbounds ([128 x i8], [128 x i8]* @ioregs, i64 0, i64 34), align 2, !dbg !4741
  %conv331 = zext i8 %18 to i64, !dbg !4742
  call void @llvm.dbg.value(metadata i64 %conv331, metadata !4743, metadata !DIExpression()), !dbg !4313
  %shr332 = ashr i64 %conv331, 4, !dbg !4744
  call void @llvm.dbg.value(metadata i64 %shr332, metadata !4745, metadata !DIExpression()), !dbg !4313
  %and333 = and i64 %conv331, 7, !dbg !4746
  call void @llvm.dbg.value(metadata i64 %and333, metadata !4747, metadata !DIExpression()), !dbg !4313
  store i64 0, i64* getelementptr inbounds ([4 x %struct.gbhw_channel], [4 x %struct.gbhw_channel]* @gbhw_ch, i64 0, i64 3, i32 17), align 8, !dbg !4748
  %sh_prom = trunc i64 %shr332 to i32, !dbg !4749
  %shl334 = shl i32 1, %sh_prom, !dbg !4749
  %conv335 = sext i32 %shl334 to i64, !dbg !4750
  store i64 %conv335, i64* getelementptr inbounds ([4 x %struct.gbhw_channel], [4 x %struct.gbhw_channel]* @gbhw_ch, i64 0, i64 3, i32 16), align 16, !dbg !4751
  %and336 = and i64 %conv331, 8, !dbg !4752
  %tobool = icmp ne i64 %and336, 0, !dbg !4752
  br i1 %tobool, label %if.then337, label %if.else338, !dbg !4754

if.then337:                                       ; preds = %case_65314
  store i32 64, i32* @tap1, align 4, !dbg !4755
  store i32 32, i32* @tap2, align 4, !dbg !4757
  br label %if.end339, !dbg !4758

if.else338:                                       ; preds = %case_65314
  store i32 16384, i32* @tap1, align 4, !dbg !4759
  store i32 8192, i32* @tap2, align 4, !dbg !4761
  br label %if.end339

if.end339:                                        ; preds = %if.else338, %if.then337
  %19 = load i32, i32* @lfsr, align 4, !dbg !4762
  %or340 = or i32 %19, 1, !dbg !4762
  store i32 %or340, i32* @lfsr, align 4, !dbg !4762
  %tobool341 = icmp ne i64 %and333, 0, !dbg !4763
  br i1 %tobool341, label %if.then342, label %if.else344, !dbg !4765

if.then342:                                       ; preds = %if.end339
  %20 = load i64, i64* getelementptr inbounds ([4 x %struct.gbhw_channel], [4 x %struct.gbhw_channel]* @gbhw_ch, i64 0, i64 3, i32 16), align 16, !dbg !4766
  %mul343 = mul nsw i64 %20, %and333, !dbg !4766
  store i64 %mul343, i64* getelementptr inbounds ([4 x %struct.gbhw_channel], [4 x %struct.gbhw_channel]* @gbhw_ch, i64 0, i64 3, i32 16), align 16, !dbg !4766
  br label %if.end346, !dbg !4768

if.else344:                                       ; preds = %if.end339
  %21 = load i64, i64* getelementptr inbounds ([4 x %struct.gbhw_channel], [4 x %struct.gbhw_channel]* @gbhw_ch, i64 0, i64 3, i32 16), align 16, !dbg !4769
  %div345 = sdiv i64 %21, 2, !dbg !4769
  store i64 %div345, i64* getelementptr inbounds ([4 x %struct.gbhw_channel], [4 x %struct.gbhw_channel]* @gbhw_ch, i64 0, i64 3, i32 16), align 16, !dbg !4769
  br label %if.end346

if.end346:                                        ; preds = %if.else344, %if.then342
  %cmp347 = icmp eq i32 %addr, 65314, !dbg !4771
  br i1 %cmp347, label %if.then349, label %if.end350, !dbg !4773

if.then349:                                       ; preds = %if.end346
  br label %switch_break, !dbg !4774

if.end350:                                        ; preds = %if.end346
  %22 = load i8, i8* getelementptr inbounds ([128 x i8], [128 x i8]* @ioregs, i64 0, i64 35), align 1, !dbg !4776
  %conv351 = zext i8 %22 to i32, !dbg !4777
  %and352 = and i32 %conv351, 64, !dbg !4778
  %cmp353 = icmp sgt i32 %and352, 0, !dbg !4779
  %conv354 = zext i1 %cmp353 to i32, !dbg !4779
  %conv355 = sext i32 %conv354 to i64, !dbg !4780
  %arrayidx356 = getelementptr inbounds [4 x %struct.gbhw_channel], [4 x %struct.gbhw_channel]* @gbhw_ch, i64 0, i64 %conv, !dbg !4781
  %len_enable357 = getelementptr inbounds %struct.gbhw_channel, %struct.gbhw_channel* %arrayidx356, i32 0, i32 15, !dbg !4782
  store i64 %conv355, i64* %len_enable357, align 8, !dbg !4783
  br label %switch_break, !dbg !4784

case_65317:                                       ; preds = %if.then99
  %conv358 = zext i8 %val to i32, !dbg !4785
  %and359 = and i32 %conv358, 16, !dbg !4786
  %cmp360 = icmp sgt i32 %and359, 0, !dbg !4787
  %conv361 = zext i1 %cmp360 to i32, !dbg !4787
  %conv362 = sext i32 %conv361 to i64, !dbg !4788
  store i64 %conv362, i64* getelementptr inbounds ([4 x %struct.gbhw_channel], [4 x %struct.gbhw_channel]* @gbhw_ch, i64 0, i64 0, i32 2), align 16, !dbg !4789
  %conv363 = zext i8 %val to i32, !dbg !4790
  %and364 = and i32 %conv363, 1, !dbg !4791
  %cmp365 = icmp sgt i32 %and364, 0, !dbg !4792
  %conv366 = zext i1 %cmp365 to i32, !dbg !4792
  %conv367 = sext i32 %conv366 to i64, !dbg !4793
  store i64 %conv367, i64* getelementptr inbounds ([4 x %struct.gbhw_channel], [4 x %struct.gbhw_channel]* @gbhw_ch, i64 0, i64 0, i32 3), align 8, !dbg !4794
  %conv368 = zext i8 %val to i32, !dbg !4795
  %and369 = and i32 %conv368, 32, !dbg !4796
  %cmp370 = icmp sgt i32 %and369, 0, !dbg !4797
  %conv371 = zext i1 %cmp370 to i32, !dbg !4797
  %conv372 = sext i32 %conv371 to i64, !dbg !4798
  store i64 %conv372, i64* getelementptr inbounds ([4 x %struct.gbhw_channel], [4 x %struct.gbhw_channel]* @gbhw_ch, i64 0, i64 1, i32 2), align 16, !dbg !4799
  %conv373 = zext i8 %val to i32, !dbg !4800
  %and374 = and i32 %conv373, 2, !dbg !4801
  %cmp375 = icmp sgt i32 %and374, 0, !dbg !4802
  %conv376 = zext i1 %cmp375 to i32, !dbg !4802
  %conv377 = sext i32 %conv376 to i64, !dbg !4803
  store i64 %conv377, i64* getelementptr inbounds ([4 x %struct.gbhw_channel], [4 x %struct.gbhw_channel]* @gbhw_ch, i64 0, i64 1, i32 3), align 8, !dbg !4804
  %conv378 = zext i8 %val to i32, !dbg !4805
  %and379 = and i32 %conv378, 64, !dbg !4806
  %cmp380 = icmp sgt i32 %and379, 0, !dbg !4807
  %conv381 = zext i1 %cmp380 to i32, !dbg !4807
  %conv382 = sext i32 %conv381 to i64, !dbg !4808
  store i64 %conv382, i64* getelementptr inbounds ([4 x %struct.gbhw_channel], [4 x %struct.gbhw_channel]* @gbhw_ch, i64 0, i64 2, i32 2), align 16, !dbg !4809
  %conv383 = zext i8 %val to i32, !dbg !4810
  %and384 = and i32 %conv383, 4, !dbg !4811
  %cmp385 = icmp sgt i32 %and384, 0, !dbg !4812
  %conv386 = zext i1 %cmp385 to i32, !dbg !4812
  %conv387 = sext i32 %conv386 to i64, !dbg !4813
  store i64 %conv387, i64* getelementptr inbounds ([4 x %struct.gbhw_channel], [4 x %struct.gbhw_channel]* @gbhw_ch, i64 0, i64 2, i32 3), align 8, !dbg !4814
  %conv388 = zext i8 %val to i32, !dbg !4815
  %and389 = and i32 %conv388, 128, !dbg !4816
  %cmp390 = icmp sgt i32 %and389, 0, !dbg !4817
  %conv391 = zext i1 %cmp390 to i32, !dbg !4817
  %conv392 = sext i32 %conv391 to i64, !dbg !4818
  store i64 %conv392, i64* getelementptr inbounds ([4 x %struct.gbhw_channel], [4 x %struct.gbhw_channel]* @gbhw_ch, i64 0, i64 3, i32 2), align 16, !dbg !4819
  %conv393 = zext i8 %val to i32, !dbg !4820
  %and394 = and i32 %conv393, 8, !dbg !4821
  %cmp395 = icmp sgt i32 %and394, 0, !dbg !4822
  %conv396 = zext i1 %cmp395 to i32, !dbg !4822
  %conv397 = sext i32 %conv396 to i64, !dbg !4823
  store i64 %conv397, i64* getelementptr inbounds ([4 x %struct.gbhw_channel], [4 x %struct.gbhw_channel]* @gbhw_ch, i64 0, i64 3, i32 3), align 8, !dbg !4824
  br label %switch_break, !dbg !4825

case_65318:                                       ; preds = %if.then103
  store i8 -128, i8* getelementptr inbounds ([128 x i8], [128 x i8]* @ioregs, i64 0, i64 38), align 2, !dbg !4826
  br label %switch_break, !dbg !4827

case_65535:                                       ; preds = %if.then215, %if.then211, %if.then207, %if.then203, %if.then199, %if.then195, %if.then191, %if.then187, %if.then183, %if.then179, %if.then175, %if.then171, %if.then167, %if.then163, %if.then159, %if.then155, %if.then151, %if.then147, %if.then143, %if.then139, %if.then135, %if.then131, %if.then127, %if.then123, %if.then119, %if.then115, %if.then111, %if.then107
  br label %case_65343, !dbg !4827

case_65343:                                       ; preds = %case_65535
  br label %case_65342, !dbg !4827

case_65342:                                       ; preds = %case_65343
  br label %case_65341, !dbg !4827

case_65341:                                       ; preds = %case_65342
  br label %case_65340, !dbg !4827

case_65340:                                       ; preds = %case_65341
  br label %case_65339, !dbg !4827

case_65339:                                       ; preds = %case_65340
  br label %case_65338, !dbg !4827

case_65338:                                       ; preds = %case_65339
  br label %case_65337, !dbg !4827

case_65337:                                       ; preds = %case_65338
  br label %case_65336, !dbg !4827

case_65336:                                       ; preds = %case_65337
  br label %case_65335, !dbg !4827

case_65335:                                       ; preds = %case_65336
  br label %case_65334, !dbg !4827

case_65334:                                       ; preds = %case_65335
  br label %case_65333, !dbg !4827

case_65333:                                       ; preds = %case_65334
  br label %case_65332, !dbg !4827

case_65332:                                       ; preds = %case_65333
  br label %case_65331, !dbg !4827

case_65331:                                       ; preds = %case_65332
  br label %case_65330, !dbg !4827

case_65330:                                       ; preds = %case_65331
  br label %case_65329, !dbg !4827

case_65329:                                       ; preds = %case_65330
  br label %case_65328, !dbg !4827

case_65328:                                       ; preds = %case_65329
  br label %case_65327, !dbg !4827

case_65327:                                       ; preds = %case_65328
  br label %case_65326, !dbg !4827

case_65326:                                       ; preds = %case_65327
  br label %case_65325, !dbg !4827

case_65325:                                       ; preds = %case_65326
  br label %case_65324, !dbg !4827

case_65324:                                       ; preds = %case_65325
  br label %case_65323, !dbg !4827

case_65323:                                       ; preds = %case_65324
  br label %case_65322, !dbg !4827

case_65322:                                       ; preds = %case_65323
  br label %case_65321, !dbg !4827

case_65321:                                       ; preds = %case_65322
  br label %case_65320, !dbg !4827

case_65320:                                       ; preds = %case_65321
  br label %case_65319, !dbg !4827

case_65319:                                       ; preds = %case_65320
  br label %case_65316, !dbg !4827

case_65316:                                       ; preds = %case_65319
  br label %case_65280, !dbg !4827

case_65280:                                       ; preds = %case_65316
  br label %switch_break, !dbg !4828

switch_default:                                   ; preds = %if.end216
  %23 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !4829
  %conv398 = zext i8 %val to i32, !dbg !4832
  %call = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %23, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.67, i32 0, i32 0), i32 %addr, i32 %conv398), !dbg !4833
  br label %switch_break, !dbg !4834

switch_break:                                     ; preds = %switch_default, %case_65280, %case_65318, %case_65317, %if.end350, %if.then349, %case_65311, %case_65308, %case_65307, %case_65306, %case_65301, %if.end308, %if.then305, %if.then301, %if.then298, %case_65298, %case_65297, %case_65296, %if.end229
  br label %return, !dbg !4835

return:                                           ; preds = %switch_break, %if.then4
  ret void, !dbg !4836
}

; Function Attrs: noinline nounwind ssp uwtable
define internal i32 @io_get(i32 %addr) #0 !dbg !4837 {
entry:
  call void @llvm.dbg.value(metadata i32 %addr, metadata !4838, metadata !DIExpression()), !dbg !4839
  call void @llvm.dbg.declare(metadata !666, metadata !4840, metadata !DIExpression()), !dbg !4841
  %cmp = icmp uge i32 %addr, 65408, !dbg !4842
  br i1 %cmp, label %if.then, label %if.end3, !dbg !4845

if.then:                                          ; preds = %entry
  %cmp1 = icmp ule i32 %addr, 65534, !dbg !4846
  br i1 %cmp1, label %if.then2, label %if.end, !dbg !4849

if.then2:                                         ; preds = %if.then
  %and = and i32 %addr, 127, !dbg !4850
  %idxprom = zext i32 %and to i64, !dbg !4852
  %arrayidx = getelementptr inbounds [128 x i8], [128 x i8]* @hiram, i64 0, i64 %idxprom, !dbg !4852
  %0 = load i8, i8* %arrayidx, align 1, !dbg !4852
  %conv = zext i8 %0 to i32, !dbg !4853
  br label %return, !dbg !4854

if.end:                                           ; preds = %if.then
  br label %if.end3, !dbg !4855

if.end3:                                          ; preds = %if.end, %entry
  %cmp4 = icmp uge i32 %addr, 65296, !dbg !4856
  br i1 %cmp4, label %if.then6, label %if.end15, !dbg !4858

if.then6:                                         ; preds = %if.end3
  %cmp7 = icmp ule i32 %addr, 65343, !dbg !4859
  br i1 %cmp7, label %if.then9, label %if.end14, !dbg !4862

if.then9:                                         ; preds = %if.then6
  %and10 = and i32 %addr, 127, !dbg !4863
  %idxprom11 = zext i32 %and10 to i64, !dbg !4865
  %arrayidx12 = getelementptr inbounds [128 x i8], [128 x i8]* @ioregs, i64 0, i64 %idxprom11, !dbg !4865
  %1 = load i8, i8* %arrayidx12, align 1, !dbg !4865
  %conv13 = zext i8 %1 to i32, !dbg !4866
  br label %return, !dbg !4867

if.end14:                                         ; preds = %if.then6
  br label %if.end15, !dbg !4868

if.end15:                                         ; preds = %if.end14, %if.end3
  %cmp16 = icmp eq i32 %addr, 65280, !dbg !4869
  br i1 %cmp16, label %if.then18, label %if.end19, !dbg !4871

if.then18:                                        ; preds = %if.end15
  br label %return, !dbg !4872

if.end19:                                         ; preds = %if.end15
  %cmp20 = icmp eq i32 %addr, 65535, !dbg !4874
  br i1 %cmp20, label %if.then22, label %if.end24, !dbg !4876

if.then22:                                        ; preds = %if.end19
  %2 = load i8, i8* getelementptr inbounds ([128 x i8], [128 x i8]* @ioregs, i64 0, i64 127), align 1, !dbg !4877
  %conv23 = zext i8 %2 to i32, !dbg !4879
  br label %return, !dbg !4880

if.end24:                                         ; preds = %if.end19
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !4881
  %call = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %3, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.68, i32 0, i32 0), i32 %addr), !dbg !4884
  br label %while.body, !dbg !4885

while.body:                                       ; preds = %if.end24
  br label %while_continue___0, !dbg !4888

while_continue___0:                               ; preds = %while.body
  br label %while_continue, !dbg !4888

while_continue:                                   ; preds = %while_continue___0
  br label %while_break, !dbg !4889

while_break___0:                                  ; No predecessors!
  br label %while_break, !dbg !4891

while_break:                                      ; preds = %while_break___0, %while_continue
  br label %return, !dbg !4892

return:                                           ; preds = %while_break, %if.then22, %if.then18, %if.then9, %if.then2
  %retval.0 = phi i32 [ %conv, %if.then2 ], [ %conv13, %if.then9 ], [ 0, %if.then18 ], [ %conv23, %if.then22 ], [ 255, %while_break ], !dbg !4893
  ret i32 %retval.0, !dbg !4894
}

declare i32 @usleep(i32) #5

; Function Attrs: noinline nounwind ssp uwtable
define internal void @gb_sound(i64 %cycles) #0 !dbg !4895 {
entry:
  call void @llvm.dbg.value(metadata i64 %cycles, metadata !4896, metadata !DIExpression()), !dbg !4897
  call void @llvm.dbg.declare(metadata !666, metadata !4898, metadata !DIExpression()), !dbg !4899
  call void @llvm.dbg.declare(metadata !666, metadata !4900, metadata !DIExpression()), !dbg !4901
  call void @llvm.dbg.declare(metadata !666, metadata !4902, metadata !DIExpression()), !dbg !4903
  call void @llvm.dbg.value(metadata i64 0, metadata !4904, metadata !DIExpression()), !dbg !4897
  call void @llvm.dbg.value(metadata i64 0, metadata !4905, metadata !DIExpression()), !dbg !4897
  %0 = load %struct.gbhw_buffer*, %struct.gbhw_buffer** @impbuf, align 8, !dbg !4906
  %1 = ptrtoint %struct.gbhw_buffer* %0 to i64, !dbg !4909
  %cmp = icmp ne i64 %1, 0, !dbg !4910
  br i1 %cmp, label %if.end, label %if.then, !dbg !4911

if.then:                                          ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.69, i32 0, i32 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.64, i32 0, i32 0), i32 451, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.70, i32 0, i32 0)) #9, !dbg !4912
  unreachable, !dbg !4912

if.end:                                           ; preds = %entry
  call void @llvm.dbg.value(metadata i64 0, metadata !4916, metadata !DIExpression()), !dbg !4897
  br label %while.body, !dbg !4917

while.body:                                       ; preds = %if.end157, %if.end
  %r_lvl.0 = phi i64 [ 0, %if.end ], [ %r_lvl.2, %if.end157 ], !dbg !4920
  %l_lvl.0 = phi i64 [ 0, %if.end ], [ %l_lvl.2, %if.end157 ], !dbg !4920
  %j.0 = phi i64 [ 0, %if.end ], [ %inc158, %if.end157 ], !dbg !4920
  call void @llvm.dbg.value(metadata i64 %j.0, metadata !4916, metadata !DIExpression()), !dbg !4897
  call void @llvm.dbg.value(metadata i64 %l_lvl.0, metadata !4904, metadata !DIExpression()), !dbg !4897
  call void @llvm.dbg.value(metadata i64 %r_lvl.0, metadata !4905, metadata !DIExpression()), !dbg !4897
  br label %while_continue___2, !dbg !4921

while_continue___2:                               ; preds = %while.body
  br label %while_continue, !dbg !4921

while_continue:                                   ; preds = %while_continue___2
  %cmp1 = icmp slt i64 %j.0, %cycles, !dbg !4922
  br i1 %cmp1, label %if.end3, label %if.then2, !dbg !4925

if.then2:                                         ; preds = %while_continue
  br label %while_break, !dbg !4926

if.end3:                                          ; preds = %while_continue
  %2 = load i64, i64* @main_div, align 8, !dbg !4928
  %inc = add nsw i64 %2, 1, !dbg !4928
  store i64 %inc, i64* @main_div, align 8, !dbg !4928
  %3 = load %struct.gbhw_buffer*, %struct.gbhw_buffer** @impbuf, align 8, !dbg !4929
  %cycles4 = getelementptr inbounds %struct.gbhw_buffer, %struct.gbhw_buffer* %3, i32 0, i32 6, !dbg !4930
  %4 = load i64, i64* %cycles4, align 8, !dbg !4931
  %inc5 = add nsw i64 %4, 1, !dbg !4931
  store i64 %inc5, i64* %cycles4, align 8, !dbg !4931
  %5 = load %struct.gbhw_buffer*, %struct.gbhw_buffer** @impbuf, align 8, !dbg !4932
  %cycles6 = getelementptr inbounds %struct.gbhw_buffer, %struct.gbhw_buffer* %5, i32 0, i32 6, !dbg !4934
  %6 = load i64, i64* %cycles6, align 8, !dbg !4934
  %mul = mul nsw i64 %6, 65536, !dbg !4935
  %7 = load i64, i64* @sound_div_tc, align 8, !dbg !4936
  %8 = load %struct.gbhw_buffer*, %struct.gbhw_buffer** @impbuf, align 8, !dbg !4937
  %samples = getelementptr inbounds %struct.gbhw_buffer, %struct.gbhw_buffer* %8, i32 0, i32 5, !dbg !4938
  %9 = load i64, i64* %samples, align 8, !dbg !4938
  %10 = load i64, i64* @impulse_w_shift, align 8, !dbg !4939
  %sh_prom = trunc i64 %10 to i32, !dbg !4940
  %shl = shl i32 1, %sh_prom, !dbg !4940
  %div = sdiv i32 %shl, 2, !dbg !4941
  %conv = sext i32 %div to i64, !dbg !4942
  %sub = sub nsw i64 %9, %conv, !dbg !4943
  %mul7 = mul nsw i64 %7, %sub, !dbg !4944
  %cmp8 = icmp sge i64 %mul, %mul7, !dbg !4945
  br i1 %cmp8, label %if.then10, label %if.end11, !dbg !4946

if.then10:                                        ; preds = %if.end3
  call void @gb_flush_buffer(), !dbg !4947
  br label %if.end11, !dbg !4951

if.end11:                                         ; preds = %if.then10, %if.end3
  %11 = load i64, i64* getelementptr inbounds ([4 x %struct.gbhw_channel], [4 x %struct.gbhw_channel]* @gbhw_ch, i64 0, i64 2, i32 1), align 8, !dbg !4952
  %tobool = icmp ne i64 %11, 0, !dbg !4954
  br i1 %tobool, label %if.then12, label %if.end46, !dbg !4955

if.then12:                                        ; preds = %if.end11
  %12 = load i64, i64* getelementptr inbounds ([4 x %struct.gbhw_channel], [4 x %struct.gbhw_channel]* @gbhw_ch, i64 0, i64 2, i32 17), align 8, !dbg !4956
  %dec = add nsw i64 %12, -1, !dbg !4956
  store i64 %dec, i64* getelementptr inbounds ([4 x %struct.gbhw_channel], [4 x %struct.gbhw_channel]* @gbhw_ch, i64 0, i64 2, i32 17), align 8, !dbg !4956
  %13 = load i64, i64* getelementptr inbounds ([4 x %struct.gbhw_channel], [4 x %struct.gbhw_channel]* @gbhw_ch, i64 0, i64 2, i32 17), align 8, !dbg !4958
  %cmp13 = icmp sle i64 %13, 0, !dbg !4960
  br i1 %cmp13, label %if.then15, label %if.end45, !dbg !4961

if.then15:                                        ; preds = %if.then12
  %14 = load i64, i64* @ch3pos, align 8, !dbg !4962
  call void @llvm.dbg.value(metadata i64 %14, metadata !4964, metadata !DIExpression()), !dbg !4897
  %15 = load i64, i64* @ch3pos, align 8, !dbg !4965
  %inc16 = add nsw i64 %15, 1, !dbg !4965
  store i64 %inc16, i64* @ch3pos, align 8, !dbg !4965
  call void @llvm.dbg.value(metadata i64 %14, metadata !4966, metadata !DIExpression()), !dbg !4897
  %shr = ashr i64 %14, 1, !dbg !4967
  %and = and i64 %shr, 15, !dbg !4968
  call void @llvm.dbg.value(metadata i64 %and, metadata !4969, metadata !DIExpression()), !dbg !4897
  %neg = xor i64 %14, -1, !dbg !4970
  %and17 = and i64 %neg, 1, !dbg !4971
  %shl18 = shl i64 %and17, 2, !dbg !4972
  call void @llvm.dbg.value(metadata i64 %shl18, metadata !4973, metadata !DIExpression()), !dbg !4897
  %add.ptr = getelementptr inbounds i8, i8* getelementptr inbounds ([128 x i8], [128 x i8]* @ioregs, i64 0, i64 48), i64 %and, !dbg !4974
  %16 = load i8, i8* %add.ptr, align 1, !dbg !4972
  %conv19 = zext i8 %16 to i32, !dbg !4971
  %sh_prom20 = trunc i64 %shl18 to i32, !dbg !4975
  %shr21 = ashr i32 %conv19, %sh_prom20, !dbg !4975
  %and22 = and i32 %shr21, 15, !dbg !4976
  %conv23 = sext i32 %and22 to i64, !dbg !4977
  call void @llvm.dbg.value(metadata i64 %conv23, metadata !4978, metadata !DIExpression()), !dbg !4897
  %17 = load i64, i64* getelementptr inbounds ([4 x %struct.gbhw_channel], [4 x %struct.gbhw_channel]* @gbhw_ch, i64 0, i64 2, i32 4), align 16, !dbg !4979
  call void @llvm.dbg.value(metadata i64 %17, metadata !4980, metadata !DIExpression()), !dbg !4897
  %18 = load i64, i64* getelementptr inbounds ([4 x %struct.gbhw_channel], [4 x %struct.gbhw_channel]* @gbhw_ch, i64 0, i64 2, i32 5), align 8, !dbg !4981
  call void @llvm.dbg.value(metadata i64 %18, metadata !4982, metadata !DIExpression()), !dbg !4897
  %19 = load i64, i64* getelementptr inbounds ([4 x %struct.gbhw_channel], [4 x %struct.gbhw_channel]* @gbhw_ch, i64 0, i64 2, i32 16), align 16, !dbg !4983
  %mul24 = mul nsw i64 %19, 2, !dbg !4984
  store i64 %mul24, i64* getelementptr inbounds ([4 x %struct.gbhw_channel], [4 x %struct.gbhw_channel]* @gbhw_ch, i64 0, i64 2, i32 17), align 8, !dbg !4985
  %20 = load i64, i64* getelementptr inbounds ([4 x %struct.gbhw_channel], [4 x %struct.gbhw_channel]* @gbhw_ch, i64 0, i64 2, i32 6), align 16, !dbg !4986
  %tobool25 = icmp ne i64 %20, 0, !dbg !4988
  br i1 %tobool25, label %if.then26, label %if.else, !dbg !4989

if.then26:                                        ; preds = %if.then15
  %21 = load i64, i64* getelementptr inbounds ([4 x %struct.gbhw_channel], [4 x %struct.gbhw_channel]* @gbhw_ch, i64 0, i64 2, i32 6), align 16, !dbg !4990
  %sub27 = sub nsw i64 %21, 1, !dbg !4992
  %shr28 = ashr i64 %conv23, %sub27, !dbg !4993
  call void @llvm.dbg.value(metadata i64 %shr28, metadata !4978, metadata !DIExpression()), !dbg !4897
  br label %if.end29, !dbg !4994

if.else:                                          ; preds = %if.then15
  call void @llvm.dbg.value(metadata i64 0, metadata !4978, metadata !DIExpression()), !dbg !4897
  br label %if.end29

if.end29:                                         ; preds = %if.else, %if.then26
  %val.0 = phi i64 [ %shr28, %if.then26 ], [ 0, %if.else ], !dbg !4995
  call void @llvm.dbg.value(metadata i64 %val.0, metadata !4978, metadata !DIExpression()), !dbg !4897
  %mul30 = mul nsw i64 %val.0, 2, !dbg !4996
  call void @llvm.dbg.value(metadata i64 %mul30, metadata !4978, metadata !DIExpression()), !dbg !4897
  %22 = load i64, i64* getelementptr inbounds ([4 x %struct.gbhw_channel], [4 x %struct.gbhw_channel]* @gbhw_ch, i64 0, i64 2, i32 6), align 16, !dbg !4997
  %tobool31 = icmp ne i64 %22, 0, !dbg !4999
  br i1 %tobool31, label %if.then32, label %if.end42, !dbg !5000

if.then32:                                        ; preds = %if.end29
  %23 = load i64, i64* getelementptr inbounds ([4 x %struct.gbhw_channel], [4 x %struct.gbhw_channel]* @gbhw_ch, i64 0, i64 2, i32 0), align 16, !dbg !5001
  %tobool33 = icmp ne i64 %23, 0, !dbg !5004
  br i1 %tobool33, label %if.end41, label %if.then34, !dbg !5005

if.then34:                                        ; preds = %if.then32
  %24 = load i64, i64* getelementptr inbounds ([4 x %struct.gbhw_channel], [4 x %struct.gbhw_channel]* @gbhw_ch, i64 0, i64 2, i32 2), align 16, !dbg !5006
  %tobool35 = icmp ne i64 %24, 0, !dbg !5009
  br i1 %tobool35, label %if.then36, label %if.end37, !dbg !5010

if.then36:                                        ; preds = %if.then34
  store i64 %mul30, i64* getelementptr inbounds ([4 x %struct.gbhw_channel], [4 x %struct.gbhw_channel]* @gbhw_ch, i64 0, i64 2, i32 4), align 16, !dbg !5011
  br label %if.end37, !dbg !5013

if.end37:                                         ; preds = %if.then36, %if.then34
  %25 = load i64, i64* getelementptr inbounds ([4 x %struct.gbhw_channel], [4 x %struct.gbhw_channel]* @gbhw_ch, i64 0, i64 2, i32 3), align 8, !dbg !5014
  %tobool38 = icmp ne i64 %25, 0, !dbg !5016
  br i1 %tobool38, label %if.then39, label %if.end40, !dbg !5017

if.then39:                                        ; preds = %if.end37
  store i64 %mul30, i64* getelementptr inbounds ([4 x %struct.gbhw_channel], [4 x %struct.gbhw_channel]* @gbhw_ch, i64 0, i64 2, i32 5), align 8, !dbg !5018
  br label %if.end40, !dbg !5020

if.end40:                                         ; preds = %if.then39, %if.end37
  br label %if.end41, !dbg !5021

if.end41:                                         ; preds = %if.end40, %if.then32
  br label %if.end42, !dbg !5022

if.end42:                                         ; preds = %if.end41, %if.end29
  %26 = load i64, i64* getelementptr inbounds ([4 x %struct.gbhw_channel], [4 x %struct.gbhw_channel]* @gbhw_ch, i64 0, i64 2, i32 4), align 16, !dbg !5023
  %sub43 = sub nsw i64 %26, %17, !dbg !5025
  call void @llvm.dbg.value(metadata i64 %sub43, metadata !5026, metadata !DIExpression()), !dbg !4897
  %27 = load i64, i64* getelementptr inbounds ([4 x %struct.gbhw_channel], [4 x %struct.gbhw_channel]* @gbhw_ch, i64 0, i64 2, i32 5), align 8, !dbg !5027
  %sub44 = sub nsw i64 %27, %18, !dbg !5028
  call void @llvm.dbg.value(metadata i64 %sub44, metadata !5029, metadata !DIExpression()), !dbg !4897
  call void @gb_change_level(i64 %sub43, i64 %sub44), !dbg !5030
  br label %if.end45, !dbg !5032

if.end45:                                         ; preds = %if.end42, %if.then12
  br label %if.end46, !dbg !5033

if.end46:                                         ; preds = %if.end45, %if.end11
  %28 = load i64, i64* @main_div, align 8, !dbg !5034
  %cmp47 = icmp sgt i64 %28, 32, !dbg !5036
  br i1 %cmp47, label %if.then49, label %if.end157, !dbg !5037

if.then49:                                        ; preds = %if.end46
  %29 = load i64, i64* @main_div, align 8, !dbg !5038
  %sub50 = sub nsw i64 %29, 32, !dbg !5038
  store i64 %sub50, i64* @main_div, align 8, !dbg !5038
  call void @llvm.dbg.value(metadata i64 0, metadata !5040, metadata !DIExpression()), !dbg !4897
  br label %while.body52, !dbg !5041

while.body52:                                     ; preds = %if.end95, %if.then49
  %i.0 = phi i64 [ 0, %if.then49 ], [ %inc96, %if.end95 ], !dbg !5044
  call void @llvm.dbg.value(metadata i64 %i.0, metadata !5040, metadata !DIExpression()), !dbg !4897
  br label %while_continue___3, !dbg !5045

while_continue___3:                               ; preds = %while.body52
  br label %while_continue___0, !dbg !5045

while_continue___0:                               ; preds = %while_continue___3
  %cmp53 = icmp slt i64 %i.0, 2, !dbg !5046
  br i1 %cmp53, label %if.end56, label %if.then55, !dbg !5049

if.then55:                                        ; preds = %while_continue___0
  br label %while_break___0, !dbg !5050

if.end56:                                         ; preds = %while_continue___0
  %arrayidx = getelementptr inbounds [4 x %struct.gbhw_channel], [4 x %struct.gbhw_channel]* @gbhw_ch, i64 0, i64 %i.0, !dbg !5052
  %master = getelementptr inbounds %struct.gbhw_channel, %struct.gbhw_channel* %arrayidx, i32 0, i32 1, !dbg !5054
  %30 = load i64, i64* %master, align 8, !dbg !5054
  %tobool57 = icmp ne i64 %30, 0, !dbg !5052
  br i1 %tobool57, label %if.then58, label %if.end95, !dbg !5049

if.then58:                                        ; preds = %if.end56
  %arrayidx59 = getelementptr inbounds [4 x %struct.gbhw_channel], [4 x %struct.gbhw_channel]* @gbhw_ch, i64 0, i64 %i.0, !dbg !5055
  %volume = getelementptr inbounds %struct.gbhw_channel, %struct.gbhw_channel* %arrayidx59, i32 0, i32 6, !dbg !5057
  %31 = load i64, i64* %volume, align 16, !dbg !5057
  call void @llvm.dbg.value(metadata i64 %31, metadata !5058, metadata !DIExpression()), !dbg !4897
  %arrayidx60 = getelementptr inbounds [4 x %struct.gbhw_channel], [4 x %struct.gbhw_channel]* @gbhw_ch, i64 0, i64 %i.0, !dbg !5059
  %div_ctr = getelementptr inbounds %struct.gbhw_channel, %struct.gbhw_channel* %arrayidx60, i32 0, i32 17, !dbg !5061
  %32 = load i64, i64* %div_ctr, align 8, !dbg !5061
  %arrayidx61 = getelementptr inbounds [4 x %struct.gbhw_channel], [4 x %struct.gbhw_channel]* @gbhw_ch, i64 0, i64 %i.0, !dbg !5062
  %duty_tc = getelementptr inbounds %struct.gbhw_channel, %struct.gbhw_channel* %arrayidx61, i32 0, i32 18, !dbg !5063
  %33 = load i64, i64* %duty_tc, align 16, !dbg !5063
  %cmp62 = icmp sgt i64 %32, %33, !dbg !5064
  br i1 %cmp62, label %if.then64, label %if.end66, !dbg !5065

if.then64:                                        ; preds = %if.then58
  %sub65 = sub nsw i64 0, %31, !dbg !5066
  call void @llvm.dbg.value(metadata i64 %sub65, metadata !5058, metadata !DIExpression()), !dbg !4897
  br label %if.end66, !dbg !5068

if.end66:                                         ; preds = %if.then64, %if.then58
  %val___0.0 = phi i64 [ %sub65, %if.then64 ], [ %31, %if.then58 ], !dbg !5069
  call void @llvm.dbg.value(metadata i64 %val___0.0, metadata !5058, metadata !DIExpression()), !dbg !4897
  %arrayidx67 = getelementptr inbounds [4 x %struct.gbhw_channel], [4 x %struct.gbhw_channel]* @gbhw_ch, i64 0, i64 %i.0, !dbg !5070
  %mute = getelementptr inbounds %struct.gbhw_channel, %struct.gbhw_channel* %arrayidx67, i32 0, i32 0, !dbg !5072
  %34 = load i64, i64* %mute, align 16, !dbg !5072
  %tobool68 = icmp ne i64 %34, 0, !dbg !5070
  br i1 %tobool68, label %if.end82, label %if.then69, !dbg !5073

if.then69:                                        ; preds = %if.end66
  %arrayidx70 = getelementptr inbounds [4 x %struct.gbhw_channel], [4 x %struct.gbhw_channel]* @gbhw_ch, i64 0, i64 %i.0, !dbg !5074
  %leftgate = getelementptr inbounds %struct.gbhw_channel, %struct.gbhw_channel* %arrayidx70, i32 0, i32 2, !dbg !5077
  %35 = load i64, i64* %leftgate, align 16, !dbg !5077
  %tobool71 = icmp ne i64 %35, 0, !dbg !5074
  br i1 %tobool71, label %if.then72, label %if.end75, !dbg !5078

if.then72:                                        ; preds = %if.then69
  %arrayidx73 = getelementptr inbounds [4 x %struct.gbhw_channel], [4 x %struct.gbhw_channel]* @gbhw_ch, i64 0, i64 %i.0, !dbg !5079
  %l_lvl74 = getelementptr inbounds %struct.gbhw_channel, %struct.gbhw_channel* %arrayidx73, i32 0, i32 4, !dbg !5081
  store i64 %val___0.0, i64* %l_lvl74, align 16, !dbg !5082
  br label %if.end75, !dbg !5083

if.end75:                                         ; preds = %if.then72, %if.then69
  %arrayidx76 = getelementptr inbounds [4 x %struct.gbhw_channel], [4 x %struct.gbhw_channel]* @gbhw_ch, i64 0, i64 %i.0, !dbg !5084
  %rightgate = getelementptr inbounds %struct.gbhw_channel, %struct.gbhw_channel* %arrayidx76, i32 0, i32 3, !dbg !5086
  %36 = load i64, i64* %rightgate, align 8, !dbg !5086
  %tobool77 = icmp ne i64 %36, 0, !dbg !5084
  br i1 %tobool77, label %if.then78, label %if.end81, !dbg !5087

if.then78:                                        ; preds = %if.end75
  %arrayidx79 = getelementptr inbounds [4 x %struct.gbhw_channel], [4 x %struct.gbhw_channel]* @gbhw_ch, i64 0, i64 %i.0, !dbg !5088
  %r_lvl80 = getelementptr inbounds %struct.gbhw_channel, %struct.gbhw_channel* %arrayidx79, i32 0, i32 5, !dbg !5090
  store i64 %val___0.0, i64* %r_lvl80, align 8, !dbg !5091
  br label %if.end81, !dbg !5092

if.end81:                                         ; preds = %if.then78, %if.end75
  br label %if.end82, !dbg !5093

if.end82:                                         ; preds = %if.end81, %if.end66
  %arrayidx83 = getelementptr inbounds [4 x %struct.gbhw_channel], [4 x %struct.gbhw_channel]* @gbhw_ch, i64 0, i64 %i.0, !dbg !5094
  %div_ctr84 = getelementptr inbounds %struct.gbhw_channel, %struct.gbhw_channel* %arrayidx83, i32 0, i32 17, !dbg !5095
  %37 = load i64, i64* %div_ctr84, align 8, !dbg !5096
  %dec85 = add nsw i64 %37, -1, !dbg !5096
  store i64 %dec85, i64* %div_ctr84, align 8, !dbg !5096
  %arrayidx86 = getelementptr inbounds [4 x %struct.gbhw_channel], [4 x %struct.gbhw_channel]* @gbhw_ch, i64 0, i64 %i.0, !dbg !5097
  %div_ctr87 = getelementptr inbounds %struct.gbhw_channel, %struct.gbhw_channel* %arrayidx86, i32 0, i32 17, !dbg !5099
  %38 = load i64, i64* %div_ctr87, align 8, !dbg !5099
  %cmp88 = icmp sle i64 %38, 0, !dbg !5100
  br i1 %cmp88, label %if.then90, label %if.end94, !dbg !5101

if.then90:                                        ; preds = %if.end82
  %arrayidx91 = getelementptr inbounds [4 x %struct.gbhw_channel], [4 x %struct.gbhw_channel]* @gbhw_ch, i64 0, i64 %i.0, !dbg !5102
  %div_tc = getelementptr inbounds %struct.gbhw_channel, %struct.gbhw_channel* %arrayidx91, i32 0, i32 16, !dbg !5104
  %39 = load i64, i64* %div_tc, align 16, !dbg !5104
  %arrayidx92 = getelementptr inbounds [4 x %struct.gbhw_channel], [4 x %struct.gbhw_channel]* @gbhw_ch, i64 0, i64 %i.0, !dbg !5105
  %div_ctr93 = getelementptr inbounds %struct.gbhw_channel, %struct.gbhw_channel* %arrayidx92, i32 0, i32 17, !dbg !5106
  store i64 %39, i64* %div_ctr93, align 8, !dbg !5107
  br label %if.end94, !dbg !5108

if.end94:                                         ; preds = %if.then90, %if.end82
  br label %if.end95, !dbg !5109

if.end95:                                         ; preds = %if.end94, %if.end56
  %inc96 = add nsw i64 %i.0, 1, !dbg !5110
  call void @llvm.dbg.value(metadata i64 %inc96, metadata !5040, metadata !DIExpression()), !dbg !4897
  br label %while.body52, !dbg !5041, !llvm.loop !5111

while_break___3:                                  ; No predecessors!
  br label %while_break___0, !dbg !5113

while_break___0:                                  ; preds = %while_break___3, %if.then55
  call void @llvm.dbg.value(metadata i64 0, metadata !5040, metadata !DIExpression()), !dbg !4897
  br label %while.body98, !dbg !5114

while.body98:                                     ; preds = %if.end102, %while_break___0
  %r_lvl.1 = phi i64 [ %r_lvl.0, %while_break___0 ], [ %add107, %if.end102 ], !dbg !4920
  %l_lvl.1 = phi i64 [ %l_lvl.0, %while_break___0 ], [ %add, %if.end102 ], !dbg !4920
  %i.1 = phi i64 [ 0, %while_break___0 ], [ %inc108, %if.end102 ], !dbg !5044
  call void @llvm.dbg.value(metadata i64 %i.1, metadata !5040, metadata !DIExpression()), !dbg !4897
  call void @llvm.dbg.value(metadata i64 %l_lvl.1, metadata !4904, metadata !DIExpression()), !dbg !4897
  call void @llvm.dbg.value(metadata i64 %r_lvl.1, metadata !4905, metadata !DIExpression()), !dbg !4897
  br label %while_continue___4, !dbg !5117

while_continue___4:                               ; preds = %while.body98
  br label %while_continue___1, !dbg !5117

while_continue___1:                               ; preds = %while_continue___4
  %cmp99 = icmp slt i64 %i.1, 2, !dbg !5118
  br i1 %cmp99, label %if.end102, label %if.then101, !dbg !5121

if.then101:                                       ; preds = %while_continue___1
  br label %while_break___1, !dbg !5122

if.end102:                                        ; preds = %while_continue___1
  %arrayidx103 = getelementptr inbounds [4 x %struct.gbhw_channel], [4 x %struct.gbhw_channel]* @gbhw_ch, i64 0, i64 %i.1, !dbg !5124
  %l_lvl104 = getelementptr inbounds %struct.gbhw_channel, %struct.gbhw_channel* %arrayidx103, i32 0, i32 4, !dbg !5125
  %40 = load i64, i64* %l_lvl104, align 16, !dbg !5125
  %add = add nsw i64 %l_lvl.1, %40, !dbg !5126
  call void @llvm.dbg.value(metadata i64 %add, metadata !4904, metadata !DIExpression()), !dbg !4897
  %arrayidx105 = getelementptr inbounds [4 x %struct.gbhw_channel], [4 x %struct.gbhw_channel]* @gbhw_ch, i64 0, i64 %i.1, !dbg !5127
  %r_lvl106 = getelementptr inbounds %struct.gbhw_channel, %struct.gbhw_channel* %arrayidx105, i32 0, i32 5, !dbg !5128
  %41 = load i64, i64* %r_lvl106, align 8, !dbg !5128
  %add107 = add nsw i64 %r_lvl.1, %41, !dbg !5129
  call void @llvm.dbg.value(metadata i64 %add107, metadata !4905, metadata !DIExpression()), !dbg !4897
  %inc108 = add nsw i64 %i.1, 1, !dbg !5130
  call void @llvm.dbg.value(metadata i64 %inc108, metadata !5040, metadata !DIExpression()), !dbg !4897
  br label %while.body98, !dbg !5114, !llvm.loop !5131

while_break___4:                                  ; No predecessors!
  br label %while_break___1, !dbg !5133

while_break___1:                                  ; preds = %while_break___4, %if.then101
  %42 = load i64, i64* getelementptr inbounds ([4 x %struct.gbhw_channel], [4 x %struct.gbhw_channel]* @gbhw_ch, i64 0, i64 3, i32 1), align 8, !dbg !5134
  %tobool109 = icmp ne i64 %42, 0, !dbg !5136
  br i1 %tobool109, label %if.then110, label %if.end136, !dbg !5137

if.then110:                                       ; preds = %while_break___1
  %43 = load i64, i64* getelementptr inbounds ([4 x %struct.gbhw_channel], [4 x %struct.gbhw_channel]* @gbhw_ch, i64 0, i64 3, i32 0), align 16, !dbg !5138
  %tobool111 = icmp ne i64 %43, 0, !dbg !5141
  br i1 %tobool111, label %if.end119, label %if.then112, !dbg !5142

if.then112:                                       ; preds = %if.then110
  %44 = load i64, i64* getelementptr inbounds ([4 x %struct.gbhw_channel], [4 x %struct.gbhw_channel]* @gbhw_ch, i64 0, i64 3, i32 2), align 16, !dbg !5143
  %tobool113 = icmp ne i64 %44, 0, !dbg !5146
  br i1 %tobool113, label %if.then114, label %if.end115, !dbg !5147

if.then114:                                       ; preds = %if.then112
  %45 = load i64, i64* @val___1, align 8, !dbg !5148
  store i64 %45, i64* getelementptr inbounds ([4 x %struct.gbhw_channel], [4 x %struct.gbhw_channel]* @gbhw_ch, i64 0, i64 3, i32 4), align 16, !dbg !5150
  br label %if.end115, !dbg !5151

if.end115:                                        ; preds = %if.then114, %if.then112
  %46 = load i64, i64* getelementptr inbounds ([4 x %struct.gbhw_channel], [4 x %struct.gbhw_channel]* @gbhw_ch, i64 0, i64 3, i32 3), align 8, !dbg !5152
  %tobool116 = icmp ne i64 %46, 0, !dbg !5154
  br i1 %tobool116, label %if.then117, label %if.end118, !dbg !5155

if.then117:                                       ; preds = %if.end115
  %47 = load i64, i64* @val___1, align 8, !dbg !5156
  store i64 %47, i64* getelementptr inbounds ([4 x %struct.gbhw_channel], [4 x %struct.gbhw_channel]* @gbhw_ch, i64 0, i64 3, i32 5), align 8, !dbg !5158
  br label %if.end118, !dbg !5159

if.end118:                                        ; preds = %if.then117, %if.end115
  br label %if.end119, !dbg !5160

if.end119:                                        ; preds = %if.end118, %if.then110
  %48 = load i64, i64* getelementptr inbounds ([4 x %struct.gbhw_channel], [4 x %struct.gbhw_channel]* @gbhw_ch, i64 0, i64 3, i32 17), align 8, !dbg !5161
  %dec120 = add nsw i64 %48, -1, !dbg !5161
  store i64 %dec120, i64* getelementptr inbounds ([4 x %struct.gbhw_channel], [4 x %struct.gbhw_channel]* @gbhw_ch, i64 0, i64 3, i32 17), align 8, !dbg !5161
  %49 = load i64, i64* getelementptr inbounds ([4 x %struct.gbhw_channel], [4 x %struct.gbhw_channel]* @gbhw_ch, i64 0, i64 3, i32 17), align 8, !dbg !5162
  %cmp121 = icmp sle i64 %49, 0, !dbg !5164
  br i1 %cmp121, label %if.then123, label %if.end135, !dbg !5165

if.then123:                                       ; preds = %if.end119
  %50 = load i64, i64* getelementptr inbounds ([4 x %struct.gbhw_channel], [4 x %struct.gbhw_channel]* @gbhw_ch, i64 0, i64 3, i32 16), align 16, !dbg !5166
  store i64 %50, i64* getelementptr inbounds ([4 x %struct.gbhw_channel], [4 x %struct.gbhw_channel]* @gbhw_ch, i64 0, i64 3, i32 17), align 8, !dbg !5168
  %51 = load i32, i32* @lfsr, align 4, !dbg !5169
  %shl124 = shl i32 %51, 1, !dbg !5170
  %52 = load i32, i32* @lfsr, align 4, !dbg !5171
  %53 = load i32, i32* @tap1, align 4, !dbg !5172
  %and125 = and i32 %52, %53, !dbg !5173
  %cmp126 = icmp ugt i32 %and125, 0, !dbg !5174
  %conv127 = zext i1 %cmp126 to i32, !dbg !5174
  %54 = load i32, i32* @lfsr, align 4, !dbg !5175
  %55 = load i32, i32* @tap2, align 4, !dbg !5176
  %and128 = and i32 %54, %55, !dbg !5177
  %cmp129 = icmp ugt i32 %and128, 0, !dbg !5178
  %conv130 = zext i1 %cmp129 to i32, !dbg !5178
  %xor = xor i32 %conv127, %conv130, !dbg !5179
  %or = or i32 %shl124, %xor, !dbg !5180
  store i32 %or, i32* @lfsr, align 4, !dbg !5181
  %56 = load i64, i64* getelementptr inbounds ([4 x %struct.gbhw_channel], [4 x %struct.gbhw_channel]* @gbhw_ch, i64 0, i64 3, i32 6), align 16, !dbg !5182
  %57 = load i32, i32* @lfsr, align 4, !dbg !5183
  %and131 = and i32 %57, 2, !dbg !5184
  %sub132 = sub i32 %and131, 1, !dbg !5185
  %conv133 = zext i32 %sub132 to i64, !dbg !5186
  %mul134 = mul nsw i64 %56, %conv133, !dbg !5187
  store i64 %mul134, i64* @val___1, align 8, !dbg !5188
  br label %if.end135, !dbg !5189

if.end135:                                        ; preds = %if.then123, %if.end119
  br label %if.end136, !dbg !5190

if.end136:                                        ; preds = %if.end135, %while_break___1
  %58 = load i64, i64* getelementptr inbounds ([4 x %struct.gbhw_channel], [4 x %struct.gbhw_channel]* @gbhw_ch, i64 0, i64 3, i32 4), align 16, !dbg !5191
  %add137 = add nsw i64 %l_lvl.1, %58, !dbg !5192
  call void @llvm.dbg.value(metadata i64 %add137, metadata !4904, metadata !DIExpression()), !dbg !4897
  %59 = load i64, i64* getelementptr inbounds ([4 x %struct.gbhw_channel], [4 x %struct.gbhw_channel]* @gbhw_ch, i64 0, i64 3, i32 5), align 8, !dbg !5193
  %add138 = add nsw i64 %r_lvl.1, %59, !dbg !5194
  call void @llvm.dbg.value(metadata i64 %add138, metadata !4905, metadata !DIExpression()), !dbg !4897
  %60 = load i64, i64* @old_l, align 8, !dbg !5195
  %cmp139 = icmp ne i64 %add137, %60, !dbg !5197
  br i1 %cmp139, label %if.then141, label %if.else144, !dbg !5198

if.then141:                                       ; preds = %if.end136
  %61 = load i64, i64* @old_l, align 8, !dbg !5199
  %sub142 = sub nsw i64 %add137, %61, !dbg !5203
  %62 = load i64, i64* @old_r, align 8, !dbg !5204
  %sub143 = sub nsw i64 %add138, %62, !dbg !5205
  call void @gb_change_level(i64 %sub142, i64 %sub143), !dbg !5206
  store i64 %add137, i64* @old_l, align 8, !dbg !5207
  store i64 %add138, i64* @old_r, align 8, !dbg !5208
  br label %if.end151, !dbg !5209

if.else144:                                       ; preds = %if.end136
  %63 = load i64, i64* @old_r, align 8, !dbg !5210
  %cmp145 = icmp ne i64 %add138, %63, !dbg !5212
  br i1 %cmp145, label %if.then147, label %if.end150, !dbg !5213

if.then147:                                       ; preds = %if.else144
  %64 = load i64, i64* @old_l, align 8, !dbg !5214
  %sub148 = sub nsw i64 %add137, %64, !dbg !5218
  %65 = load i64, i64* @old_r, align 8, !dbg !5219
  %sub149 = sub nsw i64 %add138, %65, !dbg !5220
  call void @gb_change_level(i64 %sub148, i64 %sub149), !dbg !5221
  store i64 %add137, i64* @old_l, align 8, !dbg !5222
  store i64 %add138, i64* @old_r, align 8, !dbg !5223
  br label %if.end150, !dbg !5224

if.end150:                                        ; preds = %if.then147, %if.else144
  br label %if.end151

if.end151:                                        ; preds = %if.end150, %if.then141
  %66 = load i64, i64* @sweep_div, align 8, !dbg !5225
  %inc152 = add nsw i64 %66, 1, !dbg !5225
  store i64 %inc152, i64* @sweep_div, align 8, !dbg !5225
  %67 = load i64, i64* @sweep_div, align 8, !dbg !5226
  %cmp153 = icmp sge i64 %67, 256, !dbg !5228
  br i1 %cmp153, label %if.then155, label %if.end156, !dbg !5229

if.then155:                                       ; preds = %if.end151
  store i64 0, i64* @sweep_div, align 8, !dbg !5230
  call void @gb_sound_sweep(), !dbg !5233
  br label %if.end156, !dbg !5235

if.end156:                                        ; preds = %if.then155, %if.end151
  br label %if.end157, !dbg !5236

if.end157:                                        ; preds = %if.end156, %if.end46
  %r_lvl.2 = phi i64 [ %add138, %if.end156 ], [ %r_lvl.0, %if.end46 ], !dbg !4920
  %l_lvl.2 = phi i64 [ %add137, %if.end156 ], [ %l_lvl.0, %if.end46 ], !dbg !4920
  call void @llvm.dbg.value(metadata i64 %l_lvl.2, metadata !4904, metadata !DIExpression()), !dbg !4897
  call void @llvm.dbg.value(metadata i64 %r_lvl.2, metadata !4905, metadata !DIExpression()), !dbg !4897
  %inc158 = add nsw i64 %j.0, 1, !dbg !5237
  call void @llvm.dbg.value(metadata i64 %inc158, metadata !4916, metadata !DIExpression()), !dbg !4897
  br label %while.body, !dbg !4917, !llvm.loop !5238

while_break___2:                                  ; No predecessors!
  br label %while_break, !dbg !5240

while_break:                                      ; preds = %while_break___2, %if.then2
  ret void, !dbg !5241
}

; Function Attrs: noinline nounwind ssp uwtable
define void @gbhw_pause(i64 %new_pause) #0 !dbg !5242 {
entry:
  call void @llvm.dbg.value(metadata i64 %new_pause, metadata !5243, metadata !DIExpression()), !dbg !5244
  %cmp = icmp ne i64 %new_pause, 0, !dbg !5245
  %conv = zext i1 %cmp to i32, !dbg !5245
  %conv1 = sext i32 %conv to i64, !dbg !5247
  store i64 %conv1, i64* @pause_output, align 8, !dbg !5248
  ret void, !dbg !5249
}

; Function Attrs: noinline nounwind ssp uwtable
define internal i64 @devdsp_open(i32 %endian___1, i64 %rate___1) #0 !dbg !5250 {
entry:
  %c___3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %endian___1, metadata !5251, metadata !DIExpression()), !dbg !5252
  call void @llvm.dbg.value(metadata i64 %rate___1, metadata !5253, metadata !DIExpression()), !dbg !5252
  call void @llvm.dbg.declare(metadata i32* %c___3, metadata !5254, metadata !DIExpression()), !dbg !5255
  call void @llvm.dbg.declare(metadata !666, metadata !5256, metadata !DIExpression()), !dbg !5257
  call void @llvm.dbg.declare(metadata !666, metadata !5258, metadata !DIExpression()), !dbg !5259
  call void @llvm.dbg.declare(metadata !666, metadata !5260, metadata !DIExpression()), !dbg !5261
  call void @llvm.dbg.declare(metadata !666, metadata !5262, metadata !DIExpression()), !dbg !5263
  call void @llvm.dbg.declare(metadata !666, metadata !5264, metadata !DIExpression()), !dbg !5265
  call void @llvm.dbg.declare(metadata !666, metadata !5266, metadata !DIExpression()), !dbg !5267
  call void @llvm.dbg.declare(metadata !666, metadata !5268, metadata !DIExpression()), !dbg !5269
  call void @llvm.dbg.declare(metadata !666, metadata !5270, metadata !DIExpression()), !dbg !5271
  call void @llvm.dbg.declare(metadata !666, metadata !5272, metadata !DIExpression()), !dbg !5273
  %call = call i32 (i8*, i32, ...) @open(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.78, i32 0, i32 0), i32 2049), !dbg !5274
  store i32 %call, i32* @fd___0, align 4, !dbg !5278
  %0 = load i32, i32* @fd___0, align 4, !dbg !5279
  %cmp = icmp eq i32 %0, -1, !dbg !5281
  br i1 %cmp, label %if.then, label %if.end, !dbg !5282

if.then:                                          ; preds = %entry
  %call1 = call i32* @__errno_location() #10, !dbg !5283
  call void @llvm.dbg.value(metadata i32* %call1, metadata !5287, metadata !DIExpression()), !dbg !5252
  %1 = load i32, i32* %call1, align 4, !dbg !5288
  %call2 = call i8* @strerror(i32 %1) #11, !dbg !5290
  call void @llvm.dbg.value(metadata i8* %call2, metadata !5291, metadata !DIExpression()), !dbg !5252
  %call3 = call i8* @_(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.79, i32 0, i32 0)), !dbg !5292
  call void @llvm.dbg.value(metadata i8* %call3, metadata !5294, metadata !DIExpression()), !dbg !5252
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !5295
  %call4 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %2, i8* %call3, i8* %call2), !dbg !5297
  br label %return, !dbg !5298

if.end:                                           ; preds = %entry
  %3 = load i32, i32* @fd___0, align 4, !dbg !5299
  %call5 = call i32 (i32, i32, ...) @fcntl(i32 %3, i32 3), !dbg !5302
  call void @llvm.dbg.value(metadata i32 %call5, metadata !5303, metadata !DIExpression()), !dbg !5252
  %cmp6 = icmp eq i32 %call5, -1, !dbg !5304
  br i1 %cmp6, label %if.then7, label %if.else, !dbg !5306

if.then7:                                         ; preds = %if.end
  %call8 = call i32* @__errno_location() #10, !dbg !5307
  call void @llvm.dbg.value(metadata i32* %call8, metadata !5311, metadata !DIExpression()), !dbg !5252
  %4 = load i32, i32* %call8, align 4, !dbg !5312
  %call9 = call i8* @strerror(i32 %4) #11, !dbg !5314
  call void @llvm.dbg.value(metadata i8* %call9, metadata !5315, metadata !DIExpression()), !dbg !5252
  %call10 = call i8* @_(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.80, i32 0, i32 0)), !dbg !5316
  call void @llvm.dbg.value(metadata i8* %call10, metadata !5318, metadata !DIExpression()), !dbg !5252
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !5319
  %call11 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %5, i8* %call10, i8* %call9), !dbg !5321
  br label %if.end20, !dbg !5322

if.else:                                          ; preds = %if.end
  %6 = load i32, i32* @fd___0, align 4, !dbg !5323
  %and = and i32 %call5, -2049, !dbg !5327
  %call12 = call i32 (i32, i32, ...) @fcntl(i32 %6, i32 4, i32 %and), !dbg !5328
  call void @llvm.dbg.value(metadata i32 %call12, metadata !5329, metadata !DIExpression()), !dbg !5252
  %cmp13 = icmp eq i32 %call12, -1, !dbg !5330
  br i1 %cmp13, label %if.then14, label %if.end19, !dbg !5332

if.then14:                                        ; preds = %if.else
  %call15 = call i32* @__errno_location() #10, !dbg !5333
  call void @llvm.dbg.value(metadata i32* %call15, metadata !5337, metadata !DIExpression()), !dbg !5252
  %7 = load i32, i32* %call15, align 4, !dbg !5338
  %call16 = call i8* @strerror(i32 %7) #11, !dbg !5340
  call void @llvm.dbg.value(metadata i8* %call16, metadata !5341, metadata !DIExpression()), !dbg !5252
  %call17 = call i8* @_(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.81, i32 0, i32 0)), !dbg !5342
  call void @llvm.dbg.value(metadata i8* %call17, metadata !5344, metadata !DIExpression()), !dbg !5252
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !5345
  %call18 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %8, i8* %call17, i8* %call16), !dbg !5347
  br label %if.end19, !dbg !5348

if.end19:                                         ; preds = %if.then14, %if.else
  br label %if.end20

if.end20:                                         ; preds = %if.end19, %if.then7
  %cmp21 = icmp eq i32 %endian___1, 0, !dbg !5349
  br i1 %cmp21, label %if.then22, label %if.end23, !dbg !5352

if.then22:                                        ; preds = %if.end20
  br label %case_0, !dbg !5353

if.end23:                                         ; preds = %if.end20
  %cmp24 = icmp eq i32 %endian___1, 1, !dbg !5355
  br i1 %cmp24, label %if.then25, label %if.end26, !dbg !5357

if.then25:                                        ; preds = %if.end23
  br label %case_1, !dbg !5358

if.end26:                                         ; preds = %if.end23
  %cmp27 = icmp eq i32 %endian___1, 2, !dbg !5360
  br i1 %cmp27, label %if.then28, label %if.end29, !dbg !5362

if.then28:                                        ; preds = %if.end26
  br label %case_2, !dbg !5363

if.end29:                                         ; preds = %if.end26
  br label %switch_break, !dbg !5365

case_0:                                           ; preds = %if.then22
  store i32 32, i32* %c___3, align 4, !dbg !5366
  br label %switch_break, !dbg !5367

case_1:                                           ; preds = %if.then25
  store i32 16, i32* %c___3, align 4, !dbg !5368
  br label %switch_break, !dbg !5369

case_2:                                           ; preds = %if.then28
  store i32 16, i32* %c___3, align 4, !dbg !5370
  br label %switch_break, !dbg !5371

switch_break:                                     ; preds = %case_2, %case_1, %case_0, %if.end29
  %9 = load i32, i32* @fd___0, align 4, !dbg !5372
  %call30 = call i32 (i32, i64, ...) @ioctl(i32 %9, i64 3221508101, i32* %c___3) #11, !dbg !5375
  call void @llvm.dbg.value(metadata i32 %call30, metadata !5376, metadata !DIExpression()), !dbg !5252
  %cmp31 = icmp eq i32 %call30, -1, !dbg !5377
  br i1 %cmp31, label %if.then32, label %if.end37, !dbg !5379

if.then32:                                        ; preds = %switch_break
  %call33 = call i32* @__errno_location() #10, !dbg !5380
  call void @llvm.dbg.value(metadata i32* %call33, metadata !5384, metadata !DIExpression()), !dbg !5252
  %10 = load i32, i32* %call33, align 4, !dbg !5385
  %call34 = call i8* @strerror(i32 %10) #11, !dbg !5387
  call void @llvm.dbg.value(metadata i8* %call34, metadata !5388, metadata !DIExpression()), !dbg !5252
  %call35 = call i8* @_(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.82, i32 0, i32 0)), !dbg !5389
  call void @llvm.dbg.value(metadata i8* %call35, metadata !5391, metadata !DIExpression()), !dbg !5252
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !5392
  %12 = load i32, i32* %c___3, align 4, !dbg !5394
  %call36 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %11, i8* %call35, i32 %12, i8* %call34), !dbg !5395
  br label %return, !dbg !5396

if.end37:                                         ; preds = %switch_break
  %conv = trunc i64 %rate___1 to i32, !dbg !5397
  store i32 %conv, i32* %c___3, align 4, !dbg !5399
  %13 = load i32, i32* @fd___0, align 4, !dbg !5400
  %call38 = call i32 (i32, i64, ...) @ioctl(i32 %13, i64 3221508098, i32* %c___3) #11, !dbg !5402
  call void @llvm.dbg.value(metadata i32 %call38, metadata !5403, metadata !DIExpression()), !dbg !5252
  %cmp39 = icmp eq i32 %call38, -1, !dbg !5404
  br i1 %cmp39, label %if.then41, label %if.end46, !dbg !5406

if.then41:                                        ; preds = %if.end37
  %call42 = call i32* @__errno_location() #10, !dbg !5407
  call void @llvm.dbg.value(metadata i32* %call42, metadata !5411, metadata !DIExpression()), !dbg !5252
  %14 = load i32, i32* %call42, align 4, !dbg !5412
  %call43 = call i8* @strerror(i32 %14) #11, !dbg !5414
  call void @llvm.dbg.value(metadata i8* %call43, metadata !5415, metadata !DIExpression()), !dbg !5252
  %call44 = call i8* @_(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.83, i32 0, i32 0)), !dbg !5416
  call void @llvm.dbg.value(metadata i8* %call44, metadata !5418, metadata !DIExpression()), !dbg !5252
  %15 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !5419
  %call45 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %15, i8* %call44, i64 %rate___1, i8* %call43), !dbg !5421
  br label %return, !dbg !5422

if.end46:                                         ; preds = %if.end37
  %16 = load i32, i32* %c___3, align 4, !dbg !5423
  %conv47 = sext i32 %16 to i64, !dbg !5425
  %cmp48 = icmp ne i64 %conv47, %rate___1, !dbg !5426
  br i1 %cmp48, label %if.then50, label %if.end54, !dbg !5427

if.then50:                                        ; preds = %if.end46
  %call51 = call i8* @_(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.84, i32 0, i32 0)), !dbg !5428
  call void @llvm.dbg.value(metadata i8* %call51, metadata !5432, metadata !DIExpression()), !dbg !5252
  %17 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !5433
  %18 = load i32, i32* %c___3, align 4, !dbg !5435
  %call52 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %17, i8* %call51, i64 %rate___1, i32 %18), !dbg !5436
  %19 = load i32, i32* %c___3, align 4, !dbg !5437
  %conv53 = sext i32 %19 to i64, !dbg !5438
  call void @llvm.dbg.value(metadata i64 %conv53, metadata !5253, metadata !DIExpression()), !dbg !5252
  br label %if.end54, !dbg !5439

if.end54:                                         ; preds = %if.then50, %if.end46
  store i32 1, i32* %c___3, align 4, !dbg !5440
  %20 = load i32, i32* @fd___0, align 4, !dbg !5442
  %call55 = call i32 (i32, i64, ...) @ioctl(i32 %20, i64 3221508099, i32* %c___3) #11, !dbg !5444
  call void @llvm.dbg.value(metadata i32 %call55, metadata !5445, metadata !DIExpression()), !dbg !5252
  %cmp56 = icmp eq i32 %call55, -1, !dbg !5446
  br i1 %cmp56, label %if.then58, label %if.end63, !dbg !5448

if.then58:                                        ; preds = %if.end54
  %call59 = call i32* @__errno_location() #10, !dbg !5449
  call void @llvm.dbg.value(metadata i32* %call59, metadata !5453, metadata !DIExpression()), !dbg !5252
  %21 = load i32, i32* %call59, align 4, !dbg !5454
  %call60 = call i8* @strerror(i32 %21) #11, !dbg !5456
  call void @llvm.dbg.value(metadata i8* %call60, metadata !5457, metadata !DIExpression()), !dbg !5252
  %call61 = call i8* @_(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.85, i32 0, i32 0)), !dbg !5458
  call void @llvm.dbg.value(metadata i8* %call61, metadata !5460, metadata !DIExpression()), !dbg !5252
  %22 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !5461
  %23 = load i32, i32* %c___3, align 4, !dbg !5463
  %call62 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %22, i8* %call61, i32 %23, i8* %call60), !dbg !5464
  br label %return, !dbg !5465

if.end63:                                         ; preds = %if.end54
  store i32 262155, i32* %c___3, align 4, !dbg !5466
  %24 = load i32, i32* @fd___0, align 4, !dbg !5468
  %call64 = call i32 (i32, i64, ...) @ioctl(i32 %24, i64 3221508106, i32* %c___3) #11, !dbg !5470
  call void @llvm.dbg.value(metadata i32 %call64, metadata !5471, metadata !DIExpression()), !dbg !5252
  %cmp65 = icmp eq i32 %call64, -1, !dbg !5472
  br i1 %cmp65, label %if.then67, label %if.end72, !dbg !5474

if.then67:                                        ; preds = %if.end63
  %call68 = call i32* @__errno_location() #10, !dbg !5475
  call void @llvm.dbg.value(metadata i32* %call68, metadata !5479, metadata !DIExpression()), !dbg !5252
  %25 = load i32, i32* %call68, align 4, !dbg !5480
  %call69 = call i8* @strerror(i32 %25) #11, !dbg !5482
  call void @llvm.dbg.value(metadata i8* %call69, metadata !5483, metadata !DIExpression()), !dbg !5252
  %call70 = call i8* @_(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.86, i32 0, i32 0)), !dbg !5484
  call void @llvm.dbg.value(metadata i8* %call70, metadata !5486, metadata !DIExpression()), !dbg !5252
  %26 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !5487
  %27 = load i32, i32* %c___3, align 4, !dbg !5489
  %call71 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %26, i8* %call70, i32 %27, i8* %call69), !dbg !5490
  br label %if.end72, !dbg !5491

if.end72:                                         ; preds = %if.then67, %if.end63
  br label %return, !dbg !5492

return:                                           ; preds = %if.end72, %if.then58, %if.then41, %if.then32, %if.then
  %retval.0 = phi i64 [ -1, %if.then ], [ -1, %if.then32 ], [ -1, %if.then41 ], [ -1, %if.then58 ], [ 0, %if.end72 ], !dbg !5493
  ret i64 %retval.0, !dbg !5494
}

; Function Attrs: noinline nounwind ssp uwtable
define internal i32 @devdsp_write(i8* %buf___3, i32 %count) #0 !dbg !5495 {
entry:
  call void @llvm.dbg.value(metadata i8* %buf___3, metadata !5496, metadata !DIExpression()), !dbg !5497
  call void @llvm.dbg.value(metadata i32 %count, metadata !5498, metadata !DIExpression()), !dbg !5497
  %0 = load i32, i32* @fd___0, align 4, !dbg !5499
  %call = call i32 @write(i32 %0, i8* %buf___3, i32 %count), !dbg !5503
  call void @llvm.dbg.value(metadata i32 %call, metadata !5504, metadata !DIExpression()), !dbg !5497
  ret i32 %call, !dbg !5505
}

; Function Attrs: noinline nounwind ssp uwtable
define internal void @devdsp_close() #0 !dbg !5506 {
entry:
  %0 = load i32, i32* @fd___0, align 4, !dbg !5507
  %call = call i32 @close(i32 %0), !dbg !5511
  ret void, !dbg !5512
}

; Function Attrs: noinline nounwind ssp uwtable
define internal i64 @stdout_open(i32 %endian___1, i64 %rate___1) #0 !dbg !5513 {
entry:
  call void @llvm.dbg.value(metadata i32 %endian___1, metadata !5514, metadata !DIExpression()), !dbg !5515
  call void @llvm.dbg.value(metadata i64 %rate___1, metadata !5516, metadata !DIExpression()), !dbg !5515
  %call = call i32 @dup(i32 1) #11, !dbg !5517
  store i32 %call, i32* @fd, align 4, !dbg !5521
  %0 = load i32, i32* @fd, align 4, !dbg !5522
  %cmp = icmp eq i32 %0, -1, !dbg !5524
  br i1 %cmp, label %if.then, label %if.end, !dbg !5525

if.then:                                          ; preds = %entry
  br label %return, !dbg !5526

if.end:                                           ; preds = %entry
  %call1 = call i32 @close(i32 1), !dbg !5528
  br label %return, !dbg !5531

return:                                           ; preds = %if.end, %if.then
  %retval.0 = phi i64 [ -1, %if.then ], [ 0, %if.end ], !dbg !5532
  ret i64 %retval.0, !dbg !5533
}

; Function Attrs: noinline nounwind ssp uwtable
define internal i32 @stdout_write(i8* %buf___3, i32 %count) #0 !dbg !5534 {
entry:
  call void @llvm.dbg.value(metadata i8* %buf___3, metadata !5535, metadata !DIExpression()), !dbg !5536
  call void @llvm.dbg.value(metadata i32 %count, metadata !5537, metadata !DIExpression()), !dbg !5536
  %0 = load i32, i32* @fd, align 4, !dbg !5538
  %call = call i32 @write(i32 %0, i8* %buf___3, i32 %count), !dbg !5542
  call void @llvm.dbg.value(metadata i32 %call, metadata !5543, metadata !DIExpression()), !dbg !5536
  ret i32 %call, !dbg !5544
}

; Function Attrs: noinline nounwind ssp uwtable
define internal void @stdout_close() #0 !dbg !5545 {
entry:
  %0 = load i32, i32* @fd, align 4, !dbg !5546
  %call = call i32 @close(i32 %0), !dbg !5550
  ret void, !dbg !5551
}

; Function Attrs: noinline nounwind ssp uwtable
define void @shuffle_long(i64* %array, i64 %elements) #0 !dbg !5552 {
entry:
  call void @llvm.dbg.value(metadata i64* %array, metadata !5556, metadata !DIExpression()), !dbg !5557
  call void @llvm.dbg.value(metadata i64 %elements, metadata !5558, metadata !DIExpression()), !dbg !5557
  %sub = sub nsw i64 %elements, 1, !dbg !5559
  call void @llvm.dbg.value(metadata i64 %sub, metadata !5561, metadata !DIExpression()), !dbg !5557
  br label %while.body, !dbg !5562

while.body:                                       ; preds = %if.end, %entry
  %i.0 = phi i64 [ %sub, %entry ], [ %dec, %if.end ], !dbg !5565
  call void @llvm.dbg.value(metadata i64 %i.0, metadata !5561, metadata !DIExpression()), !dbg !5557
  br label %while_continue___0, !dbg !5566

while_continue___0:                               ; preds = %while.body
  br label %while_continue, !dbg !5566

while_continue:                                   ; preds = %while_continue___0
  %cmp = icmp sgt i64 %i.0, 0, !dbg !5567
  br i1 %cmp, label %if.end, label %if.then, !dbg !5570

if.then:                                          ; preds = %while_continue
  br label %while_break, !dbg !5571

if.end:                                           ; preds = %while_continue
  %call = call i64 @rand_long(i64 %i.0), !dbg !5573
  call void @llvm.dbg.value(metadata i64 %call, metadata !5576, metadata !DIExpression()), !dbg !5557
  %add.ptr = getelementptr inbounds i64, i64* %array, i64 %i.0, !dbg !5577
  %0 = load i64, i64* %add.ptr, align 8, !dbg !5578
  call void @llvm.dbg.value(metadata i64 %0, metadata !5579, metadata !DIExpression()), !dbg !5557
  %add.ptr1 = getelementptr inbounds i64, i64* %array, i64 %call, !dbg !5580
  %1 = load i64, i64* %add.ptr1, align 8, !dbg !5581
  %add.ptr2 = getelementptr inbounds i64, i64* %array, i64 %i.0, !dbg !5582
  store i64 %1, i64* %add.ptr2, align 8, !dbg !5583
  %add.ptr3 = getelementptr inbounds i64, i64* %array, i64 %call, !dbg !5584
  store i64 %0, i64* %add.ptr3, align 8, !dbg !5585
  %dec = add nsw i64 %i.0, -1, !dbg !5586
  call void @llvm.dbg.value(metadata i64 %dec, metadata !5561, metadata !DIExpression()), !dbg !5557
  br label %while.body, !dbg !5562, !llvm.loop !5587

while_break___0:                                  ; No predecessors!
  br label %while_break, !dbg !5589

while_break:                                      ; preds = %while_break___0, %if.then
  ret void, !dbg !5590
}

declare i64 @rand_long(i64) #5

; Function Attrs: noinline nounwind ssp uwtable
define i8* @endian_str(i64 %endian___1) #0 !dbg !5591 {
entry:
  call void @llvm.dbg.value(metadata i64 %endian___1, metadata !5594, metadata !DIExpression()), !dbg !5595
  call void @llvm.dbg.declare(metadata !666, metadata !5596, metadata !DIExpression()), !dbg !5597
  call void @llvm.dbg.declare(metadata !666, metadata !5598, metadata !DIExpression()), !dbg !5599
  call void @llvm.dbg.declare(metadata !666, metadata !5600, metadata !DIExpression()), !dbg !5601
  call void @llvm.dbg.declare(metadata !666, metadata !5602, metadata !DIExpression()), !dbg !5603
  %cmp = icmp eq i64 %endian___1, 0, !dbg !5604
  br i1 %cmp, label %if.then, label %if.end, !dbg !5608

if.then:                                          ; preds = %entry
  br label %case_0, !dbg !5609

if.end:                                           ; preds = %entry
  %cmp1 = icmp eq i64 %endian___1, 1, !dbg !5611
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !5613

if.then2:                                         ; preds = %if.end
  br label %case_1, !dbg !5614

if.end3:                                          ; preds = %if.end
  %cmp4 = icmp eq i64 %endian___1, 2, !dbg !5616
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !5618

if.then5:                                         ; preds = %if.end3
  br label %case_2, !dbg !5619

if.end6:                                          ; preds = %if.end3
  br label %switch_default, !dbg !5621

case_0:                                           ; preds = %if.then
  br label %switch_break, !dbg !5622

case_1:                                           ; preds = %if.then2
  br label %switch_break, !dbg !5623

case_2:                                           ; preds = %if.then5
  br label %switch_break, !dbg !5624

switch_default:                                   ; preds = %if.end6
  br label %switch_break, !dbg !5621

switch_break:                                     ; preds = %switch_default, %case_2, %case_1, %case_0
  %retval.0 = phi i8* [ getelementptr inbounds ([4 x i8], [4 x i8]* @.str.39, i32 0, i32 0), %case_0 ], [ getelementptr inbounds ([7 x i8], [7 x i8]* @.str.40, i32 0, i32 0), %case_1 ], [ getelementptr inbounds ([7 x i8], [7 x i8]* @.str.41, i32 0, i32 0), %case_2 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.42, i32 0, i32 0), %switch_default ], !dbg !5625
  ret i8* %retval.0, !dbg !5626
}

; Function Attrs: noinline nounwind ssp uwtable
define void @exit_handler(i32 %signum) #0 !dbg !5627 {
entry:
  call void @llvm.dbg.value(metadata i32 %signum, metadata !5628, metadata !DIExpression()), !dbg !5629
  call void @llvm.dbg.declare(metadata !666, metadata !5630, metadata !DIExpression()), !dbg !5631
  %call = call i8* @_(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.43, i32 0, i32 0)), !dbg !5632
  call void @llvm.dbg.value(metadata i8* %call, metadata !5636, metadata !DIExpression()), !dbg !5629
  %call1 = call i32 (i8*, ...) @printf(i8* %call, i32 %signum), !dbg !5637
  %call2 = call i32 @tcsetattr(i32 0, i32 2, %struct.termios* @ots) #11, !dbg !5639
  call void @exit(i32 1) #9, !dbg !5641
  unreachable, !dbg !5641

return:                                           ; No predecessors!
  ret void, !dbg !5643
}

; Function Attrs: nounwind
declare i32 @tcsetattr(i32, i32, %struct.termios*) #4

; Function Attrs: noreturn nounwind
declare void @exit(i32) #6

; Function Attrs: noinline nounwind ssp uwtable
define void @stop_handler(i32 %signum) #0 !dbg !5644 {
entry:
  call void @llvm.dbg.value(metadata i32 %signum, metadata !5645, metadata !DIExpression()), !dbg !5646
  %call = call i32 @tcsetattr(i32 0, i32 2, %struct.termios* @ots) #11, !dbg !5647
  ret void, !dbg !5651
}

; Function Attrs: noinline nounwind ssp uwtable
define void @cont_handler(i32 %signum) #0 !dbg !5652 {
entry:
  %ts = alloca %struct.termios, align 4
  call void @llvm.dbg.value(metadata i32 %signum, metadata !5653, metadata !DIExpression()), !dbg !5654
  call void @llvm.dbg.declare(metadata %struct.termios* %ts, metadata !5655, metadata !DIExpression()), !dbg !5656
  %call = call i32 @tcgetattr(i32 0, %struct.termios* %ts) #11, !dbg !5657
  %0 = bitcast %struct.termios* %ts to i8*, !dbg !5661
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 bitcast (%struct.termios* @ots to i8*), i8* align 4 %0, i64 60, i1 false), !dbg !5661
  %c_lflag = getelementptr inbounds %struct.termios, %struct.termios* %ts, i32 0, i32 3, !dbg !5662
  %1 = load i32, i32* %c_lflag, align 4, !dbg !5663
  %and = and i32 %1, -75, !dbg !5663
  store i32 %and, i32* %c_lflag, align 4, !dbg !5663
  %call1 = call i32 @tcsetattr(i32 0, i32 2, %struct.termios* %ts) #11, !dbg !5664
  %call2 = call i32 (i32, i32, ...) @fcntl(i32 0, i32 4, i32 2048), !dbg !5666
  store i64 1, i64* @redraw, align 8, !dbg !5668
  ret void, !dbg !5669
}

; Function Attrs: nounwind
declare i32 @tcgetattr(i32, %struct.termios*) #4

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #7

declare i32 @fcntl(i32, i32, ...) #5

; Function Attrs: noinline nounwind ssp uwtable
define i32 @main(i32 %argc, i8** %argv) #0 !dbg !5670 {
entry:
  %argc.addr = alloca i32, align 4
  %argv.addr = alloca i8**, align 8
  %ts = alloca %struct.termios, align 4
  %sa = alloca %struct.sigaction, align 8
  store i32 %argc, i32* %argc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %argc.addr, metadata !5673, metadata !DIExpression()), !dbg !5674
  store i8** %argv, i8*** %argv.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %argv.addr, metadata !5675, metadata !DIExpression()), !dbg !5676
  call void @llvm.dbg.declare(metadata %struct.termios* %ts, metadata !5677, metadata !DIExpression()), !dbg !5678
  call void @llvm.dbg.declare(metadata %struct.sigaction* %sa, metadata !5679, metadata !DIExpression()), !dbg !5680
  call void @llvm.dbg.declare(metadata !666, metadata !5681, metadata !DIExpression()), !dbg !5682
  call void @llvm.dbg.declare(metadata !666, metadata !5683, metadata !DIExpression()), !dbg !5684
  call void @llvm.dbg.declare(metadata !666, metadata !5685, metadata !DIExpression()), !dbg !5686
  call void @llvm.dbg.declare(metadata !666, metadata !5687, metadata !DIExpression()), !dbg !5688
  call void @i18n_init(), !dbg !5689
  %call = call i64 @time(i64* null) #11, !dbg !5693
  call void @llvm.dbg.value(metadata i64 %call, metadata !5695, metadata !DIExpression()), !dbg !5696
  %call1 = call i32 @getpid() #11, !dbg !5697
  call void @llvm.dbg.value(metadata i32 %call1, metadata !5699, metadata !DIExpression()), !dbg !5696
  %conv = sext i32 %call1 to i64, !dbg !5700
  %add = add nsw i64 %call, %conv, !dbg !5701
  store i64 %add, i64* @random_seed, align 8, !dbg !5702
  %0 = load i64, i64* @random_seed, align 8, !dbg !5703
  %conv2 = trunc i64 %0 to i32, !dbg !5705
  call void @srand(i32 %conv2) #11, !dbg !5706
  %call3 = call i8* @get_userconfig(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @cfgfile, i32 0, i32 0)), !dbg !5707
  call void @llvm.dbg.value(metadata i8* %call3, metadata !5709, metadata !DIExpression()), !dbg !5696
  call void @cfg_parse(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.44, i32 0, i32 0), %struct.cfg_option* getelementptr inbounds ([11 x %struct.cfg_option], [11 x %struct.cfg_option]* @options, i32 0, i32 0)), !dbg !5710
  call void @cfg_parse(i8* %call3, %struct.cfg_option* getelementptr inbounds ([11 x %struct.cfg_option], [11 x %struct.cfg_option]* @options, i32 0, i32 0)), !dbg !5712
  call void @free(i8* %call3) #11, !dbg !5714
  call void @parseopts___0(i32* %argc.addr, i8*** %argv.addr), !dbg !5716
  call void @select_plugin(), !dbg !5718
  %1 = load i32, i32* %argc.addr, align 4, !dbg !5720
  %cmp = icmp slt i32 %1, 1, !dbg !5722
  br i1 %cmp, label %if.then, label %if.end, !dbg !5723

if.then:                                          ; preds = %entry
  call void @usage___0(i64 1), !dbg !5724
  br label %if.end, !dbg !5728

if.end:                                           ; preds = %if.then, %entry
  call void @precalc_notes(), !dbg !5729
  call void @precalc_vols(), !dbg !5732
  %2 = load i64 (i32, i64)*, i64 (i32, i64)** @sound_open, align 8, !dbg !5734
  %3 = load i32, i32* @endian, align 4, !dbg !5736
  %4 = load i64, i64* @rate, align 8, !dbg !5737
  %call5 = call i64 %2(i32 %3, i64 %4), !dbg !5738
  call void @llvm.dbg.value(metadata i64 %call5, metadata !5739, metadata !DIExpression()), !dbg !5696
  %cmp6 = icmp ne i64 %call5, 0, !dbg !5740
  br i1 %cmp6, label %if.then8, label %if.end11, !dbg !5742

if.then8:                                         ; preds = %if.end
  %call9 = call i8* @_(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.45, i32 0, i32 0)), !dbg !5743
  call void @llvm.dbg.value(metadata i8* %call9, metadata !5747, metadata !DIExpression()), !dbg !5696
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !5748
  %6 = load i8*, i8** @sound_name, align 8, !dbg !5750
  %call10 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %5, i8* %call9, i8* %6), !dbg !5751
  call void @exit(i32 1) #9, !dbg !5752
  unreachable, !dbg !5752

if.end11:                                         ; preds = %if.end
  call void @gbhw_setiocallback(void (i64, i32, i8, i8*)* @iocallback___1, i8* null), !dbg !5754
  call void @gbhw_setcallback(void (%struct.gbhw_buffer*, i8*)* @callback___1, i8* null), !dbg !5757
  %7 = load i64, i64* @rate, align 8, !dbg !5759
  call void @gbhw_setrate(i64 %7), !dbg !5761
  %8 = load i32, i32* %argc.addr, align 4, !dbg !5762
  %cmp12 = icmp sge i32 %8, 2, !dbg !5764
  br i1 %cmp12, label %if.then14, label %if.end16, !dbg !5765

if.then14:                                        ; preds = %if.end11
  %9 = load i8**, i8*** %argv.addr, align 8, !dbg !5766
  %add.ptr = getelementptr inbounds i8*, i8** %9, i64 1, !dbg !5770
  %10 = load i8*, i8** %add.ptr, align 8, !dbg !5771
  %call15 = call i32 (i8*, i8*, ...) @"\01__isoc99_sscanf"(i8* %10, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.46, i32 0, i32 0), i64* @subsong_start) #11, !dbg !5772
  %11 = load i64, i64* @subsong_start, align 8, !dbg !5773
  %dec = add nsw i64 %11, -1, !dbg !5773
  store i64 %dec, i64* @subsong_start, align 8, !dbg !5773
  br label %if.end16, !dbg !5774

if.end16:                                         ; preds = %if.then14, %if.end11
  %12 = load i32, i32* %argc.addr, align 4, !dbg !5775
  %cmp17 = icmp sge i32 %12, 3, !dbg !5777
  br i1 %cmp17, label %if.then19, label %if.end23, !dbg !5778

if.then19:                                        ; preds = %if.end16
  %13 = load i8**, i8*** %argv.addr, align 8, !dbg !5779
  %add.ptr20 = getelementptr inbounds i8*, i8** %13, i64 2, !dbg !5783
  %14 = load i8*, i8** %add.ptr20, align 8, !dbg !5784
  %call21 = call i32 (i8*, i8*, ...) @"\01__isoc99_sscanf"(i8* %14, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.46, i32 0, i32 0), i64* @subsong_stop) #11, !dbg !5785
  %15 = load i64, i64* @subsong_stop, align 8, !dbg !5786
  %dec22 = add nsw i64 %15, -1, !dbg !5786
  store i64 %dec22, i64* @subsong_stop, align 8, !dbg !5786
  br label %if.end23, !dbg !5787

if.end23:                                         ; preds = %if.then19, %if.end16
  %16 = load i8**, i8*** %argv.addr, align 8, !dbg !5788
  %add.ptr24 = getelementptr inbounds i8*, i8** %16, i64 0, !dbg !5791
  %17 = load i8*, i8** %add.ptr24, align 8, !dbg !5792
  %call25 = call %struct.gbs* @gbs_open(i8* %17), !dbg !5793
  call void @llvm.dbg.value(metadata %struct.gbs* %call25, metadata !5794, metadata !DIExpression()), !dbg !5696
  %18 = ptrtoint %struct.gbs* %call25 to i64, !dbg !5795
  %cmp26 = icmp eq i64 %18, 0, !dbg !5797
  br i1 %cmp26, label %if.then28, label %if.end29, !dbg !5798

if.then28:                                        ; preds = %if.end23
  call void @exit(i32 1) #9, !dbg !5799
  unreachable, !dbg !5799

if.end29:                                         ; preds = %if.end23
  %19 = load i64, i64* @subsong_start, align 8, !dbg !5803
  %cmp30 = icmp slt i64 %19, -1, !dbg !5805
  br i1 %cmp30, label %if.then32, label %if.else, !dbg !5806

if.then32:                                        ; preds = %if.end29
  store i64 0, i64* @subsong_start, align 8, !dbg !5807
  br label %if.end38, !dbg !5809

if.else:                                          ; preds = %if.end29
  %20 = load i64, i64* @subsong_start, align 8, !dbg !5810
  %songs = getelementptr inbounds %struct.gbs, %struct.gbs* %call25, i32 0, i32 2, !dbg !5812
  %21 = load i64, i64* %songs, align 8, !dbg !5812
  %cmp33 = icmp sge i64 %20, %21, !dbg !5813
  br i1 %cmp33, label %if.then35, label %if.end37, !dbg !5814

if.then35:                                        ; preds = %if.else
  %songs36 = getelementptr inbounds %struct.gbs, %struct.gbs* %call25, i32 0, i32 2, !dbg !5815
  %22 = load i64, i64* %songs36, align 8, !dbg !5815
  %sub = sub nsw i64 %22, 1, !dbg !5817
  store i64 %sub, i64* @subsong_start, align 8, !dbg !5818
  br label %if.end37, !dbg !5819

if.end37:                                         ; preds = %if.then35, %if.else
  br label %if.end38

if.end38:                                         ; preds = %if.end37, %if.then32
  %23 = load i64, i64* @subsong_stop, align 8, !dbg !5820
  %cmp39 = icmp slt i64 %23, 0, !dbg !5822
  br i1 %cmp39, label %if.then41, label %if.else42, !dbg !5823

if.then41:                                        ; preds = %if.end38
  store i64 -1, i64* @subsong_stop, align 8, !dbg !5824
  br label %if.end48, !dbg !5826

if.else42:                                        ; preds = %if.end38
  %24 = load i64, i64* @subsong_stop, align 8, !dbg !5827
  %songs43 = getelementptr inbounds %struct.gbs, %struct.gbs* %call25, i32 0, i32 2, !dbg !5829
  %25 = load i64, i64* %songs43, align 8, !dbg !5829
  %cmp44 = icmp sge i64 %24, %25, !dbg !5830
  br i1 %cmp44, label %if.then46, label %if.end47, !dbg !5831

if.then46:                                        ; preds = %if.else42
  store i64 -1, i64* @subsong_stop, align 8, !dbg !5832
  br label %if.end47, !dbg !5834

if.end47:                                         ; preds = %if.then46, %if.else42
  br label %if.end48

if.end48:                                         ; preds = %if.end47, %if.then41
  %26 = load i64, i64* @subsong_start, align 8, !dbg !5835
  %subsong = getelementptr inbounds %struct.gbs, %struct.gbs* %call25, i32 0, i32 36, !dbg !5837
  store i64 %26, i64* %subsong, align 8, !dbg !5838
  %27 = load i64, i64* @subsong_timeout, align 8, !dbg !5839
  %subsong_timeout = getelementptr inbounds %struct.gbs, %struct.gbs* %call25, i32 0, i32 31, !dbg !5840
  store i64 %27, i64* %subsong_timeout, align 8, !dbg !5841
  %28 = load i64, i64* @silence_timeout, align 8, !dbg !5842
  %silence_timeout = getelementptr inbounds %struct.gbs, %struct.gbs* %call25, i32 0, i32 32, !dbg !5843
  store i64 %28, i64* %silence_timeout, align 8, !dbg !5844
  %29 = load i64, i64* @subsong_gap, align 8, !dbg !5845
  %gap = getelementptr inbounds %struct.gbs, %struct.gbs* %call25, i32 0, i32 34, !dbg !5846
  store i64 %29, i64* %gap, align 8, !dbg !5847
  %30 = load i64, i64* @fadeout, align 8, !dbg !5848
  %fadeout = getelementptr inbounds %struct.gbs, %struct.gbs* %call25, i32 0, i32 33, !dbg !5849
  store i64 %30, i64* %fadeout, align 8, !dbg !5850
  call void @setup_playmode(%struct.gbs* %call25), !dbg !5851
  call void @gbhw_setbuffer(%struct.gbhw_buffer* @buf), !dbg !5853
  call void @gbs_set_nextsubsong_cb(%struct.gbs* %call25, i64 (%struct.gbs*, i8*)* @nextsubsong_cb, i8* null), !dbg !5855
  %subsong49 = getelementptr inbounds %struct.gbs, %struct.gbs* %call25, i32 0, i32 36, !dbg !5857
  %31 = load i64, i64* %subsong49, align 8, !dbg !5857
  %call50 = call i64 @gbs_init(%struct.gbs* %call25, i64 %31), !dbg !5859
  %32 = load i32 (i32)*, i32 (i32)** @sound_skip, align 8, !dbg !5860
  %tobool = icmp ne i32 (i32)* %32, null, !dbg !5860
  br i1 %tobool, label %if.then51, label %if.end55, !dbg !5862

if.then51:                                        ; preds = %if.end48
  %33 = load i32 (i32)*, i32 (i32)** @sound_skip, align 8, !dbg !5863
  %subsong52 = getelementptr inbounds %struct.gbs, %struct.gbs* %call25, i32 0, i32 36, !dbg !5867
  %34 = load i64, i64* %subsong52, align 8, !dbg !5867
  %conv53 = trunc i64 %34 to i32, !dbg !5868
  %call54 = call i32 %33(i32 %conv53), !dbg !5869
  br label %if.end55, !dbg !5870

if.end55:                                         ; preds = %if.then51, %if.end48
  call void @printinfo(%struct.gbs* %call25), !dbg !5871
  %call56 = call i32 @tcgetattr(i32 0, %struct.termios* %ts) #11, !dbg !5874
  %35 = bitcast %struct.termios* %ts to i8*, !dbg !5876
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 bitcast (%struct.termios* @ots to i8*), i8* align 4 %35, i64 60, i1 false), !dbg !5876
  %c_lflag = getelementptr inbounds %struct.termios, %struct.termios* %ts, i32 0, i32 3, !dbg !5877
  %36 = load i32, i32* %c_lflag, align 4, !dbg !5878
  %and = and i32 %36, -75, !dbg !5878
  store i32 %and, i32* %c_lflag, align 4, !dbg !5878
  %call57 = call i32 @tcsetattr(i32 0, i32 2, %struct.termios* %ts) #11, !dbg !5879
  %37 = bitcast %struct.sigaction* %sa to i8*, !dbg !5881
  %call58 = call i8* @memset(i8* %37, i32 0, i32 152) #11, !dbg !5883
  %__sigaction_handler = getelementptr inbounds %struct.sigaction, %struct.sigaction* %sa, i32 0, i32 0, !dbg !5884
  %sa_handler = bitcast %union.__anonunion___sigaction_handler_47* %__sigaction_handler to void (i32)**, !dbg !5885
  store void (i32)* @exit_handler, void (i32)** %sa_handler, align 8, !dbg !5886
  %call59 = call i32 @sigaction(i32 15, %struct.sigaction* %sa, %struct.sigaction* null) #11, !dbg !5887
  %call60 = call i32 @sigaction(i32 2, %struct.sigaction* %sa, %struct.sigaction* null) #11, !dbg !5889
  %call61 = call i32 @sigaction(i32 11, %struct.sigaction* %sa, %struct.sigaction* null) #11, !dbg !5891
  %__sigaction_handler62 = getelementptr inbounds %struct.sigaction, %struct.sigaction* %sa, i32 0, i32 0, !dbg !5893
  %sa_handler63 = bitcast %union.__anonunion___sigaction_handler_47* %__sigaction_handler62 to void (i32)**, !dbg !5894
  store void (i32)* @stop_handler, void (i32)** %sa_handler63, align 8, !dbg !5895
  %call64 = call i32 @sigaction(i32 19, %struct.sigaction* %sa, %struct.sigaction* null) #11, !dbg !5896
  %__sigaction_handler65 = getelementptr inbounds %struct.sigaction, %struct.sigaction* %sa, i32 0, i32 0, !dbg !5898
  %sa_handler66 = bitcast %union.__anonunion___sigaction_handler_47* %__sigaction_handler65 to void (i32)**, !dbg !5899
  store void (i32)* @cont_handler, void (i32)** %sa_handler66, align 8, !dbg !5900
  %call67 = call i32 @sigaction(i32 18, %struct.sigaction* %sa, %struct.sigaction* null) #11, !dbg !5901
  %call68 = call i32 (i32, i32, ...) @fcntl(i32 0, i32 4, i32 2048), !dbg !5903
  br label %while.body, !dbg !5905

while.body:                                       ; preds = %if.end82, %if.end55
  br label %while_continue___0, !dbg !5908

while_continue___0:                               ; preds = %while.body
  br label %while_continue, !dbg !5908

while_continue:                                   ; preds = %while_continue___0
  %38 = load i64, i64* @quit, align 8, !dbg !5909
  %tobool69 = icmp ne i64 %38, 0, !dbg !5909
  br i1 %tobool69, label %if.then70, label %if.end71, !dbg !5912

if.then70:                                        ; preds = %while_continue
  br label %while_break, !dbg !5913

if.end71:                                         ; preds = %while_continue
  %39 = load i64, i64* @refresh_delay, align 8, !dbg !5915
  %call72 = call i64 @gbs_step(%struct.gbs* %call25, i64 %39), !dbg !5918
  call void @llvm.dbg.value(metadata i64 %call72, metadata !5919, metadata !DIExpression()), !dbg !5696
  %tobool73 = icmp ne i64 %call72, 0, !dbg !5920
  br i1 %tobool73, label %if.end75, label %if.then74, !dbg !5922

if.then74:                                        ; preds = %if.end71
  store i64 1, i64* @quit, align 8, !dbg !5923
  br label %while_break, !dbg !5925

if.end75:                                         ; preds = %if.end71
  %40 = load i64, i64* @redraw, align 8, !dbg !5926
  %tobool76 = icmp ne i64 %40, 0, !dbg !5926
  br i1 %tobool76, label %if.then77, label %if.end78, !dbg !5928

if.then77:                                        ; preds = %if.end75
  call void @printinfo(%struct.gbs* %call25), !dbg !5929
  br label %if.end78, !dbg !5933

if.end78:                                         ; preds = %if.then77, %if.end75
  %41 = load i64, i64* @verbosity, align 8, !dbg !5934
  %cmp79 = icmp sgt i64 %41, 1, !dbg !5936
  br i1 %cmp79, label %if.then81, label %if.end82, !dbg !5937

if.then81:                                        ; preds = %if.end78
  call void @printstatus(%struct.gbs* %call25), !dbg !5938
  br label %if.end82, !dbg !5942

if.end82:                                         ; preds = %if.then81, %if.end78
  call void @handleuserinput(%struct.gbs* %call25), !dbg !5943
  br label %while.body, !dbg !5905, !llvm.loop !5946

while_break___0:                                  ; No predecessors!
  br label %while_break, !dbg !5948

while_break:                                      ; preds = %while_break___0, %if.then74, %if.then70
  %call83 = call i32 @tcsetattr(i32 0, i32 2, %struct.termios* @ots) #11, !dbg !5949
  %42 = load void ()*, void ()** @sound_close, align 8, !dbg !5952
  call void %42(), !dbg !5954
  ret i32 0, !dbg !5955
}

; Function Attrs: noinline nounwind ssp uwtable
define internal void @i18n_init() #0 !dbg !5956 {
entry:
  call void @llvm.dbg.declare(metadata !666, metadata !5957, metadata !DIExpression()), !dbg !5958
  call void @llvm.dbg.declare(metadata !666, metadata !5959, metadata !DIExpression()), !dbg !5960
  call void @llvm.dbg.declare(metadata !666, metadata !5961, metadata !DIExpression()), !dbg !5962
  call void @llvm.dbg.declare(metadata !666, metadata !5963, metadata !DIExpression()), !dbg !5964
  call void @llvm.dbg.declare(metadata !666, metadata !5965, metadata !DIExpression()), !dbg !5966
  call void @llvm.dbg.declare(metadata !666, metadata !5967, metadata !DIExpression()), !dbg !5968
  call void @llvm.dbg.declare(metadata !666, metadata !5969, metadata !DIExpression()), !dbg !5970
  %call = call i8* @setlocale(i32 6, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.27, i32 0, i32 0)) #11, !dbg !5971
  call void @llvm.dbg.value(metadata i8* %call, metadata !5975, metadata !DIExpression()), !dbg !5976
  %0 = ptrtoint i8* %call to i64, !dbg !5977
  %cmp = icmp eq i64 %0, 0, !dbg !5979
  br i1 %cmp, label %if.then, label %if.end, !dbg !5980

if.then:                                          ; preds = %entry
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !5981
  %call1 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.87, i32 0, i32 0)), !dbg !5985
  br label %if.end, !dbg !5986

if.end:                                           ; preds = %if.then, %entry
  %call2 = call i8* @bindtextdomain(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.88, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.89, i32 0, i32 0)) #11, !dbg !5987
  call void @llvm.dbg.value(metadata i8* %call2, metadata !5990, metadata !DIExpression()), !dbg !5976
  %2 = ptrtoint i8* %call2 to i64, !dbg !5991
  %cmp3 = icmp eq i64 %2, 0, !dbg !5993
  br i1 %cmp3, label %if.then4, label %if.end8, !dbg !5994

if.then4:                                         ; preds = %if.end
  %call5 = call i32* @__errno_location() #10, !dbg !5995
  call void @llvm.dbg.value(metadata i32* %call5, metadata !5999, metadata !DIExpression()), !dbg !5976
  %3 = load i32, i32* %call5, align 4, !dbg !6000
  %call6 = call i8* @strerror(i32 %3) #11, !dbg !6002
  call void @llvm.dbg.value(metadata i8* %call6, metadata !6003, metadata !DIExpression()), !dbg !5976
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !6004
  %call7 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %4, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.90, i32 0, i32 0), i8* %call6), !dbg !6006
  br label %if.end8, !dbg !6007

if.end8:                                          ; preds = %if.then4, %if.end
  %call9 = call i8* @textdomain(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.88, i32 0, i32 0)) #11, !dbg !6008
  call void @llvm.dbg.value(metadata i8* %call9, metadata !6011, metadata !DIExpression()), !dbg !5976
  %5 = ptrtoint i8* %call9 to i64, !dbg !6012
  %cmp10 = icmp eq i64 %5, 0, !dbg !6014
  br i1 %cmp10, label %if.then11, label %if.end15, !dbg !6015

if.then11:                                        ; preds = %if.end8
  %call12 = call i32* @__errno_location() #10, !dbg !6016
  call void @llvm.dbg.value(metadata i32* %call12, metadata !6020, metadata !DIExpression()), !dbg !5976
  %6 = load i32, i32* %call12, align 4, !dbg !6021
  %call13 = call i8* @strerror(i32 %6) #11, !dbg !6023
  call void @llvm.dbg.value(metadata i8* %call13, metadata !6024, metadata !DIExpression()), !dbg !5976
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !6025
  %call14 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %7, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.91, i32 0, i32 0), i8* %call13), !dbg !6027
  br label %if.end15, !dbg !6028

if.end15:                                         ; preds = %if.then11, %if.end8
  ret void, !dbg !6029
}

; Function Attrs: nounwind
declare i64 @time(i64*) #4

; Function Attrs: nounwind
declare i32 @getpid() #4

; Function Attrs: nounwind
declare void @srand(i32) #4

; Function Attrs: noinline nounwind ssp uwtable
define internal void @parseopts___0(i32* %argc, i8*** %argv) #0 !dbg !6030 {
entry:
  call void @llvm.dbg.value(metadata i32* %argc, metadata !6034, metadata !DIExpression()), !dbg !6035
  call void @llvm.dbg.value(metadata i8*** %argv, metadata !6036, metadata !DIExpression()), !dbg !6035
  call void @llvm.dbg.declare(metadata !666, metadata !6037, metadata !DIExpression()), !dbg !6038
  call void @llvm.dbg.declare(metadata !666, metadata !6039, metadata !DIExpression()), !dbg !6040
  call void @llvm.dbg.declare(metadata !666, metadata !6041, metadata !DIExpression()), !dbg !6042
  call void @llvm.dbg.declare(metadata !666, metadata !6043, metadata !DIExpression()), !dbg !6044
  call void @llvm.dbg.declare(metadata !666, metadata !6045, metadata !DIExpression()), !dbg !6046
  call void @llvm.dbg.declare(metadata !666, metadata !6047, metadata !DIExpression()), !dbg !6048
  call void @llvm.dbg.declare(metadata !666, metadata !6049, metadata !DIExpression()), !dbg !6050
  call void @llvm.dbg.declare(metadata !666, metadata !6051, metadata !DIExpression()), !dbg !6052
  call void @llvm.dbg.declare(metadata !666, metadata !6053, metadata !DIExpression()), !dbg !6054
  call void @llvm.dbg.declare(metadata !666, metadata !6055, metadata !DIExpression()), !dbg !6056
  call void @llvm.dbg.declare(metadata !666, metadata !6057, metadata !DIExpression()), !dbg !6058
  %add.ptr = getelementptr inbounds i8**, i8*** %argv, i64 0, !dbg !6059
  %0 = load i8**, i8*** %add.ptr, align 8, !dbg !6061
  %1 = load i8*, i8** %0, align 8, !dbg !6062
  store i8* %1, i8** @myname___0, align 8, !dbg !6063
  br label %while.body, !dbg !6064

while.body:                                       ; preds = %switch_break, %entry
  br label %while_continue___0, !dbg !6067

while_continue___0:                               ; preds = %while.body
  br label %while_continue, !dbg !6067

while_continue:                                   ; preds = %while_continue___0
  %2 = load i32, i32* %argc, align 4, !dbg !6068
  %3 = load i8**, i8*** %argv, align 8, !dbg !6072
  %call = call i32 @getopt(i32 %2, i8** %3, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.102, i32 0, i32 0)) #11, !dbg !6073
  call void @llvm.dbg.value(metadata i32 %call, metadata !6074, metadata !DIExpression()), !dbg !6035
  %conv = sext i32 %call to i64, !dbg !6075
  call void @llvm.dbg.value(metadata i64 %conv, metadata !6076, metadata !DIExpression()), !dbg !6035
  %cmp = icmp ne i64 %conv, -1, !dbg !6077
  br i1 %cmp, label %if.end, label %if.then, !dbg !6079

if.then:                                          ; preds = %while_continue
  br label %while_break, !dbg !6080

if.end:                                           ; preds = %while_continue
  %cmp2 = icmp eq i64 %conv, 52, !dbg !6082
  br i1 %cmp2, label %if.then4, label %if.end5, !dbg !6085

if.then4:                                         ; preds = %if.end
  br label %case_52, !dbg !6086

if.end5:                                          ; preds = %if.end
  %cmp6 = icmp eq i64 %conv, 51, !dbg !6088
  br i1 %cmp6, label %if.then8, label %if.end9, !dbg !6085

if.then8:                                         ; preds = %if.end5
  br label %case_52, !dbg !6090

if.end9:                                          ; preds = %if.end5
  %cmp10 = icmp eq i64 %conv, 50, !dbg !6092
  br i1 %cmp10, label %if.then12, label %if.end13, !dbg !6085

if.then12:                                        ; preds = %if.end9
  br label %case_52, !dbg !6094

if.end13:                                         ; preds = %if.end9
  %cmp14 = icmp eq i64 %conv, 49, !dbg !6096
  br i1 %cmp14, label %if.then16, label %if.end17, !dbg !6085

if.then16:                                        ; preds = %if.end13
  br label %case_52, !dbg !6098

if.end17:                                         ; preds = %if.end13
  %cmp18 = icmp eq i64 %conv, 69, !dbg !6100
  br i1 %cmp18, label %if.then20, label %if.end21, !dbg !6102

if.then20:                                        ; preds = %if.end17
  br label %case_69, !dbg !6103

if.end21:                                         ; preds = %if.end17
  %cmp22 = icmp eq i64 %conv, 102, !dbg !6105
  br i1 %cmp22, label %if.then24, label %if.end25, !dbg !6107

if.then24:                                        ; preds = %if.end21
  br label %case_102, !dbg !6108

if.end25:                                         ; preds = %if.end21
  %cmp26 = icmp eq i64 %conv, 103, !dbg !6110
  br i1 %cmp26, label %if.then28, label %if.end29, !dbg !6112

if.then28:                                        ; preds = %if.end25
  br label %case_103, !dbg !6113

if.end29:                                         ; preds = %if.end25
  %cmp30 = icmp eq i64 %conv, 104, !dbg !6115
  br i1 %cmp30, label %if.then32, label %if.end33, !dbg !6117

if.then32:                                        ; preds = %if.end29
  br label %case_104, !dbg !6118

if.end33:                                         ; preds = %if.end29
  %cmp34 = icmp eq i64 %conv, 108, !dbg !6120
  br i1 %cmp34, label %if.then36, label %if.end37, !dbg !6122

if.then36:                                        ; preds = %if.end33
  br label %case_108, !dbg !6123

if.end37:                                         ; preds = %if.end33
  %cmp38 = icmp eq i64 %conv, 111, !dbg !6125
  br i1 %cmp38, label %if.then40, label %if.end41, !dbg !6127

if.then40:                                        ; preds = %if.end37
  br label %case_111, !dbg !6128

if.end41:                                         ; preds = %if.end37
  %cmp42 = icmp eq i64 %conv, 113, !dbg !6130
  br i1 %cmp42, label %if.then44, label %if.end45, !dbg !6132

if.then44:                                        ; preds = %if.end41
  br label %case_113, !dbg !6133

if.end45:                                         ; preds = %if.end41
  %cmp46 = icmp eq i64 %conv, 114, !dbg !6135
  br i1 %cmp46, label %if.then48, label %if.end49, !dbg !6137

if.then48:                                        ; preds = %if.end45
  br label %case_114, !dbg !6138

if.end49:                                         ; preds = %if.end45
  %cmp50 = icmp eq i64 %conv, 82, !dbg !6140
  br i1 %cmp50, label %if.then52, label %if.end53, !dbg !6142

if.then52:                                        ; preds = %if.end49
  br label %case_82, !dbg !6143

if.end53:                                         ; preds = %if.end49
  %cmp54 = icmp eq i64 %conv, 116, !dbg !6145
  br i1 %cmp54, label %if.then56, label %if.end57, !dbg !6147

if.then56:                                        ; preds = %if.end53
  br label %case_116, !dbg !6148

if.end57:                                         ; preds = %if.end53
  %cmp58 = icmp eq i64 %conv, 84, !dbg !6150
  br i1 %cmp58, label %if.then60, label %if.end61, !dbg !6152

if.then60:                                        ; preds = %if.end57
  br label %case_84, !dbg !6153

if.end61:                                         ; preds = %if.end57
  %cmp62 = icmp eq i64 %conv, 118, !dbg !6155
  br i1 %cmp62, label %if.then64, label %if.end65, !dbg !6157

if.then64:                                        ; preds = %if.end61
  br label %case_118, !dbg !6158

if.end65:                                         ; preds = %if.end61
  %cmp66 = icmp eq i64 %conv, 86, !dbg !6160
  br i1 %cmp66, label %if.then68, label %if.end69, !dbg !6162

if.then68:                                        ; preds = %if.end65
  br label %case_86, !dbg !6163

if.end69:                                         ; preds = %if.end65
  %cmp70 = icmp eq i64 %conv, 122, !dbg !6165
  br i1 %cmp70, label %if.then72, label %if.end73, !dbg !6167

if.then72:                                        ; preds = %if.end69
  br label %case_122, !dbg !6168

if.end73:                                         ; preds = %if.end69
  %cmp74 = icmp eq i64 %conv, 90, !dbg !6170
  br i1 %cmp74, label %if.then76, label %if.end77, !dbg !6172

if.then76:                                        ; preds = %if.end73
  br label %case_90, !dbg !6173

if.end77:                                         ; preds = %if.end73
  br label %switch_default, !dbg !6175

switch_default:                                   ; preds = %if.end77
  call void @usage___0(i64 1), !dbg !6176
  br label %switch_break, !dbg !6179

case_52:                                          ; preds = %if.then16, %if.then12, %if.then8, %if.then4
  br label %case_51, !dbg !6179

case_51:                                          ; preds = %case_52
  br label %case_50, !dbg !6179

case_50:                                          ; preds = %case_51
  br label %case_49, !dbg !6179

case_49:                                          ; preds = %case_50
  %sub = sub nsw i64 %conv, 49, !dbg !6180
  %arrayidx = getelementptr inbounds [4 x %struct.gbhw_channel], [4 x %struct.gbhw_channel]* @gbhw_ch, i64 0, i64 %sub, !dbg !6181
  %mute = getelementptr inbounds %struct.gbhw_channel, %struct.gbhw_channel* %arrayidx, i32 0, i32 0, !dbg !6182
  %4 = load i64, i64* %mute, align 16, !dbg !6183
  %xor = xor i64 %4, 1, !dbg !6183
  store i64 %xor, i64* %mute, align 16, !dbg !6183
  br label %switch_break, !dbg !6184

case_69:                                          ; preds = %if.then20
  %5 = load i8*, i8** @optarg, align 8, !dbg !6185
  %call78 = call i32 @strcasecmp(i8* %5, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.103, i32 0, i32 0)) #8, !dbg !6188
  call void @llvm.dbg.value(metadata i32 %call78, metadata !6189, metadata !DIExpression()), !dbg !6035
  %cmp79 = icmp eq i32 %call78, 0, !dbg !6190
  br i1 %cmp79, label %if.then81, label %if.else, !dbg !6192

if.then81:                                        ; preds = %case_69
  store i32 0, i32* @endian, align 4, !dbg !6193
  br label %if.end96, !dbg !6195

if.else:                                          ; preds = %case_69
  %6 = load i8*, i8** @optarg, align 8, !dbg !6196
  %call82 = call i32 @strcasecmp(i8* %6, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.104, i32 0, i32 0)) #8, !dbg !6200
  call void @llvm.dbg.value(metadata i32 %call82, metadata !6201, metadata !DIExpression()), !dbg !6035
  %cmp83 = icmp eq i32 %call82, 0, !dbg !6202
  br i1 %cmp83, label %if.then85, label %if.else86, !dbg !6204

if.then85:                                        ; preds = %if.else
  store i32 1, i32* @endian, align 4, !dbg !6205
  br label %if.end95, !dbg !6207

if.else86:                                        ; preds = %if.else
  %7 = load i8*, i8** @optarg, align 8, !dbg !6208
  %call87 = call i32 @strcasecmp(i8* %7, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.105, i32 0, i32 0)) #8, !dbg !6212
  call void @llvm.dbg.value(metadata i32 %call87, metadata !6213, metadata !DIExpression()), !dbg !6035
  %cmp88 = icmp eq i32 %call87, 0, !dbg !6214
  br i1 %cmp88, label %if.then90, label %if.else91, !dbg !6216

if.then90:                                        ; preds = %if.else86
  store i32 2, i32* @endian, align 4, !dbg !6217
  br label %if.end94, !dbg !6219

if.else91:                                        ; preds = %if.else86
  %call92 = call i8* @_(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.106, i32 0, i32 0)), !dbg !6220
  call void @llvm.dbg.value(metadata i8* %call92, metadata !6224, metadata !DIExpression()), !dbg !6035
  %8 = load i8*, i8** @optarg, align 8, !dbg !6225
  %call93 = call i32 (i8*, ...) @printf(i8* %call92, i8* %8), !dbg !6227
  call void @usage___0(i64 1), !dbg !6228
  br label %if.end94

if.end94:                                         ; preds = %if.else91, %if.then90
  br label %if.end95

if.end95:                                         ; preds = %if.end94, %if.then85
  br label %if.end96

if.end96:                                         ; preds = %if.end95, %if.then81
  br label %switch_break, !dbg !6230

case_102:                                         ; preds = %if.then24
  %9 = load i8*, i8** @optarg, align 8, !dbg !6231
  %call97 = call i32 (i8*, i8*, ...) @"\01__isoc99_sscanf"(i8* %9, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.46, i32 0, i32 0), i64* @fadeout) #11, !dbg !6234
  br label %switch_break, !dbg !6235

case_103:                                         ; preds = %if.then28
  %10 = load i8*, i8** @optarg, align 8, !dbg !6236
  %call98 = call i32 (i8*, i8*, ...) @"\01__isoc99_sscanf"(i8* %10, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.46, i32 0, i32 0), i64* @subsong_gap) #11, !dbg !6239
  br label %switch_break, !dbg !6240

case_104:                                         ; preds = %if.then32
  call void @usage___0(i64 0), !dbg !6241
  br label %switch_break, !dbg !6244

case_108:                                         ; preds = %if.then36
  store i64 1, i64* @loopmode, align 8, !dbg !6245
  br label %switch_break, !dbg !6246

case_111:                                         ; preds = %if.then40
  %11 = load i8*, i8** @optarg, align 8, !dbg !6247
  store i8* %11, i8** @sound_name, align 8, !dbg !6248
  br label %switch_break, !dbg !6249

case_113:                                         ; preds = %if.then44
  %12 = load i64, i64* @verbosity, align 8, !dbg !6250
  %dec = add nsw i64 %12, -1, !dbg !6250
  store i64 %dec, i64* @verbosity, align 8, !dbg !6250
  br label %switch_break, !dbg !6251

case_114:                                         ; preds = %if.then48
  %13 = load i8*, i8** @optarg, align 8, !dbg !6252
  %call99 = call i32 (i8*, i8*, ...) @"\01__isoc99_sscanf"(i8* %13, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.46, i32 0, i32 0), i64* @rate) #11, !dbg !6255
  br label %switch_break, !dbg !6256

case_82:                                          ; preds = %if.then52
  %14 = load i8*, i8** @optarg, align 8, !dbg !6257
  %call100 = call i32 (i8*, i8*, ...) @"\01__isoc99_sscanf"(i8* %14, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.46, i32 0, i32 0), i64* @refresh_delay) #11, !dbg !6260
  br label %switch_break, !dbg !6261

case_116:                                         ; preds = %if.then56
  %15 = load i8*, i8** @optarg, align 8, !dbg !6262
  %call101 = call i32 (i8*, i8*, ...) @"\01__isoc99_sscanf"(i8* %15, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.46, i32 0, i32 0), i64* @subsong_timeout) #11, !dbg !6265
  br label %switch_break, !dbg !6266

case_84:                                          ; preds = %if.then60
  %16 = load i8*, i8** @optarg, align 8, !dbg !6267
  %call102 = call i32 (i8*, i8*, ...) @"\01__isoc99_sscanf"(i8* %16, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.46, i32 0, i32 0), i64* @silence_timeout) #11, !dbg !6270
  br label %switch_break, !dbg !6271

case_118:                                         ; preds = %if.then64
  %17 = load i64, i64* @verbosity, align 8, !dbg !6272
  %inc = add nsw i64 %17, 1, !dbg !6272
  store i64 %inc, i64* @verbosity, align 8, !dbg !6272
  br label %switch_break, !dbg !6273

case_86:                                          ; preds = %if.then68
  call void @version___0(), !dbg !6274
  br label %switch_break, !dbg !6277

case_122:                                         ; preds = %if.then72
  store i64 3, i64* @playmode, align 8, !dbg !6278
  br label %switch_break, !dbg !6279

case_90:                                          ; preds = %if.then76
  store i64 2, i64* @playmode, align 8, !dbg !6280
  br label %switch_break, !dbg !6281

switch_break:                                     ; preds = %case_90, %case_122, %case_86, %case_118, %case_84, %case_116, %case_82, %case_114, %case_113, %case_111, %case_108, %case_104, %case_103, %case_102, %if.end96, %case_49, %switch_default
  br label %while.body, !dbg !6064, !llvm.loop !6282

while_break___0:                                  ; No predecessors!
  br label %while_break, !dbg !6284

while_break:                                      ; preds = %while_break___0, %if.then
  %18 = load i32, i32* @optind, align 4, !dbg !6285
  %19 = load i32, i32* %argc, align 4, !dbg !6286
  %sub103 = sub nsw i32 %19, %18, !dbg !6286
  store i32 %sub103, i32* %argc, align 4, !dbg !6286
  %20 = load i32, i32* @optind, align 4, !dbg !6287
  %21 = load i8**, i8*** %argv, align 8, !dbg !6288
  %idx.ext = sext i32 %20 to i64, !dbg !6288
  %add.ptr104 = getelementptr inbounds i8*, i8** %21, i64 %idx.ext, !dbg !6288
  store i8** %add.ptr104, i8*** %argv, align 8, !dbg !6288
  ret void, !dbg !6289
}

; Function Attrs: noinline nounwind ssp uwtable
define internal void @select_plugin() #0 !dbg !6290 {
entry:
  call void @llvm.dbg.declare(metadata !666, metadata !6291, metadata !DIExpression()), !dbg !6292
  call void @llvm.dbg.declare(metadata !666, metadata !6293, metadata !DIExpression()), !dbg !6294
  %0 = load i8*, i8** @sound_name, align 8, !dbg !6295
  %call = call i32 @strcmp(i8* %0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.107, i32 0, i32 0)) #8, !dbg !6299
  call void @llvm.dbg.value(metadata i32 %call, metadata !6300, metadata !DIExpression()), !dbg !6301
  %cmp = icmp eq i32 %call, 0, !dbg !6302
  br i1 %cmp, label %if.then, label %if.end, !dbg !6304

if.then:                                          ; preds = %entry
  call void @plugout_list_plugins(), !dbg !6305
  call void @exit(i32 0) #9, !dbg !6309
  unreachable, !dbg !6309

if.end:                                           ; preds = %entry
  %1 = load i8*, i8** @sound_name, align 8, !dbg !6311
  %call1 = call %struct.output_plugin* @plugout_select_by_name(i8* %1), !dbg !6314
  call void @llvm.dbg.value(metadata %struct.output_plugin* %call1, metadata !6315, metadata !DIExpression()), !dbg !6301
  %2 = ptrtoint %struct.output_plugin* %call1 to i64, !dbg !6316
  %cmp2 = icmp eq i64 %2, 0, !dbg !6318
  br i1 %cmp2, label %if.then3, label %if.end6, !dbg !6319

if.then3:                                         ; preds = %if.end
  %call4 = call i8* @_(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.108, i32 0, i32 0)), !dbg !6320
  call void @llvm.dbg.value(metadata i8* %call4, metadata !6324, metadata !DIExpression()), !dbg !6301
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !6325
  %4 = load i8*, i8** @sound_name, align 8, !dbg !6327
  %call5 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %3, i8* %call4, i8* %4), !dbg !6328
  call void @exit(i32 1) #9, !dbg !6329
  unreachable, !dbg !6329

if.end6:                                          ; preds = %if.end
  %open = getelementptr inbounds %struct.output_plugin, %struct.output_plugin* %call1, i32 0, i32 3, !dbg !6331
  %5 = load i64 (i32, i64)*, i64 (i32, i64)** %open, align 8, !dbg !6331
  store i64 (i32, i64)* %5, i64 (i32, i64)** @sound_open, align 8, !dbg !6332
  %skip = getelementptr inbounds %struct.output_plugin, %struct.output_plugin* %call1, i32 0, i32 4, !dbg !6333
  %6 = load i32 (i32)*, i32 (i32)** %skip, align 8, !dbg !6333
  store i32 (i32)* %6, i32 (i32)** @sound_skip, align 8, !dbg !6334
  %io = getelementptr inbounds %struct.output_plugin, %struct.output_plugin* %call1, i32 0, i32 5, !dbg !6335
  %7 = load i32 (i64, i32, i8)*, i32 (i64, i32, i8)** %io, align 8, !dbg !6335
  store i32 (i64, i32, i8)* %7, i32 (i64, i32, i8)** @sound_io, align 8, !dbg !6336
  %write = getelementptr inbounds %struct.output_plugin, %struct.output_plugin* %call1, i32 0, i32 6, !dbg !6337
  %8 = load i32 (i8*, i32)*, i32 (i8*, i32)** %write, align 8, !dbg !6337
  store i32 (i8*, i32)* %8, i32 (i8*, i32)** @sound_write, align 8, !dbg !6338
  %close = getelementptr inbounds %struct.output_plugin, %struct.output_plugin* %call1, i32 0, i32 7, !dbg !6339
  %9 = load void ()*, void ()** %close, align 8, !dbg !6339
  store void ()* %9, void ()** @sound_close, align 8, !dbg !6340
  %description = getelementptr inbounds %struct.output_plugin, %struct.output_plugin* %call1, i32 0, i32 1, !dbg !6341
  %10 = load i8*, i8** %description, align 8, !dbg !6341
  store i8* %10, i8** @sound_description, align 8, !dbg !6342
  %flags = getelementptr inbounds %struct.output_plugin, %struct.output_plugin* %call1, i32 0, i32 2, !dbg !6343
  %11 = load i64, i64* %flags, align 8, !dbg !6343
  %and = and i64 %11, 1, !dbg !6345
  %tobool = icmp ne i64 %and, 0, !dbg !6345
  br i1 %tobool, label %if.then7, label %if.end8, !dbg !6346

if.then7:                                         ; preds = %if.end6
  store i64 0, i64* @verbosity, align 8, !dbg !6347
  br label %if.end8, !dbg !6349

if.end8:                                          ; preds = %if.then7, %if.end6
  ret void, !dbg !6350
}

; Function Attrs: noinline nounwind ssp uwtable
define internal void @usage___0(i64 %exitcode) #0 !dbg !6351 {
entry:
  call void @llvm.dbg.value(metadata i64 %exitcode, metadata !6352, metadata !DIExpression()), !dbg !6353
  call void @llvm.dbg.declare(metadata !666, metadata !6354, metadata !DIExpression()), !dbg !6355
  %tobool = icmp ne i64 %exitcode, 0, !dbg !6356
  br i1 %tobool, label %if.then, label %if.else, !dbg !6359

if.then:                                          ; preds = %entry
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !6360
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %0, metadata !6362, metadata !DIExpression()), !dbg !6353
  br label %if.end, !dbg !6363

if.else:                                          ; preds = %entry
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !6364
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %1, metadata !6362, metadata !DIExpression()), !dbg !6353
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %tmp.0 = phi %struct._IO_FILE* [ %0, %if.then ], [ %1, %if.else ], !dbg !6366
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %tmp.0, metadata !6362, metadata !DIExpression()), !dbg !6353
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %tmp.0, metadata !6367, metadata !DIExpression()), !dbg !6353
  %2 = load i32, i32* @endian, align 4, !dbg !6368
  %conv = zext i32 %2 to i64, !dbg !6371
  %call = call i8* @endian_str(i64 %conv), !dbg !6372
  call void @llvm.dbg.value(metadata i8* %call, metadata !6373, metadata !DIExpression()), !dbg !6353
  %call1 = call i8* @_(i8* getelementptr inbounds ([793 x i8], [793 x i8]* @.str.109, i32 0, i32 0)), !dbg !6374
  call void @llvm.dbg.value(metadata i8* %call1, metadata !6376, metadata !DIExpression()), !dbg !6353
  %3 = load i8*, i8** @myname___0, align 8, !dbg !6377
  %4 = load i64, i64* @fadeout, align 8, !dbg !6379
  %5 = load i64, i64* @subsong_gap, align 8, !dbg !6380
  %6 = load i8*, i8** @sound_name, align 8, !dbg !6381
  %7 = load i64, i64* @rate, align 8, !dbg !6382
  %8 = load i64, i64* @refresh_delay, align 8, !dbg !6383
  %9 = load i64, i64* @subsong_timeout, align 8, !dbg !6384
  %10 = load i64, i64* @silence_timeout, align 8, !dbg !6385
  %call2 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %tmp.0, i8* %call1, i8* %3, i8* %call, i64 %4, i64 %5, i8* %6, i64 %7, i64 %8, i64 %9, i64 %10), !dbg !6386
  %conv3 = trunc i64 %exitcode to i32, !dbg !6387
  call void @exit(i32 %conv3) #9, !dbg !6389
  unreachable, !dbg !6389

return:                                           ; No predecessors!
  ret void, !dbg !6390
}

; Function Attrs: noinline nounwind ssp uwtable
define internal void @precalc_notes() #0 !dbg !6391 {
entry:
  call void @llvm.dbg.value(metadata i64 0, metadata !6392, metadata !DIExpression()), !dbg !6393
  br label %while.body, !dbg !6394

while.body:                                       ; preds = %if.end15, %entry
  %i.0 = phi i64 [ 0, %entry ], [ %inc, %if.end15 ], !dbg !6398
  call void @llvm.dbg.value(metadata i64 %i.0, metadata !6392, metadata !DIExpression()), !dbg !6393
  br label %while_continue___0, !dbg !6399

while_continue___0:                               ; preds = %while.body
  br label %while_continue, !dbg !6399

while_continue:                                   ; preds = %while_continue___0
  %cmp = icmp slt i64 %i.0, 108, !dbg !6400
  br i1 %cmp, label %if.end, label %if.then, !dbg !6403

if.then:                                          ; preds = %while_continue
  br label %while_break, !dbg !6404

if.end:                                           ; preds = %while_continue
  %mul = mul nsw i64 4, %i.0, !dbg !6406
  %add.ptr = getelementptr inbounds i8, i8* getelementptr inbounds ([432 x i8], [432 x i8]* @notelookup, i32 0, i32 0), i64 %mul, !dbg !6407
  call void @llvm.dbg.value(metadata i8* %add.ptr, metadata !6408, metadata !DIExpression()), !dbg !6393
  %rem = srem i64 %i.0, 12, !dbg !6409
  call void @llvm.dbg.value(metadata i64 %rem, metadata !6410, metadata !DIExpression()), !dbg !6393
  %div = sdiv i64 %i.0, 12, !dbg !6411
  %add = add nsw i64 48, %div, !dbg !6412
  %conv = trunc i64 %add to i8, !dbg !6413
  %add.ptr1 = getelementptr inbounds i8, i8* %add.ptr, i64 2, !dbg !6414
  store i8 %conv, i8* %add.ptr1, align 1, !dbg !6415
  %cmp2 = icmp sgt i64 %rem, 2, !dbg !6416
  %conv3 = zext i1 %cmp2 to i32, !dbg !6416
  %cmp4 = icmp sgt i64 %rem, 7, !dbg !6417
  %conv5 = zext i1 %cmp4 to i32, !dbg !6417
  %add6 = add nsw i32 %conv3, %conv5, !dbg !6418
  %conv7 = sext i32 %add6 to i64, !dbg !6419
  %add8 = add nsw i64 %rem, %conv7, !dbg !6420
  call void @llvm.dbg.value(metadata i64 %add8, metadata !6410, metadata !DIExpression()), !dbg !6393
  %shr = ashr i64 %add8, 1, !dbg !6421
  %add9 = add nsw i64 65, %shr, !dbg !6422
  %conv10 = trunc i64 %add9 to i8, !dbg !6423
  %add.ptr11 = getelementptr inbounds i8, i8* %add.ptr, i64 0, !dbg !6424
  store i8 %conv10, i8* %add.ptr11, align 1, !dbg !6425
  %and = and i64 %add8, 1, !dbg !6426
  %tobool = icmp ne i64 %and, 0, !dbg !6426
  br i1 %tobool, label %if.then12, label %if.else, !dbg !6428

if.then12:                                        ; preds = %if.end
  %add.ptr13 = getelementptr inbounds i8, i8* %add.ptr, i64 1, !dbg !6429
  store i8 35, i8* %add.ptr13, align 1, !dbg !6431
  br label %if.end15, !dbg !6432

if.else:                                          ; preds = %if.end
  %add.ptr14 = getelementptr inbounds i8, i8* %add.ptr, i64 1, !dbg !6433
  store i8 45, i8* %add.ptr14, align 1, !dbg !6435
  br label %if.end15

if.end15:                                         ; preds = %if.else, %if.then12
  %inc = add nsw i64 %i.0, 1, !dbg !6436
  call void @llvm.dbg.value(metadata i64 %inc, metadata !6392, metadata !DIExpression()), !dbg !6393
  br label %while.body, !dbg !6394, !llvm.loop !6437

while_break___0:                                  ; No predecessors!
  br label %while_break, !dbg !6439

while_break:                                      ; preds = %while_break___0, %if.then
  ret void, !dbg !6440
}

; Function Attrs: noinline nounwind ssp uwtable
define internal void @precalc_vols() #0 !dbg !6441 {
entry:
  call void @llvm.dbg.value(metadata i64 0, metadata !6442, metadata !DIExpression()), !dbg !6443
  br label %while.body, !dbg !6444

while.body:                                       ; preds = %while_break___0, %entry
  %k.0 = phi i64 [ 0, %entry ], [ %inc11, %while_break___0 ], !dbg !6448
  call void @llvm.dbg.value(metadata i64 %k.0, metadata !6442, metadata !DIExpression()), !dbg !6443
  br label %while_continue___1, !dbg !6449

while_continue___1:                               ; preds = %while.body
  br label %while_continue, !dbg !6449

while_continue:                                   ; preds = %while_continue___1
  %cmp = icmp slt i64 %k.0, 16, !dbg !6450
  br i1 %cmp, label %if.end, label %if.then, !dbg !6453

if.then:                                          ; preds = %while_continue
  br label %while_break, !dbg !6454

if.end:                                           ; preds = %while_continue
  %mul = mul nsw i64 5, %k.0, !dbg !6456
  %add.ptr = getelementptr inbounds i8, i8* getelementptr inbounds ([80 x i8], [80 x i8]* @vollookup, i32 0, i32 0), i64 %mul, !dbg !6457
  call void @llvm.dbg.value(metadata i8* %add.ptr, metadata !6458, metadata !DIExpression()), !dbg !6443
  call void @llvm.dbg.value(metadata i64 %k.0, metadata !6459, metadata !DIExpression()), !dbg !6443
  call void @llvm.dbg.value(metadata i64 0, metadata !6460, metadata !DIExpression()), !dbg !6443
  br label %while.body2, !dbg !6461

while.body2:                                      ; preds = %if.end10, %if.end
  %j.0 = phi i64 [ 0, %if.end ], [ %inc, %if.end10 ], !dbg !6464
  %i.0 = phi i64 [ %k.0, %if.end ], [ %i.1, %if.end10 ], !dbg !6464
  call void @llvm.dbg.value(metadata i64 %i.0, metadata !6459, metadata !DIExpression()), !dbg !6443
  call void @llvm.dbg.value(metadata i64 %j.0, metadata !6460, metadata !DIExpression()), !dbg !6443
  br label %while_continue___2, !dbg !6465

while_continue___2:                               ; preds = %while.body2
  br label %while_continue___0, !dbg !6465

while_continue___0:                               ; preds = %while_continue___2
  %cmp3 = icmp slt i64 %j.0, 4, !dbg !6466
  br i1 %cmp3, label %if.end5, label %if.then4, !dbg !6469

if.then4:                                         ; preds = %while_continue___0
  br label %while_break___0, !dbg !6470

if.end5:                                          ; preds = %while_continue___0
  %cmp6 = icmp sge i64 %i.0, 4, !dbg !6472
  br i1 %cmp6, label %if.then7, label %if.else, !dbg !6474

if.then7:                                         ; preds = %if.end5
  %0 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @vols, i64 0, i64 4), align 1, !dbg !6475
  %add.ptr8 = getelementptr inbounds i8, i8* %add.ptr, i64 %j.0, !dbg !6477
  store i8 %0, i8* %add.ptr8, align 1, !dbg !6478
  %sub = sub nsw i64 %i.0, 4, !dbg !6479
  call void @llvm.dbg.value(metadata i64 %sub, metadata !6459, metadata !DIExpression()), !dbg !6443
  br label %if.end10, !dbg !6480

if.else:                                          ; preds = %if.end5
  %arrayidx = getelementptr inbounds [5 x i8], [5 x i8]* @vols, i64 0, i64 %i.0, !dbg !6481
  %1 = load i8, i8* %arrayidx, align 1, !dbg !6481
  %add.ptr9 = getelementptr inbounds i8, i8* %add.ptr, i64 %j.0, !dbg !6483
  store i8 %1, i8* %add.ptr9, align 1, !dbg !6484
  call void @llvm.dbg.value(metadata i64 0, metadata !6459, metadata !DIExpression()), !dbg !6443
  br label %if.end10

if.end10:                                         ; preds = %if.else, %if.then7
  %i.1 = phi i64 [ %sub, %if.then7 ], [ 0, %if.else ], !dbg !6485
  call void @llvm.dbg.value(metadata i64 %i.1, metadata !6459, metadata !DIExpression()), !dbg !6443
  %inc = add nsw i64 %j.0, 1, !dbg !6486
  call void @llvm.dbg.value(metadata i64 %inc, metadata !6460, metadata !DIExpression()), !dbg !6443
  br label %while.body2, !dbg !6461, !llvm.loop !6487

while_break___2:                                  ; No predecessors!
  br label %while_break___0, !dbg !6489

while_break___0:                                  ; preds = %while_break___2, %if.then4
  %inc11 = add nsw i64 %k.0, 1, !dbg !6490
  call void @llvm.dbg.value(metadata i64 %inc11, metadata !6442, metadata !DIExpression()), !dbg !6443
  br label %while.body, !dbg !6444, !llvm.loop !6491

while_break___1:                                  ; No predecessors!
  br label %while_break, !dbg !6493

while_break:                                      ; preds = %while_break___1, %if.then
  ret void, !dbg !6494
}

; Function Attrs: noinline nounwind ssp uwtable
define internal void @iocallback___1(i64 %cycles, i32 %addr, i8 zeroext %val, i8* %priv) #0 !dbg !6495 {
entry:
  call void @llvm.dbg.value(metadata i64 %cycles, metadata !6496, metadata !DIExpression()), !dbg !6497
  call void @llvm.dbg.value(metadata i32 %addr, metadata !6498, metadata !DIExpression()), !dbg !6497
  call void @llvm.dbg.value(metadata i8 %val, metadata !6499, metadata !DIExpression()), !dbg !6497
  call void @llvm.dbg.value(metadata i8* %priv, metadata !6500, metadata !DIExpression()), !dbg !6497
  %0 = load i32 (i64, i32, i8)*, i32 (i64, i32, i8)** @sound_io, align 8, !dbg !6501
  %tobool = icmp ne i32 (i64, i32, i8)* %0, null, !dbg !6501
  br i1 %tobool, label %if.then, label %if.end, !dbg !6504

if.then:                                          ; preds = %entry
  %1 = load i32 (i64, i32, i8)*, i32 (i64, i32, i8)** @sound_io, align 8, !dbg !6505
  %call = call i32 %1(i64 %cycles, i32 %addr, i8 zeroext %val), !dbg !6509
  br label %if.end, !dbg !6510

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !6511
}

; Function Attrs: noinline nounwind ssp uwtable
define internal void @callback___1(%struct.gbhw_buffer* %buf___3, i8* %priv) #0 !dbg !6512 {
entry:
  call void @llvm.dbg.value(metadata %struct.gbhw_buffer* %buf___3, metadata !6513, metadata !DIExpression()), !dbg !6514
  call void @llvm.dbg.value(metadata i8* %priv, metadata !6515, metadata !DIExpression()), !dbg !6514
  %call = call i64 @is_le_machine(), !dbg !6516
  call void @llvm.dbg.value(metadata i64 %call, metadata !6520, metadata !DIExpression()), !dbg !6514
  %tobool = icmp ne i64 %call, 0, !dbg !6521
  br i1 %tobool, label %if.then, label %if.else2, !dbg !6523

if.then:                                          ; preds = %entry
  %0 = load i32, i32* @endian, align 4, !dbg !6524
  %cmp = icmp eq i32 %0, 0, !dbg !6527
  br i1 %cmp, label %if.then1, label %if.else, !dbg !6528

if.then1:                                         ; preds = %if.then
  call void @swap_endian(%struct.gbhw_buffer* %buf___3), !dbg !6529
  br label %if.end, !dbg !6533

if.else:                                          ; preds = %if.then
  br label %_L, !dbg !6534

if.end:                                           ; preds = %if.then1
  br label %if.end10, !dbg !6536

if.else2:                                         ; preds = %entry
  br label %_L, !dbg !6537

_L:                                               ; preds = %if.else2, %if.else
  %call3 = call i64 @is_be_machine(), !dbg !6538
  call void @llvm.dbg.value(metadata i64 %call3, metadata !6542, metadata !DIExpression()), !dbg !6514
  %tobool4 = icmp ne i64 %call3, 0, !dbg !6543
  br i1 %tobool4, label %if.then5, label %if.end9, !dbg !6545

if.then5:                                         ; preds = %_L
  %1 = load i32, i32* @endian, align 4, !dbg !6546
  %cmp6 = icmp eq i32 %1, 1, !dbg !6549
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !6550

if.then7:                                         ; preds = %if.then5
  call void @swap_endian(%struct.gbhw_buffer* %buf___3), !dbg !6551
  br label %if.end8, !dbg !6555

if.end8:                                          ; preds = %if.then7, %if.then5
  br label %if.end9, !dbg !6556

if.end9:                                          ; preds = %if.end8, %_L
  br label %if.end10

if.end10:                                         ; preds = %if.end9, %if.end
  %2 = load i32 (i8*, i32)*, i32 (i8*, i32)** @sound_write, align 8, !dbg !6557
  %data = getelementptr inbounds %struct.gbhw_buffer, %struct.gbhw_buffer* %buf___3, i32 0, i32 0, !dbg !6560
  %3 = load i16*, i16** %data, align 8, !dbg !6560
  %4 = bitcast i16* %3 to i8*, !dbg !6561
  %pos = getelementptr inbounds %struct.gbhw_buffer, %struct.gbhw_buffer* %buf___3, i32 0, i32 1, !dbg !6562
  %5 = load i64, i64* %pos, align 8, !dbg !6562
  %mul = mul nsw i64 %5, 2, !dbg !6563
  %mul11 = mul i64 %mul, 2, !dbg !6564
  %conv = trunc i64 %mul11 to i32, !dbg !6565
  %call12 = call i32 %2(i8* %4, i32 %conv), !dbg !6566
  %pos13 = getelementptr inbounds %struct.gbhw_buffer, %struct.gbhw_buffer* %buf___3, i32 0, i32 1, !dbg !6567
  store i64 0, i64* %pos13, align 8, !dbg !6568
  ret void, !dbg !6569
}

; Function Attrs: nounwind
declare i32 @"\01__isoc99_sscanf"(i8*, i8*, ...) #4

; Function Attrs: noinline nounwind ssp uwtable
define internal void @setup_playmode(%struct.gbs* %gbs) #0 !dbg !6570 {
entry:
  call void @llvm.dbg.value(metadata %struct.gbs* %gbs, metadata !6571, metadata !DIExpression()), !dbg !6572
  %0 = load i64, i64* @playmode, align 8, !dbg !6573
  %cmp = icmp eq i64 %0, 2, !dbg !6577
  br i1 %cmp, label %if.then, label %if.end, !dbg !6578

if.then:                                          ; preds = %entry
  br label %case_2, !dbg !6579

if.end:                                           ; preds = %entry
  %1 = load i64, i64* @playmode, align 8, !dbg !6581
  %cmp1 = icmp eq i64 %1, 3, !dbg !6583
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !6584

if.then2:                                         ; preds = %if.end
  br label %case_3, !dbg !6585

if.end3:                                          ; preds = %if.end
  %2 = load i64, i64* @playmode, align 8, !dbg !6587
  %cmp4 = icmp eq i64 %2, 1, !dbg !6589
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !6590

if.then5:                                         ; preds = %if.end3
  br label %case_1, !dbg !6591

if.end6:                                          ; preds = %if.end3
  br label %switch_break, !dbg !6593

case_2:                                           ; preds = %if.then
  %subsong = getelementptr inbounds %struct.gbs, %struct.gbs* %gbs, i32 0, i32 36, !dbg !6594
  %3 = load i64, i64* %subsong, align 8, !dbg !6594
  %cmp7 = icmp eq i64 %3, -1, !dbg !6596
  br i1 %cmp7, label %if.then8, label %if.end10, !dbg !6597

if.then8:                                         ; preds = %case_2
  %call = call i64 @get_next_subsong(%struct.gbs* %gbs), !dbg !6598
  %subsong9 = getelementptr inbounds %struct.gbs, %struct.gbs* %gbs, i32 0, i32 36, !dbg !6602
  store i64 %call, i64* %subsong9, align 8, !dbg !6603
  br label %if.end10, !dbg !6604

if.end10:                                         ; preds = %if.then8, %case_2
  br label %case_3, !dbg !6605

case_3:                                           ; preds = %if.end10, %if.then2
  %songs = getelementptr inbounds %struct.gbs, %struct.gbs* %gbs, i32 0, i32 2, !dbg !6606
  %4 = load i64, i64* %songs, align 8, !dbg !6606
  %call11 = call i64* @setup_playlist(i64 %4), !dbg !6609
  store i64* %call11, i64** @subsong_playlist, align 8, !dbg !6610
  store i64 0, i64* @subsong_playlist_idx, align 8, !dbg !6611
  %subsong12 = getelementptr inbounds %struct.gbs, %struct.gbs* %gbs, i32 0, i32 36, !dbg !6612
  %5 = load i64, i64* %subsong12, align 8, !dbg !6612
  %cmp13 = icmp eq i64 %5, -1, !dbg !6614
  br i1 %cmp13, label %if.then14, label %if.else, !dbg !6615

if.then14:                                        ; preds = %case_3
  %6 = load i64*, i64** @subsong_playlist, align 8, !dbg !6616
  %add.ptr = getelementptr inbounds i64, i64* %6, i64 0, !dbg !6618
  %7 = load i64, i64* %add.ptr, align 8, !dbg !6619
  %subsong15 = getelementptr inbounds %struct.gbs, %struct.gbs* %gbs, i32 0, i32 36, !dbg !6620
  store i64 %7, i64* %subsong15, align 8, !dbg !6621
  br label %if.end23, !dbg !6622

if.else:                                          ; preds = %case_3
  br label %while.body, !dbg !6623

while.body:                                       ; preds = %if.end20, %if.else
  br label %while_continue___0, !dbg !6627

while_continue___0:                               ; preds = %while.body
  br label %while_continue, !dbg !6627

while_continue:                                   ; preds = %while_continue___0
  %8 = load i64*, i64** @subsong_playlist, align 8, !dbg !6628
  %add.ptr16 = getelementptr inbounds i64, i64* %8, i64 0, !dbg !6631
  %9 = load i64, i64* %add.ptr16, align 8, !dbg !6632
  %subsong17 = getelementptr inbounds %struct.gbs, %struct.gbs* %gbs, i32 0, i32 36, !dbg !6633
  %10 = load i64, i64* %subsong17, align 8, !dbg !6633
  %cmp18 = icmp ne i64 %9, %10, !dbg !6634
  br i1 %cmp18, label %if.end20, label %if.then19, !dbg !6635

if.then19:                                        ; preds = %while_continue
  br label %while_break, !dbg !6636

if.end20:                                         ; preds = %while_continue
  %11 = load i64, i64* @random_seed, align 8, !dbg !6638
  %inc = add i64 %11, 1, !dbg !6638
  store i64 %inc, i64* @random_seed, align 8, !dbg !6638
  %songs21 = getelementptr inbounds %struct.gbs, %struct.gbs* %gbs, i32 0, i32 2, !dbg !6640
  %12 = load i64, i64* %songs21, align 8, !dbg !6640
  %call22 = call i64* @setup_playlist(i64 %12), !dbg !6642
  store i64* %call22, i64** @subsong_playlist, align 8, !dbg !6643
  br label %while.body, !dbg !6623, !llvm.loop !6644

while_break___0:                                  ; No predecessors!
  br label %while_break, !dbg !6646

while_break:                                      ; preds = %while_break___0, %if.then19
  br label %if.end23

if.end23:                                         ; preds = %while_break, %if.then14
  br label %case_1, !dbg !6647

case_1:                                           ; preds = %if.end23, %if.then5
  %subsong24 = getelementptr inbounds %struct.gbs, %struct.gbs* %gbs, i32 0, i32 36, !dbg !6648
  %13 = load i64, i64* %subsong24, align 8, !dbg !6648
  %cmp25 = icmp eq i64 %13, -1, !dbg !6650
  br i1 %cmp25, label %if.then26, label %if.end28, !dbg !6651

if.then26:                                        ; preds = %case_1
  %defaultsong = getelementptr inbounds %struct.gbs, %struct.gbs* %gbs, i32 0, i32 3, !dbg !6652
  %14 = load i64, i64* %defaultsong, align 8, !dbg !6652
  %sub = sub nsw i64 %14, 1, !dbg !6654
  %subsong27 = getelementptr inbounds %struct.gbs, %struct.gbs* %gbs, i32 0, i32 36, !dbg !6655
  store i64 %sub, i64* %subsong27, align 8, !dbg !6656
  br label %if.end28, !dbg !6657

if.end28:                                         ; preds = %if.then26, %case_1
  br label %switch_break, !dbg !6658

switch_break:                                     ; preds = %if.end28, %if.end6
  ret void, !dbg !6659
}

; Function Attrs: noinline nounwind ssp uwtable
define internal i64 @nextsubsong_cb(%struct.gbs* %gbs, i8* %priv) #0 !dbg !6660 {
entry:
  call void @llvm.dbg.value(metadata %struct.gbs* %gbs, metadata !6661, metadata !DIExpression()), !dbg !6662
  call void @llvm.dbg.value(metadata i8* %priv, metadata !6663, metadata !DIExpression()), !dbg !6662
  %call = call i64 @get_next_subsong(%struct.gbs* %gbs), !dbg !6664
  call void @llvm.dbg.value(metadata i64 %call, metadata !6668, metadata !DIExpression()), !dbg !6662
  call void @llvm.dbg.value(metadata i64 %call, metadata !6669, metadata !DIExpression()), !dbg !6662
  %subsong1 = getelementptr inbounds %struct.gbs, %struct.gbs* %gbs, i32 0, i32 36, !dbg !6670
  %0 = load i64, i64* %subsong1, align 8, !dbg !6670
  %1 = load i64, i64* @subsong_stop, align 8, !dbg !6672
  %cmp = icmp eq i64 %0, %1, !dbg !6673
  br i1 %cmp, label %if.then, label %if.else, !dbg !6674

if.then:                                          ; preds = %entry
  br label %_L, !dbg !6675

if.else:                                          ; preds = %entry
  %songs = getelementptr inbounds %struct.gbs, %struct.gbs* %gbs, i32 0, i32 2, !dbg !6677
  %2 = load i64, i64* %songs, align 8, !dbg !6677
  %cmp2 = icmp sge i64 %call, %2, !dbg !6679
  br i1 %cmp2, label %if.then3, label %if.end6, !dbg !6680

if.then3:                                         ; preds = %if.else
  br label %_L, !dbg !6681

_L:                                               ; preds = %if.then3, %if.then
  %3 = load i64, i64* @loopmode, align 8, !dbg !6682
  %tobool = icmp ne i64 %3, 0, !dbg !6682
  br i1 %tobool, label %if.then4, label %if.else5, !dbg !6685

if.then4:                                         ; preds = %_L
  %4 = load i64, i64* @subsong_start, align 8, !dbg !6686
  call void @llvm.dbg.value(metadata i64 %4, metadata !6669, metadata !DIExpression()), !dbg !6662
  call void @setup_playmode(%struct.gbs* %gbs), !dbg !6689
  br label %if.end, !dbg !6691

if.else5:                                         ; preds = %_L
  br label %return, !dbg !6692

if.end:                                           ; preds = %if.then4
  br label %if.end6, !dbg !6694

if.end6:                                          ; preds = %if.end, %if.else
  %subsong.0 = phi i64 [ %4, %if.end ], [ %call, %if.else ], !dbg !6695
  call void @llvm.dbg.value(metadata i64 %subsong.0, metadata !6669, metadata !DIExpression()), !dbg !6662
  br label %if.end7

if.end7:                                          ; preds = %if.end6
  %call8 = call i64 @gbs_init(%struct.gbs* %gbs, i64 %subsong.0), !dbg !6696
  %5 = load i32 (i32)*, i32 (i32)** @sound_skip, align 8, !dbg !6699
  %tobool9 = icmp ne i32 (i32)* %5, null, !dbg !6699
  br i1 %tobool9, label %if.then10, label %if.end12, !dbg !6701

if.then10:                                        ; preds = %if.end7
  %6 = load i32 (i32)*, i32 (i32)** @sound_skip, align 8, !dbg !6702
  %conv = trunc i64 %subsong.0 to i32, !dbg !6706
  %call11 = call i32 %6(i32 %conv), !dbg !6707
  br label %if.end12, !dbg !6708

if.end12:                                         ; preds = %if.then10, %if.end7
  br label %return, !dbg !6709

return:                                           ; preds = %if.end12, %if.else5
  %retval.0 = phi i64 [ 1, %if.end12 ], [ 0, %if.else5 ], !dbg !6695
  ret i64 %retval.0, !dbg !6710
}

; Function Attrs: noinline nounwind ssp uwtable
define internal void @printinfo(%struct.gbs* %gbs) #0 !dbg !6711 {
entry:
  call void @llvm.dbg.value(metadata %struct.gbs* %gbs, metadata !6712, metadata !DIExpression()), !dbg !6713
  call void @llvm.dbg.declare(metadata !666, metadata !6714, metadata !DIExpression()), !dbg !6715
  call void @llvm.dbg.declare(metadata !666, metadata !6716, metadata !DIExpression()), !dbg !6717
  %0 = load i64, i64* @verbosity, align 8, !dbg !6718
  %cmp = icmp sgt i64 %0, 0, !dbg !6721
  br i1 %cmp, label %if.then, label %if.end, !dbg !6722

if.then:                                          ; preds = %entry
  call void @gbs_printinfo(%struct.gbs* %gbs, i64 0), !dbg !6723
  %call = call i8* @_(i8* getelementptr inbounds ([113 x i8], [113 x i8]* @.str.110, i32 0, i32 0)), !dbg !6727
  call void @llvm.dbg.value(metadata i8* %call, metadata !6729, metadata !DIExpression()), !dbg !6713
  %call1 = call i32 @puts(i8* %call), !dbg !6730
  br label %if.end, !dbg !6732

if.end:                                           ; preds = %if.then, %entry
  %1 = load i64, i64* @verbosity, align 8, !dbg !6733
  %cmp2 = icmp sgt i64 %1, 1, !dbg !6735
  br i1 %cmp2, label %if.then3, label %if.end5, !dbg !6736

if.then3:                                         ; preds = %if.end
  %call4 = call i32 @puts(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.111, i32 0, i32 0)), !dbg !6737
  br label %if.end5, !dbg !6741

if.end5:                                          ; preds = %if.then3, %if.end
  store i64 0, i64* @redraw, align 8, !dbg !6742
  ret void, !dbg !6743
}

; Function Attrs: nounwind
declare i32 @sigaction(i32, %struct.sigaction*, %struct.sigaction*) #4

; Function Attrs: noinline nounwind ssp uwtable
define internal void @printstatus(%struct.gbs* %gbs) #0 !dbg !6744 {
entry:
  call void @llvm.dbg.value(metadata %struct.gbs* %gbs, metadata !6745, metadata !DIExpression()), !dbg !6746
  call void @llvm.dbg.declare(metadata !666, metadata !6747, metadata !DIExpression()), !dbg !6748
  call void @llvm.dbg.declare(metadata !666, metadata !6749, metadata !DIExpression()), !dbg !6750
  call void @llvm.dbg.declare(metadata !666, metadata !6751, metadata !DIExpression()), !dbg !6752
  call void @llvm.dbg.declare(metadata !666, metadata !6753, metadata !DIExpression()), !dbg !6754
  %ticks = getelementptr inbounds %struct.gbs, %struct.gbs* %gbs, i32 0, i32 24, !dbg !6755
  %0 = load i64, i64* %ticks, align 8, !dbg !6755
  %div = sdiv i64 %0, 4194304, !dbg !6757
  call void @llvm.dbg.value(metadata i64 %div, metadata !6758, metadata !DIExpression()), !dbg !6746
  %div1 = sdiv i64 %div, 60, !dbg !6759
  call void @llvm.dbg.value(metadata i64 %div1, metadata !6760, metadata !DIExpression()), !dbg !6746
  %rem = srem i64 %div, 60, !dbg !6761
  call void @llvm.dbg.value(metadata i64 %rem, metadata !6762, metadata !DIExpression()), !dbg !6746
  %subsong_info = getelementptr inbounds %struct.gbs, %struct.gbs* %gbs, i32 0, i32 19, !dbg !6763
  %1 = load %struct.gbs_subsong_info*, %struct.gbs_subsong_info** %subsong_info, align 8, !dbg !6763
  %subsong = getelementptr inbounds %struct.gbs, %struct.gbs* %gbs, i32 0, i32 36, !dbg !6764
  %2 = load i64, i64* %subsong, align 8, !dbg !6764
  %add.ptr = getelementptr inbounds %struct.gbs_subsong_info, %struct.gbs_subsong_info* %1, i64 %2, !dbg !6765
  %len2 = getelementptr inbounds %struct.gbs_subsong_info, %struct.gbs_subsong_info* %add.ptr, i32 0, i32 0, !dbg !6766
  %3 = load i32, i32* %len2, align 8, !dbg !6766
  %div3 = udiv i32 %3, 1024, !dbg !6767
  %conv = zext i32 %div3 to i64, !dbg !6768
  call void @llvm.dbg.value(metadata i64 %conv, metadata !6769, metadata !DIExpression()), !dbg !6746
  %cmp = icmp eq i64 %conv, 0, !dbg !6770
  br i1 %cmp, label %if.then, label %if.end, !dbg !6772

if.then:                                          ; preds = %entry
  %4 = load i64, i64* @subsong_timeout, align 8, !dbg !6773
  call void @llvm.dbg.value(metadata i64 %4, metadata !6769, metadata !DIExpression()), !dbg !6746
  br label %if.end, !dbg !6775

if.end:                                           ; preds = %if.then, %entry
  %len.0 = phi i64 [ %4, %if.then ], [ %conv, %entry ], !dbg !6776
  call void @llvm.dbg.value(metadata i64 %len.0, metadata !6769, metadata !DIExpression()), !dbg !6746
  %div5 = sdiv i64 %len.0, 60, !dbg !6777
  call void @llvm.dbg.value(metadata i64 %div5, metadata !6778, metadata !DIExpression()), !dbg !6746
  %rem6 = srem i64 %len.0, 60, !dbg !6779
  call void @llvm.dbg.value(metadata i64 %rem6, metadata !6780, metadata !DIExpression()), !dbg !6746
  %subsong_info7 = getelementptr inbounds %struct.gbs, %struct.gbs* %gbs, i32 0, i32 19, !dbg !6781
  %5 = load %struct.gbs_subsong_info*, %struct.gbs_subsong_info** %subsong_info7, align 8, !dbg !6781
  %subsong8 = getelementptr inbounds %struct.gbs, %struct.gbs* %gbs, i32 0, i32 36, !dbg !6782
  %6 = load i64, i64* %subsong8, align 8, !dbg !6782
  %add.ptr9 = getelementptr inbounds %struct.gbs_subsong_info, %struct.gbs_subsong_info* %5, i64 %6, !dbg !6783
  %title = getelementptr inbounds %struct.gbs_subsong_info, %struct.gbs_subsong_info* %add.ptr9, i32 0, i32 1, !dbg !6784
  %7 = load i8*, i8** %title, align 8, !dbg !6784
  call void @llvm.dbg.value(metadata i8* %7, metadata !6785, metadata !DIExpression()), !dbg !6746
  %tobool = icmp ne i8* %7, null, !dbg !6786
  br i1 %tobool, label %if.end11, label %if.then10, !dbg !6788

if.then10:                                        ; preds = %if.end
  %call = call i8* @_(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.112, i32 0, i32 0)), !dbg !6789
  call void @llvm.dbg.value(metadata i8* %call, metadata !6785, metadata !DIExpression()), !dbg !6746
  br label %if.end11, !dbg !6793

if.end11:                                         ; preds = %if.then10, %if.end
  %songtitle.0 = phi i8* [ %7, %if.end ], [ %call, %if.then10 ], !dbg !6776
  call void @llvm.dbg.value(metadata i8* %songtitle.0, metadata !6785, metadata !DIExpression()), !dbg !6746
  %subsong12 = getelementptr inbounds %struct.gbs, %struct.gbs* %gbs, i32 0, i32 36, !dbg !6794
  %8 = load i64, i64* %subsong12, align 8, !dbg !6794
  %add = add nsw i64 %8, 1, !dbg !6797
  %songs = getelementptr inbounds %struct.gbs, %struct.gbs* %gbs, i32 0, i32 2, !dbg !6798
  %9 = load i64, i64* %songs, align 8, !dbg !6798
  %call13 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.113, i32 0, i32 0), i64 %add, i64 %9, i8* %songtitle.0, i64 %div1, i64 %rem, i64 %div5, i64 %rem6), !dbg !6799
  %10 = load i64, i64* @verbosity, align 8, !dbg !6800
  %cmp14 = icmp sgt i64 %10, 2, !dbg !6802
  br i1 %cmp14, label %if.then16, label %if.else, !dbg !6803

if.then16:                                        ; preds = %if.end11
  %rvol = getelementptr inbounds %struct.gbs, %struct.gbs* %gbs, i32 0, i32 30, !dbg !6804
  %11 = load i16, i16* %rvol, align 2, !dbg !6804
  %conv17 = sext i16 %11 to i32, !dbg !6808
  %div18 = sdiv i32 %conv17, 1024, !dbg !6809
  %conv19 = sext i32 %div18 to i64, !dbg !6810
  %call20 = call i8* @volstring(i64 %conv19), !dbg !6811
  call void @llvm.dbg.value(metadata i8* %call20, metadata !6812, metadata !DIExpression()), !dbg !6746
  %lvol = getelementptr inbounds %struct.gbs, %struct.gbs* %gbs, i32 0, i32 27, !dbg !6813
  %12 = load i16, i16* %lvol, align 4, !dbg !6813
  %conv21 = sext i16 %12 to i32, !dbg !6815
  %div22 = sdiv i32 %conv21, 1024, !dbg !6816
  %conv23 = sext i32 %div22 to i64, !dbg !6817
  %call24 = call i8* @volstring(i64 %conv23), !dbg !6818
  call void @llvm.dbg.value(metadata i8* %call24, metadata !6819, metadata !DIExpression()), !dbg !6746
  %call25 = call i8* @reverse_vol(i8* %call24), !dbg !6820
  call void @llvm.dbg.value(metadata i8* %call25, metadata !6822, metadata !DIExpression()), !dbg !6746
  %call26 = call i64 @chvol(i64 3), !dbg !6823
  call void @llvm.dbg.value(metadata i64 %call26, metadata !6825, metadata !DIExpression()), !dbg !6746
  %call27 = call i8* @volstring(i64 %call26), !dbg !6826
  call void @llvm.dbg.value(metadata i8* %call27, metadata !6828, metadata !DIExpression()), !dbg !6746
  %call28 = call i8* @notestring(i64 3), !dbg !6829
  call void @llvm.dbg.value(metadata i8* %call28, metadata !6831, metadata !DIExpression()), !dbg !6746
  %call29 = call i64 @chvol(i64 2), !dbg !6832
  call void @llvm.dbg.value(metadata i64 %call29, metadata !6834, metadata !DIExpression()), !dbg !6746
  %call30 = call i8* @volstring(i64 %call29), !dbg !6835
  call void @llvm.dbg.value(metadata i8* %call30, metadata !6837, metadata !DIExpression()), !dbg !6746
  %call31 = call i8* @notestring(i64 2), !dbg !6838
  call void @llvm.dbg.value(metadata i8* %call31, metadata !6840, metadata !DIExpression()), !dbg !6746
  %call32 = call i64 @chvol(i64 1), !dbg !6841
  call void @llvm.dbg.value(metadata i64 %call32, metadata !6843, metadata !DIExpression()), !dbg !6746
  %call33 = call i8* @volstring(i64 %call32), !dbg !6844
  call void @llvm.dbg.value(metadata i8* %call33, metadata !6846, metadata !DIExpression()), !dbg !6746
  %call34 = call i8* @notestring(i64 1), !dbg !6847
  call void @llvm.dbg.value(metadata i8* %call34, metadata !6849, metadata !DIExpression()), !dbg !6746
  %call35 = call i64 @chvol(i64 0), !dbg !6850
  call void @llvm.dbg.value(metadata i64 %call35, metadata !6852, metadata !DIExpression()), !dbg !6746
  %call36 = call i8* @volstring(i64 %call35), !dbg !6853
  call void @llvm.dbg.value(metadata i8* %call36, metadata !6855, metadata !DIExpression()), !dbg !6746
  %call37 = call i8* @notestring(i64 0), !dbg !6856
  call void @llvm.dbg.value(metadata i8* %call37, metadata !6858, metadata !DIExpression()), !dbg !6746
  %call38 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.114, i32 0, i32 0), i8* %call37, i8* %call36, i8* %call34, i8* %call33, i8* %call31, i8* %call30, i8* %call28, i8* %call27, i8* %call25, i8* %call20), !dbg !6859
  br label %if.end40, !dbg !6861

if.else:                                          ; preds = %if.end11
  %call39 = call i32 @puts(i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.27, i32 0, i32 0)), !dbg !6862
  br label %if.end40

if.end40:                                         ; preds = %if.else, %if.then16
  %13 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !6866
  %call41 = call i32 @fflush(%struct._IO_FILE* %13), !dbg !6869
  ret void, !dbg !6870
}

; Function Attrs: noinline nounwind ssp uwtable
define internal void @handleuserinput(%struct.gbs* %gbs) #0 !dbg !6871 {
entry:
  %c___3 = alloca i8, align 1
  call void @llvm.dbg.value(metadata %struct.gbs* %gbs, metadata !6872, metadata !DIExpression()), !dbg !6873
  call void @llvm.dbg.declare(metadata i8* %c___3, metadata !6874, metadata !DIExpression()), !dbg !6875
  %call = call i32 @read(i32 0, i8* %c___3, i32 1), !dbg !6876
  call void @llvm.dbg.value(metadata i32 %call, metadata !6880, metadata !DIExpression()), !dbg !6873
  %cmp = icmp ne i32 %call, -1, !dbg !6881
  br i1 %cmp, label %if.then, label %if.end74, !dbg !6883

if.then:                                          ; preds = %entry
  %0 = load i8, i8* %c___3, align 1, !dbg !6884
  %conv = sext i8 %0 to i32, !dbg !6888
  %cmp1 = icmp eq i32 %conv, 112, !dbg !6889
  br i1 %cmp1, label %if.then3, label %if.end, !dbg !6890

if.then3:                                         ; preds = %if.then
  br label %case_112, !dbg !6891

if.end:                                           ; preds = %if.then
  %1 = load i8, i8* %c___3, align 1, !dbg !6893
  %conv4 = sext i8 %1 to i32, !dbg !6895
  %cmp5 = icmp eq i32 %conv4, 110, !dbg !6896
  br i1 %cmp5, label %if.then7, label %if.end8, !dbg !6897

if.then7:                                         ; preds = %if.end
  br label %case_110, !dbg !6898

if.end8:                                          ; preds = %if.end
  %2 = load i8, i8* %c___3, align 1, !dbg !6900
  %conv9 = sext i8 %2 to i32, !dbg !6902
  %cmp10 = icmp eq i32 %conv9, 27, !dbg !6903
  br i1 %cmp10, label %if.then12, label %if.end13, !dbg !6904

if.then12:                                        ; preds = %if.end8
  br label %case_27, !dbg !6905

if.end13:                                         ; preds = %if.end8
  %3 = load i8, i8* %c___3, align 1, !dbg !6907
  %conv14 = sext i8 %3 to i32, !dbg !6909
  %cmp15 = icmp eq i32 %conv14, 113, !dbg !6910
  br i1 %cmp15, label %if.then17, label %if.end18, !dbg !6904

if.then17:                                        ; preds = %if.end13
  br label %case_27, !dbg !6911

if.end18:                                         ; preds = %if.end13
  %4 = load i8, i8* %c___3, align 1, !dbg !6913
  %conv19 = sext i8 %4 to i32, !dbg !6915
  %cmp20 = icmp eq i32 %conv19, 32, !dbg !6916
  br i1 %cmp20, label %if.then22, label %if.end23, !dbg !6917

if.then22:                                        ; preds = %if.end18
  br label %case_32, !dbg !6918

if.end23:                                         ; preds = %if.end18
  %5 = load i8, i8* %c___3, align 1, !dbg !6920
  %conv24 = sext i8 %5 to i32, !dbg !6922
  %cmp25 = icmp eq i32 %conv24, 52, !dbg !6923
  br i1 %cmp25, label %if.then27, label %if.end28, !dbg !6924

if.then27:                                        ; preds = %if.end23
  br label %case_52, !dbg !6925

if.end28:                                         ; preds = %if.end23
  %6 = load i8, i8* %c___3, align 1, !dbg !6927
  %conv29 = sext i8 %6 to i32, !dbg !6929
  %cmp30 = icmp eq i32 %conv29, 51, !dbg !6930
  br i1 %cmp30, label %if.then32, label %if.end33, !dbg !6924

if.then32:                                        ; preds = %if.end28
  br label %case_52, !dbg !6931

if.end33:                                         ; preds = %if.end28
  %7 = load i8, i8* %c___3, align 1, !dbg !6933
  %conv34 = sext i8 %7 to i32, !dbg !6935
  %cmp35 = icmp eq i32 %conv34, 50, !dbg !6936
  br i1 %cmp35, label %if.then37, label %if.end38, !dbg !6924

if.then37:                                        ; preds = %if.end33
  br label %case_52, !dbg !6937

if.end38:                                         ; preds = %if.end33
  %8 = load i8, i8* %c___3, align 1, !dbg !6939
  %conv39 = sext i8 %8 to i32, !dbg !6941
  %cmp40 = icmp eq i32 %conv39, 49, !dbg !6942
  br i1 %cmp40, label %if.then42, label %if.end43, !dbg !6924

if.then42:                                        ; preds = %if.end38
  br label %case_52, !dbg !6943

if.end43:                                         ; preds = %if.end38
  br label %switch_break, !dbg !6945

case_112:                                         ; preds = %if.then3
  %call44 = call i32 @get_prev_subsong(%struct.gbs* %gbs), !dbg !6946
  call void @llvm.dbg.value(metadata i32 %call44, metadata !6949, metadata !DIExpression()), !dbg !6873
  %conv45 = sext i32 %call44 to i64, !dbg !6950
  %subsong = getelementptr inbounds %struct.gbs, %struct.gbs* %gbs, i32 0, i32 36, !dbg !6951
  store i64 %conv45, i64* %subsong, align 8, !dbg !6952
  br label %while.body, !dbg !6953

while.body:                                       ; preds = %if.end50, %case_112
  br label %while_continue___0, !dbg !6956

while_continue___0:                               ; preds = %while.body
  br label %while_continue, !dbg !6956

while_continue:                                   ; preds = %while_continue___0
  %subsong46 = getelementptr inbounds %struct.gbs, %struct.gbs* %gbs, i32 0, i32 36, !dbg !6957
  %9 = load i64, i64* %subsong46, align 8, !dbg !6957
  %cmp47 = icmp slt i64 %9, 0, !dbg !6960
  br i1 %cmp47, label %if.end50, label %if.then49, !dbg !6961

if.then49:                                        ; preds = %while_continue
  br label %while_break, !dbg !6962

if.end50:                                         ; preds = %while_continue
  %songs = getelementptr inbounds %struct.gbs, %struct.gbs* %gbs, i32 0, i32 2, !dbg !6964
  %10 = load i64, i64* %songs, align 8, !dbg !6964
  %subsong51 = getelementptr inbounds %struct.gbs, %struct.gbs* %gbs, i32 0, i32 36, !dbg !6965
  %11 = load i64, i64* %subsong51, align 8, !dbg !6966
  %add = add nsw i64 %11, %10, !dbg !6966
  store i64 %add, i64* %subsong51, align 8, !dbg !6966
  br label %while.body, !dbg !6953, !llvm.loop !6967

while_break___0:                                  ; No predecessors!
  br label %while_break, !dbg !6969

while_break:                                      ; preds = %while_break___0, %if.then49
  %subsong52 = getelementptr inbounds %struct.gbs, %struct.gbs* %gbs, i32 0, i32 36, !dbg !6970
  %12 = load i64, i64* %subsong52, align 8, !dbg !6970
  %call53 = call i64 @gbs_init(%struct.gbs* %gbs, i64 %12), !dbg !6973
  %13 = load i32 (i32)*, i32 (i32)** @sound_skip, align 8, !dbg !6974
  %tobool = icmp ne i32 (i32)* %13, null, !dbg !6974
  br i1 %tobool, label %if.then54, label %if.end58, !dbg !6976

if.then54:                                        ; preds = %while_break
  %14 = load i32 (i32)*, i32 (i32)** @sound_skip, align 8, !dbg !6977
  %subsong55 = getelementptr inbounds %struct.gbs, %struct.gbs* %gbs, i32 0, i32 36, !dbg !6981
  %15 = load i64, i64* %subsong55, align 8, !dbg !6981
  %conv56 = trunc i64 %15 to i32, !dbg !6982
  %call57 = call i32 %14(i32 %conv56), !dbg !6983
  br label %if.end58, !dbg !6984

if.end58:                                         ; preds = %if.then54, %while_break
  br label %switch_break, !dbg !6985

case_110:                                         ; preds = %if.then7
  %call59 = call i64 @get_next_subsong(%struct.gbs* %gbs), !dbg !6986
  %subsong60 = getelementptr inbounds %struct.gbs, %struct.gbs* %gbs, i32 0, i32 36, !dbg !6989
  store i64 %call59, i64* %subsong60, align 8, !dbg !6990
  %songs61 = getelementptr inbounds %struct.gbs, %struct.gbs* %gbs, i32 0, i32 2, !dbg !6991
  %16 = load i64, i64* %songs61, align 8, !dbg !6991
  %subsong62 = getelementptr inbounds %struct.gbs, %struct.gbs* %gbs, i32 0, i32 36, !dbg !6992
  %17 = load i64, i64* %subsong62, align 8, !dbg !6993
  %rem = srem i64 %17, %16, !dbg !6993
  store i64 %rem, i64* %subsong62, align 8, !dbg !6993
  %subsong63 = getelementptr inbounds %struct.gbs, %struct.gbs* %gbs, i32 0, i32 36, !dbg !6994
  %18 = load i64, i64* %subsong63, align 8, !dbg !6994
  %call64 = call i64 @gbs_init(%struct.gbs* %gbs, i64 %18), !dbg !6996
  %19 = load i32 (i32)*, i32 (i32)** @sound_skip, align 8, !dbg !6997
  %tobool65 = icmp ne i32 (i32)* %19, null, !dbg !6997
  br i1 %tobool65, label %if.then66, label %if.end70, !dbg !6999

if.then66:                                        ; preds = %case_110
  %20 = load i32 (i32)*, i32 (i32)** @sound_skip, align 8, !dbg !7000
  %subsong67 = getelementptr inbounds %struct.gbs, %struct.gbs* %gbs, i32 0, i32 36, !dbg !7004
  %21 = load i64, i64* %subsong67, align 8, !dbg !7004
  %conv68 = trunc i64 %21 to i32, !dbg !7005
  %call69 = call i32 %20(i32 %conv68), !dbg !7006
  br label %if.end70, !dbg !7007

if.end70:                                         ; preds = %if.then66, %case_110
  br label %switch_break, !dbg !7008

case_27:                                          ; preds = %if.then17, %if.then12
  br label %case_113, !dbg !7008

case_113:                                         ; preds = %case_27
  store i64 1, i64* @quit, align 8, !dbg !7009
  br label %switch_break, !dbg !7010

case_32:                                          ; preds = %if.then22
  %22 = load i64, i64* @pause_mode, align 8, !dbg !7011
  %tobool71 = icmp ne i64 %22, 0, !dbg !7013
  %lnot = xor i1 %tobool71, true, !dbg !7013
  %lnot.ext = zext i1 %lnot to i32, !dbg !7013
  %conv72 = sext i32 %lnot.ext to i64, !dbg !7014
  store i64 %conv72, i64* @pause_mode, align 8, !dbg !7015
  %23 = load i64, i64* @pause_mode, align 8, !dbg !7016
  call void @gbhw_pause(i64 %23), !dbg !7018
  br label %switch_break, !dbg !7019

case_52:                                          ; preds = %if.then42, %if.then37, %if.then32, %if.then27
  br label %case_51, !dbg !7019

case_51:                                          ; preds = %case_52
  br label %case_50, !dbg !7019

case_50:                                          ; preds = %case_51
  br label %case_49, !dbg !7019

case_49:                                          ; preds = %case_50
  %24 = load i8, i8* %c___3, align 1, !dbg !7020
  %conv73 = sext i8 %24 to i32, !dbg !7021
  %sub = sub nsw i32 %conv73, 49, !dbg !7022
  %idxprom = sext i32 %sub to i64, !dbg !7023
  %arrayidx = getelementptr inbounds [4 x %struct.gbhw_channel], [4 x %struct.gbhw_channel]* @gbhw_ch, i64 0, i64 %idxprom, !dbg !7023
  %mute = getelementptr inbounds %struct.gbhw_channel, %struct.gbhw_channel* %arrayidx, i32 0, i32 0, !dbg !7024
  %25 = load i64, i64* %mute, align 16, !dbg !7025
  %xor = xor i64 %25, 1, !dbg !7025
  store i64 %xor, i64* %mute, align 16, !dbg !7025
  br label %switch_break, !dbg !7026

switch_break:                                     ; preds = %case_49, %case_32, %case_113, %if.end70, %if.end58, %if.end43
  br label %if.end74, !dbg !7027

if.end74:                                         ; preds = %switch_break, %entry
  ret void, !dbg !7028
}

; Function Attrs: noinline nounwind ssp uwtable
define void @plugout_list_plugins() #0 !dbg !7029 {
entry:
  call void @llvm.dbg.declare(metadata !666, metadata !7030, metadata !DIExpression()), !dbg !7031
  call void @llvm.dbg.declare(metadata !666, metadata !7032, metadata !DIExpression()), !dbg !7033
  call void @llvm.dbg.declare(metadata !666, metadata !7034, metadata !DIExpression()), !dbg !7035
  call void @llvm.dbg.declare(metadata !666, metadata !7036, metadata !DIExpression()), !dbg !7037
  %call = call i8* @_(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.47, i32 0, i32 0)), !dbg !7038
  call void @llvm.dbg.value(metadata i8* %call, metadata !7042, metadata !DIExpression()), !dbg !7043
  %call1 = call i32 (i8*, ...) @printf(i8* %call), !dbg !7044
  %0 = load %struct.output_plugin*, %struct.output_plugin** getelementptr inbounds ([4 x %struct.output_plugin*], [4 x %struct.output_plugin*]* @plugouts, i64 0, i64 0), align 16, !dbg !7046
  %1 = ptrtoint %struct.output_plugin* %0 to i64, !dbg !7048
  %cmp = icmp eq i64 %1, 0, !dbg !7049
  br i1 %cmp, label %if.then, label %if.end, !dbg !7050

if.then:                                          ; preds = %entry
  %call2 = call i8* @_(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.48, i32 0, i32 0)), !dbg !7051
  call void @llvm.dbg.value(metadata i8* %call2, metadata !7055, metadata !DIExpression()), !dbg !7043
  %call3 = call i32 (i8*, ...) @printf(i8* %call2), !dbg !7056
  br label %return, !dbg !7058

if.end:                                           ; preds = %entry
  call void @llvm.dbg.value(metadata i64 0, metadata !7059, metadata !DIExpression()), !dbg !7043
  br label %while.body, !dbg !7060

while.body:                                       ; preds = %if.end6, %if.end
  %idx.0 = phi i64 [ 0, %if.end ], [ %inc, %if.end6 ], !dbg !7063
  call void @llvm.dbg.value(metadata i64 %idx.0, metadata !7059, metadata !DIExpression()), !dbg !7043
  br label %while_continue___0, !dbg !7064

while_continue___0:                               ; preds = %while.body
  br label %while_continue, !dbg !7064

while_continue:                                   ; preds = %while_continue___0
  %arrayidx = getelementptr inbounds [4 x %struct.output_plugin*], [4 x %struct.output_plugin*]* @plugouts, i64 0, i64 %idx.0, !dbg !7065
  %2 = load %struct.output_plugin*, %struct.output_plugin** %arrayidx, align 8, !dbg !7065
  %3 = ptrtoint %struct.output_plugin* %2 to i64, !dbg !7068
  %cmp4 = icmp ne i64 %3, 0, !dbg !7069
  br i1 %cmp4, label %if.end6, label %if.then5, !dbg !7070

if.then5:                                         ; preds = %while_continue
  br label %while_break, !dbg !7071

if.end6:                                          ; preds = %while_continue
  %arrayidx7 = getelementptr inbounds [4 x %struct.output_plugin*], [4 x %struct.output_plugin*]* @plugouts, i64 0, i64 %idx.0, !dbg !7073
  %4 = load %struct.output_plugin*, %struct.output_plugin** %arrayidx7, align 8, !dbg !7073
  %name = getelementptr inbounds %struct.output_plugin, %struct.output_plugin* %4, i32 0, i32 0, !dbg !7076
  %5 = load i8*, i8** %name, align 8, !dbg !7076
  %arrayidx8 = getelementptr inbounds [4 x %struct.output_plugin*], [4 x %struct.output_plugin*]* @plugouts, i64 0, i64 %idx.0, !dbg !7077
  %6 = load %struct.output_plugin*, %struct.output_plugin** %arrayidx8, align 8, !dbg !7077
  %description = getelementptr inbounds %struct.output_plugin, %struct.output_plugin* %6, i32 0, i32 1, !dbg !7078
  %7 = load i8*, i8** %description, align 8, !dbg !7078
  %call9 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.49, i32 0, i32 0), i8* %5, i8* %7), !dbg !7079
  %inc = add nsw i64 %idx.0, 1, !dbg !7080
  call void @llvm.dbg.value(metadata i64 %inc, metadata !7059, metadata !DIExpression()), !dbg !7043
  br label %while.body, !dbg !7060, !llvm.loop !7081

while_break___0:                                  ; No predecessors!
  br label %while_break, !dbg !7083

while_break:                                      ; preds = %while_break___0, %if.then5
  %call10 = call i32 @puts(i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.27, i32 0, i32 0)), !dbg !7084
  br label %return, !dbg !7087

return:                                           ; preds = %while_break, %if.then
  ret void, !dbg !7088
}

declare i32 @puts(i8*) #5

; Function Attrs: noinline nounwind ssp uwtable
define %struct.output_plugin* @plugout_select_by_name(i8* %name) #0 !dbg !7089 {
entry:
  call void @llvm.dbg.value(metadata i8* %name, metadata !7092, metadata !DIExpression()), !dbg !7093
  call void @llvm.dbg.value(metadata i64 0, metadata !7094, metadata !DIExpression()), !dbg !7093
  br label %while.body, !dbg !7095

while.body:                                       ; preds = %if.end5, %entry
  %idx.0 = phi i64 [ 0, %entry ], [ %inc, %if.end5 ], !dbg !7099
  call void @llvm.dbg.value(metadata i64 %idx.0, metadata !7094, metadata !DIExpression()), !dbg !7093
  br label %while_continue___0, !dbg !7100

while_continue___0:                               ; preds = %while.body
  br label %while_continue, !dbg !7100

while_continue:                                   ; preds = %while_continue___0
  %arrayidx = getelementptr inbounds [4 x %struct.output_plugin*], [4 x %struct.output_plugin*]* @plugouts, i64 0, i64 %idx.0, !dbg !7101
  %0 = load %struct.output_plugin*, %struct.output_plugin** %arrayidx, align 8, !dbg !7101
  %1 = ptrtoint %struct.output_plugin* %0 to i64, !dbg !7104
  %cmp = icmp ne i64 %1, 0, !dbg !7105
  br i1 %cmp, label %if.then, label %if.else, !dbg !7106

if.then:                                          ; preds = %while_continue
  %arrayidx1 = getelementptr inbounds [4 x %struct.output_plugin*], [4 x %struct.output_plugin*]* @plugouts, i64 0, i64 %idx.0, !dbg !7107
  %2 = load %struct.output_plugin*, %struct.output_plugin** %arrayidx1, align 8, !dbg !7107
  %name2 = getelementptr inbounds %struct.output_plugin, %struct.output_plugin* %2, i32 0, i32 0, !dbg !7111
  %3 = load i8*, i8** %name2, align 8, !dbg !7111
  %call = call i32 @strcmp(i8* %3, i8* %name) #8, !dbg !7112
  call void @llvm.dbg.value(metadata i32 %call, metadata !7113, metadata !DIExpression()), !dbg !7093
  %cmp3 = icmp ne i32 %call, 0, !dbg !7114
  br i1 %cmp3, label %if.end, label %if.then4, !dbg !7116

if.then4:                                         ; preds = %if.then
  br label %while_break, !dbg !7117

if.end:                                           ; preds = %if.then
  br label %if.end5, !dbg !7119

if.else:                                          ; preds = %while_continue
  br label %while_break, !dbg !7120

if.end5:                                          ; preds = %if.end
  %inc = add nsw i64 %idx.0, 1, !dbg !7106
  call void @llvm.dbg.value(metadata i64 %inc, metadata !7094, metadata !DIExpression()), !dbg !7093
  br label %while.body, !dbg !7095, !llvm.loop !7122

while_break___0:                                  ; No predecessors!
  br label %while_break, !dbg !7124

while_break:                                      ; preds = %while_break___0, %if.else, %if.then4
  %arrayidx6 = getelementptr inbounds [4 x %struct.output_plugin*], [4 x %struct.output_plugin*]* @plugouts, i64 0, i64 %idx.0, !dbg !7125
  %4 = load %struct.output_plugin*, %struct.output_plugin** %arrayidx6, align 8, !dbg !7125
  ret %struct.output_plugin* %4, !dbg !7126
}

; Function Attrs: noinline nounwind ssp uwtable
define void @usage(i64 %exitcode) #0 !dbg !7127 {
entry:
  call void @llvm.dbg.value(metadata i64 %exitcode, metadata !7128, metadata !DIExpression()), !dbg !7129
  call void @llvm.dbg.declare(metadata !666, metadata !7130, metadata !DIExpression()), !dbg !7131
  %tobool = icmp ne i64 %exitcode, 0, !dbg !7132
  br i1 %tobool, label %if.then, label %if.else, !dbg !7135

if.then:                                          ; preds = %entry
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !7136
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %0, metadata !7138, metadata !DIExpression()), !dbg !7129
  br label %if.end, !dbg !7139

if.else:                                          ; preds = %entry
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !7140
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %1, metadata !7138, metadata !DIExpression()), !dbg !7129
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %tmp.0 = phi %struct._IO_FILE* [ %0, %if.then ], [ %1, %if.else ], !dbg !7142
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %tmp.0, metadata !7138, metadata !DIExpression()), !dbg !7129
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %tmp.0, metadata !7143, metadata !DIExpression()), !dbg !7129
  %call = call i8* @_(i8* getelementptr inbounds ([117 x i8], [117 x i8]* @.str.50, i32 0, i32 0)), !dbg !7144
  call void @llvm.dbg.value(metadata i8* %call, metadata !7147, metadata !DIExpression()), !dbg !7129
  %2 = load i8*, i8** @myname, align 8, !dbg !7148
  %call1 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %tmp.0, i8* %call, i8* %2), !dbg !7150
  %conv = trunc i64 %exitcode to i32, !dbg !7151
  call void @exit(i32 %conv) #9, !dbg !7153
  unreachable, !dbg !7153

return:                                           ; No predecessors!
  ret void, !dbg !7154
}

; Function Attrs: noinline nounwind ssp uwtable
define void @version() #0 !dbg !7155 {
entry:
  call void @llvm.dbg.declare(metadata !666, metadata !7156, metadata !DIExpression()), !dbg !7157
  %call = call i32 @puts(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.51, i32 0, i32 0)), !dbg !7158
  call void @exit(i32 0) #9, !dbg !7162
  unreachable, !dbg !7162

return:                                           ; No predecessors!
  ret void, !dbg !7164
}

; Function Attrs: noinline nounwind ssp uwtable
define void @parseopts(i32* %argc, i8*** %argv) #0 !dbg !7165 {
entry:
  call void @llvm.dbg.value(metadata i32* %argc, metadata !7166, metadata !DIExpression()), !dbg !7167
  call void @llvm.dbg.value(metadata i8*** %argv, metadata !7168, metadata !DIExpression()), !dbg !7167
  call void @llvm.dbg.declare(metadata !666, metadata !7169, metadata !DIExpression()), !dbg !7170
  %add.ptr = getelementptr inbounds i8**, i8*** %argv, i64 0, !dbg !7171
  %0 = load i8**, i8*** %add.ptr, align 8, !dbg !7173
  %1 = load i8*, i8** %0, align 8, !dbg !7174
  store i8* %1, i8** @myname, align 8, !dbg !7175
  br label %while.body, !dbg !7176

while.body:                                       ; preds = %switch_break, %entry
  br label %while_continue___0, !dbg !7179

while_continue___0:                               ; preds = %while.body
  br label %while_continue, !dbg !7179

while_continue:                                   ; preds = %while_continue___0
  %2 = load i32, i32* %argc, align 4, !dbg !7180
  %3 = load i8**, i8*** %argv, align 8, !dbg !7184
  %call = call i32 @getopt(i32 %2, i8** %3, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.52, i32 0, i32 0)) #11, !dbg !7185
  call void @llvm.dbg.value(metadata i32 %call, metadata !7186, metadata !DIExpression()), !dbg !7167
  %conv = sext i32 %call to i64, !dbg !7187
  call void @llvm.dbg.value(metadata i64 %conv, metadata !7188, metadata !DIExpression()), !dbg !7167
  %cmp = icmp ne i64 %conv, -1, !dbg !7189
  br i1 %cmp, label %if.end, label %if.then, !dbg !7191

if.then:                                          ; preds = %while_continue
  br label %while_break, !dbg !7192

if.end:                                           ; preds = %while_continue
  %cmp2 = icmp eq i64 %conv, 104, !dbg !7194
  br i1 %cmp2, label %if.then4, label %if.end5, !dbg !7197

if.then4:                                         ; preds = %if.end
  br label %case_104, !dbg !7198

if.end5:                                          ; preds = %if.end
  %cmp6 = icmp eq i64 %conv, 86, !dbg !7200
  br i1 %cmp6, label %if.then8, label %if.end9, !dbg !7202

if.then8:                                         ; preds = %if.end5
  br label %case_86, !dbg !7203

if.end9:                                          ; preds = %if.end5
  br label %switch_default, !dbg !7205

switch_default:                                   ; preds = %if.end9
  call void @usage(i64 1), !dbg !7206
  br label %switch_break, !dbg !7209

case_104:                                         ; preds = %if.then4
  call void @usage(i64 0), !dbg !7210
  br label %switch_break, !dbg !7213

case_86:                                          ; preds = %if.then8
  call void @version(), !dbg !7214
  br label %switch_break, !dbg !7217

switch_break:                                     ; preds = %case_86, %case_104, %switch_default
  br label %while.body, !dbg !7176, !llvm.loop !7218

while_break___0:                                  ; No predecessors!
  br label %while_break, !dbg !7220

while_break:                                      ; preds = %while_break___0, %if.then
  %4 = load i32, i32* @optind, align 4, !dbg !7221
  %5 = load i32, i32* %argc, align 4, !dbg !7222
  %sub = sub nsw i32 %5, %4, !dbg !7222
  store i32 %sub, i32* %argc, align 4, !dbg !7222
  %6 = load i32, i32* @optind, align 4, !dbg !7223
  %7 = load i8**, i8*** %argv, align 8, !dbg !7224
  %idx.ext = sext i32 %6 to i64, !dbg !7224
  %add.ptr10 = getelementptr inbounds i8*, i8** %7, i64 %idx.ext, !dbg !7224
  store i8** %add.ptr10, i8*** %argv, align 8, !dbg !7224
  ret void, !dbg !7225
}

; Function Attrs: nounwind
declare i32 @getopt(i32, i8**, i8*) #4

; Function Attrs: noreturn nounwind
declare void @__assert_fail(i8*, i8*, i32, i8*) #6

declare i32 @fgetc(%struct._IO_FILE*) #5

; Function Attrs: nounwind
declare i8* @gettext(i8*) #4

; Function Attrs: noinline nounwind ssp uwtable
define internal i32 @midi_close_track() #0 !dbg !7226 {
entry:
  %event = alloca [3 x i8], align 1
  call void @llvm.dbg.declare(metadata [3 x i8]* %event, metadata !7229, metadata !DIExpression()), !dbg !7233
  call void @llvm.dbg.declare(metadata !666, metadata !7234, metadata !DIExpression()), !dbg !7235
  %arrayidx = getelementptr inbounds [3 x i8], [3 x i8]* %event, i64 0, i64 0, !dbg !7236
  store i8 -1, i8* %arrayidx, align 1, !dbg !7239
  %arrayidx1 = getelementptr inbounds [3 x i8], [3 x i8]* %event, i64 0, i64 1, !dbg !7240
  store i8 47, i8* %arrayidx1, align 1, !dbg !7241
  %arrayidx2 = getelementptr inbounds [3 x i8], [3 x i8]* %event, i64 0, i64 2, !dbg !7242
  store i8 0, i8* %arrayidx2, align 1, !dbg !7243
  %0 = load i64, i64* @cycles_prev, align 8, !dbg !7244
  %arraydecay = getelementptr inbounds [3 x i8], [3 x i8]* %event, i32 0, i32 0, !dbg !7246
  %call = call i32 @midi_write_event(i64 %0, i8* %arraydecay, i32 3), !dbg !7247
  call void @llvm.dbg.value(metadata i32 %call, metadata !7248, metadata !DIExpression()), !dbg !7249
  %tobool = icmp ne i32 %call, 0, !dbg !7250
  br i1 %tobool, label %if.then, label %if.end, !dbg !7252

if.then:                                          ; preds = %entry
  br label %out, !dbg !7253

if.end:                                           ; preds = %entry
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @file, align 8, !dbg !7255
  %2 = load i64, i64* @track_length_offset, align 8, !dbg !7258
  %call3 = call i32 @fseek(%struct._IO_FILE* %1, i64 %2, i32 0), !dbg !7259
  call void @llvm.dbg.value(metadata i32 %call3, metadata !7260, metadata !DIExpression()), !dbg !7249
  %cmp = icmp eq i32 %call3, -1, !dbg !7261
  br i1 %cmp, label %if.then4, label %if.end5, !dbg !7263

if.then4:                                         ; preds = %if.end
  br label %out, !dbg !7264

if.end5:                                          ; preds = %if.end
  %3 = load i64, i64* @track_length, align 8, !dbg !7266
  %conv = trunc i64 %3 to i32, !dbg !7269
  %call6 = call i32 @midi_write_u32(i32 %conv), !dbg !7270
  call void @llvm.dbg.value(metadata i32 %call6, metadata !7271, metadata !DIExpression()), !dbg !7249
  %tobool7 = icmp ne i32 %call6, 0, !dbg !7272
  br i1 %tobool7, label %if.then8, label %if.end9, !dbg !7274

if.then8:                                         ; preds = %if.end5
  br label %out, !dbg !7275

if.end9:                                          ; preds = %if.end5
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** @file, align 8, !dbg !7277
  %call10 = call i32 @fclose(%struct._IO_FILE* %4), !dbg !7280
  store %struct._IO_FILE* null, %struct._IO_FILE** @file, align 8, !dbg !7281
  br label %return, !dbg !7282

out:                                              ; preds = %if.then8, %if.then4, %if.then
  store %struct._IO_FILE* null, %struct._IO_FILE** @file, align 8, !dbg !7283
  br label %return, !dbg !7284

return:                                           ; preds = %out, %if.end9
  %retval.0 = phi i32 [ 1, %out ], [ 0, %if.end9 ], !dbg !7285
  ret i32 %retval.0, !dbg !7286
}

; Function Attrs: noinline nounwind ssp uwtable
define internal i32 @midi_open_track(i32 %subsong) #0 !dbg !7287 {
entry:
  call void @llvm.dbg.value(metadata i32 %subsong, metadata !7288, metadata !DIExpression()), !dbg !7289
  call void @llvm.dbg.declare(metadata !666, metadata !7290, metadata !DIExpression()), !dbg !7291
  call void @llvm.dbg.declare(metadata !666, metadata !7292, metadata !DIExpression()), !dbg !7293
  call void @llvm.dbg.declare(metadata !666, metadata !7294, metadata !DIExpression()), !dbg !7295
  call void @llvm.dbg.declare(metadata !666, metadata !7296, metadata !DIExpression()), !dbg !7297
  %call = call noalias i8* @malloc(i32 32) #11, !dbg !7298
  call void @llvm.dbg.value(metadata i8* %call, metadata !7302, metadata !DIExpression()), !dbg !7289
  call void @llvm.dbg.value(metadata i8* %call, metadata !7303, metadata !DIExpression()), !dbg !7289
  %0 = ptrtoint i8* %call to i64, !dbg !7304
  %cmp = icmp eq i64 %0, 0, !dbg !7306
  br i1 %cmp, label %if.then, label %if.end, !dbg !7307

if.then:                                          ; preds = %entry
  br label %out, !dbg !7308

if.end:                                           ; preds = %entry
  %add = add nsw i32 %subsong, 1, !dbg !7310
  %call1 = call i32 (i8*, i32, i8*, ...) @snprintf(i8* %call, i32 32, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.57, i32 0, i32 0), i32 %add) #11, !dbg !7313
  call void @llvm.dbg.value(metadata i32 %call1, metadata !7314, metadata !DIExpression()), !dbg !7289
  %cmp2 = icmp sge i32 %call1, 32, !dbg !7315
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !7317

if.then3:                                         ; preds = %if.end
  br label %out, !dbg !7318

if.end4:                                          ; preds = %if.end
  %call5 = call %struct._IO_FILE* @fopen(i8* %call, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.58, i32 0, i32 0)), !dbg !7320
  store %struct._IO_FILE* %call5, %struct._IO_FILE** @file, align 8, !dbg !7323
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @file, align 8, !dbg !7324
  %tobool = icmp ne %struct._IO_FILE* %1, null, !dbg !7324
  br i1 %tobool, label %if.end7, label %if.then6, !dbg !7326

if.then6:                                         ; preds = %if.end4
  call void @free(i8* %call) #11, !dbg !7327
  br label %out, !dbg !7331

if.end7:                                          ; preds = %if.end4
  call void @free(i8* %call) #11, !dbg !7332
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** @file, align 8, !dbg !7335
  %call8 = call i32 @fwrite(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.59, i32 0, i32 0), i32 1, i32 4, %struct._IO_FILE* %2), !dbg !7337
  call void @llvm.dbg.value(metadata i32 %call8, metadata !7338, metadata !DIExpression()), !dbg !7289
  %cmp9 = icmp ne i32 %call8, 4, !dbg !7339
  br i1 %cmp9, label %if.then10, label %if.end11, !dbg !7341

if.then10:                                        ; preds = %if.end7
  br label %out_file, !dbg !7342

if.end11:                                         ; preds = %if.end7
  %call12 = call i32 @midi_write_u32(i32 6), !dbg !7344
  call void @llvm.dbg.value(metadata i32 %call12, metadata !7347, metadata !DIExpression()), !dbg !7289
  %tobool13 = icmp ne i32 %call12, 0, !dbg !7348
  br i1 %tobool13, label %if.then14, label %if.end15, !dbg !7350

if.then14:                                        ; preds = %if.end11
  br label %out_file, !dbg !7351

if.end15:                                         ; preds = %if.end11
  %call16 = call i32 @midi_write_u16(i16 zeroext 0), !dbg !7353
  call void @llvm.dbg.value(metadata i32 %call16, metadata !7356, metadata !DIExpression()), !dbg !7289
  %tobool17 = icmp ne i32 %call16, 0, !dbg !7357
  br i1 %tobool17, label %if.then18, label %if.end19, !dbg !7359

if.then18:                                        ; preds = %if.end15
  br label %out_file, !dbg !7360

if.end19:                                         ; preds = %if.end15
  %call20 = call i32 @midi_write_u16(i16 zeroext 1), !dbg !7362
  call void @llvm.dbg.value(metadata i32 %call20, metadata !7365, metadata !DIExpression()), !dbg !7289
  %tobool21 = icmp ne i32 %call20, 0, !dbg !7366
  br i1 %tobool21, label %if.then22, label %if.end23, !dbg !7368

if.then22:                                        ; preds = %if.end19
  br label %out_file, !dbg !7369

if.end23:                                         ; preds = %if.end19
  %call24 = call i32 @midi_write_u16(i16 zeroext 124), !dbg !7371
  call void @llvm.dbg.value(metadata i32 %call24, metadata !7374, metadata !DIExpression()), !dbg !7289
  %tobool25 = icmp ne i32 %call24, 0, !dbg !7375
  br i1 %tobool25, label %if.then26, label %if.end27, !dbg !7377

if.then26:                                        ; preds = %if.end23
  br label %out_file, !dbg !7378

if.end27:                                         ; preds = %if.end23
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** @file, align 8, !dbg !7380
  %call28 = call i32 @fwrite(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.60, i32 0, i32 0), i32 1, i32 4, %struct._IO_FILE* %3), !dbg !7383
  call void @llvm.dbg.value(metadata i32 %call28, metadata !7384, metadata !DIExpression()), !dbg !7289
  %cmp29 = icmp ne i32 %call28, 4, !dbg !7385
  br i1 %cmp29, label %if.then30, label %if.end31, !dbg !7387

if.then30:                                        ; preds = %if.end27
  br label %out_file, !dbg !7388

if.end31:                                         ; preds = %if.end27
  store i64 0, i64* @track_length, align 8, !dbg !7390
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** @file, align 8, !dbg !7392
  %call32 = call i64 @ftell(%struct._IO_FILE* %4), !dbg !7394
  store i64 %call32, i64* @track_length_offset, align 8, !dbg !7395
  %5 = load i64, i64* @track_length_offset, align 8, !dbg !7396
  %cmp33 = icmp eq i64 %5, -1, !dbg !7398
  br i1 %cmp33, label %if.then34, label %if.end35, !dbg !7399

if.then34:                                        ; preds = %if.end31
  br label %out_file, !dbg !7400

if.end35:                                         ; preds = %if.end31
  %call36 = call i32 @midi_write_u32(i32 0), !dbg !7402
  call void @llvm.dbg.value(metadata i32 %call36, metadata !7405, metadata !DIExpression()), !dbg !7289
  %tobool37 = icmp ne i32 %call36, 0, !dbg !7406
  br i1 %tobool37, label %if.then38, label %if.end39, !dbg !7408

if.then38:                                        ; preds = %if.end35
  br label %out_file, !dbg !7409

if.end39:                                         ; preds = %if.end35
  br label %return, !dbg !7411

out_file:                                         ; preds = %if.then38, %if.then34, %if.then30, %if.then26, %if.then22, %if.then18, %if.then14, %if.then10
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** @file, align 8, !dbg !7412
  %call40 = call i32 @fclose(%struct._IO_FILE* %6), !dbg !7415
  store %struct._IO_FILE* null, %struct._IO_FILE** @file, align 8, !dbg !7416
  br label %out, !dbg !7417

out:                                              ; preds = %out_file, %if.then6, %if.then3, %if.then
  br label %return, !dbg !7418

return:                                           ; preds = %out, %if.end39
  %retval.0 = phi i32 [ 1, %out ], [ 0, %if.end39 ], !dbg !7419
  ret i32 %retval.0, !dbg !7420
}

; Function Attrs: noinline nounwind ssp uwtable
define internal i32 @midi_write_event(i64 %cycles, i8* %s, i32 %n) #0 !dbg !7421 {
entry:
  call void @llvm.dbg.value(metadata i64 %cycles, metadata !7424, metadata !DIExpression()), !dbg !7425
  call void @llvm.dbg.value(metadata i8* %s, metadata !7426, metadata !DIExpression()), !dbg !7425
  call void @llvm.dbg.value(metadata i32 %n, metadata !7427, metadata !DIExpression()), !dbg !7425
  %0 = load i64, i64* @cycles_prev, align 8, !dbg !7428
  %sub = sub nsw i64 %cycles, %0, !dbg !7432
  %shr = ashr i64 %sub, 14, !dbg !7433
  %call = call i32 @midi_write_varlen(i64 %shr), !dbg !7434
  call void @llvm.dbg.value(metadata i32 %call, metadata !7435, metadata !DIExpression()), !dbg !7425
  %tobool = icmp ne i32 %call, 0, !dbg !7436
  br i1 %tobool, label %if.then, label %if.end, !dbg !7438

if.then:                                          ; preds = %entry
  br label %return, !dbg !7439

if.end:                                           ; preds = %entry
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @file, align 8, !dbg !7441
  %call1 = call i32 @fwrite(i8* %s, i32 1, i32 %n, %struct._IO_FILE* %1), !dbg !7444
  call void @llvm.dbg.value(metadata i32 %call1, metadata !7445, metadata !DIExpression()), !dbg !7425
  %cmp = icmp ne i32 %call1, %n, !dbg !7446
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !7448

if.then2:                                         ; preds = %if.end
  br label %return, !dbg !7449

if.end3:                                          ; preds = %if.end
  %conv = zext i32 %n to i64, !dbg !7451
  %2 = load i64, i64* @track_length, align 8, !dbg !7452
  %add = add nsw i64 %2, %conv, !dbg !7452
  store i64 %add, i64* @track_length, align 8, !dbg !7452
  store i64 %cycles, i64* @cycles_prev, align 8, !dbg !7453
  br label %return, !dbg !7454

return:                                           ; preds = %if.end3, %if.then2, %if.then
  %retval.0 = phi i32 [ 1, %if.then ], [ 1, %if.then2 ], [ 0, %if.end3 ], !dbg !7455
  ret i32 %retval.0, !dbg !7456
}

declare i32 @fseek(%struct._IO_FILE*, i64, i32) #5

; Function Attrs: noinline nounwind ssp uwtable
define internal i32 @midi_write_u32(i32 %x) #0 !dbg !7457 {
entry:
  %s = alloca [4 x i8], align 1
  call void @llvm.dbg.value(metadata i32 %x, metadata !7460, metadata !DIExpression()), !dbg !7461
  call void @llvm.dbg.declare(metadata [4 x i8]* %s, metadata !7462, metadata !DIExpression()), !dbg !7464
  call void @llvm.dbg.declare(metadata !666, metadata !7465, metadata !DIExpression()), !dbg !7466
  %shr = lshr i32 %x, 24, !dbg !7467
  %conv = trunc i32 %shr to i8, !dbg !7470
  %arrayidx = getelementptr inbounds [4 x i8], [4 x i8]* %s, i64 0, i64 0, !dbg !7471
  store i8 %conv, i8* %arrayidx, align 1, !dbg !7472
  %shr1 = lshr i32 %x, 16, !dbg !7473
  %conv2 = trunc i32 %shr1 to i8, !dbg !7474
  %arrayidx3 = getelementptr inbounds [4 x i8], [4 x i8]* %s, i64 0, i64 1, !dbg !7475
  store i8 %conv2, i8* %arrayidx3, align 1, !dbg !7476
  %shr4 = lshr i32 %x, 8, !dbg !7477
  %conv5 = trunc i32 %shr4 to i8, !dbg !7478
  %arrayidx6 = getelementptr inbounds [4 x i8], [4 x i8]* %s, i64 0, i64 2, !dbg !7479
  store i8 %conv5, i8* %arrayidx6, align 1, !dbg !7480
  %conv7 = trunc i32 %x to i8, !dbg !7481
  %arrayidx8 = getelementptr inbounds [4 x i8], [4 x i8]* %s, i64 0, i64 3, !dbg !7482
  store i8 %conv7, i8* %arrayidx8, align 1, !dbg !7483
  %arraydecay = getelementptr inbounds [4 x i8], [4 x i8]* %s, i32 0, i32 0, !dbg !7484
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @file, align 8, !dbg !7486
  %call = call i32 @fwrite(i8* %arraydecay, i32 1, i32 4, %struct._IO_FILE* %0), !dbg !7487
  call void @llvm.dbg.value(metadata i32 %call, metadata !7488, metadata !DIExpression()), !dbg !7461
  %cmp = icmp ne i32 %call, 4, !dbg !7489
  br i1 %cmp, label %if.then, label %if.end, !dbg !7491

if.then:                                          ; preds = %entry
  br label %return, !dbg !7492

if.end:                                           ; preds = %entry
  br label %return, !dbg !7494

return:                                           ; preds = %if.end, %if.then
  %retval.0 = phi i32 [ 1, %if.then ], [ 0, %if.end ], !dbg !7495
  ret i32 %retval.0, !dbg !7496
}

; Function Attrs: noinline nounwind ssp uwtable
define internal i32 @midi_write_varlen(i64 %x) #0 !dbg !7497 {
entry:
  %s = alloca i8, align 1
  call void @llvm.dbg.value(metadata i64 %x, metadata !7500, metadata !DIExpression()), !dbg !7501
  call void @llvm.dbg.declare(metadata i8* %s, metadata !7502, metadata !DIExpression()), !dbg !7503
  br label %while.body, !dbg !7504

while.body:                                       ; preds = %if.end8, %entry
  %x.addr.0 = phi i64 [ %x, %entry ], [ %shr, %if.end8 ]
  call void @llvm.dbg.value(metadata i64 %x.addr.0, metadata !7500, metadata !DIExpression()), !dbg !7501
  br label %while_continue___0, !dbg !7508

while_continue___0:                               ; preds = %while.body
  br label %while_continue, !dbg !7508

while_continue:                                   ; preds = %while_continue___0
  %and = and i64 %x.addr.0, 127, !dbg !7509
  %conv = trunc i64 %and to i8, !dbg !7511
  store i8 %conv, i8* %s, align 1, !dbg !7512
  %shr = lshr i64 %x.addr.0, 7, !dbg !7513
  call void @llvm.dbg.value(metadata i64 %shr, metadata !7500, metadata !DIExpression()), !dbg !7501
  %tobool = icmp ne i64 %shr, 0, !dbg !7514
  br i1 %tobool, label %if.then, label %if.end, !dbg !7516

if.then:                                          ; preds = %while_continue
  %0 = load i8, i8* %s, align 1, !dbg !7517
  %conv1 = zext i8 %0 to i32, !dbg !7519
  %or = or i32 %conv1, 128, !dbg !7520
  %conv2 = trunc i32 %or to i8, !dbg !7521
  store i8 %conv2, i8* %s, align 1, !dbg !7522
  br label %if.end, !dbg !7523

if.end:                                           ; preds = %if.then, %while_continue
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @file, align 8, !dbg !7524
  %call = call i32 @fwrite(i8* %s, i32 1, i32 1, %struct._IO_FILE* %1), !dbg !7527
  call void @llvm.dbg.value(metadata i32 %call, metadata !7528, metadata !DIExpression()), !dbg !7501
  %cmp = icmp ne i32 %call, 1, !dbg !7529
  br i1 %cmp, label %if.then4, label %if.end5, !dbg !7531

if.then4:                                         ; preds = %if.end
  br label %return, !dbg !7532

if.end5:                                          ; preds = %if.end
  %2 = load i64, i64* @track_length, align 8, !dbg !7534
  %inc = add nsw i64 %2, 1, !dbg !7534
  store i64 %inc, i64* @track_length, align 8, !dbg !7534
  %tobool6 = icmp ne i64 %shr, 0, !dbg !7535
  br i1 %tobool6, label %if.end8, label %if.then7, !dbg !7537

if.then7:                                         ; preds = %if.end5
  br label %while_break, !dbg !7538

if.end8:                                          ; preds = %if.end5
  br label %while.body, !dbg !7504, !llvm.loop !7540

while_break___0:                                  ; No predecessors!
  br label %while_break, !dbg !7542

while_break:                                      ; preds = %while_break___0, %if.then7
  br label %return, !dbg !7543

return:                                           ; preds = %while_break, %if.then4
  %retval.0 = phi i32 [ 1, %if.then4 ], [ 0, %while_break ], !dbg !7544
  ret i32 %retval.0, !dbg !7545
}

declare i32 @fwrite(i8*, i32, i32, %struct._IO_FILE*) #5

; Function Attrs: noinline nounwind ssp uwtable
define internal i32 @midi_write_u16(i16 zeroext %x) #0 !dbg !7546 {
entry:
  %s = alloca [2 x i8], align 1
  call void @llvm.dbg.value(metadata i16 %x, metadata !7549, metadata !DIExpression()), !dbg !7550
  call void @llvm.dbg.declare(metadata [2 x i8]* %s, metadata !7551, metadata !DIExpression()), !dbg !7555
  call void @llvm.dbg.declare(metadata !666, metadata !7556, metadata !DIExpression()), !dbg !7557
  %conv = zext i16 %x to i32, !dbg !7558
  %shr = ashr i32 %conv, 8, !dbg !7561
  %conv1 = trunc i32 %shr to i8, !dbg !7562
  %arrayidx = getelementptr inbounds [2 x i8], [2 x i8]* %s, i64 0, i64 0, !dbg !7563
  store i8 %conv1, i8* %arrayidx, align 1, !dbg !7564
  %conv2 = trunc i16 %x to i8, !dbg !7565
  %arrayidx3 = getelementptr inbounds [2 x i8], [2 x i8]* %s, i64 0, i64 1, !dbg !7566
  store i8 %conv2, i8* %arrayidx3, align 1, !dbg !7567
  %arraydecay = getelementptr inbounds [2 x i8], [2 x i8]* %s, i32 0, i32 0, !dbg !7568
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @file, align 8, !dbg !7570
  %call = call i32 @fwrite(i8* %arraydecay, i32 1, i32 2, %struct._IO_FILE* %0), !dbg !7571
  call void @llvm.dbg.value(metadata i32 %call, metadata !7572, metadata !DIExpression()), !dbg !7550
  %cmp = icmp ne i32 %call, 2, !dbg !7573
  br i1 %cmp, label %if.then, label %if.end, !dbg !7575

if.then:                                          ; preds = %entry
  br label %return, !dbg !7576

if.end:                                           ; preds = %entry
  br label %return, !dbg !7578

return:                                           ; preds = %if.end, %if.then
  %retval.0 = phi i32 [ 1, %if.then ], [ 0, %if.end ], !dbg !7579
  ret i32 %retval.0, !dbg !7580
}

declare i64 @ftell(%struct._IO_FILE*) #5

; Function Attrs: nounwind readnone speculatable willreturn
declare double @llvm.log.f64(double) #1

; Function Attrs: noinline nounwind ssp uwtable
define internal i32 @note_off(i64 %cycles, i32 %channel, i32 %note___1) #0 !dbg !7581 {
entry:
  %event = alloca [3 x i8], align 1
  call void @llvm.dbg.value(metadata i64 %cycles, metadata !7584, metadata !DIExpression()), !dbg !7585
  call void @llvm.dbg.value(metadata i32 %channel, metadata !7586, metadata !DIExpression()), !dbg !7585
  call void @llvm.dbg.value(metadata i32 %note___1, metadata !7587, metadata !DIExpression()), !dbg !7585
  call void @llvm.dbg.declare(metadata [3 x i8]* %event, metadata !7588, metadata !DIExpression()), !dbg !7589
  call void @llvm.dbg.declare(metadata !666, metadata !7590, metadata !DIExpression()), !dbg !7591
  %arrayidx = getelementptr inbounds [3 x i8], [3 x i8]* %event, i64 0, i64 0, !dbg !7592
  store i8 -128, i8* %arrayidx, align 1, !dbg !7595
  %conv = trunc i32 %note___1 to i8, !dbg !7596
  %arrayidx1 = getelementptr inbounds [3 x i8], [3 x i8]* %event, i64 0, i64 1, !dbg !7597
  store i8 %conv, i8* %arrayidx1, align 1, !dbg !7598
  %arrayidx2 = getelementptr inbounds [3 x i8], [3 x i8]* %event, i64 0, i64 2, !dbg !7599
  store i8 0, i8* %arrayidx2, align 1, !dbg !7600
  %arraydecay = getelementptr inbounds [3 x i8], [3 x i8]* %event, i32 0, i32 0, !dbg !7601
  %call = call i32 @midi_write_event(i64 %cycles, i8* %arraydecay, i32 3), !dbg !7603
  call void @llvm.dbg.value(metadata i32 %call, metadata !7604, metadata !DIExpression()), !dbg !7585
  %tobool = icmp ne i32 %call, 0, !dbg !7605
  br i1 %tobool, label %if.then, label %if.end, !dbg !7607

if.then:                                          ; preds = %entry
  br label %return, !dbg !7608

if.end:                                           ; preds = %entry
  br label %return, !dbg !7610

return:                                           ; preds = %if.end, %if.then
  %retval.0 = phi i32 [ 1, %if.then ], [ 0, %if.end ], !dbg !7611
  ret i32 %retval.0, !dbg !7612
}

; Function Attrs: noinline nounwind ssp uwtable
define internal i32 @note_on(i64 %cycles, i32 %channel, i32 %note___1, i32 %velocity) #0 !dbg !7613 {
entry:
  %event = alloca [3 x i8], align 1
  call void @llvm.dbg.value(metadata i64 %cycles, metadata !7616, metadata !DIExpression()), !dbg !7617
  call void @llvm.dbg.value(metadata i32 %channel, metadata !7618, metadata !DIExpression()), !dbg !7617
  call void @llvm.dbg.value(metadata i32 %note___1, metadata !7619, metadata !DIExpression()), !dbg !7617
  call void @llvm.dbg.value(metadata i32 %velocity, metadata !7620, metadata !DIExpression()), !dbg !7617
  call void @llvm.dbg.declare(metadata [3 x i8]* %event, metadata !7621, metadata !DIExpression()), !dbg !7622
  call void @llvm.dbg.declare(metadata !666, metadata !7623, metadata !DIExpression()), !dbg !7624
  %arrayidx = getelementptr inbounds [3 x i8], [3 x i8]* %event, i64 0, i64 0, !dbg !7625
  store i8 -112, i8* %arrayidx, align 1, !dbg !7628
  %conv = trunc i32 %note___1 to i8, !dbg !7629
  %arrayidx1 = getelementptr inbounds [3 x i8], [3 x i8]* %event, i64 0, i64 1, !dbg !7630
  store i8 %conv, i8* %arrayidx1, align 1, !dbg !7631
  %conv2 = trunc i32 %velocity to i8, !dbg !7632
  %arrayidx3 = getelementptr inbounds [3 x i8], [3 x i8]* %event, i64 0, i64 2, !dbg !7633
  store i8 %conv2, i8* %arrayidx3, align 1, !dbg !7634
  %arraydecay = getelementptr inbounds [3 x i8], [3 x i8]* %event, i32 0, i32 0, !dbg !7635
  %call = call i32 @midi_write_event(i64 %cycles, i8* %arraydecay, i32 3), !dbg !7637
  call void @llvm.dbg.value(metadata i32 %call, metadata !7638, metadata !DIExpression()), !dbg !7617
  %tobool = icmp ne i32 %call, 0, !dbg !7639
  br i1 %tobool, label %if.then, label %if.end, !dbg !7641

if.then:                                          ; preds = %entry
  br label %return, !dbg !7642

if.end:                                           ; preds = %entry
  br label %return, !dbg !7644

return:                                           ; preds = %if.end, %if.then
  %retval.0 = phi i32 [ 1, %if.then ], [ 0, %if.end ], !dbg !7645
  ret i32 %retval.0, !dbg !7646
}

; Function Attrs: noinline nounwind ssp uwtable
define internal void @none_put(i32 %addr, i8 zeroext %val) #0 !dbg !7647 {
entry:
  call void @llvm.dbg.value(metadata i32 %addr, metadata !7648, metadata !DIExpression()), !dbg !7649
  call void @llvm.dbg.value(metadata i8 %val, metadata !7650, metadata !DIExpression()), !dbg !7649
  ret void, !dbg !7651
}

; Function Attrs: noinline nounwind ssp uwtable
define internal i32 @none_get(i32 %addr) #0 !dbg !7653 {
entry:
  call void @llvm.dbg.value(metadata i32 %addr, metadata !7654, metadata !DIExpression()), !dbg !7655
  ret i32 255, !dbg !7656
}

; Function Attrs: noinline nounwind ssp uwtable
define internal void @mem_put(i32 %addr, i32 %val) #0 !dbg !7658 {
entry:
  call void @llvm.dbg.value(metadata i32 %addr, metadata !7661, metadata !DIExpression()), !dbg !7662
  call void @llvm.dbg.value(metadata i32 %val, metadata !7663, metadata !DIExpression()), !dbg !7662
  %shr = lshr i32 %addr, 8, !dbg !7664
  %idxprom = zext i32 %shr to i64, !dbg !7667
  %arrayidx = getelementptr inbounds [256 x void (i32, i8)*], [256 x void (i32, i8)*]* @putlookup, i64 0, i64 %idxprom, !dbg !7667
  %0 = load void (i32, i8)*, void (i32, i8)** %arrayidx, align 8, !dbg !7667
  call void @llvm.dbg.value(metadata void (i32, i8)* %0, metadata !7668, metadata !DIExpression()), !dbg !7662
  %conv = trunc i32 %val to i8, !dbg !7669
  call void %0(i32 %addr, i8 zeroext %conv), !dbg !7671
  ret void, !dbg !7672
}

; Function Attrs: noinline nounwind ssp uwtable
define internal void @op_nop(i32 %op, %struct.opinfo* %oi) #0 !dbg !7673 {
entry:
  call void @llvm.dbg.value(metadata i32 %op, metadata !7674, metadata !DIExpression()), !dbg !7675
  call void @llvm.dbg.value(metadata %struct.opinfo* %oi, metadata !7676, metadata !DIExpression()), !dbg !7675
  br label %while.body, !dbg !7677

while.body:                                       ; preds = %entry
  br label %while_continue___0, !dbg !7681

while_continue___0:                               ; preds = %while.body
  br label %while_continue, !dbg !7681

while_continue:                                   ; preds = %while_continue___0
  br label %while_break, !dbg !7682

while_break___0:                                  ; No predecessors!
  br label %while_break, !dbg !7684

while_break:                                      ; preds = %while_break___0, %while_continue
  ret void, !dbg !7685
}

; Function Attrs: noinline nounwind ssp uwtable
define internal void @op_ld_reg16_imm(i32 %op, %struct.opinfo* %oi) #0 !dbg !7686 {
entry:
  call void @llvm.dbg.value(metadata i32 %op, metadata !7687, metadata !DIExpression()), !dbg !7688
  call void @llvm.dbg.value(metadata %struct.opinfo* %oi, metadata !7689, metadata !DIExpression()), !dbg !7688
  %call = call i32 @get_imm16(), !dbg !7690
  call void @llvm.dbg.value(metadata i32 %call, metadata !7694, metadata !DIExpression()), !dbg !7688
  %conv = zext i32 %call to i64, !dbg !7695
  call void @llvm.dbg.value(metadata i64 %conv, metadata !7696, metadata !DIExpression()), !dbg !7688
  %shr = lshr i32 %op, 4, !dbg !7697
  %and = and i32 %shr, 3, !dbg !7698
  %conv1 = zext i32 %and to i64, !dbg !7699
  call void @llvm.dbg.value(metadata i64 %conv1, metadata !7700, metadata !DIExpression()), !dbg !7688
  %cmp = icmp sgt i64 %conv1, 2, !dbg !7701
  %conv2 = zext i1 %cmp to i32, !dbg !7701
  %conv3 = sext i32 %conv2 to i64, !dbg !7702
  %add = add nsw i64 %conv1, %conv3, !dbg !7703
  call void @llvm.dbg.value(metadata i64 %add, metadata !7700, metadata !DIExpression()), !dbg !7688
  br label %while.body, !dbg !7704

while.body:                                       ; preds = %entry
  br label %while_continue___0, !dbg !7707

while_continue___0:                               ; preds = %while.body
  br label %while_continue, !dbg !7707

while_continue:                                   ; preds = %while_continue___0
  br label %while_break, !dbg !7708

while_break___0:                                  ; No predecessors!
  br label %while_break, !dbg !7710

while_break:                                      ; preds = %while_break___0, %while_continue
  %conv4 = trunc i64 %conv to i16, !dbg !7711
  %mul = mul nsw i64 %add, 2, !dbg !7712
  %arrayidx = getelementptr inbounds [12 x i8], [12 x i8]* bitcast (%union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs to [12 x i8]*), i64 0, i64 %mul, !dbg !7713
  %0 = bitcast i8* %arrayidx to i16*, !dbg !7714
  store i16 %conv4, i16* %0, align 1, !dbg !7715
  ret void, !dbg !7716
}

; Function Attrs: noinline nounwind ssp uwtable
define internal void @op_ld_reg16_a(i32 %op, %struct.opinfo* %oi) #0 !dbg !7717 {
entry:
  call void @llvm.dbg.value(metadata i32 %op, metadata !7718, metadata !DIExpression()), !dbg !7719
  call void @llvm.dbg.value(metadata %struct.opinfo* %oi, metadata !7720, metadata !DIExpression()), !dbg !7719
  %shr = lshr i32 %op, 4, !dbg !7721
  %and = and i32 %shr, 3, !dbg !7723
  %conv = zext i32 %and to i64, !dbg !7724
  call void @llvm.dbg.value(metadata i64 %conv, metadata !7725, metadata !DIExpression()), !dbg !7719
  %cmp = icmp sgt i64 %conv, 2, !dbg !7726
  %conv1 = zext i1 %cmp to i32, !dbg !7726
  %conv2 = sext i32 %conv1 to i64, !dbg !7727
  %sub = sub nsw i64 %conv, %conv2, !dbg !7728
  call void @llvm.dbg.value(metadata i64 %sub, metadata !7725, metadata !DIExpression()), !dbg !7719
  %and3 = and i32 %op, 8, !dbg !7729
  %tobool = icmp ne i32 %and3, 0, !dbg !7729
  br i1 %tobool, label %if.then, label %if.else, !dbg !7731

if.then:                                          ; preds = %entry
  br label %while.body, !dbg !7732

while.body:                                       ; preds = %if.then
  br label %while_continue___1, !dbg !7736

while_continue___1:                               ; preds = %while.body
  br label %while_continue, !dbg !7736

while_continue:                                   ; preds = %while_continue___1
  br label %while_break, !dbg !7737

while_break___1:                                  ; No predecessors!
  br label %while_break, !dbg !7739

while_break:                                      ; preds = %while_break___1, %while_continue
  %mul = mul nsw i64 %sub, 2, !dbg !7740
  %arrayidx = getelementptr inbounds [12 x i8], [12 x i8]* bitcast (%union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs to [12 x i8]*), i64 0, i64 %mul, !dbg !7742
  %0 = bitcast i8* %arrayidx to i16*, !dbg !7743
  %1 = load i16, i16* %0, align 1, !dbg !7743
  call void @llvm.dbg.value(metadata i16 %1, metadata !7744, metadata !DIExpression()), !dbg !7719
  %conv4 = zext i16 %1 to i32, !dbg !7745
  %call = call i32 @mem_get(i32 %conv4), !dbg !7747
  call void @llvm.dbg.value(metadata i32 %call, metadata !7748, metadata !DIExpression()), !dbg !7719
  %conv5 = trunc i32 %call to i8, !dbg !7749
  store i8 %conv5, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 6), align 2, !dbg !7750
  br label %if.end, !dbg !7751

if.else:                                          ; preds = %entry
  br label %while.body6, !dbg !7752

while.body6:                                      ; preds = %if.else
  br label %while_continue___2, !dbg !7756

while_continue___2:                               ; preds = %while.body6
  br label %while_continue___0, !dbg !7756

while_continue___0:                               ; preds = %while_continue___2
  br label %while_break___0, !dbg !7757

while_break___2:                                  ; No predecessors!
  br label %while_break___0, !dbg !7759

while_break___0:                                  ; preds = %while_break___2, %while_continue___0
  %mul7 = mul nsw i64 %sub, 2, !dbg !7760
  %arrayidx8 = getelementptr inbounds [12 x i8], [12 x i8]* bitcast (%union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs to [12 x i8]*), i64 0, i64 %mul7, !dbg !7762
  %2 = bitcast i8* %arrayidx8 to i16*, !dbg !7763
  %3 = load i16, i16* %2, align 1, !dbg !7763
  call void @llvm.dbg.value(metadata i16 %3, metadata !7744, metadata !DIExpression()), !dbg !7719
  %conv9 = zext i16 %3 to i32, !dbg !7764
  %4 = load i8, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 6), align 2, !dbg !7766
  %conv10 = zext i8 %4 to i32, !dbg !7767
  call void @mem_put(i32 %conv9, i32 %conv10), !dbg !7768
  br label %if.end

if.end:                                           ; preds = %while_break___0, %while_break
  %r.0 = phi i16 [ %1, %while_break ], [ %3, %while_break___0 ], !dbg !7769
  call void @llvm.dbg.value(metadata i16 %r.0, metadata !7744, metadata !DIExpression()), !dbg !7719
  %cmp11 = icmp eq i64 %sub, 2, !dbg !7770
  br i1 %cmp11, label %if.then13, label %if.end22, !dbg !7772

if.then13:                                        ; preds = %if.end
  %conv14 = zext i16 %r.0 to i32, !dbg !7773
  %and15 = and i32 %op, 16, !dbg !7775
  %cmp16 = icmp eq i32 %and15, 0, !dbg !7776
  %conv17 = zext i1 %cmp16 to i32, !dbg !7776
  %shl = shl i32 %conv17, 1, !dbg !7777
  %sub18 = sub nsw i32 %shl, 1, !dbg !7778
  %add = add nsw i32 %conv14, %sub18, !dbg !7779
  %conv19 = trunc i32 %add to i16, !dbg !7780
  call void @llvm.dbg.value(metadata i16 %conv19, metadata !7744, metadata !DIExpression()), !dbg !7719
  %mul20 = mul nsw i64 %sub, 2, !dbg !7781
  %arrayidx21 = getelementptr inbounds [12 x i8], [12 x i8]* bitcast (%union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs to [12 x i8]*), i64 0, i64 %mul20, !dbg !7782
  %5 = bitcast i8* %arrayidx21 to i16*, !dbg !7783
  store i16 %conv19, i16* %5, align 1, !dbg !7784
  br label %if.end22, !dbg !7785

if.end22:                                         ; preds = %if.then13, %if.end
  ret void, !dbg !7786
}

; Function Attrs: noinline nounwind ssp uwtable
define internal void @op_inc16(i32 %op, %struct.opinfo* %oi) #0 !dbg !7787 {
entry:
  call void @llvm.dbg.value(metadata i32 %op, metadata !7788, metadata !DIExpression()), !dbg !7789
  call void @llvm.dbg.value(metadata %struct.opinfo* %oi, metadata !7790, metadata !DIExpression()), !dbg !7789
  %shr = lshr i32 %op, 4, !dbg !7791
  %and = and i32 %shr, 3, !dbg !7793
  %conv = zext i32 %and to i64, !dbg !7794
  call void @llvm.dbg.value(metadata i64 %conv, metadata !7795, metadata !DIExpression()), !dbg !7789
  %mul = mul nsw i64 %conv, 2, !dbg !7796
  %arrayidx = getelementptr inbounds [12 x i8], [12 x i8]* bitcast (%union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs to [12 x i8]*), i64 0, i64 %mul, !dbg !7797
  %0 = bitcast i8* %arrayidx to i16*, !dbg !7798
  %1 = load i16, i16* %0, align 1, !dbg !7798
  call void @llvm.dbg.value(metadata i16 %1, metadata !7799, metadata !DIExpression()), !dbg !7789
  br label %while.body, !dbg !7800

while.body:                                       ; preds = %entry
  br label %while_continue___0, !dbg !7803

while_continue___0:                               ; preds = %while.body
  br label %while_continue, !dbg !7803

while_continue:                                   ; preds = %while_continue___0
  br label %while_break, !dbg !7804

while_break___0:                                  ; No predecessors!
  br label %while_break, !dbg !7806

while_break:                                      ; preds = %while_break___0, %while_continue
  %conv1 = zext i16 %1 to i32, !dbg !7807
  %add = add nsw i32 %conv1, 1, !dbg !7808
  %conv2 = trunc i32 %add to i16, !dbg !7809
  call void @llvm.dbg.value(metadata i16 %conv2, metadata !7799, metadata !DIExpression()), !dbg !7789
  %mul3 = mul nsw i64 %conv, 2, !dbg !7810
  %arrayidx4 = getelementptr inbounds [12 x i8], [12 x i8]* bitcast (%union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs to [12 x i8]*), i64 0, i64 %mul3, !dbg !7811
  %2 = bitcast i8* %arrayidx4 to i16*, !dbg !7812
  store i16 %conv2, i16* %2, align 1, !dbg !7813
  ret void, !dbg !7814
}

; Function Attrs: noinline nounwind ssp uwtable
define internal void @op_inc(i32 %op, %struct.opinfo* %oi) #0 !dbg !7815 {
entry:
  call void @llvm.dbg.value(metadata i32 %op, metadata !7816, metadata !DIExpression()), !dbg !7817
  call void @llvm.dbg.value(metadata %struct.opinfo* %oi, metadata !7818, metadata !DIExpression()), !dbg !7817
  %shr = lshr i32 %op, 3, !dbg !7819
  %and = and i32 %shr, 7, !dbg !7821
  %conv = zext i32 %and to i64, !dbg !7822
  call void @llvm.dbg.value(metadata i64 %conv, metadata !7823, metadata !DIExpression()), !dbg !7817
  br label %while.body, !dbg !7824

while.body:                                       ; preds = %entry
  br label %while_continue___0, !dbg !7827

while_continue___0:                               ; preds = %while.body
  br label %while_continue, !dbg !7827

while_continue:                                   ; preds = %while_continue___0
  br label %while_break, !dbg !7828

while_break___0:                                  ; No predecessors!
  br label %while_break, !dbg !7830

while_break:                                      ; preds = %while_break___0, %while_continue
  call void @print_reg(i64 %conv), !dbg !7831
  %call = call i32 @get_reg(i64 %conv), !dbg !7834
  call void @llvm.dbg.value(metadata i32 %call, metadata !7836, metadata !DIExpression()), !dbg !7817
  %conv1 = trunc i32 %call to i8, !dbg !7837
  call void @llvm.dbg.value(metadata i8 %conv1, metadata !7838, metadata !DIExpression()), !dbg !7817
  call void @llvm.dbg.value(metadata i8 %conv1, metadata !7839, metadata !DIExpression()), !dbg !7817
  %conv2 = zext i8 %conv1 to i32, !dbg !7840
  %add = add nsw i32 %conv2, 1, !dbg !7841
  %conv3 = trunc i32 %add to i8, !dbg !7842
  call void @llvm.dbg.value(metadata i8 %conv3, metadata !7838, metadata !DIExpression()), !dbg !7817
  %conv4 = zext i8 %conv3 to i32, !dbg !7843
  call void @put_reg(i64 %conv, i32 %conv4), !dbg !7845
  %0 = load i8, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !7846
  %conv5 = zext i8 %0 to i32, !dbg !7847
  %and6 = and i32 %conv5, -225, !dbg !7848
  %conv7 = trunc i32 %and6 to i8, !dbg !7849
  store i8 %conv7, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !7850
  %conv8 = zext i8 %conv3 to i32, !dbg !7851
  %cmp = icmp eq i32 %conv8, 0, !dbg !7853
  br i1 %cmp, label %if.then, label %if.end, !dbg !7854

if.then:                                          ; preds = %while_break
  %1 = load i8, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !7855
  %conv10 = zext i8 %1 to i32, !dbg !7857
  %or = or i32 %conv10, 128, !dbg !7858
  %conv11 = trunc i32 %or to i8, !dbg !7859
  store i8 %conv11, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !7860
  br label %if.end, !dbg !7861

if.end:                                           ; preds = %if.then, %while_break
  %conv12 = zext i8 %conv1 to i32, !dbg !7862
  %and13 = and i32 %conv12, 15, !dbg !7864
  %conv14 = zext i8 %conv3 to i32, !dbg !7865
  %and15 = and i32 %conv14, 15, !dbg !7866
  %cmp16 = icmp sgt i32 %and13, %and15, !dbg !7867
  br i1 %cmp16, label %if.then18, label %if.end22, !dbg !7868

if.then18:                                        ; preds = %if.end
  %2 = load i8, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !7869
  %conv19 = zext i8 %2 to i32, !dbg !7871
  %or20 = or i32 %conv19, 32, !dbg !7872
  %conv21 = trunc i32 %or20 to i8, !dbg !7873
  store i8 %conv21, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !7874
  br label %if.end22, !dbg !7875

if.end22:                                         ; preds = %if.then18, %if.end
  ret void, !dbg !7876
}

; Function Attrs: noinline nounwind ssp uwtable
define internal void @op_dec(i32 %op, %struct.opinfo* %oi) #0 !dbg !7877 {
entry:
  call void @llvm.dbg.value(metadata i32 %op, metadata !7878, metadata !DIExpression()), !dbg !7879
  call void @llvm.dbg.value(metadata %struct.opinfo* %oi, metadata !7880, metadata !DIExpression()), !dbg !7879
  %shr = lshr i32 %op, 3, !dbg !7881
  %and = and i32 %shr, 7, !dbg !7883
  %conv = zext i32 %and to i64, !dbg !7884
  call void @llvm.dbg.value(metadata i64 %conv, metadata !7885, metadata !DIExpression()), !dbg !7879
  br label %while.body, !dbg !7886

while.body:                                       ; preds = %entry
  br label %while_continue___0, !dbg !7889

while_continue___0:                               ; preds = %while.body
  br label %while_continue, !dbg !7889

while_continue:                                   ; preds = %while_continue___0
  br label %while_break, !dbg !7890

while_break___0:                                  ; No predecessors!
  br label %while_break, !dbg !7892

while_break:                                      ; preds = %while_break___0, %while_continue
  call void @print_reg(i64 %conv), !dbg !7893
  %call = call i32 @get_reg(i64 %conv), !dbg !7896
  call void @llvm.dbg.value(metadata i32 %call, metadata !7898, metadata !DIExpression()), !dbg !7879
  %conv1 = trunc i32 %call to i8, !dbg !7899
  call void @llvm.dbg.value(metadata i8 %conv1, metadata !7900, metadata !DIExpression()), !dbg !7879
  call void @llvm.dbg.value(metadata i8 %conv1, metadata !7901, metadata !DIExpression()), !dbg !7879
  %conv2 = zext i8 %conv1 to i32, !dbg !7902
  %sub = sub nsw i32 %conv2, 1, !dbg !7903
  %conv3 = trunc i32 %sub to i8, !dbg !7904
  call void @llvm.dbg.value(metadata i8 %conv3, metadata !7900, metadata !DIExpression()), !dbg !7879
  %conv4 = zext i8 %conv3 to i32, !dbg !7905
  call void @put_reg(i64 %conv, i32 %conv4), !dbg !7907
  %0 = load i8, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !7908
  %conv5 = zext i8 %0 to i32, !dbg !7909
  %or = or i32 %conv5, 64, !dbg !7910
  %conv6 = trunc i32 %or to i8, !dbg !7911
  store i8 %conv6, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !7912
  %1 = load i8, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !7913
  %conv7 = zext i8 %1 to i32, !dbg !7914
  %and8 = and i32 %conv7, -161, !dbg !7915
  %conv9 = trunc i32 %and8 to i8, !dbg !7916
  store i8 %conv9, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !7917
  %conv10 = zext i8 %conv3 to i32, !dbg !7918
  %cmp = icmp eq i32 %conv10, 0, !dbg !7920
  br i1 %cmp, label %if.then, label %if.end, !dbg !7921

if.then:                                          ; preds = %while_break
  %2 = load i8, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !7922
  %conv12 = zext i8 %2 to i32, !dbg !7924
  %or13 = or i32 %conv12, 128, !dbg !7925
  %conv14 = trunc i32 %or13 to i8, !dbg !7926
  store i8 %conv14, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !7927
  br label %if.end, !dbg !7928

if.end:                                           ; preds = %if.then, %while_break
  %conv15 = zext i8 %conv1 to i32, !dbg !7929
  %and16 = and i32 %conv15, 15, !dbg !7931
  %conv17 = zext i8 %conv3 to i32, !dbg !7932
  %and18 = and i32 %conv17, 15, !dbg !7933
  %cmp19 = icmp sgt i32 %and16, %and18, !dbg !7934
  br i1 %cmp19, label %if.then21, label %if.end25, !dbg !7935

if.then21:                                        ; preds = %if.end
  %3 = load i8, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !7936
  %conv22 = zext i8 %3 to i32, !dbg !7938
  %or23 = or i32 %conv22, 32, !dbg !7939
  %conv24 = trunc i32 %or23 to i8, !dbg !7940
  store i8 %conv24, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !7941
  br label %if.end25, !dbg !7942

if.end25:                                         ; preds = %if.then21, %if.end
  ret void, !dbg !7943
}

; Function Attrs: noinline nounwind ssp uwtable
define internal void @op_ld_reg8_imm(i32 %op, %struct.opinfo* %oi) #0 !dbg !7944 {
entry:
  call void @llvm.dbg.value(metadata i32 %op, metadata !7945, metadata !DIExpression()), !dbg !7946
  call void @llvm.dbg.value(metadata %struct.opinfo* %oi, metadata !7947, metadata !DIExpression()), !dbg !7946
  %call = call i32 @get_imm8(), !dbg !7948
  call void @llvm.dbg.value(metadata i32 %call, metadata !7952, metadata !DIExpression()), !dbg !7946
  %conv = zext i32 %call to i64, !dbg !7953
  call void @llvm.dbg.value(metadata i64 %conv, metadata !7954, metadata !DIExpression()), !dbg !7946
  %shr = lshr i32 %op, 3, !dbg !7955
  %and = and i32 %shr, 7, !dbg !7956
  %conv1 = zext i32 %and to i64, !dbg !7957
  call void @llvm.dbg.value(metadata i64 %conv1, metadata !7958, metadata !DIExpression()), !dbg !7946
  br label %while.body, !dbg !7959

while.body:                                       ; preds = %entry
  br label %while_continue___1, !dbg !7962

while_continue___1:                               ; preds = %while.body
  br label %while_continue, !dbg !7962

while_continue:                                   ; preds = %while_continue___1
  br label %while_break, !dbg !7963

while_break___1:                                  ; No predecessors!
  br label %while_break, !dbg !7965

while_break:                                      ; preds = %while_break___1, %while_continue
  call void @print_reg(i64 %conv1), !dbg !7966
  %conv2 = trunc i64 %conv to i32, !dbg !7969
  call void @put_reg(i64 %conv1, i32 %conv2), !dbg !7971
  br label %while.body3, !dbg !7972

while.body3:                                      ; preds = %while_break
  br label %while_continue___2, !dbg !7975

while_continue___2:                               ; preds = %while.body3
  br label %while_continue___0, !dbg !7975

while_continue___0:                               ; preds = %while_continue___2
  br label %while_break___0, !dbg !7976

while_break___2:                                  ; No predecessors!
  br label %while_break___0, !dbg !7978

while_break___0:                                  ; preds = %while_break___2, %while_continue___0
  ret void, !dbg !7979
}

; Function Attrs: noinline nounwind ssp uwtable
define internal void @op_rlca(i32 %op, %struct.opinfo* %oi) #0 !dbg !7980 {
entry:
  call void @llvm.dbg.value(metadata i32 %op, metadata !7981, metadata !DIExpression()), !dbg !7982
  call void @llvm.dbg.value(metadata %struct.opinfo* %oi, metadata !7983, metadata !DIExpression()), !dbg !7982
  br label %while.body, !dbg !7984

while.body:                                       ; preds = %entry
  br label %while_continue___0, !dbg !7988

while_continue___0:                               ; preds = %while.body
  br label %while_continue, !dbg !7988

while_continue:                                   ; preds = %while_continue___0
  br label %while_break, !dbg !7989

while_break___0:                                  ; No predecessors!
  br label %while_break, !dbg !7991

while_break:                                      ; preds = %while_break___0, %while_continue
  %0 = load i8, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 6), align 2, !dbg !7992
  call void @llvm.dbg.value(metadata i8 %0, metadata !7993, metadata !DIExpression()), !dbg !7982
  %conv = zext i8 %0 to i32, !dbg !7994
  %shl = shl i32 %conv, 1, !dbg !7995
  %conv1 = trunc i32 %shl to i8, !dbg !7996
  call void @llvm.dbg.value(metadata i8 %conv1, metadata !7993, metadata !DIExpression()), !dbg !7982
  %conv2 = zext i8 %conv1 to i32, !dbg !7997
  %1 = load i8, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 6), align 2, !dbg !7998
  %conv3 = zext i8 %1 to i32, !dbg !7999
  %shr = ashr i32 %conv3, 7, !dbg !8000
  %or = or i32 %conv2, %shr, !dbg !8001
  %conv4 = trunc i32 %or to i8, !dbg !8002
  call void @llvm.dbg.value(metadata i8 %conv4, metadata !7993, metadata !DIExpression()), !dbg !7982
  %2 = load i8, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 6), align 2, !dbg !8003
  %conv5 = zext i8 %2 to i32, !dbg !8004
  %shr6 = ashr i32 %conv5, 7, !dbg !8005
  %shl7 = shl i32 %shr6, 4, !dbg !8006
  %conv8 = trunc i32 %shl7 to i8, !dbg !8007
  store i8 %conv8, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !8008
  %conv9 = zext i8 %conv4 to i32, !dbg !8009
  %cmp = icmp eq i32 %conv9, 0, !dbg !8011
  br i1 %cmp, label %if.then, label %if.end, !dbg !8012

if.then:                                          ; preds = %while_break
  %3 = load i8, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !8013
  %conv11 = zext i8 %3 to i32, !dbg !8015
  %or12 = or i32 %conv11, 128, !dbg !8016
  %conv13 = trunc i32 %or12 to i8, !dbg !8017
  store i8 %conv13, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !8018
  br label %if.end, !dbg !8019

if.end:                                           ; preds = %if.then, %while_break
  store i8 %conv4, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 6), align 2, !dbg !8020
  ret void, !dbg !8021
}

; Function Attrs: noinline nounwind ssp uwtable
define internal void @op_ld_ind16_sp(i32 %op, %struct.opinfo* %oi) #0 !dbg !8022 {
entry:
  call void @llvm.dbg.value(metadata i32 %op, metadata !8023, metadata !DIExpression()), !dbg !8024
  call void @llvm.dbg.value(metadata %struct.opinfo* %oi, metadata !8025, metadata !DIExpression()), !dbg !8024
  %call = call i32 @get_imm16(), !dbg !8026
  call void @llvm.dbg.value(metadata i32 %call, metadata !8030, metadata !DIExpression()), !dbg !8024
  %conv = zext i32 %call to i64, !dbg !8031
  call void @llvm.dbg.value(metadata i64 %conv, metadata !8032, metadata !DIExpression()), !dbg !8024
  %0 = load i16, i16* bitcast (i8* getelementptr inbounds ([12 x i8], [12 x i8]* bitcast (%union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs to [12 x i8]*), i64 0, i64 8) to i16*), align 2, !dbg !8033
  %conv1 = zext i16 %0 to i64, !dbg !8034
  call void @llvm.dbg.value(metadata i64 %conv1, metadata !8035, metadata !DIExpression()), !dbg !8024
  br label %while.body, !dbg !8036

while.body:                                       ; preds = %entry
  br label %while_continue___0, !dbg !8039

while_continue___0:                               ; preds = %while.body
  br label %while_continue, !dbg !8039

while_continue:                                   ; preds = %while_continue___0
  br label %while_break, !dbg !8040

while_break___0:                                  ; No predecessors!
  br label %while_break, !dbg !8042

while_break:                                      ; preds = %while_break___0, %while_continue
  %conv2 = trunc i64 %conv to i32, !dbg !8043
  %and = and i64 %conv1, 255, !dbg !8046
  %conv3 = trunc i64 %and to i32, !dbg !8047
  call void @mem_put(i32 %conv2, i32 %conv3), !dbg !8048
  %add = add nsw i64 %conv, 1, !dbg !8049
  %conv4 = trunc i64 %add to i32, !dbg !8051
  %shr = ashr i64 %conv1, 8, !dbg !8052
  %conv5 = trunc i64 %shr to i32, !dbg !8053
  call void @mem_put(i32 %conv4, i32 %conv5), !dbg !8054
  ret void, !dbg !8055
}

; Function Attrs: noinline nounwind ssp uwtable
define internal void @op_add_hl(i32 %op, %struct.opinfo* %oi) #0 !dbg !8056 {
entry:
  call void @llvm.dbg.value(metadata i32 %op, metadata !8057, metadata !DIExpression()), !dbg !8058
  call void @llvm.dbg.value(metadata %struct.opinfo* %oi, metadata !8059, metadata !DIExpression()), !dbg !8058
  %shr = lshr i32 %op, 4, !dbg !8060
  %and = and i32 %shr, 3, !dbg !8062
  %conv = zext i32 %and to i64, !dbg !8063
  call void @llvm.dbg.value(metadata i64 %conv, metadata !8064, metadata !DIExpression()), !dbg !8058
  %0 = load i16, i16* bitcast (i8* getelementptr inbounds ([12 x i8], [12 x i8]* bitcast (%union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs to [12 x i8]*), i64 0, i64 4) to i16*), align 2, !dbg !8065
  call void @llvm.dbg.value(metadata i16 %0, metadata !8066, metadata !DIExpression()), !dbg !8058
  call void @llvm.dbg.value(metadata i16 %0, metadata !8067, metadata !DIExpression()), !dbg !8058
  %cmp = icmp sgt i64 %conv, 2, !dbg !8068
  %conv1 = zext i1 %cmp to i32, !dbg !8068
  %conv2 = sext i32 %conv1 to i64, !dbg !8069
  %add = add nsw i64 %conv, %conv2, !dbg !8070
  call void @llvm.dbg.value(metadata i64 %add, metadata !8064, metadata !DIExpression()), !dbg !8058
  br label %while.body, !dbg !8071

while.body:                                       ; preds = %entry
  br label %while_continue___0, !dbg !8074

while_continue___0:                               ; preds = %while.body
  br label %while_continue, !dbg !8074

while_continue:                                   ; preds = %while_continue___0
  br label %while_break, !dbg !8075

while_break___0:                                  ; No predecessors!
  br label %while_break, !dbg !8077

while_break:                                      ; preds = %while_break___0, %while_continue
  %conv3 = zext i16 %0 to i32, !dbg !8078
  %mul = mul nsw i64 %add, 2, !dbg !8079
  %arrayidx = getelementptr inbounds [12 x i8], [12 x i8]* bitcast (%union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs to [12 x i8]*), i64 0, i64 %mul, !dbg !8080
  %1 = bitcast i8* %arrayidx to i16*, !dbg !8081
  %2 = load i16, i16* %1, align 1, !dbg !8081
  %conv4 = zext i16 %2 to i32, !dbg !8082
  %add5 = add nsw i32 %conv3, %conv4, !dbg !8083
  %conv6 = trunc i32 %add5 to i16, !dbg !8084
  call void @llvm.dbg.value(metadata i16 %conv6, metadata !8067, metadata !DIExpression()), !dbg !8058
  store i16 %conv6, i16* bitcast (i8* getelementptr inbounds ([12 x i8], [12 x i8]* bitcast (%union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs to [12 x i8]*), i64 0, i64 4) to i16*), align 2, !dbg !8085
  %3 = load i8, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !8086
  %conv7 = zext i8 %3 to i32, !dbg !8087
  %and8 = and i32 %conv7, -113, !dbg !8088
  %conv9 = trunc i32 %and8 to i8, !dbg !8089
  store i8 %conv9, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !8090
  %conv10 = zext i16 %0 to i32, !dbg !8091
  %conv11 = zext i16 %conv6 to i32, !dbg !8093
  %cmp12 = icmp sgt i32 %conv10, %conv11, !dbg !8094
  br i1 %cmp12, label %if.then, label %if.end, !dbg !8095

if.then:                                          ; preds = %while_break
  %4 = load i8, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !8096
  %conv14 = zext i8 %4 to i32, !dbg !8098
  %or = or i32 %conv14, 16, !dbg !8099
  %conv15 = trunc i32 %or to i8, !dbg !8100
  store i8 %conv15, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !8101
  br label %if.end, !dbg !8102

if.end:                                           ; preds = %if.then, %while_break
  %conv16 = zext i16 %0 to i32, !dbg !8103
  %and17 = and i32 %conv16, 4095, !dbg !8105
  %conv18 = zext i16 %conv6 to i32, !dbg !8106
  %and19 = and i32 %conv18, 4095, !dbg !8107
  %cmp20 = icmp sgt i32 %and17, %and19, !dbg !8108
  br i1 %cmp20, label %if.then22, label %if.end26, !dbg !8109

if.then22:                                        ; preds = %if.end
  %5 = load i8, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !8110
  %conv23 = zext i8 %5 to i32, !dbg !8112
  %or24 = or i32 %conv23, 32, !dbg !8113
  %conv25 = trunc i32 %or24 to i8, !dbg !8114
  store i8 %conv25, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !8115
  br label %if.end26, !dbg !8116

if.end26:                                         ; preds = %if.then22, %if.end
  ret void, !dbg !8117
}

; Function Attrs: noinline nounwind ssp uwtable
define internal void @op_dec16(i32 %op, %struct.opinfo* %oi) #0 !dbg !8118 {
entry:
  call void @llvm.dbg.value(metadata i32 %op, metadata !8119, metadata !DIExpression()), !dbg !8120
  call void @llvm.dbg.value(metadata %struct.opinfo* %oi, metadata !8121, metadata !DIExpression()), !dbg !8120
  %shr = lshr i32 %op, 4, !dbg !8122
  %and = and i32 %shr, 3, !dbg !8124
  %conv = zext i32 %and to i64, !dbg !8125
  call void @llvm.dbg.value(metadata i64 %conv, metadata !8126, metadata !DIExpression()), !dbg !8120
  %mul = mul nsw i64 %conv, 2, !dbg !8127
  %arrayidx = getelementptr inbounds [12 x i8], [12 x i8]* bitcast (%union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs to [12 x i8]*), i64 0, i64 %mul, !dbg !8128
  %0 = bitcast i8* %arrayidx to i16*, !dbg !8129
  %1 = load i16, i16* %0, align 1, !dbg !8129
  call void @llvm.dbg.value(metadata i16 %1, metadata !8130, metadata !DIExpression()), !dbg !8120
  br label %while.body, !dbg !8131

while.body:                                       ; preds = %entry
  br label %while_continue___0, !dbg !8134

while_continue___0:                               ; preds = %while.body
  br label %while_continue, !dbg !8134

while_continue:                                   ; preds = %while_continue___0
  br label %while_break, !dbg !8135

while_break___0:                                  ; No predecessors!
  br label %while_break, !dbg !8137

while_break:                                      ; preds = %while_break___0, %while_continue
  %conv1 = zext i16 %1 to i32, !dbg !8138
  %sub = sub nsw i32 %conv1, 1, !dbg !8139
  %conv2 = trunc i32 %sub to i16, !dbg !8140
  call void @llvm.dbg.value(metadata i16 %conv2, metadata !8130, metadata !DIExpression()), !dbg !8120
  %mul3 = mul nsw i64 %conv, 2, !dbg !8141
  %arrayidx4 = getelementptr inbounds [12 x i8], [12 x i8]* bitcast (%union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs to [12 x i8]*), i64 0, i64 %mul3, !dbg !8142
  %2 = bitcast i8* %arrayidx4 to i16*, !dbg !8143
  store i16 %conv2, i16* %2, align 1, !dbg !8144
  ret void, !dbg !8145
}

; Function Attrs: noinline nounwind ssp uwtable
define internal void @op_rrca(i32 %op, %struct.opinfo* %oi) #0 !dbg !8146 {
entry:
  call void @llvm.dbg.value(metadata i32 %op, metadata !8147, metadata !DIExpression()), !dbg !8148
  call void @llvm.dbg.value(metadata %struct.opinfo* %oi, metadata !8149, metadata !DIExpression()), !dbg !8148
  br label %while.body, !dbg !8150

while.body:                                       ; preds = %entry
  br label %while_continue___0, !dbg !8154

while_continue___0:                               ; preds = %while.body
  br label %while_continue, !dbg !8154

while_continue:                                   ; preds = %while_continue___0
  br label %while_break, !dbg !8155

while_break___0:                                  ; No predecessors!
  br label %while_break, !dbg !8157

while_break:                                      ; preds = %while_break___0, %while_continue
  %0 = load i8, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 6), align 2, !dbg !8158
  call void @llvm.dbg.value(metadata i8 %0, metadata !8159, metadata !DIExpression()), !dbg !8148
  %conv = zext i8 %0 to i32, !dbg !8160
  %shr = ashr i32 %conv, 1, !dbg !8161
  %conv1 = trunc i32 %shr to i8, !dbg !8162
  call void @llvm.dbg.value(metadata i8 %conv1, metadata !8159, metadata !DIExpression()), !dbg !8148
  %conv2 = zext i8 %conv1 to i32, !dbg !8163
  %1 = load i8, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 6), align 2, !dbg !8164
  %conv3 = zext i8 %1 to i32, !dbg !8165
  %shl = shl i32 %conv3, 7, !dbg !8166
  %or = or i32 %conv2, %shl, !dbg !8167
  %conv4 = trunc i32 %or to i8, !dbg !8168
  call void @llvm.dbg.value(metadata i8 %conv4, metadata !8159, metadata !DIExpression()), !dbg !8148
  %2 = load i8, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 6), align 2, !dbg !8169
  %conv5 = zext i8 %2 to i32, !dbg !8170
  %and = and i32 %conv5, 1, !dbg !8171
  %shl6 = shl i32 %and, 4, !dbg !8172
  %conv7 = trunc i32 %shl6 to i8, !dbg !8173
  store i8 %conv7, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !8174
  %conv8 = zext i8 %conv4 to i32, !dbg !8175
  %cmp = icmp eq i32 %conv8, 0, !dbg !8177
  br i1 %cmp, label %if.then, label %if.end, !dbg !8178

if.then:                                          ; preds = %while_break
  %3 = load i8, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !8179
  %conv10 = zext i8 %3 to i32, !dbg !8181
  %or11 = or i32 %conv10, 128, !dbg !8182
  %conv12 = trunc i32 %or11 to i8, !dbg !8183
  store i8 %conv12, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !8184
  br label %if.end, !dbg !8185

if.end:                                           ; preds = %if.then, %while_break
  store i8 %conv4, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 6), align 2, !dbg !8186
  ret void, !dbg !8187
}

; Function Attrs: noinline nounwind ssp uwtable
define internal void @op_stop(i32 %op, %struct.opinfo* %oi) #0 !dbg !8188 {
entry:
  call void @llvm.dbg.value(metadata i32 %op, metadata !8189, metadata !DIExpression()), !dbg !8190
  call void @llvm.dbg.value(metadata %struct.opinfo* %oi, metadata !8191, metadata !DIExpression()), !dbg !8190
  br label %while.body, !dbg !8192

while.body:                                       ; preds = %entry
  br label %while_continue___0, !dbg !8196

while_continue___0:                               ; preds = %while.body
  br label %while_continue, !dbg !8196

while_continue:                                   ; preds = %while_continue___0
  br label %while_break, !dbg !8197

while_break___0:                                  ; No predecessors!
  br label %while_break, !dbg !8199

while_break:                                      ; preds = %while_break___0, %while_continue
  ret void, !dbg !8200
}

; Function Attrs: noinline nounwind ssp uwtable
define internal void @op_rla(i32 %op, %struct.opinfo* %oi) #0 !dbg !8201 {
entry:
  call void @llvm.dbg.value(metadata i32 %op, metadata !8202, metadata !DIExpression()), !dbg !8203
  call void @llvm.dbg.value(metadata %struct.opinfo* %oi, metadata !8204, metadata !DIExpression()), !dbg !8203
  br label %while.body, !dbg !8205

while.body:                                       ; preds = %entry
  br label %while_continue___0, !dbg !8209

while_continue___0:                               ; preds = %while.body
  br label %while_continue, !dbg !8209

while_continue:                                   ; preds = %while_continue___0
  br label %while_break, !dbg !8210

while_break___0:                                  ; No predecessors!
  br label %while_break, !dbg !8212

while_break:                                      ; preds = %while_break___0, %while_continue
  %0 = load i8, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 6), align 2, !dbg !8213
  call void @llvm.dbg.value(metadata i8 %0, metadata !8214, metadata !DIExpression()), !dbg !8203
  %conv = zext i8 %0 to i32, !dbg !8215
  %shl = shl i32 %conv, 1, !dbg !8216
  %conv1 = trunc i32 %shl to i8, !dbg !8217
  call void @llvm.dbg.value(metadata i8 %conv1, metadata !8214, metadata !DIExpression()), !dbg !8203
  %conv2 = zext i8 %conv1 to i32, !dbg !8218
  %1 = load i8, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !8219
  %conv3 = zext i8 %1 to i32, !dbg !8220
  %and = and i32 %conv3, 16, !dbg !8221
  %shr = ashr i32 %and, 4, !dbg !8222
  %or = or i32 %conv2, %shr, !dbg !8223
  %conv4 = trunc i32 %or to i8, !dbg !8224
  call void @llvm.dbg.value(metadata i8 %conv4, metadata !8214, metadata !DIExpression()), !dbg !8203
  %2 = load i8, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 6), align 2, !dbg !8225
  %conv5 = zext i8 %2 to i32, !dbg !8226
  %shr6 = ashr i32 %conv5, 7, !dbg !8227
  %shl7 = shl i32 %shr6, 4, !dbg !8228
  %conv8 = trunc i32 %shl7 to i8, !dbg !8229
  store i8 %conv8, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !8230
  %conv9 = zext i8 %conv4 to i32, !dbg !8231
  %cmp = icmp eq i32 %conv9, 0, !dbg !8233
  br i1 %cmp, label %if.then, label %if.end, !dbg !8234

if.then:                                          ; preds = %while_break
  %3 = load i8, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !8235
  %conv11 = zext i8 %3 to i32, !dbg !8237
  %or12 = or i32 %conv11, 128, !dbg !8238
  %conv13 = trunc i32 %or12 to i8, !dbg !8239
  store i8 %conv13, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !8240
  br label %if.end, !dbg !8241

if.end:                                           ; preds = %if.then, %while_break
  store i8 %conv4, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 6), align 2, !dbg !8242
  ret void, !dbg !8243
}

; Function Attrs: noinline nounwind ssp uwtable
define internal void @op_jr(i32 %op, %struct.opinfo* %oi) #0 !dbg !8244 {
entry:
  call void @llvm.dbg.value(metadata i32 %op, metadata !8245, metadata !DIExpression()), !dbg !8246
  call void @llvm.dbg.value(metadata %struct.opinfo* %oi, metadata !8247, metadata !DIExpression()), !dbg !8246
  %call = call i32 @get_imm8(), !dbg !8248
  call void @llvm.dbg.value(metadata i32 %call, metadata !8252, metadata !DIExpression()), !dbg !8246
  %conv = trunc i32 %call to i8, !dbg !8253
  %conv1 = sext i8 %conv to i16, !dbg !8254
  call void @llvm.dbg.value(metadata i16 %conv1, metadata !8255, metadata !DIExpression()), !dbg !8246
  %conv2 = sext i16 %conv1 to i32, !dbg !8256
  %cmp = icmp slt i32 %conv2, 0, !dbg !8258
  br i1 %cmp, label %if.then, label %if.else, !dbg !8259

if.then:                                          ; preds = %entry
  br label %while.body, !dbg !8260

while.body:                                       ; preds = %if.then
  br label %while_continue___1, !dbg !8264

while_continue___1:                               ; preds = %while.body
  br label %while_continue, !dbg !8264

while_continue:                                   ; preds = %while_continue___1
  br label %while_break, !dbg !8265

while_break___1:                                  ; No predecessors!
  br label %while_break, !dbg !8267

while_break:                                      ; preds = %while_break___1, %while_continue
  br label %if.end, !dbg !8268

if.else:                                          ; preds = %entry
  br label %while.body4, !dbg !8269

while.body4:                                      ; preds = %if.else
  br label %while_continue___2, !dbg !8273

while_continue___2:                               ; preds = %while.body4
  br label %while_continue___0, !dbg !8273

while_continue___0:                               ; preds = %while_continue___2
  br label %while_break___0, !dbg !8274

while_break___2:                                  ; No predecessors!
  br label %while_break___0, !dbg !8276

while_break___0:                                  ; preds = %while_break___2, %while_continue___0
  br label %if.end

if.end:                                           ; preds = %while_break___0, %while_break
  %0 = load i16, i16* bitcast (i8* getelementptr inbounds ([12 x i8], [12 x i8]* bitcast (%union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs to [12 x i8]*), i64 0, i64 10) to i16*), align 2, !dbg !8277
  %conv5 = zext i16 %0 to i32, !dbg !8278
  %conv6 = sext i16 %conv1 to i32, !dbg !8279
  %add = add nsw i32 %conv5, %conv6, !dbg !8280
  %conv7 = trunc i32 %add to i16, !dbg !8281
  store i16 %conv7, i16* bitcast (i8* getelementptr inbounds ([12 x i8], [12 x i8]* bitcast (%union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs to [12 x i8]*), i64 0, i64 10) to i16*), align 2, !dbg !8282
  ret void, !dbg !8283
}

; Function Attrs: noinline nounwind ssp uwtable
define internal void @op_rra(i32 %op, %struct.opinfo* %oi) #0 !dbg !8284 {
entry:
  call void @llvm.dbg.value(metadata i32 %op, metadata !8285, metadata !DIExpression()), !dbg !8286
  call void @llvm.dbg.value(metadata %struct.opinfo* %oi, metadata !8287, metadata !DIExpression()), !dbg !8286
  br label %while.body, !dbg !8288

while.body:                                       ; preds = %entry
  br label %while_continue___0, !dbg !8292

while_continue___0:                               ; preds = %while.body
  br label %while_continue, !dbg !8292

while_continue:                                   ; preds = %while_continue___0
  br label %while_break, !dbg !8293

while_break___0:                                  ; No predecessors!
  br label %while_break, !dbg !8295

while_break:                                      ; preds = %while_break___0, %while_continue
  %0 = load i8, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 6), align 2, !dbg !8296
  call void @llvm.dbg.value(metadata i8 %0, metadata !8297, metadata !DIExpression()), !dbg !8286
  %conv = zext i8 %0 to i32, !dbg !8298
  %shr = ashr i32 %conv, 1, !dbg !8299
  %conv1 = trunc i32 %shr to i8, !dbg !8300
  call void @llvm.dbg.value(metadata i8 %conv1, metadata !8297, metadata !DIExpression()), !dbg !8286
  %conv2 = zext i8 %conv1 to i32, !dbg !8301
  %1 = load i8, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !8302
  %conv3 = zext i8 %1 to i32, !dbg !8303
  %and = and i32 %conv3, 16, !dbg !8304
  %shl = shl i32 %and, 3, !dbg !8305
  %or = or i32 %conv2, %shl, !dbg !8306
  %conv4 = trunc i32 %or to i8, !dbg !8307
  call void @llvm.dbg.value(metadata i8 %conv4, metadata !8297, metadata !DIExpression()), !dbg !8286
  %2 = load i8, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 6), align 2, !dbg !8308
  %conv5 = zext i8 %2 to i32, !dbg !8309
  %and6 = and i32 %conv5, 1, !dbg !8310
  %shl7 = shl i32 %and6, 4, !dbg !8311
  %conv8 = trunc i32 %shl7 to i8, !dbg !8312
  store i8 %conv8, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !8313
  %conv9 = zext i8 %conv4 to i32, !dbg !8314
  %cmp = icmp eq i32 %conv9, 0, !dbg !8316
  br i1 %cmp, label %if.then, label %if.end, !dbg !8317

if.then:                                          ; preds = %while_break
  %3 = load i8, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !8318
  %conv11 = zext i8 %3 to i32, !dbg !8320
  %or12 = or i32 %conv11, 128, !dbg !8321
  %conv13 = trunc i32 %or12 to i8, !dbg !8322
  store i8 %conv13, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !8323
  br label %if.end, !dbg !8324

if.end:                                           ; preds = %if.then, %while_break
  store i8 %conv4, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 6), align 2, !dbg !8325
  ret void, !dbg !8326
}

; Function Attrs: noinline nounwind ssp uwtable
define internal void @op_jr_cond(i32 %op, %struct.opinfo* %oi) #0 !dbg !8327 {
entry:
  call void @llvm.dbg.value(metadata i32 %op, metadata !8328, metadata !DIExpression()), !dbg !8329
  call void @llvm.dbg.value(metadata %struct.opinfo* %oi, metadata !8330, metadata !DIExpression()), !dbg !8329
  %call = call i32 @get_imm8(), !dbg !8331
  call void @llvm.dbg.value(metadata i32 %call, metadata !8335, metadata !DIExpression()), !dbg !8329
  %conv = trunc i32 %call to i8, !dbg !8336
  %conv1 = sext i8 %conv to i16, !dbg !8337
  call void @llvm.dbg.value(metadata i16 %conv1, metadata !8338, metadata !DIExpression()), !dbg !8329
  %shr = lshr i32 %op, 3, !dbg !8339
  %and = and i32 %shr, 3, !dbg !8340
  %conv2 = zext i32 %and to i64, !dbg !8341
  call void @llvm.dbg.value(metadata i64 %conv2, metadata !8342, metadata !DIExpression()), !dbg !8329
  %conv3 = sext i16 %conv1 to i32, !dbg !8343
  %cmp = icmp slt i32 %conv3, 0, !dbg !8345
  br i1 %cmp, label %if.then, label %if.else, !dbg !8346

if.then:                                          ; preds = %entry
  br label %while.body, !dbg !8347

while.body:                                       ; preds = %if.then
  br label %while_continue___1, !dbg !8351

while_continue___1:                               ; preds = %while.body
  br label %while_continue, !dbg !8351

while_continue:                                   ; preds = %while_continue___1
  br label %while_break, !dbg !8352

while_break___1:                                  ; No predecessors!
  br label %while_break, !dbg !8354

while_break:                                      ; preds = %while_break___1, %while_continue
  br label %if.end, !dbg !8355

if.else:                                          ; preds = %entry
  br label %while.body5, !dbg !8356

while.body5:                                      ; preds = %if.else
  br label %while_continue___2, !dbg !8360

while_continue___2:                               ; preds = %while.body5
  br label %while_continue___0, !dbg !8360

while_continue___0:                               ; preds = %while_continue___2
  br label %while_break___0, !dbg !8361

while_break___2:                                  ; No predecessors!
  br label %while_break___0, !dbg !8363

while_break___0:                                  ; preds = %while_break___2, %while_continue___0
  br label %if.end

if.end:                                           ; preds = %while_break___0, %while_break
  %cmp6 = icmp eq i64 %conv2, 0, !dbg !8364
  br i1 %cmp6, label %if.then8, label %if.end9, !dbg !8367

if.then8:                                         ; preds = %if.end
  br label %case_0, !dbg !8368

if.end9:                                          ; preds = %if.end
  %cmp10 = icmp eq i64 %conv2, 1, !dbg !8370
  br i1 %cmp10, label %if.then12, label %if.end13, !dbg !8372

if.then12:                                        ; preds = %if.end9
  br label %case_1, !dbg !8373

if.end13:                                         ; preds = %if.end9
  %cmp14 = icmp eq i64 %conv2, 2, !dbg !8375
  br i1 %cmp14, label %if.then16, label %if.end17, !dbg !8377

if.then16:                                        ; preds = %if.end13
  br label %case_2, !dbg !8378

if.end17:                                         ; preds = %if.end13
  %cmp18 = icmp eq i64 %conv2, 3, !dbg !8380
  br i1 %cmp18, label %if.then20, label %if.end21, !dbg !8382

if.then20:                                        ; preds = %if.end17
  br label %case_3, !dbg !8383

if.end21:                                         ; preds = %if.end17
  br label %switch_break, !dbg !8385

case_0:                                           ; preds = %if.then8
  %0 = load i8, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !8386
  %conv22 = zext i8 %0 to i32, !dbg !8388
  %and23 = and i32 %conv22, 128, !dbg !8389
  %cmp24 = icmp ne i32 %and23, 0, !dbg !8390
  br i1 %cmp24, label %if.then26, label %if.end27, !dbg !8367

if.then26:                                        ; preds = %case_0
  br label %return, !dbg !8391

if.end27:                                         ; preds = %case_0
  br label %switch_break, !dbg !8393

case_1:                                           ; preds = %if.then12
  %1 = load i8, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !8394
  %conv28 = zext i8 %1 to i32, !dbg !8396
  %and29 = and i32 %conv28, 128, !dbg !8397
  %cmp30 = icmp eq i32 %and29, 0, !dbg !8398
  br i1 %cmp30, label %if.then32, label %if.end33, !dbg !8372

if.then32:                                        ; preds = %case_1
  br label %return, !dbg !8399

if.end33:                                         ; preds = %case_1
  br label %switch_break, !dbg !8401

case_2:                                           ; preds = %if.then16
  %2 = load i8, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !8402
  %conv34 = zext i8 %2 to i32, !dbg !8404
  %and35 = and i32 %conv34, 16, !dbg !8405
  %cmp36 = icmp ne i32 %and35, 0, !dbg !8406
  br i1 %cmp36, label %if.then38, label %if.end39, !dbg !8377

if.then38:                                        ; preds = %case_2
  br label %return, !dbg !8407

if.end39:                                         ; preds = %case_2
  br label %switch_break, !dbg !8409

case_3:                                           ; preds = %if.then20
  %3 = load i8, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !8410
  %conv40 = zext i8 %3 to i32, !dbg !8412
  %and41 = and i32 %conv40, 16, !dbg !8413
  %cmp42 = icmp eq i32 %and41, 0, !dbg !8414
  br i1 %cmp42, label %if.then44, label %if.end45, !dbg !8382

if.then44:                                        ; preds = %case_3
  br label %return, !dbg !8415

if.end45:                                         ; preds = %case_3
  br label %switch_break, !dbg !8417

switch_break:                                     ; preds = %if.end45, %if.end39, %if.end33, %if.end27, %if.end21
  %4 = load i16, i16* bitcast (i8* getelementptr inbounds ([12 x i8], [12 x i8]* bitcast (%union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs to [12 x i8]*), i64 0, i64 10) to i16*), align 2, !dbg !8418
  %conv46 = zext i16 %4 to i32, !dbg !8419
  %conv47 = sext i16 %conv1 to i32, !dbg !8420
  %add = add nsw i32 %conv46, %conv47, !dbg !8421
  %conv48 = trunc i32 %add to i16, !dbg !8422
  store i16 %conv48, i16* bitcast (i8* getelementptr inbounds ([12 x i8], [12 x i8]* bitcast (%union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs to [12 x i8]*), i64 0, i64 10) to i16*), align 2, !dbg !8423
  br label %return, !dbg !8424

return:                                           ; preds = %switch_break, %if.then44, %if.then38, %if.then32, %if.then26
  ret void, !dbg !8425
}

; Function Attrs: noinline nounwind ssp uwtable
define internal void @op_unknown(i32 %op, %struct.opinfo* %oi) #0 !dbg !8426 {
entry:
  call void @llvm.dbg.value(metadata i32 %op, metadata !8427, metadata !DIExpression()), !dbg !8428
  call void @llvm.dbg.value(metadata %struct.opinfo* %oi, metadata !8429, metadata !DIExpression()), !dbg !8428
  call void @llvm.dbg.declare(metadata !666, metadata !8430, metadata !DIExpression()), !dbg !8431
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !8432
  %conv = trunc i32 %op to i8, !dbg !8436
  %conv1 = zext i8 %conv to i32, !dbg !8437
  %call = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.61, i32 0, i32 0), i32 %conv1), !dbg !8438
  store i64 1, i64* @gbcpu_stopped, align 8, !dbg !8439
  ret void, !dbg !8440
}

; Function Attrs: noinline nounwind ssp uwtable
define internal void @op_cpl(i32 %op, %struct.opinfo* %oi) #0 !dbg !8441 {
entry:
  call void @llvm.dbg.value(metadata i32 %op, metadata !8442, metadata !DIExpression()), !dbg !8443
  call void @llvm.dbg.value(metadata %struct.opinfo* %oi, metadata !8444, metadata !DIExpression()), !dbg !8443
  br label %while.body, !dbg !8445

while.body:                                       ; preds = %entry
  br label %while_continue___0, !dbg !8449

while_continue___0:                               ; preds = %while.body
  br label %while_continue, !dbg !8449

while_continue:                                   ; preds = %while_continue___0
  br label %while_break, !dbg !8450

while_break___0:                                  ; No predecessors!
  br label %while_break, !dbg !8452

while_break:                                      ; preds = %while_break___0, %while_continue
  %0 = load i8, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 6), align 2, !dbg !8453
  %conv = zext i8 %0 to i32, !dbg !8454
  %neg = xor i32 %conv, -1, !dbg !8455
  %conv1 = trunc i32 %neg to i8, !dbg !8456
  store i8 %conv1, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 6), align 2, !dbg !8457
  %1 = load i8, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !8458
  %conv2 = zext i8 %1 to i32, !dbg !8459
  %or = or i32 %conv2, 96, !dbg !8460
  %conv3 = trunc i32 %or to i8, !dbg !8461
  store i8 %conv3, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !8462
  ret void, !dbg !8463
}

; Function Attrs: noinline nounwind ssp uwtable
define internal void @op_scf(i32 %op, %struct.opinfo* %oi) #0 !dbg !8464 {
entry:
  call void @llvm.dbg.value(metadata i32 %op, metadata !8465, metadata !DIExpression()), !dbg !8466
  call void @llvm.dbg.value(metadata %struct.opinfo* %oi, metadata !8467, metadata !DIExpression()), !dbg !8466
  br label %while.body, !dbg !8468

while.body:                                       ; preds = %entry
  br label %while_continue___0, !dbg !8472

while_continue___0:                               ; preds = %while.body
  br label %while_continue, !dbg !8472

while_continue:                                   ; preds = %while_continue___0
  br label %while_break, !dbg !8473

while_break___0:                                  ; No predecessors!
  br label %while_break, !dbg !8475

while_break:                                      ; preds = %while_break___0, %while_continue
  %0 = load i8, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !8476
  %conv = zext i8 %0 to i32, !dbg !8477
  %or = or i32 %conv, 16, !dbg !8478
  %conv1 = trunc i32 %or to i8, !dbg !8479
  store i8 %conv1, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !8480
  %1 = load i8, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !8481
  %conv2 = zext i8 %1 to i32, !dbg !8482
  %and = and i32 %conv2, -97, !dbg !8483
  %conv3 = trunc i32 %and to i8, !dbg !8484
  store i8 %conv3, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !8485
  ret void, !dbg !8486
}

; Function Attrs: noinline nounwind ssp uwtable
define internal void @op_ccf(i32 %op, %struct.opinfo* %oi) #0 !dbg !8487 {
entry:
  call void @llvm.dbg.value(metadata i32 %op, metadata !8488, metadata !DIExpression()), !dbg !8489
  call void @llvm.dbg.value(metadata %struct.opinfo* %oi, metadata !8490, metadata !DIExpression()), !dbg !8489
  br label %while.body, !dbg !8491

while.body:                                       ; preds = %entry
  br label %while_continue___0, !dbg !8495

while_continue___0:                               ; preds = %while.body
  br label %while_continue, !dbg !8495

while_continue:                                   ; preds = %while_continue___0
  br label %while_break, !dbg !8496

while_break___0:                                  ; No predecessors!
  br label %while_break, !dbg !8498

while_break:                                      ; preds = %while_break___0, %while_continue
  %0 = load i8, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !8499
  %conv = zext i8 %0 to i32, !dbg !8500
  %xor = xor i32 %conv, 16, !dbg !8501
  %conv1 = trunc i32 %xor to i8, !dbg !8502
  store i8 %conv1, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !8503
  %1 = load i8, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !8504
  %conv2 = zext i8 %1 to i32, !dbg !8505
  %and = and i32 %conv2, -97, !dbg !8506
  %conv3 = trunc i32 %and to i8, !dbg !8507
  store i8 %conv3, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !8508
  ret void, !dbg !8509
}

; Function Attrs: noinline nounwind ssp uwtable
define internal void @op_ld(i32 %op, %struct.opinfo* %oi) #0 !dbg !8510 {
entry:
  call void @llvm.dbg.value(metadata i32 %op, metadata !8511, metadata !DIExpression()), !dbg !8512
  call void @llvm.dbg.value(metadata %struct.opinfo* %oi, metadata !8513, metadata !DIExpression()), !dbg !8512
  %and = and i32 %op, 7, !dbg !8514
  %conv = zext i32 %and to i64, !dbg !8516
  call void @llvm.dbg.value(metadata i64 %conv, metadata !8517, metadata !DIExpression()), !dbg !8512
  %shr = lshr i32 %op, 3, !dbg !8518
  %and1 = and i32 %shr, 7, !dbg !8519
  %conv2 = zext i32 %and1 to i64, !dbg !8520
  call void @llvm.dbg.value(metadata i64 %conv2, metadata !8521, metadata !DIExpression()), !dbg !8512
  br label %while.body, !dbg !8522

while.body:                                       ; preds = %entry
  br label %while_continue___1, !dbg !8525

while_continue___1:                               ; preds = %while.body
  br label %while_continue, !dbg !8525

while_continue:                                   ; preds = %while_continue___1
  br label %while_break, !dbg !8526

while_break___1:                                  ; No predecessors!
  br label %while_break, !dbg !8528

while_break:                                      ; preds = %while_break___1, %while_continue
  call void @print_reg(i64 %conv2), !dbg !8529
  br label %while.body3, !dbg !8532

while.body3:                                      ; preds = %while_break
  br label %while_continue___2, !dbg !8535

while_continue___2:                               ; preds = %while.body3
  br label %while_continue___0, !dbg !8535

while_continue___0:                               ; preds = %while_continue___2
  br label %while_break___0, !dbg !8536

while_break___2:                                  ; No predecessors!
  br label %while_break___0, !dbg !8538

while_break___0:                                  ; preds = %while_break___2, %while_continue___0
  call void @print_reg(i64 %conv), !dbg !8539
  %call = call i32 @get_reg(i64 %conv), !dbg !8542
  call void @llvm.dbg.value(metadata i32 %call, metadata !8544, metadata !DIExpression()), !dbg !8512
  call void @put_reg(i64 %conv2, i32 %call), !dbg !8545
  ret void, !dbg !8547
}

; Function Attrs: noinline nounwind ssp uwtable
define internal void @op_halt(i32 %op, %struct.opinfo* %oi) #0 !dbg !8548 {
entry:
  call void @llvm.dbg.value(metadata i32 %op, metadata !8549, metadata !DIExpression()), !dbg !8550
  call void @llvm.dbg.value(metadata %struct.opinfo* %oi, metadata !8551, metadata !DIExpression()), !dbg !8550
  store i64 1, i64* @gbcpu_halted, align 8, !dbg !8552
  br label %while.body, !dbg !8554

while.body:                                       ; preds = %entry
  br label %while_continue___0, !dbg !8557

while_continue___0:                               ; preds = %while.body
  br label %while_continue, !dbg !8557

while_continue:                                   ; preds = %while_continue___0
  br label %while_break, !dbg !8558

while_break___0:                                  ; No predecessors!
  br label %while_break, !dbg !8560

while_break:                                      ; preds = %while_break___0, %while_continue
  ret void, !dbg !8561
}

; Function Attrs: noinline nounwind ssp uwtable
define internal void @op_add(i32 %op, %struct.opinfo* %oi) #0 !dbg !8562 {
entry:
  call void @llvm.dbg.value(metadata i32 %op, metadata !8563, metadata !DIExpression()), !dbg !8564
  call void @llvm.dbg.value(metadata %struct.opinfo* %oi, metadata !8565, metadata !DIExpression()), !dbg !8564
  %0 = load i8, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 6), align 2, !dbg !8566
  call void @llvm.dbg.value(metadata i8 %0, metadata !8568, metadata !DIExpression()), !dbg !8564
  br label %while.body, !dbg !8569

while.body:                                       ; preds = %entry
  br label %while_continue___0, !dbg !8572

while_continue___0:                               ; preds = %while.body
  br label %while_continue, !dbg !8572

while_continue:                                   ; preds = %while_continue___0
  br label %while_break, !dbg !8573

while_break___0:                                  ; No predecessors!
  br label %while_break, !dbg !8575

while_break:                                      ; preds = %while_break___0, %while_continue
  %and = and i32 %op, 7, !dbg !8576
  %conv = zext i32 %and to i64, !dbg !8579
  call void @print_reg(i64 %conv), !dbg !8580
  %and1 = and i32 %op, 7, !dbg !8581
  %conv2 = zext i32 %and1 to i64, !dbg !8583
  %call = call i32 @get_reg(i64 %conv2), !dbg !8584
  call void @llvm.dbg.value(metadata i32 %call, metadata !8585, metadata !DIExpression()), !dbg !8564
  %1 = load i8, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 6), align 2, !dbg !8586
  %conv3 = zext i8 %1 to i32, !dbg !8587
  %add = add i32 %conv3, %call, !dbg !8588
  %conv4 = trunc i32 %add to i8, !dbg !8589
  store i8 %conv4, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 6), align 2, !dbg !8590
  %2 = load i8, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 6), align 2, !dbg !8591
  call void @llvm.dbg.value(metadata i8 %2, metadata !8592, metadata !DIExpression()), !dbg !8564
  store i8 0, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !8593
  %conv5 = zext i8 %0 to i32, !dbg !8594
  %conv6 = zext i8 %2 to i32, !dbg !8596
  %cmp = icmp sgt i32 %conv5, %conv6, !dbg !8597
  br i1 %cmp, label %if.then, label %if.end, !dbg !8598

if.then:                                          ; preds = %while_break
  %3 = load i8, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !8599
  %conv8 = zext i8 %3 to i32, !dbg !8601
  %or = or i32 %conv8, 16, !dbg !8602
  %conv9 = trunc i32 %or to i8, !dbg !8603
  store i8 %conv9, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !8604
  br label %if.end, !dbg !8605

if.end:                                           ; preds = %if.then, %while_break
  %conv10 = zext i8 %0 to i32, !dbg !8606
  %and11 = and i32 %conv10, 15, !dbg !8608
  %conv12 = zext i8 %2 to i32, !dbg !8609
  %and13 = and i32 %conv12, 15, !dbg !8610
  %cmp14 = icmp sgt i32 %and11, %and13, !dbg !8611
  br i1 %cmp14, label %if.then16, label %if.end20, !dbg !8612

if.then16:                                        ; preds = %if.end
  %4 = load i8, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !8613
  %conv17 = zext i8 %4 to i32, !dbg !8615
  %or18 = or i32 %conv17, 32, !dbg !8616
  %conv19 = trunc i32 %or18 to i8, !dbg !8617
  store i8 %conv19, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !8618
  br label %if.end20, !dbg !8619

if.end20:                                         ; preds = %if.then16, %if.end
  %conv21 = zext i8 %2 to i32, !dbg !8620
  %cmp22 = icmp eq i32 %conv21, 0, !dbg !8622
  br i1 %cmp22, label %if.then24, label %if.end28, !dbg !8623

if.then24:                                        ; preds = %if.end20
  %5 = load i8, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !8624
  %conv25 = zext i8 %5 to i32, !dbg !8626
  %or26 = or i32 %conv25, 128, !dbg !8627
  %conv27 = trunc i32 %or26 to i8, !dbg !8628
  store i8 %conv27, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !8629
  br label %if.end28, !dbg !8630

if.end28:                                         ; preds = %if.then24, %if.end20
  ret void, !dbg !8631
}

; Function Attrs: noinline nounwind ssp uwtable
define internal void @op_adc(i32 %op, %struct.opinfo* %oi) #0 !dbg !8632 {
entry:
  call void @llvm.dbg.value(metadata i32 %op, metadata !8633, metadata !DIExpression()), !dbg !8634
  call void @llvm.dbg.value(metadata %struct.opinfo* %oi, metadata !8635, metadata !DIExpression()), !dbg !8634
  %0 = load i8, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 6), align 2, !dbg !8636
  call void @llvm.dbg.value(metadata i8 %0, metadata !8638, metadata !DIExpression()), !dbg !8634
  br label %while.body, !dbg !8639

while.body:                                       ; preds = %entry
  br label %while_continue___0, !dbg !8642

while_continue___0:                               ; preds = %while.body
  br label %while_continue, !dbg !8642

while_continue:                                   ; preds = %while_continue___0
  br label %while_break, !dbg !8643

while_break___0:                                  ; No predecessors!
  br label %while_break, !dbg !8645

while_break:                                      ; preds = %while_break___0, %while_continue
  %and = and i32 %op, 7, !dbg !8646
  %conv = zext i32 %and to i64, !dbg !8649
  call void @print_reg(i64 %conv), !dbg !8650
  %and1 = and i32 %op, 7, !dbg !8651
  %conv2 = zext i32 %and1 to i64, !dbg !8653
  %call = call i32 @get_reg(i64 %conv2), !dbg !8654
  call void @llvm.dbg.value(metadata i32 %call, metadata !8655, metadata !DIExpression()), !dbg !8634
  %1 = load i8, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 6), align 2, !dbg !8656
  %conv3 = zext i8 %1 to i32, !dbg !8657
  %add = add i32 %conv3, %call, !dbg !8658
  %conv4 = trunc i32 %add to i8, !dbg !8659
  store i8 %conv4, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 6), align 2, !dbg !8660
  %2 = load i8, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 6), align 2, !dbg !8661
  %conv5 = zext i8 %2 to i32, !dbg !8662
  %3 = load i8, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !8663
  %conv6 = zext i8 %3 to i32, !dbg !8664
  %and7 = and i32 %conv6, 16, !dbg !8665
  %cmp = icmp sgt i32 %and7, 0, !dbg !8666
  %conv8 = zext i1 %cmp to i32, !dbg !8666
  %add9 = add nsw i32 %conv5, %conv8, !dbg !8667
  %conv10 = trunc i32 %add9 to i8, !dbg !8668
  store i8 %conv10, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 6), align 2, !dbg !8669
  %4 = load i8, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !8670
  %conv11 = zext i8 %4 to i32, !dbg !8671
  %and12 = and i32 %conv11, -65, !dbg !8672
  %conv13 = trunc i32 %and12 to i8, !dbg !8673
  store i8 %conv13, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !8674
  %5 = load i8, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 6), align 2, !dbg !8675
  call void @llvm.dbg.value(metadata i8 %5, metadata !8676, metadata !DIExpression()), !dbg !8634
  %conv14 = zext i8 %0 to i32, !dbg !8677
  %conv15 = zext i8 %5 to i32, !dbg !8679
  %cmp16 = icmp sgt i32 %conv14, %conv15, !dbg !8680
  br i1 %cmp16, label %if.then, label %if.else, !dbg !8681

if.then:                                          ; preds = %while_break
  %6 = load i8, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !8682
  %conv18 = zext i8 %6 to i32, !dbg !8684
  %or = or i32 %conv18, 16, !dbg !8685
  %conv19 = trunc i32 %or to i8, !dbg !8686
  store i8 %conv19, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !8687
  br label %if.end, !dbg !8688

if.else:                                          ; preds = %while_break
  %7 = load i8, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !8689
  %conv20 = zext i8 %7 to i32, !dbg !8691
  %and21 = and i32 %conv20, -17, !dbg !8692
  %conv22 = trunc i32 %and21 to i8, !dbg !8693
  store i8 %conv22, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !8694
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %conv23 = zext i8 %0 to i32, !dbg !8695
  %and24 = and i32 %conv23, 15, !dbg !8697
  %conv25 = zext i8 %5 to i32, !dbg !8698
  %and26 = and i32 %conv25, 15, !dbg !8699
  %cmp27 = icmp sgt i32 %and24, %and26, !dbg !8700
  br i1 %cmp27, label %if.then29, label %if.else33, !dbg !8701

if.then29:                                        ; preds = %if.end
  %8 = load i8, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !8702
  %conv30 = zext i8 %8 to i32, !dbg !8704
  %or31 = or i32 %conv30, 32, !dbg !8705
  %conv32 = trunc i32 %or31 to i8, !dbg !8706
  store i8 %conv32, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !8707
  br label %if.end37, !dbg !8708

if.else33:                                        ; preds = %if.end
  %9 = load i8, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !8709
  %conv34 = zext i8 %9 to i32, !dbg !8711
  %and35 = and i32 %conv34, -33, !dbg !8712
  %conv36 = trunc i32 %and35 to i8, !dbg !8713
  store i8 %conv36, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !8714
  br label %if.end37

if.end37:                                         ; preds = %if.else33, %if.then29
  %conv38 = zext i8 %5 to i32, !dbg !8715
  %cmp39 = icmp eq i32 %conv38, 0, !dbg !8717
  br i1 %cmp39, label %if.then41, label %if.else45, !dbg !8718

if.then41:                                        ; preds = %if.end37
  %10 = load i8, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !8719
  %conv42 = zext i8 %10 to i32, !dbg !8721
  %or43 = or i32 %conv42, 128, !dbg !8722
  %conv44 = trunc i32 %or43 to i8, !dbg !8723
  store i8 %conv44, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !8724
  br label %if.end49, !dbg !8725

if.else45:                                        ; preds = %if.end37
  %11 = load i8, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !8726
  %conv46 = zext i8 %11 to i32, !dbg !8728
  %and47 = and i32 %conv46, -129, !dbg !8729
  %conv48 = trunc i32 %and47 to i8, !dbg !8730
  store i8 %conv48, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !8731
  br label %if.end49

if.end49:                                         ; preds = %if.else45, %if.then41
  ret void, !dbg !8732
}

; Function Attrs: noinline nounwind ssp uwtable
define internal void @op_sub(i32 %op, %struct.opinfo* %oi) #0 !dbg !8733 {
entry:
  call void @llvm.dbg.value(metadata i32 %op, metadata !8734, metadata !DIExpression()), !dbg !8735
  call void @llvm.dbg.value(metadata %struct.opinfo* %oi, metadata !8736, metadata !DIExpression()), !dbg !8735
  %0 = load i8, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 6), align 2, !dbg !8737
  call void @llvm.dbg.value(metadata i8 %0, metadata !8739, metadata !DIExpression()), !dbg !8735
  br label %while.body, !dbg !8740

while.body:                                       ; preds = %entry
  br label %while_continue___0, !dbg !8743

while_continue___0:                               ; preds = %while.body
  br label %while_continue, !dbg !8743

while_continue:                                   ; preds = %while_continue___0
  br label %while_break, !dbg !8744

while_break___0:                                  ; No predecessors!
  br label %while_break, !dbg !8746

while_break:                                      ; preds = %while_break___0, %while_continue
  %and = and i32 %op, 7, !dbg !8747
  %conv = zext i32 %and to i64, !dbg !8750
  call void @print_reg(i64 %conv), !dbg !8751
  %and1 = and i32 %op, 7, !dbg !8752
  %conv2 = zext i32 %and1 to i64, !dbg !8754
  %call = call i32 @get_reg(i64 %conv2), !dbg !8755
  call void @llvm.dbg.value(metadata i32 %call, metadata !8756, metadata !DIExpression()), !dbg !8735
  %1 = load i8, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 6), align 2, !dbg !8757
  %conv3 = zext i8 %1 to i32, !dbg !8758
  %sub = sub i32 %conv3, %call, !dbg !8759
  %conv4 = trunc i32 %sub to i8, !dbg !8760
  store i8 %conv4, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 6), align 2, !dbg !8761
  %2 = load i8, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 6), align 2, !dbg !8762
  call void @llvm.dbg.value(metadata i8 %2, metadata !8763, metadata !DIExpression()), !dbg !8735
  store i8 64, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !8764
  %conv5 = zext i8 %0 to i32, !dbg !8765
  %conv6 = zext i8 %2 to i32, !dbg !8767
  %cmp = icmp slt i32 %conv5, %conv6, !dbg !8768
  br i1 %cmp, label %if.then, label %if.end, !dbg !8769

if.then:                                          ; preds = %while_break
  %3 = load i8, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !8770
  %conv8 = zext i8 %3 to i32, !dbg !8772
  %or = or i32 %conv8, 16, !dbg !8773
  %conv9 = trunc i32 %or to i8, !dbg !8774
  store i8 %conv9, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !8775
  br label %if.end, !dbg !8776

if.end:                                           ; preds = %if.then, %while_break
  %conv10 = zext i8 %0 to i32, !dbg !8777
  %and11 = and i32 %conv10, 15, !dbg !8779
  %conv12 = zext i8 %2 to i32, !dbg !8780
  %and13 = and i32 %conv12, 15, !dbg !8781
  %cmp14 = icmp slt i32 %and11, %and13, !dbg !8782
  br i1 %cmp14, label %if.then16, label %if.end20, !dbg !8783

if.then16:                                        ; preds = %if.end
  %4 = load i8, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !8784
  %conv17 = zext i8 %4 to i32, !dbg !8786
  %or18 = or i32 %conv17, 32, !dbg !8787
  %conv19 = trunc i32 %or18 to i8, !dbg !8788
  store i8 %conv19, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !8789
  br label %if.end20, !dbg !8790

if.end20:                                         ; preds = %if.then16, %if.end
  %conv21 = zext i8 %2 to i32, !dbg !8791
  %cmp22 = icmp eq i32 %conv21, 0, !dbg !8793
  br i1 %cmp22, label %if.then24, label %if.end28, !dbg !8794

if.then24:                                        ; preds = %if.end20
  %5 = load i8, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !8795
  %conv25 = zext i8 %5 to i32, !dbg !8797
  %or26 = or i32 %conv25, 128, !dbg !8798
  %conv27 = trunc i32 %or26 to i8, !dbg !8799
  store i8 %conv27, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !8800
  br label %if.end28, !dbg !8801

if.end28:                                         ; preds = %if.then24, %if.end20
  ret void, !dbg !8802
}

; Function Attrs: noinline nounwind ssp uwtable
define internal void @op_sbc(i32 %op, %struct.opinfo* %oi) #0 !dbg !8803 {
entry:
  call void @llvm.dbg.value(metadata i32 %op, metadata !8804, metadata !DIExpression()), !dbg !8805
  call void @llvm.dbg.value(metadata %struct.opinfo* %oi, metadata !8806, metadata !DIExpression()), !dbg !8805
  %0 = load i8, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 6), align 2, !dbg !8807
  call void @llvm.dbg.value(metadata i8 %0, metadata !8809, metadata !DIExpression()), !dbg !8805
  br label %while.body, !dbg !8810

while.body:                                       ; preds = %entry
  br label %while_continue___0, !dbg !8813

while_continue___0:                               ; preds = %while.body
  br label %while_continue, !dbg !8813

while_continue:                                   ; preds = %while_continue___0
  br label %while_break, !dbg !8814

while_break___0:                                  ; No predecessors!
  br label %while_break, !dbg !8816

while_break:                                      ; preds = %while_break___0, %while_continue
  %and = and i32 %op, 7, !dbg !8817
  %conv = zext i32 %and to i64, !dbg !8820
  call void @print_reg(i64 %conv), !dbg !8821
  %and1 = and i32 %op, 7, !dbg !8822
  %conv2 = zext i32 %and1 to i64, !dbg !8824
  %call = call i32 @get_reg(i64 %conv2), !dbg !8825
  call void @llvm.dbg.value(metadata i32 %call, metadata !8826, metadata !DIExpression()), !dbg !8805
  %1 = load i8, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 6), align 2, !dbg !8827
  %conv3 = zext i8 %1 to i32, !dbg !8828
  %sub = sub i32 %conv3, %call, !dbg !8829
  %conv4 = trunc i32 %sub to i8, !dbg !8830
  store i8 %conv4, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 6), align 2, !dbg !8831
  %2 = load i8, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 6), align 2, !dbg !8832
  %conv5 = zext i8 %2 to i32, !dbg !8833
  %3 = load i8, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !8834
  %conv6 = zext i8 %3 to i32, !dbg !8835
  %and7 = and i32 %conv6, 16, !dbg !8836
  %cmp = icmp sgt i32 %and7, 0, !dbg !8837
  %conv8 = zext i1 %cmp to i32, !dbg !8837
  %sub9 = sub nsw i32 %conv5, %conv8, !dbg !8838
  %conv10 = trunc i32 %sub9 to i8, !dbg !8839
  store i8 %conv10, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 6), align 2, !dbg !8840
  %4 = load i8, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 6), align 2, !dbg !8841
  call void @llvm.dbg.value(metadata i8 %4, metadata !8842, metadata !DIExpression()), !dbg !8805
  store i8 64, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !8843
  %conv11 = zext i8 %0 to i32, !dbg !8844
  %conv12 = zext i8 %4 to i32, !dbg !8846
  %cmp13 = icmp slt i32 %conv11, %conv12, !dbg !8847
  br i1 %cmp13, label %if.then, label %if.end, !dbg !8848

if.then:                                          ; preds = %while_break
  %5 = load i8, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !8849
  %conv15 = zext i8 %5 to i32, !dbg !8851
  %or = or i32 %conv15, 16, !dbg !8852
  %conv16 = trunc i32 %or to i8, !dbg !8853
  store i8 %conv16, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !8854
  br label %if.end, !dbg !8855

if.end:                                           ; preds = %if.then, %while_break
  %conv17 = zext i8 %0 to i32, !dbg !8856
  %and18 = and i32 %conv17, 15, !dbg !8858
  %conv19 = zext i8 %4 to i32, !dbg !8859
  %and20 = and i32 %conv19, 15, !dbg !8860
  %cmp21 = icmp slt i32 %and18, %and20, !dbg !8861
  br i1 %cmp21, label %if.then23, label %if.end27, !dbg !8862

if.then23:                                        ; preds = %if.end
  %6 = load i8, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !8863
  %conv24 = zext i8 %6 to i32, !dbg !8865
  %or25 = or i32 %conv24, 32, !dbg !8866
  %conv26 = trunc i32 %or25 to i8, !dbg !8867
  store i8 %conv26, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !8868
  br label %if.end27, !dbg !8869

if.end27:                                         ; preds = %if.then23, %if.end
  %conv28 = zext i8 %4 to i32, !dbg !8870
  %cmp29 = icmp eq i32 %conv28, 0, !dbg !8872
  br i1 %cmp29, label %if.then31, label %if.end35, !dbg !8873

if.then31:                                        ; preds = %if.end27
  %7 = load i8, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !8874
  %conv32 = zext i8 %7 to i32, !dbg !8876
  %or33 = or i32 %conv32, 128, !dbg !8877
  %conv34 = trunc i32 %or33 to i8, !dbg !8878
  store i8 %conv34, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !8879
  br label %if.end35, !dbg !8880

if.end35:                                         ; preds = %if.then31, %if.end27
  ret void, !dbg !8881
}

; Function Attrs: noinline nounwind ssp uwtable
define internal void @op_and(i32 %op, %struct.opinfo* %oi) #0 !dbg !8882 {
entry:
  call void @llvm.dbg.value(metadata i32 %op, metadata !8883, metadata !DIExpression()), !dbg !8884
  call void @llvm.dbg.value(metadata %struct.opinfo* %oi, metadata !8885, metadata !DIExpression()), !dbg !8884
  br label %while.body, !dbg !8886

while.body:                                       ; preds = %entry
  br label %while_continue___0, !dbg !8890

while_continue___0:                               ; preds = %while.body
  br label %while_continue, !dbg !8890

while_continue:                                   ; preds = %while_continue___0
  br label %while_break, !dbg !8891

while_break___0:                                  ; No predecessors!
  br label %while_break, !dbg !8893

while_break:                                      ; preds = %while_break___0, %while_continue
  %and = and i32 %op, 7, !dbg !8894
  %conv = zext i32 %and to i64, !dbg !8897
  call void @print_reg(i64 %conv), !dbg !8898
  %and1 = and i32 %op, 7, !dbg !8899
  %conv2 = zext i32 %and1 to i64, !dbg !8901
  %call = call i32 @get_reg(i64 %conv2), !dbg !8902
  call void @llvm.dbg.value(metadata i32 %call, metadata !8903, metadata !DIExpression()), !dbg !8884
  %0 = load i8, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 6), align 2, !dbg !8904
  %conv3 = zext i8 %0 to i32, !dbg !8905
  %and4 = and i32 %conv3, %call, !dbg !8906
  %conv5 = trunc i32 %and4 to i8, !dbg !8907
  store i8 %conv5, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 6), align 2, !dbg !8908
  store i8 32, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !8909
  %1 = load i8, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 6), align 2, !dbg !8910
  %conv6 = zext i8 %1 to i32, !dbg !8912
  %cmp = icmp eq i32 %conv6, 0, !dbg !8913
  br i1 %cmp, label %if.then, label %if.end, !dbg !8914

if.then:                                          ; preds = %while_break
  %2 = load i8, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !8915
  %conv8 = zext i8 %2 to i32, !dbg !8917
  %or = or i32 %conv8, 128, !dbg !8918
  %conv9 = trunc i32 %or to i8, !dbg !8919
  store i8 %conv9, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !8920
  br label %if.end, !dbg !8921

if.end:                                           ; preds = %if.then, %while_break
  ret void, !dbg !8922
}

; Function Attrs: noinline nounwind ssp uwtable
define internal void @op_xor(i32 %op, %struct.opinfo* %oi) #0 !dbg !8923 {
entry:
  call void @llvm.dbg.value(metadata i32 %op, metadata !8924, metadata !DIExpression()), !dbg !8925
  call void @llvm.dbg.value(metadata %struct.opinfo* %oi, metadata !8926, metadata !DIExpression()), !dbg !8925
  br label %while.body, !dbg !8927

while.body:                                       ; preds = %entry
  br label %while_continue___0, !dbg !8931

while_continue___0:                               ; preds = %while.body
  br label %while_continue, !dbg !8931

while_continue:                                   ; preds = %while_continue___0
  br label %while_break, !dbg !8932

while_break___0:                                  ; No predecessors!
  br label %while_break, !dbg !8934

while_break:                                      ; preds = %while_break___0, %while_continue
  %and = and i32 %op, 7, !dbg !8935
  %conv = zext i32 %and to i64, !dbg !8938
  call void @print_reg(i64 %conv), !dbg !8939
  %and1 = and i32 %op, 7, !dbg !8940
  %conv2 = zext i32 %and1 to i64, !dbg !8942
  %call = call i32 @get_reg(i64 %conv2), !dbg !8943
  call void @llvm.dbg.value(metadata i32 %call, metadata !8944, metadata !DIExpression()), !dbg !8925
  %0 = load i8, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 6), align 2, !dbg !8945
  %conv3 = zext i8 %0 to i32, !dbg !8946
  %xor = xor i32 %conv3, %call, !dbg !8947
  %conv4 = trunc i32 %xor to i8, !dbg !8948
  store i8 %conv4, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 6), align 2, !dbg !8949
  store i8 0, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !8950
  %1 = load i8, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 6), align 2, !dbg !8951
  %conv5 = zext i8 %1 to i32, !dbg !8953
  %cmp = icmp eq i32 %conv5, 0, !dbg !8954
  br i1 %cmp, label %if.then, label %if.end, !dbg !8955

if.then:                                          ; preds = %while_break
  %2 = load i8, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !8956
  %conv7 = zext i8 %2 to i32, !dbg !8958
  %or = or i32 %conv7, 128, !dbg !8959
  %conv8 = trunc i32 %or to i8, !dbg !8960
  store i8 %conv8, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !8961
  br label %if.end, !dbg !8962

if.end:                                           ; preds = %if.then, %while_break
  ret void, !dbg !8963
}

; Function Attrs: noinline nounwind ssp uwtable
define internal void @op_or(i32 %op, %struct.opinfo* %oi) #0 !dbg !8964 {
entry:
  call void @llvm.dbg.value(metadata i32 %op, metadata !8965, metadata !DIExpression()), !dbg !8966
  call void @llvm.dbg.value(metadata %struct.opinfo* %oi, metadata !8967, metadata !DIExpression()), !dbg !8966
  br label %while.body, !dbg !8968

while.body:                                       ; preds = %entry
  br label %while_continue___0, !dbg !8972

while_continue___0:                               ; preds = %while.body
  br label %while_continue, !dbg !8972

while_continue:                                   ; preds = %while_continue___0
  br label %while_break, !dbg !8973

while_break___0:                                  ; No predecessors!
  br label %while_break, !dbg !8975

while_break:                                      ; preds = %while_break___0, %while_continue
  %and = and i32 %op, 7, !dbg !8976
  %conv = zext i32 %and to i64, !dbg !8979
  call void @print_reg(i64 %conv), !dbg !8980
  %and1 = and i32 %op, 7, !dbg !8981
  %conv2 = zext i32 %and1 to i64, !dbg !8983
  %call = call i32 @get_reg(i64 %conv2), !dbg !8984
  call void @llvm.dbg.value(metadata i32 %call, metadata !8985, metadata !DIExpression()), !dbg !8966
  %0 = load i8, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 6), align 2, !dbg !8986
  %conv3 = zext i8 %0 to i32, !dbg !8987
  %or = or i32 %conv3, %call, !dbg !8988
  %conv4 = trunc i32 %or to i8, !dbg !8989
  store i8 %conv4, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 6), align 2, !dbg !8990
  store i8 0, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !8991
  %1 = load i8, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 6), align 2, !dbg !8992
  %conv5 = zext i8 %1 to i32, !dbg !8994
  %cmp = icmp eq i32 %conv5, 0, !dbg !8995
  br i1 %cmp, label %if.then, label %if.end, !dbg !8996

if.then:                                          ; preds = %while_break
  %2 = load i8, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !8997
  %conv7 = zext i8 %2 to i32, !dbg !8999
  %or8 = or i32 %conv7, 128, !dbg !9000
  %conv9 = trunc i32 %or8 to i8, !dbg !9001
  store i8 %conv9, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !9002
  br label %if.end, !dbg !9003

if.end:                                           ; preds = %if.then, %while_break
  ret void, !dbg !9004
}

; Function Attrs: noinline nounwind ssp uwtable
define internal void @op_cp(i32 %op, %struct.opinfo* %oi) #0 !dbg !9005 {
entry:
  call void @llvm.dbg.value(metadata i32 %op, metadata !9006, metadata !DIExpression()), !dbg !9007
  call void @llvm.dbg.value(metadata %struct.opinfo* %oi, metadata !9008, metadata !DIExpression()), !dbg !9007
  %0 = load i8, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 6), align 2, !dbg !9009
  call void @llvm.dbg.value(metadata i8 %0, metadata !9011, metadata !DIExpression()), !dbg !9007
  call void @llvm.dbg.value(metadata i8 %0, metadata !9012, metadata !DIExpression()), !dbg !9007
  br label %while.body, !dbg !9013

while.body:                                       ; preds = %entry
  br label %while_continue___0, !dbg !9016

while_continue___0:                               ; preds = %while.body
  br label %while_continue, !dbg !9016

while_continue:                                   ; preds = %while_continue___0
  br label %while_break, !dbg !9017

while_break___0:                                  ; No predecessors!
  br label %while_break, !dbg !9019

while_break:                                      ; preds = %while_break___0, %while_continue
  %and = and i32 %op, 7, !dbg !9020
  %conv = zext i32 %and to i64, !dbg !9023
  call void @print_reg(i64 %conv), !dbg !9024
  %and1 = and i32 %op, 7, !dbg !9025
  %conv2 = zext i32 %and1 to i64, !dbg !9027
  %call = call i32 @get_reg(i64 %conv2), !dbg !9028
  call void @llvm.dbg.value(metadata i32 %call, metadata !9029, metadata !DIExpression()), !dbg !9007
  %conv3 = zext i8 %0 to i32, !dbg !9030
  %sub = sub i32 %conv3, %call, !dbg !9031
  %conv4 = trunc i32 %sub to i8, !dbg !9032
  call void @llvm.dbg.value(metadata i8 %conv4, metadata !9012, metadata !DIExpression()), !dbg !9007
  store i8 64, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !9033
  %conv5 = zext i8 %0 to i32, !dbg !9034
  %conv6 = zext i8 %conv4 to i32, !dbg !9036
  %cmp = icmp slt i32 %conv5, %conv6, !dbg !9037
  br i1 %cmp, label %if.then, label %if.end, !dbg !9038

if.then:                                          ; preds = %while_break
  %1 = load i8, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !9039
  %conv8 = zext i8 %1 to i32, !dbg !9041
  %or = or i32 %conv8, 16, !dbg !9042
  %conv9 = trunc i32 %or to i8, !dbg !9043
  store i8 %conv9, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !9044
  br label %if.end, !dbg !9045

if.end:                                           ; preds = %if.then, %while_break
  %conv10 = zext i8 %0 to i32, !dbg !9046
  %and11 = and i32 %conv10, 15, !dbg !9048
  %conv12 = zext i8 %conv4 to i32, !dbg !9049
  %and13 = and i32 %conv12, 15, !dbg !9050
  %cmp14 = icmp slt i32 %and11, %and13, !dbg !9051
  br i1 %cmp14, label %if.then16, label %if.end20, !dbg !9052

if.then16:                                        ; preds = %if.end
  %2 = load i8, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !9053
  %conv17 = zext i8 %2 to i32, !dbg !9055
  %or18 = or i32 %conv17, 32, !dbg !9056
  %conv19 = trunc i32 %or18 to i8, !dbg !9057
  store i8 %conv19, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !9058
  br label %if.end20, !dbg !9059

if.end20:                                         ; preds = %if.then16, %if.end
  %conv21 = zext i8 %conv4 to i32, !dbg !9060
  %cmp22 = icmp eq i32 %conv21, 0, !dbg !9062
  br i1 %cmp22, label %if.then24, label %if.end28, !dbg !9063

if.then24:                                        ; preds = %if.end20
  %3 = load i8, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !9064
  %conv25 = zext i8 %3 to i32, !dbg !9066
  %or26 = or i32 %conv25, 128, !dbg !9067
  %conv27 = trunc i32 %or26 to i8, !dbg !9068
  store i8 %conv27, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !9069
  br label %if.end28, !dbg !9070

if.end28:                                         ; preds = %if.then24, %if.end20
  ret void, !dbg !9071
}

; Function Attrs: noinline nounwind ssp uwtable
define internal void @op_ret_cond(i32 %op, %struct.opinfo* %oi) #0 !dbg !9072 {
entry:
  call void @llvm.dbg.value(metadata i32 %op, metadata !9073, metadata !DIExpression()), !dbg !9074
  call void @llvm.dbg.value(metadata %struct.opinfo* %oi, metadata !9075, metadata !DIExpression()), !dbg !9074
  %shr = lshr i32 %op, 3, !dbg !9076
  %and = and i32 %shr, 3, !dbg !9078
  %conv = zext i32 %and to i64, !dbg !9079
  call void @llvm.dbg.value(metadata i64 %conv, metadata !9080, metadata !DIExpression()), !dbg !9074
  br label %while.body, !dbg !9081

while.body:                                       ; preds = %entry
  br label %while_continue___0, !dbg !9084

while_continue___0:                               ; preds = %while.body
  br label %while_continue, !dbg !9084

while_continue:                                   ; preds = %while_continue___0
  br label %while_break, !dbg !9085

while_break___0:                                  ; No predecessors!
  br label %while_break, !dbg !9087

while_break:                                      ; preds = %while_break___0, %while_continue
  %cmp = icmp eq i64 %conv, 0, !dbg !9088
  br i1 %cmp, label %if.then, label %if.end, !dbg !9091

if.then:                                          ; preds = %while_break
  br label %case_0, !dbg !9092

if.end:                                           ; preds = %while_break
  %cmp2 = icmp eq i64 %conv, 1, !dbg !9094
  br i1 %cmp2, label %if.then4, label %if.end5, !dbg !9096

if.then4:                                         ; preds = %if.end
  br label %case_1, !dbg !9097

if.end5:                                          ; preds = %if.end
  %cmp6 = icmp eq i64 %conv, 2, !dbg !9099
  br i1 %cmp6, label %if.then8, label %if.end9, !dbg !9101

if.then8:                                         ; preds = %if.end5
  br label %case_2, !dbg !9102

if.end9:                                          ; preds = %if.end5
  %cmp10 = icmp eq i64 %conv, 3, !dbg !9104
  br i1 %cmp10, label %if.then12, label %if.end13, !dbg !9106

if.then12:                                        ; preds = %if.end9
  br label %case_3, !dbg !9107

if.end13:                                         ; preds = %if.end9
  br label %switch_break, !dbg !9109

case_0:                                           ; preds = %if.then
  %0 = load i8, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !9110
  %conv14 = zext i8 %0 to i32, !dbg !9112
  %and15 = and i32 %conv14, 128, !dbg !9113
  %cmp16 = icmp ne i32 %and15, 0, !dbg !9114
  br i1 %cmp16, label %if.then18, label %if.end19, !dbg !9091

if.then18:                                        ; preds = %case_0
  br label %return, !dbg !9115

if.end19:                                         ; preds = %case_0
  br label %switch_break, !dbg !9117

case_1:                                           ; preds = %if.then4
  %1 = load i8, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !9118
  %conv20 = zext i8 %1 to i32, !dbg !9120
  %and21 = and i32 %conv20, 128, !dbg !9121
  %cmp22 = icmp eq i32 %and21, 0, !dbg !9122
  br i1 %cmp22, label %if.then24, label %if.end25, !dbg !9096

if.then24:                                        ; preds = %case_1
  br label %return, !dbg !9123

if.end25:                                         ; preds = %case_1
  br label %switch_break, !dbg !9125

case_2:                                           ; preds = %if.then8
  %2 = load i8, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !9126
  %conv26 = zext i8 %2 to i32, !dbg !9128
  %and27 = and i32 %conv26, 16, !dbg !9129
  %cmp28 = icmp ne i32 %and27, 0, !dbg !9130
  br i1 %cmp28, label %if.then30, label %if.end31, !dbg !9101

if.then30:                                        ; preds = %case_2
  br label %return, !dbg !9131

if.end31:                                         ; preds = %case_2
  br label %switch_break, !dbg !9133

case_3:                                           ; preds = %if.then12
  %3 = load i8, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !9134
  %conv32 = zext i8 %3 to i32, !dbg !9136
  %and33 = and i32 %conv32, 16, !dbg !9137
  %cmp34 = icmp eq i32 %and33, 0, !dbg !9138
  br i1 %cmp34, label %if.then36, label %if.end37, !dbg !9106

if.then36:                                        ; preds = %case_3
  br label %return, !dbg !9139

if.end37:                                         ; preds = %case_3
  br label %switch_break, !dbg !9141

switch_break:                                     ; preds = %if.end37, %if.end31, %if.end25, %if.end19, %if.end13
  %call = call i32 @pop(), !dbg !9142
  call void @llvm.dbg.value(metadata i32 %call, metadata !9145, metadata !DIExpression()), !dbg !9074
  %conv38 = trunc i32 %call to i16, !dbg !9146
  store i16 %conv38, i16* bitcast (i8* getelementptr inbounds ([12 x i8], [12 x i8]* bitcast (%union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs to [12 x i8]*), i64 0, i64 10) to i16*), align 2, !dbg !9147
  br label %return, !dbg !9148

return:                                           ; preds = %switch_break, %if.then36, %if.then30, %if.then24, %if.then18
  ret void, !dbg !9149
}

; Function Attrs: noinline nounwind ssp uwtable
define internal void @op_pop(i32 %op, %struct.opinfo* %oi) #0 !dbg !9150 {
entry:
  call void @llvm.dbg.value(metadata i32 %op, metadata !9151, metadata !DIExpression()), !dbg !9152
  call void @llvm.dbg.value(metadata %struct.opinfo* %oi, metadata !9153, metadata !DIExpression()), !dbg !9152
  %shr = lshr i32 %op, 4, !dbg !9154
  %and = and i32 %shr, 3, !dbg !9157
  %conv = zext i32 %and to i64, !dbg !9158
  call void @llvm.dbg.value(metadata i64 %conv, metadata !9159, metadata !DIExpression()), !dbg !9152
  %call = call i32 @pop(), !dbg !9160
  call void @llvm.dbg.value(metadata i32 %call, metadata !9162, metadata !DIExpression()), !dbg !9152
  %conv1 = trunc i32 %call to i16, !dbg !9163
  %mul = mul nsw i64 %conv, 2, !dbg !9164
  %arrayidx = getelementptr inbounds [12 x i8], [12 x i8]* bitcast (%union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs to [12 x i8]*), i64 0, i64 %mul, !dbg !9165
  %0 = bitcast i8* %arrayidx to i16*, !dbg !9166
  store i16 %conv1, i16* %0, align 1, !dbg !9167
  br label %while.body, !dbg !9168

while.body:                                       ; preds = %entry
  br label %while_continue___0, !dbg !9171

while_continue___0:                               ; preds = %while.body
  br label %while_continue, !dbg !9171

while_continue:                                   ; preds = %while_continue___0
  br label %while_break, !dbg !9172

while_break___0:                                  ; No predecessors!
  br label %while_break, !dbg !9174

while_break:                                      ; preds = %while_break___0, %while_continue
  ret void, !dbg !9175
}

; Function Attrs: noinline nounwind ssp uwtable
define internal void @op_jp_cond(i32 %op, %struct.opinfo* %oi) #0 !dbg !9176 {
entry:
  call void @llvm.dbg.value(metadata i32 %op, metadata !9177, metadata !DIExpression()), !dbg !9178
  call void @llvm.dbg.value(metadata %struct.opinfo* %oi, metadata !9179, metadata !DIExpression()), !dbg !9178
  %call = call i32 @get_imm16(), !dbg !9180
  call void @llvm.dbg.value(metadata i32 %call, metadata !9184, metadata !DIExpression()), !dbg !9178
  %conv = trunc i32 %call to i16, !dbg !9185
  call void @llvm.dbg.value(metadata i16 %conv, metadata !9186, metadata !DIExpression()), !dbg !9178
  %shr = lshr i32 %op, 3, !dbg !9187
  %and = and i32 %shr, 3, !dbg !9188
  %conv1 = zext i32 %and to i64, !dbg !9189
  call void @llvm.dbg.value(metadata i64 %conv1, metadata !9190, metadata !DIExpression()), !dbg !9178
  br label %while.body, !dbg !9191

while.body:                                       ; preds = %entry
  br label %while_continue___0, !dbg !9194

while_continue___0:                               ; preds = %while.body
  br label %while_continue, !dbg !9194

while_continue:                                   ; preds = %while_continue___0
  br label %while_break, !dbg !9195

while_break___0:                                  ; No predecessors!
  br label %while_break, !dbg !9197

while_break:                                      ; preds = %while_break___0, %while_continue
  %cmp = icmp eq i64 %conv1, 0, !dbg !9198
  br i1 %cmp, label %if.then, label %if.end, !dbg !9201

if.then:                                          ; preds = %while_break
  br label %case_0, !dbg !9202

if.end:                                           ; preds = %while_break
  %cmp3 = icmp eq i64 %conv1, 1, !dbg !9204
  br i1 %cmp3, label %if.then5, label %if.end6, !dbg !9206

if.then5:                                         ; preds = %if.end
  br label %case_1, !dbg !9207

if.end6:                                          ; preds = %if.end
  %cmp7 = icmp eq i64 %conv1, 2, !dbg !9209
  br i1 %cmp7, label %if.then9, label %if.end10, !dbg !9211

if.then9:                                         ; preds = %if.end6
  br label %case_2, !dbg !9212

if.end10:                                         ; preds = %if.end6
  %cmp11 = icmp eq i64 %conv1, 3, !dbg !9214
  br i1 %cmp11, label %if.then13, label %if.end14, !dbg !9216

if.then13:                                        ; preds = %if.end10
  br label %case_3, !dbg !9217

if.end14:                                         ; preds = %if.end10
  br label %switch_break, !dbg !9219

case_0:                                           ; preds = %if.then
  %0 = load i8, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !9220
  %conv15 = zext i8 %0 to i32, !dbg !9222
  %and16 = and i32 %conv15, 128, !dbg !9223
  %cmp17 = icmp ne i32 %and16, 0, !dbg !9224
  br i1 %cmp17, label %if.then19, label %if.end20, !dbg !9201

if.then19:                                        ; preds = %case_0
  br label %return, !dbg !9225

if.end20:                                         ; preds = %case_0
  br label %switch_break, !dbg !9227

case_1:                                           ; preds = %if.then5
  %1 = load i8, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !9228
  %conv21 = zext i8 %1 to i32, !dbg !9230
  %and22 = and i32 %conv21, 128, !dbg !9231
  %cmp23 = icmp eq i32 %and22, 0, !dbg !9232
  br i1 %cmp23, label %if.then25, label %if.end26, !dbg !9206

if.then25:                                        ; preds = %case_1
  br label %return, !dbg !9233

if.end26:                                         ; preds = %case_1
  br label %switch_break, !dbg !9235

case_2:                                           ; preds = %if.then9
  %2 = load i8, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !9236
  %conv27 = zext i8 %2 to i32, !dbg !9238
  %and28 = and i32 %conv27, 16, !dbg !9239
  %cmp29 = icmp ne i32 %and28, 0, !dbg !9240
  br i1 %cmp29, label %if.then31, label %if.end32, !dbg !9211

if.then31:                                        ; preds = %case_2
  br label %return, !dbg !9241

if.end32:                                         ; preds = %case_2
  br label %switch_break, !dbg !9243

case_3:                                           ; preds = %if.then13
  %3 = load i8, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !9244
  %conv33 = zext i8 %3 to i32, !dbg !9246
  %and34 = and i32 %conv33, 16, !dbg !9247
  %cmp35 = icmp eq i32 %and34, 0, !dbg !9248
  br i1 %cmp35, label %if.then37, label %if.end38, !dbg !9216

if.then37:                                        ; preds = %case_3
  br label %return, !dbg !9249

if.end38:                                         ; preds = %case_3
  br label %switch_break, !dbg !9251

switch_break:                                     ; preds = %if.end38, %if.end32, %if.end26, %if.end20, %if.end14
  store i16 %conv, i16* bitcast (i8* getelementptr inbounds ([12 x i8], [12 x i8]* bitcast (%union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs to [12 x i8]*), i64 0, i64 10) to i16*), align 2, !dbg !9252
  br label %return, !dbg !9253

return:                                           ; preds = %switch_break, %if.then37, %if.then31, %if.then25, %if.then19
  ret void, !dbg !9254
}

; Function Attrs: noinline nounwind ssp uwtable
define internal void @op_jp(i32 %op, %struct.opinfo* %oi) #0 !dbg !9255 {
entry:
  call void @llvm.dbg.value(metadata i32 %op, metadata !9256, metadata !DIExpression()), !dbg !9257
  call void @llvm.dbg.value(metadata %struct.opinfo* %oi, metadata !9258, metadata !DIExpression()), !dbg !9257
  %call = call i32 @get_imm16(), !dbg !9259
  call void @llvm.dbg.value(metadata i32 %call, metadata !9263, metadata !DIExpression()), !dbg !9257
  %conv = trunc i32 %call to i16, !dbg !9264
  call void @llvm.dbg.value(metadata i16 %conv, metadata !9265, metadata !DIExpression()), !dbg !9257
  br label %while.body, !dbg !9266

while.body:                                       ; preds = %entry
  br label %while_continue___0, !dbg !9269

while_continue___0:                               ; preds = %while.body
  br label %while_continue, !dbg !9269

while_continue:                                   ; preds = %while_continue___0
  br label %while_break, !dbg !9270

while_break___0:                                  ; No predecessors!
  br label %while_break, !dbg !9272

while_break:                                      ; preds = %while_break___0, %while_continue
  store i16 %conv, i16* bitcast (i8* getelementptr inbounds ([12 x i8], [12 x i8]* bitcast (%union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs to [12 x i8]*), i64 0, i64 10) to i16*), align 2, !dbg !9273
  ret void, !dbg !9274
}

; Function Attrs: noinline nounwind ssp uwtable
define internal void @op_call_cond(i32 %op, %struct.opinfo* %oi) #0 !dbg !9275 {
entry:
  call void @llvm.dbg.value(metadata i32 %op, metadata !9276, metadata !DIExpression()), !dbg !9277
  call void @llvm.dbg.value(metadata %struct.opinfo* %oi, metadata !9278, metadata !DIExpression()), !dbg !9277
  %call = call i32 @get_imm16(), !dbg !9279
  call void @llvm.dbg.value(metadata i32 %call, metadata !9283, metadata !DIExpression()), !dbg !9277
  %conv = trunc i32 %call to i16, !dbg !9284
  call void @llvm.dbg.value(metadata i16 %conv, metadata !9285, metadata !DIExpression()), !dbg !9277
  %shr = lshr i32 %op, 3, !dbg !9286
  %and = and i32 %shr, 3, !dbg !9287
  %conv1 = zext i32 %and to i64, !dbg !9288
  call void @llvm.dbg.value(metadata i64 %conv1, metadata !9289, metadata !DIExpression()), !dbg !9277
  br label %while.body, !dbg !9290

while.body:                                       ; preds = %entry
  br label %while_continue___0, !dbg !9293

while_continue___0:                               ; preds = %while.body
  br label %while_continue, !dbg !9293

while_continue:                                   ; preds = %while_continue___0
  br label %while_break, !dbg !9294

while_break___0:                                  ; No predecessors!
  br label %while_break, !dbg !9296

while_break:                                      ; preds = %while_break___0, %while_continue
  %cmp = icmp eq i64 %conv1, 0, !dbg !9297
  br i1 %cmp, label %if.then, label %if.end, !dbg !9300

if.then:                                          ; preds = %while_break
  br label %case_0, !dbg !9301

if.end:                                           ; preds = %while_break
  %cmp3 = icmp eq i64 %conv1, 1, !dbg !9303
  br i1 %cmp3, label %if.then5, label %if.end6, !dbg !9305

if.then5:                                         ; preds = %if.end
  br label %case_1, !dbg !9306

if.end6:                                          ; preds = %if.end
  %cmp7 = icmp eq i64 %conv1, 2, !dbg !9308
  br i1 %cmp7, label %if.then9, label %if.end10, !dbg !9310

if.then9:                                         ; preds = %if.end6
  br label %case_2, !dbg !9311

if.end10:                                         ; preds = %if.end6
  %cmp11 = icmp eq i64 %conv1, 3, !dbg !9313
  br i1 %cmp11, label %if.then13, label %if.end14, !dbg !9315

if.then13:                                        ; preds = %if.end10
  br label %case_3, !dbg !9316

if.end14:                                         ; preds = %if.end10
  br label %switch_break, !dbg !9318

case_0:                                           ; preds = %if.then
  %0 = load i8, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !9319
  %conv15 = zext i8 %0 to i32, !dbg !9321
  %and16 = and i32 %conv15, 128, !dbg !9322
  %cmp17 = icmp ne i32 %and16, 0, !dbg !9323
  br i1 %cmp17, label %if.then19, label %if.end20, !dbg !9300

if.then19:                                        ; preds = %case_0
  br label %return, !dbg !9324

if.end20:                                         ; preds = %case_0
  br label %switch_break, !dbg !9326

case_1:                                           ; preds = %if.then5
  %1 = load i8, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !9327
  %conv21 = zext i8 %1 to i32, !dbg !9329
  %and22 = and i32 %conv21, 128, !dbg !9330
  %cmp23 = icmp eq i32 %and22, 0, !dbg !9331
  br i1 %cmp23, label %if.then25, label %if.end26, !dbg !9305

if.then25:                                        ; preds = %case_1
  br label %return, !dbg !9332

if.end26:                                         ; preds = %case_1
  br label %switch_break, !dbg !9334

case_2:                                           ; preds = %if.then9
  %2 = load i8, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !9335
  %conv27 = zext i8 %2 to i32, !dbg !9337
  %and28 = and i32 %conv27, 16, !dbg !9338
  %cmp29 = icmp ne i32 %and28, 0, !dbg !9339
  br i1 %cmp29, label %if.then31, label %if.end32, !dbg !9310

if.then31:                                        ; preds = %case_2
  br label %return, !dbg !9340

if.end32:                                         ; preds = %case_2
  br label %switch_break, !dbg !9342

case_3:                                           ; preds = %if.then13
  %3 = load i8, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !9343
  %conv33 = zext i8 %3 to i32, !dbg !9345
  %and34 = and i32 %conv33, 16, !dbg !9346
  %cmp35 = icmp eq i32 %and34, 0, !dbg !9347
  br i1 %cmp35, label %if.then37, label %if.end38, !dbg !9315

if.then37:                                        ; preds = %case_3
  br label %return, !dbg !9348

if.end38:                                         ; preds = %case_3
  br label %switch_break, !dbg !9350

switch_break:                                     ; preds = %if.end38, %if.end32, %if.end26, %if.end20, %if.end14
  %4 = load i16, i16* bitcast (i8* getelementptr inbounds ([12 x i8], [12 x i8]* bitcast (%union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs to [12 x i8]*), i64 0, i64 10) to i16*), align 2, !dbg !9351
  %conv39 = zext i16 %4 to i32, !dbg !9354
  call void @push(i32 %conv39), !dbg !9355
  store i16 %conv, i16* bitcast (i8* getelementptr inbounds ([12 x i8], [12 x i8]* bitcast (%union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs to [12 x i8]*), i64 0, i64 10) to i16*), align 2, !dbg !9356
  br label %return, !dbg !9357

return:                                           ; preds = %switch_break, %if.then37, %if.then31, %if.then25, %if.then19
  ret void, !dbg !9358
}

; Function Attrs: noinline nounwind ssp uwtable
define internal void @op_push(i32 %op, %struct.opinfo* %oi) #0 !dbg !9359 {
entry:
  call void @llvm.dbg.value(metadata i32 %op, metadata !9360, metadata !DIExpression()), !dbg !9361
  call void @llvm.dbg.value(metadata %struct.opinfo* %oi, metadata !9362, metadata !DIExpression()), !dbg !9361
  %shr = lshr i32 %op, 4, !dbg !9363
  %and = and i32 %shr, 3, !dbg !9366
  %conv = zext i32 %and to i64, !dbg !9367
  call void @llvm.dbg.value(metadata i64 %conv, metadata !9368, metadata !DIExpression()), !dbg !9361
  %mul = mul nsw i64 %conv, 2, !dbg !9369
  %arrayidx = getelementptr inbounds [12 x i8], [12 x i8]* bitcast (%union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs to [12 x i8]*), i64 0, i64 %mul, !dbg !9371
  %0 = bitcast i8* %arrayidx to i16*, !dbg !9372
  %1 = load i16, i16* %0, align 1, !dbg !9372
  %conv1 = zext i16 %1 to i32, !dbg !9373
  call void @push(i32 %conv1), !dbg !9374
  br label %while.body, !dbg !9375

while.body:                                       ; preds = %entry
  br label %while_continue___0, !dbg !9378

while_continue___0:                               ; preds = %while.body
  br label %while_continue, !dbg !9378

while_continue:                                   ; preds = %while_continue___0
  br label %while_break, !dbg !9379

while_break___0:                                  ; No predecessors!
  br label %while_break, !dbg !9381

while_break:                                      ; preds = %while_break___0, %while_continue
  ret void, !dbg !9382
}

; Function Attrs: noinline nounwind ssp uwtable
define internal void @op_add_imm(i32 %op, %struct.opinfo* %oi) #0 !dbg !9383 {
entry:
  call void @llvm.dbg.value(metadata i32 %op, metadata !9384, metadata !DIExpression()), !dbg !9385
  call void @llvm.dbg.value(metadata %struct.opinfo* %oi, metadata !9386, metadata !DIExpression()), !dbg !9385
  %call = call i32 @get_imm8(), !dbg !9387
  call void @llvm.dbg.value(metadata i32 %call, metadata !9391, metadata !DIExpression()), !dbg !9385
  %conv = trunc i32 %call to i8, !dbg !9392
  call void @llvm.dbg.value(metadata i8 %conv, metadata !9393, metadata !DIExpression()), !dbg !9385
  %0 = load i8, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 6), align 2, !dbg !9394
  call void @llvm.dbg.value(metadata i8 %0, metadata !9395, metadata !DIExpression()), !dbg !9385
  call void @llvm.dbg.value(metadata i8 %0, metadata !9396, metadata !DIExpression()), !dbg !9385
  br label %while.body, !dbg !9397

while.body:                                       ; preds = %entry
  br label %while_continue___0, !dbg !9400

while_continue___0:                               ; preds = %while.body
  br label %while_continue, !dbg !9400

while_continue:                                   ; preds = %while_continue___0
  br label %while_break, !dbg !9401

while_break___0:                                  ; No predecessors!
  br label %while_break, !dbg !9403

while_break:                                      ; preds = %while_break___0, %while_continue
  %conv1 = zext i8 %0 to i32, !dbg !9404
  %conv2 = zext i8 %conv to i32, !dbg !9405
  %add = add nsw i32 %conv1, %conv2, !dbg !9406
  %conv3 = trunc i32 %add to i8, !dbg !9407
  call void @llvm.dbg.value(metadata i8 %conv3, metadata !9396, metadata !DIExpression()), !dbg !9385
  store i8 %conv3, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 6), align 2, !dbg !9408
  store i8 0, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !9409
  %conv4 = zext i8 %0 to i32, !dbg !9410
  %conv5 = zext i8 %conv3 to i32, !dbg !9412
  %cmp = icmp sgt i32 %conv4, %conv5, !dbg !9413
  br i1 %cmp, label %if.then, label %if.end, !dbg !9414

if.then:                                          ; preds = %while_break
  %1 = load i8, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !9415
  %conv7 = zext i8 %1 to i32, !dbg !9417
  %or = or i32 %conv7, 16, !dbg !9418
  %conv8 = trunc i32 %or to i8, !dbg !9419
  store i8 %conv8, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !9420
  br label %if.end, !dbg !9421

if.end:                                           ; preds = %if.then, %while_break
  %conv9 = zext i8 %0 to i32, !dbg !9422
  %and = and i32 %conv9, 15, !dbg !9424
  %conv10 = zext i8 %conv3 to i32, !dbg !9425
  %and11 = and i32 %conv10, 15, !dbg !9426
  %cmp12 = icmp sgt i32 %and, %and11, !dbg !9427
  br i1 %cmp12, label %if.then14, label %if.end18, !dbg !9428

if.then14:                                        ; preds = %if.end
  %2 = load i8, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !9429
  %conv15 = zext i8 %2 to i32, !dbg !9431
  %or16 = or i32 %conv15, 32, !dbg !9432
  %conv17 = trunc i32 %or16 to i8, !dbg !9433
  store i8 %conv17, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !9434
  br label %if.end18, !dbg !9435

if.end18:                                         ; preds = %if.then14, %if.end
  %conv19 = zext i8 %conv3 to i32, !dbg !9436
  %cmp20 = icmp eq i32 %conv19, 0, !dbg !9438
  br i1 %cmp20, label %if.then22, label %if.end26, !dbg !9439

if.then22:                                        ; preds = %if.end18
  %3 = load i8, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !9440
  %conv23 = zext i8 %3 to i32, !dbg !9442
  %or24 = or i32 %conv23, 128, !dbg !9443
  %conv25 = trunc i32 %or24 to i8, !dbg !9444
  store i8 %conv25, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !9445
  br label %if.end26, !dbg !9446

if.end26:                                         ; preds = %if.then22, %if.end18
  ret void, !dbg !9447
}

; Function Attrs: noinline nounwind ssp uwtable
define internal void @op_rst(i32 %op, %struct.opinfo* %oi) #0 !dbg !9448 {
entry:
  call void @llvm.dbg.value(metadata i32 %op, metadata !9449, metadata !DIExpression()), !dbg !9450
  call void @llvm.dbg.value(metadata %struct.opinfo* %oi, metadata !9451, metadata !DIExpression()), !dbg !9450
  %and = and i32 %op, 56, !dbg !9452
  %conv = trunc i32 %and to i16, !dbg !9454
  call void @llvm.dbg.value(metadata i16 %conv, metadata !9455, metadata !DIExpression()), !dbg !9450
  br label %while.body, !dbg !9456

while.body:                                       ; preds = %entry
  br label %while_continue___0, !dbg !9459

while_continue___0:                               ; preds = %while.body
  br label %while_continue, !dbg !9459

while_continue:                                   ; preds = %while_continue___0
  br label %while_break, !dbg !9460

while_break___0:                                  ; No predecessors!
  br label %while_break, !dbg !9462

while_break:                                      ; preds = %while_break___0, %while_continue
  %0 = load i16, i16* bitcast (i8* getelementptr inbounds ([12 x i8], [12 x i8]* bitcast (%union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs to [12 x i8]*), i64 0, i64 10) to i16*), align 2, !dbg !9463
  %conv1 = zext i16 %0 to i32, !dbg !9466
  call void @push(i32 %conv1), !dbg !9467
  store i16 %conv, i16* bitcast (i8* getelementptr inbounds ([12 x i8], [12 x i8]* bitcast (%union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs to [12 x i8]*), i64 0, i64 10) to i16*), align 2, !dbg !9468
  ret void, !dbg !9469
}

; Function Attrs: noinline nounwind ssp uwtable
define internal void @op_ret(i32 %op, %struct.opinfo* %oi) #0 !dbg !9470 {
entry:
  call void @llvm.dbg.value(metadata i32 %op, metadata !9471, metadata !DIExpression()), !dbg !9472
  call void @llvm.dbg.value(metadata %struct.opinfo* %oi, metadata !9473, metadata !DIExpression()), !dbg !9472
  %call = call i32 @pop(), !dbg !9474
  call void @llvm.dbg.value(metadata i32 %call, metadata !9478, metadata !DIExpression()), !dbg !9472
  %conv = trunc i32 %call to i16, !dbg !9479
  store i16 %conv, i16* bitcast (i8* getelementptr inbounds ([12 x i8], [12 x i8]* bitcast (%union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs to [12 x i8]*), i64 0, i64 10) to i16*), align 2, !dbg !9480
  br label %while.body, !dbg !9481

while.body:                                       ; preds = %entry
  br label %while_continue___0, !dbg !9484

while_continue___0:                               ; preds = %while.body
  br label %while_continue, !dbg !9484

while_continue:                                   ; preds = %while_continue___0
  br label %while_break, !dbg !9485

while_break___0:                                  ; No predecessors!
  br label %while_break, !dbg !9487

while_break:                                      ; preds = %while_break___0, %while_continue
  ret void, !dbg !9488
}

; Function Attrs: noinline nounwind ssp uwtable
define internal void @op_cbprefix(i32 %op, %struct.opinfo* %oi) #0 !dbg !9489 {
entry:
  call void @llvm.dbg.value(metadata i32 %op, metadata !9490, metadata !DIExpression()), !dbg !9491
  call void @llvm.dbg.value(metadata %struct.opinfo* %oi, metadata !9492, metadata !DIExpression()), !dbg !9491
  call void @llvm.dbg.declare(metadata !666, metadata !9493, metadata !DIExpression()), !dbg !9494
  %0 = load i16, i16* bitcast (i8* getelementptr inbounds ([12 x i8], [12 x i8]* bitcast (%union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs to [12 x i8]*), i64 0, i64 10) to i16*), align 2, !dbg !9495
  call void @llvm.dbg.value(metadata i16 %0, metadata !9498, metadata !DIExpression()), !dbg !9491
  %conv = zext i16 %0 to i32, !dbg !9499
  %add = add nsw i32 %conv, 1, !dbg !9500
  %conv1 = trunc i32 %add to i16, !dbg !9501
  store i16 %conv1, i16* bitcast (i8* getelementptr inbounds ([12 x i8], [12 x i8]* bitcast (%union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs to [12 x i8]*), i64 0, i64 10) to i16*), align 2, !dbg !9502
  %conv2 = zext i16 %0 to i32, !dbg !9503
  %call = call i32 @mem_get(i32 %conv2), !dbg !9505
  call void @llvm.dbg.value(metadata i32 %call, metadata !9490, metadata !DIExpression()), !dbg !9491
  %shr = lshr i32 %call, 6, !dbg !9506
  %cmp = icmp eq i32 %shr, 0, !dbg !9509
  br i1 %cmp, label %if.then, label %if.end, !dbg !9510

if.then:                                          ; preds = %entry
  br label %case_0, !dbg !9511

if.end:                                           ; preds = %entry
  %shr4 = lshr i32 %call, 6, !dbg !9513
  %cmp5 = icmp eq i32 %shr4, 1, !dbg !9515
  br i1 %cmp5, label %if.then7, label %if.end8, !dbg !9516

if.then7:                                         ; preds = %if.end
  br label %case_1, !dbg !9517

if.end8:                                          ; preds = %if.end
  %shr9 = lshr i32 %call, 6, !dbg !9519
  %cmp10 = icmp eq i32 %shr9, 2, !dbg !9521
  br i1 %cmp10, label %if.then12, label %if.end13, !dbg !9522

if.then12:                                        ; preds = %if.end8
  br label %case_2, !dbg !9523

if.end13:                                         ; preds = %if.end8
  %shr14 = lshr i32 %call, 6, !dbg !9525
  %cmp15 = icmp eq i32 %shr14, 3, !dbg !9527
  br i1 %cmp15, label %if.then17, label %if.end18, !dbg !9528

if.then17:                                        ; preds = %if.end13
  br label %case_3, !dbg !9529

if.end18:                                         ; preds = %if.end13
  br label %switch_break, !dbg !9531

case_0:                                           ; preds = %if.then
  %shr19 = lshr i32 %call, 3, !dbg !9532
  %and = and i32 %shr19, 7, !dbg !9535
  %idxprom = zext i32 %and to i64, !dbg !9536
  %arrayidx = getelementptr inbounds [8 x %struct.opinfo], [8 x %struct.opinfo]* @cbops, i64 0, i64 %idxprom, !dbg !9536
  %fn = getelementptr inbounds %struct.opinfo, %struct.opinfo* %arrayidx, i32 0, i32 0, !dbg !9537
  %1 = load void (i32, %struct.opinfo*)*, void (i32, %struct.opinfo*)** %fn, align 8, !dbg !9537
  %shr20 = lshr i32 %call, 3, !dbg !9538
  %and21 = and i32 %shr20, 7, !dbg !9539
  %idxprom22 = zext i32 %and21 to i64, !dbg !9540
  %arrayidx23 = getelementptr inbounds [8 x %struct.opinfo], [8 x %struct.opinfo]* @cbops, i64 0, i64 %idxprom22, !dbg !9540
  call void %1(i32 %call, %struct.opinfo* %arrayidx23), !dbg !9541
  br label %return, !dbg !9542

case_1:                                           ; preds = %if.then7
  call void @op_bit(i32 %call), !dbg !9543
  br label %return, !dbg !9546

case_2:                                           ; preds = %if.then12
  call void @op_res(i32 %call), !dbg !9547
  br label %return, !dbg !9550

case_3:                                           ; preds = %if.then17
  call void @op_set(i32 %call), !dbg !9551
  br label %return, !dbg !9554

switch_break:                                     ; preds = %if.end18
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !9555
  %conv24 = trunc i32 %call to i8, !dbg !9558
  %conv25 = zext i8 %conv24 to i32, !dbg !9559
  %call26 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %2, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.62, i32 0, i32 0), i32 %conv25), !dbg !9560
  store i64 1, i64* @gbcpu_stopped, align 8, !dbg !9561
  br label %return, !dbg !9562

return:                                           ; preds = %switch_break, %case_3, %case_2, %case_1, %case_0
  ret void, !dbg !9563
}

; Function Attrs: noinline nounwind ssp uwtable
define internal void @op_call(i32 %op, %struct.opinfo* %oi) #0 !dbg !9564 {
entry:
  call void @llvm.dbg.value(metadata i32 %op, metadata !9565, metadata !DIExpression()), !dbg !9566
  call void @llvm.dbg.value(metadata %struct.opinfo* %oi, metadata !9567, metadata !DIExpression()), !dbg !9566
  %call = call i32 @get_imm16(), !dbg !9568
  call void @llvm.dbg.value(metadata i32 %call, metadata !9572, metadata !DIExpression()), !dbg !9566
  %conv = trunc i32 %call to i16, !dbg !9573
  call void @llvm.dbg.value(metadata i16 %conv, metadata !9574, metadata !DIExpression()), !dbg !9566
  br label %while.body, !dbg !9575

while.body:                                       ; preds = %entry
  br label %while_continue___0, !dbg !9578

while_continue___0:                               ; preds = %while.body
  br label %while_continue, !dbg !9578

while_continue:                                   ; preds = %while_continue___0
  br label %while_break, !dbg !9579

while_break___0:                                  ; No predecessors!
  br label %while_break, !dbg !9581

while_break:                                      ; preds = %while_break___0, %while_continue
  %0 = load i16, i16* bitcast (i8* getelementptr inbounds ([12 x i8], [12 x i8]* bitcast (%union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs to [12 x i8]*), i64 0, i64 10) to i16*), align 2, !dbg !9582
  %conv1 = zext i16 %0 to i32, !dbg !9585
  call void @push(i32 %conv1), !dbg !9586
  store i16 %conv, i16* bitcast (i8* getelementptr inbounds ([12 x i8], [12 x i8]* bitcast (%union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs to [12 x i8]*), i64 0, i64 10) to i16*), align 2, !dbg !9587
  ret void, !dbg !9588
}

; Function Attrs: noinline nounwind ssp uwtable
define internal void @op_adc_imm(i32 %op, %struct.opinfo* %oi) #0 !dbg !9589 {
entry:
  call void @llvm.dbg.value(metadata i32 %op, metadata !9590, metadata !DIExpression()), !dbg !9591
  call void @llvm.dbg.value(metadata %struct.opinfo* %oi, metadata !9592, metadata !DIExpression()), !dbg !9591
  %call = call i32 @get_imm8(), !dbg !9593
  call void @llvm.dbg.value(metadata i32 %call, metadata !9597, metadata !DIExpression()), !dbg !9591
  %conv = trunc i32 %call to i8, !dbg !9598
  call void @llvm.dbg.value(metadata i8 %conv, metadata !9599, metadata !DIExpression()), !dbg !9591
  %0 = load i8, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 6), align 2, !dbg !9600
  call void @llvm.dbg.value(metadata i8 %0, metadata !9601, metadata !DIExpression()), !dbg !9591
  call void @llvm.dbg.value(metadata i8 %0, metadata !9602, metadata !DIExpression()), !dbg !9591
  br label %while.body, !dbg !9603

while.body:                                       ; preds = %entry
  br label %while_continue___0, !dbg !9606

while_continue___0:                               ; preds = %while.body
  br label %while_continue, !dbg !9606

while_continue:                                   ; preds = %while_continue___0
  br label %while_break, !dbg !9607

while_break___0:                                  ; No predecessors!
  br label %while_break, !dbg !9609

while_break:                                      ; preds = %while_break___0, %while_continue
  %conv1 = zext i8 %0 to i32, !dbg !9610
  %conv2 = zext i8 %conv to i32, !dbg !9611
  %add = add nsw i32 %conv1, %conv2, !dbg !9612
  %conv3 = trunc i32 %add to i8, !dbg !9613
  call void @llvm.dbg.value(metadata i8 %conv3, metadata !9602, metadata !DIExpression()), !dbg !9591
  %conv4 = zext i8 %conv3 to i32, !dbg !9614
  %1 = load i8, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !9615
  %conv5 = zext i8 %1 to i32, !dbg !9616
  %and = and i32 %conv5, 16, !dbg !9617
  %cmp = icmp sgt i32 %and, 0, !dbg !9618
  %conv6 = zext i1 %cmp to i32, !dbg !9618
  %add7 = add nsw i32 %conv4, %conv6, !dbg !9619
  %conv8 = trunc i32 %add7 to i8, !dbg !9620
  call void @llvm.dbg.value(metadata i8 %conv8, metadata !9602, metadata !DIExpression()), !dbg !9591
  %2 = load i8, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !9621
  %conv9 = zext i8 %2 to i32, !dbg !9622
  %and10 = and i32 %conv9, -65, !dbg !9623
  %conv11 = trunc i32 %and10 to i8, !dbg !9624
  store i8 %conv11, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !9625
  store i8 %conv8, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 6), align 2, !dbg !9626
  %conv12 = zext i8 %0 to i32, !dbg !9627
  %conv13 = zext i8 %conv8 to i32, !dbg !9629
  %cmp14 = icmp sgt i32 %conv12, %conv13, !dbg !9630
  br i1 %cmp14, label %if.then, label %if.else, !dbg !9631

if.then:                                          ; preds = %while_break
  %3 = load i8, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !9632
  %conv16 = zext i8 %3 to i32, !dbg !9634
  %or = or i32 %conv16, 16, !dbg !9635
  %conv17 = trunc i32 %or to i8, !dbg !9636
  store i8 %conv17, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !9637
  br label %if.end, !dbg !9638

if.else:                                          ; preds = %while_break
  %4 = load i8, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !9639
  %conv18 = zext i8 %4 to i32, !dbg !9641
  %and19 = and i32 %conv18, -17, !dbg !9642
  %conv20 = trunc i32 %and19 to i8, !dbg !9643
  store i8 %conv20, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !9644
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %conv21 = zext i8 %0 to i32, !dbg !9645
  %and22 = and i32 %conv21, 15, !dbg !9647
  %conv23 = zext i8 %conv8 to i32, !dbg !9648
  %and24 = and i32 %conv23, 15, !dbg !9649
  %cmp25 = icmp sgt i32 %and22, %and24, !dbg !9650
  br i1 %cmp25, label %if.then27, label %if.else31, !dbg !9651

if.then27:                                        ; preds = %if.end
  %5 = load i8, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !9652
  %conv28 = zext i8 %5 to i32, !dbg !9654
  %or29 = or i32 %conv28, 32, !dbg !9655
  %conv30 = trunc i32 %or29 to i8, !dbg !9656
  store i8 %conv30, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !9657
  br label %if.end35, !dbg !9658

if.else31:                                        ; preds = %if.end
  %6 = load i8, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !9659
  %conv32 = zext i8 %6 to i32, !dbg !9661
  %and33 = and i32 %conv32, -33, !dbg !9662
  %conv34 = trunc i32 %and33 to i8, !dbg !9663
  store i8 %conv34, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !9664
  br label %if.end35

if.end35:                                         ; preds = %if.else31, %if.then27
  %conv36 = zext i8 %conv8 to i32, !dbg !9665
  %cmp37 = icmp eq i32 %conv36, 0, !dbg !9667
  br i1 %cmp37, label %if.then39, label %if.else43, !dbg !9668

if.then39:                                        ; preds = %if.end35
  %7 = load i8, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !9669
  %conv40 = zext i8 %7 to i32, !dbg !9671
  %or41 = or i32 %conv40, 128, !dbg !9672
  %conv42 = trunc i32 %or41 to i8, !dbg !9673
  store i8 %conv42, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !9674
  br label %if.end47, !dbg !9675

if.else43:                                        ; preds = %if.end35
  %8 = load i8, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !9676
  %conv44 = zext i8 %8 to i32, !dbg !9678
  %and45 = and i32 %conv44, -129, !dbg !9679
  %conv46 = trunc i32 %and45 to i8, !dbg !9680
  store i8 %conv46, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !9681
  br label %if.end47

if.end47:                                         ; preds = %if.else43, %if.then39
  ret void, !dbg !9682
}

; Function Attrs: noinline nounwind ssp uwtable
define internal void @op_sub_imm(i32 %op, %struct.opinfo* %oi) #0 !dbg !9683 {
entry:
  call void @llvm.dbg.value(metadata i32 %op, metadata !9684, metadata !DIExpression()), !dbg !9685
  call void @llvm.dbg.value(metadata %struct.opinfo* %oi, metadata !9686, metadata !DIExpression()), !dbg !9685
  %call = call i32 @get_imm8(), !dbg !9687
  call void @llvm.dbg.value(metadata i32 %call, metadata !9691, metadata !DIExpression()), !dbg !9685
  %conv = trunc i32 %call to i8, !dbg !9692
  call void @llvm.dbg.value(metadata i8 %conv, metadata !9693, metadata !DIExpression()), !dbg !9685
  %0 = load i8, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 6), align 2, !dbg !9694
  call void @llvm.dbg.value(metadata i8 %0, metadata !9695, metadata !DIExpression()), !dbg !9685
  call void @llvm.dbg.value(metadata i8 %0, metadata !9696, metadata !DIExpression()), !dbg !9685
  br label %while.body, !dbg !9697

while.body:                                       ; preds = %entry
  br label %while_continue___0, !dbg !9700

while_continue___0:                               ; preds = %while.body
  br label %while_continue, !dbg !9700

while_continue:                                   ; preds = %while_continue___0
  br label %while_break, !dbg !9701

while_break___0:                                  ; No predecessors!
  br label %while_break, !dbg !9703

while_break:                                      ; preds = %while_break___0, %while_continue
  %conv1 = zext i8 %0 to i32, !dbg !9704
  %conv2 = zext i8 %conv to i32, !dbg !9705
  %sub = sub nsw i32 %conv1, %conv2, !dbg !9706
  %conv3 = trunc i32 %sub to i8, !dbg !9707
  call void @llvm.dbg.value(metadata i8 %conv3, metadata !9696, metadata !DIExpression()), !dbg !9685
  store i8 %conv3, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 6), align 2, !dbg !9708
  store i8 64, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !9709
  %conv4 = zext i8 %0 to i32, !dbg !9710
  %conv5 = zext i8 %conv3 to i32, !dbg !9712
  %cmp = icmp slt i32 %conv4, %conv5, !dbg !9713
  br i1 %cmp, label %if.then, label %if.end, !dbg !9714

if.then:                                          ; preds = %while_break
  %1 = load i8, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !9715
  %conv7 = zext i8 %1 to i32, !dbg !9717
  %or = or i32 %conv7, 16, !dbg !9718
  %conv8 = trunc i32 %or to i8, !dbg !9719
  store i8 %conv8, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !9720
  br label %if.end, !dbg !9721

if.end:                                           ; preds = %if.then, %while_break
  %conv9 = zext i8 %0 to i32, !dbg !9722
  %and = and i32 %conv9, 15, !dbg !9724
  %conv10 = zext i8 %conv3 to i32, !dbg !9725
  %and11 = and i32 %conv10, 15, !dbg !9726
  %cmp12 = icmp slt i32 %and, %and11, !dbg !9727
  br i1 %cmp12, label %if.then14, label %if.end18, !dbg !9728

if.then14:                                        ; preds = %if.end
  %2 = load i8, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !9729
  %conv15 = zext i8 %2 to i32, !dbg !9731
  %or16 = or i32 %conv15, 32, !dbg !9732
  %conv17 = trunc i32 %or16 to i8, !dbg !9733
  store i8 %conv17, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !9734
  br label %if.end18, !dbg !9735

if.end18:                                         ; preds = %if.then14, %if.end
  %conv19 = zext i8 %conv3 to i32, !dbg !9736
  %cmp20 = icmp eq i32 %conv19, 0, !dbg !9738
  br i1 %cmp20, label %if.then22, label %if.end26, !dbg !9739

if.then22:                                        ; preds = %if.end18
  %3 = load i8, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !9740
  %conv23 = zext i8 %3 to i32, !dbg !9742
  %or24 = or i32 %conv23, 128, !dbg !9743
  %conv25 = trunc i32 %or24 to i8, !dbg !9744
  store i8 %conv25, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !9745
  br label %if.end26, !dbg !9746

if.end26:                                         ; preds = %if.then22, %if.end18
  ret void, !dbg !9747
}

; Function Attrs: noinline nounwind ssp uwtable
define internal void @op_reti(i32 %op, %struct.opinfo* %oi) #0 !dbg !9748 {
entry:
  call void @llvm.dbg.value(metadata i32 %op, metadata !9749, metadata !DIExpression()), !dbg !9750
  call void @llvm.dbg.value(metadata %struct.opinfo* %oi, metadata !9751, metadata !DIExpression()), !dbg !9750
  %call = call i32 @pop(), !dbg !9752
  call void @llvm.dbg.value(metadata i32 %call, metadata !9756, metadata !DIExpression()), !dbg !9750
  %conv = trunc i32 %call to i16, !dbg !9757
  store i16 %conv, i16* bitcast (i8* getelementptr inbounds ([12 x i8], [12 x i8]* bitcast (%union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs to [12 x i8]*), i64 0, i64 10) to i16*), align 2, !dbg !9758
  br label %while.body, !dbg !9759

while.body:                                       ; preds = %entry
  br label %while_continue___0, !dbg !9762

while_continue___0:                               ; preds = %while.body
  br label %while_continue, !dbg !9762

while_continue:                                   ; preds = %while_continue___0
  br label %while_break, !dbg !9763

while_break___0:                                  ; No predecessors!
  br label %while_break, !dbg !9765

while_break:                                      ; preds = %while_break___0, %while_continue
  ret void, !dbg !9766
}

; Function Attrs: noinline nounwind ssp uwtable
define internal void @op_sbc_imm(i32 %op, %struct.opinfo* %oi) #0 !dbg !9767 {
entry:
  call void @llvm.dbg.value(metadata i32 %op, metadata !9768, metadata !DIExpression()), !dbg !9769
  call void @llvm.dbg.value(metadata %struct.opinfo* %oi, metadata !9770, metadata !DIExpression()), !dbg !9769
  %call = call i32 @get_imm8(), !dbg !9771
  call void @llvm.dbg.value(metadata i32 %call, metadata !9775, metadata !DIExpression()), !dbg !9769
  %conv = trunc i32 %call to i8, !dbg !9776
  call void @llvm.dbg.value(metadata i8 %conv, metadata !9777, metadata !DIExpression()), !dbg !9769
  %0 = load i8, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 6), align 2, !dbg !9778
  call void @llvm.dbg.value(metadata i8 %0, metadata !9779, metadata !DIExpression()), !dbg !9769
  call void @llvm.dbg.value(metadata i8 %0, metadata !9780, metadata !DIExpression()), !dbg !9769
  br label %while.body, !dbg !9781

while.body:                                       ; preds = %entry
  br label %while_continue___0, !dbg !9784

while_continue___0:                               ; preds = %while.body
  br label %while_continue, !dbg !9784

while_continue:                                   ; preds = %while_continue___0
  br label %while_break, !dbg !9785

while_break___0:                                  ; No predecessors!
  br label %while_break, !dbg !9787

while_break:                                      ; preds = %while_break___0, %while_continue
  %conv1 = zext i8 %0 to i32, !dbg !9788
  %conv2 = zext i8 %conv to i32, !dbg !9789
  %sub = sub nsw i32 %conv1, %conv2, !dbg !9790
  %conv3 = trunc i32 %sub to i8, !dbg !9791
  call void @llvm.dbg.value(metadata i8 %conv3, metadata !9780, metadata !DIExpression()), !dbg !9769
  %conv4 = zext i8 %conv3 to i32, !dbg !9792
  %1 = load i8, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !9793
  %conv5 = zext i8 %1 to i32, !dbg !9794
  %and = and i32 %conv5, 16, !dbg !9795
  %cmp = icmp sgt i32 %and, 0, !dbg !9796
  %conv6 = zext i1 %cmp to i32, !dbg !9796
  %sub7 = sub nsw i32 %conv4, %conv6, !dbg !9797
  %conv8 = trunc i32 %sub7 to i8, !dbg !9798
  call void @llvm.dbg.value(metadata i8 %conv8, metadata !9780, metadata !DIExpression()), !dbg !9769
  store i8 %conv8, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 6), align 2, !dbg !9799
  store i8 64, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !9800
  %conv9 = zext i8 %0 to i32, !dbg !9801
  %conv10 = zext i8 %conv8 to i32, !dbg !9803
  %cmp11 = icmp slt i32 %conv9, %conv10, !dbg !9804
  br i1 %cmp11, label %if.then, label %if.end, !dbg !9805

if.then:                                          ; preds = %while_break
  %2 = load i8, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !9806
  %conv13 = zext i8 %2 to i32, !dbg !9808
  %or = or i32 %conv13, 16, !dbg !9809
  %conv14 = trunc i32 %or to i8, !dbg !9810
  store i8 %conv14, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !9811
  br label %if.end, !dbg !9812

if.end:                                           ; preds = %if.then, %while_break
  %conv15 = zext i8 %0 to i32, !dbg !9813
  %and16 = and i32 %conv15, 15, !dbg !9815
  %conv17 = zext i8 %conv8 to i32, !dbg !9816
  %and18 = and i32 %conv17, 15, !dbg !9817
  %cmp19 = icmp slt i32 %and16, %and18, !dbg !9818
  br i1 %cmp19, label %if.then21, label %if.end25, !dbg !9819

if.then21:                                        ; preds = %if.end
  %3 = load i8, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !9820
  %conv22 = zext i8 %3 to i32, !dbg !9822
  %or23 = or i32 %conv22, 32, !dbg !9823
  %conv24 = trunc i32 %or23 to i8, !dbg !9824
  store i8 %conv24, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !9825
  br label %if.end25, !dbg !9826

if.end25:                                         ; preds = %if.then21, %if.end
  %conv26 = zext i8 %conv8 to i32, !dbg !9827
  %cmp27 = icmp eq i32 %conv26, 0, !dbg !9829
  br i1 %cmp27, label %if.then29, label %if.end33, !dbg !9830

if.then29:                                        ; preds = %if.end25
  %4 = load i8, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !9831
  %conv30 = zext i8 %4 to i32, !dbg !9833
  %or31 = or i32 %conv30, 128, !dbg !9834
  %conv32 = trunc i32 %or31 to i8, !dbg !9835
  store i8 %conv32, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !9836
  br label %if.end33, !dbg !9837

if.end33:                                         ; preds = %if.then29, %if.end25
  ret void, !dbg !9838
}

; Function Attrs: noinline nounwind ssp uwtable
define internal void @op_ldh(i32 %op, %struct.opinfo* %oi) #0 !dbg !9839 {
entry:
  call void @llvm.dbg.value(metadata i32 %op, metadata !9840, metadata !DIExpression()), !dbg !9841
  call void @llvm.dbg.value(metadata %struct.opinfo* %oi, metadata !9842, metadata !DIExpression()), !dbg !9841
  %and = and i32 %op, 2, !dbg !9843
  %tobool = icmp ne i32 %and, 0, !dbg !9843
  br i1 %tobool, label %if.then, label %if.else, !dbg !9846

if.then:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata i32 0, metadata !9847, metadata !DIExpression()), !dbg !9841
  br label %if.end, !dbg !9848

if.else:                                          ; preds = %entry
  %call = call i32 @get_imm8(), !dbg !9850
  call void @llvm.dbg.value(metadata i32 %call, metadata !9854, metadata !DIExpression()), !dbg !9841
  call void @llvm.dbg.value(metadata i32 %call, metadata !9847, metadata !DIExpression()), !dbg !9841
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %tmp___0.0 = phi i32 [ 0, %if.then ], [ %call, %if.else ], !dbg !9855
  call void @llvm.dbg.value(metadata i32 %tmp___0.0, metadata !9847, metadata !DIExpression()), !dbg !9841
  %conv = zext i32 %tmp___0.0 to i64, !dbg !9856
  call void @llvm.dbg.value(metadata i64 %conv, metadata !9857, metadata !DIExpression()), !dbg !9841
  %and1 = and i32 %op, 16, !dbg !9858
  %tobool2 = icmp ne i32 %and1, 0, !dbg !9858
  br i1 %tobool2, label %if.then3, label %if.else15, !dbg !9860

if.then3:                                         ; preds = %if.end
  br label %while.body, !dbg !9861

while.body:                                       ; preds = %if.then3
  br label %while_continue___4, !dbg !9865

while_continue___4:                               ; preds = %while.body
  br label %while_continue, !dbg !9865

while_continue:                                   ; preds = %while_continue___4
  br label %while_break, !dbg !9866

while_break___4:                                  ; No predecessors!
  br label %while_break, !dbg !9868

while_break:                                      ; preds = %while_break___4, %while_continue
  %and4 = and i32 %op, 2, !dbg !9869
  %cmp = icmp eq i32 %and4, 0, !dbg !9871
  br i1 %cmp, label %if.then6, label %if.else8, !dbg !9872

if.then6:                                         ; preds = %while_break
  br label %while.body7, !dbg !9873

while.body7:                                      ; preds = %if.then6
  br label %while_continue___5, !dbg !9877

while_continue___5:                               ; preds = %while.body7
  br label %while_continue___0, !dbg !9877

while_continue___0:                               ; preds = %while_continue___5
  br label %while_break___0, !dbg !9878

while_break___5:                                  ; No predecessors!
  br label %while_break___0, !dbg !9880

while_break___0:                                  ; preds = %while_break___5, %while_continue___0
  br label %if.end11, !dbg !9881

if.else8:                                         ; preds = %while_break
  %0 = load i8, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 0), align 2, !dbg !9882
  %conv9 = zext i8 %0 to i64, !dbg !9884
  call void @llvm.dbg.value(metadata i64 %conv9, metadata !9857, metadata !DIExpression()), !dbg !9841
  br label %while.body10, !dbg !9885

while.body10:                                     ; preds = %if.else8
  br label %while_continue___6, !dbg !9888

while_continue___6:                               ; preds = %while.body10
  br label %while_continue___1, !dbg !9888

while_continue___1:                               ; preds = %while_continue___6
  br label %while_break___1, !dbg !9889

while_break___6:                                  ; No predecessors!
  br label %while_break___1, !dbg !9891

while_break___1:                                  ; preds = %while_break___6, %while_continue___1
  br label %if.end11

if.end11:                                         ; preds = %while_break___1, %while_break___0
  %ofs.0 = phi i64 [ %conv, %while_break___0 ], [ %conv9, %while_break___1 ], !dbg !9892
  call void @llvm.dbg.value(metadata i64 %ofs.0, metadata !9857, metadata !DIExpression()), !dbg !9841
  %add = add nsw i64 65280, %ofs.0, !dbg !9893
  %conv12 = trunc i64 %add to i32, !dbg !9896
  %call13 = call i32 @mem_get(i32 %conv12), !dbg !9897
  call void @llvm.dbg.value(metadata i32 %call13, metadata !9898, metadata !DIExpression()), !dbg !9841
  %conv14 = trunc i32 %call13 to i8, !dbg !9899
  store i8 %conv14, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 6), align 2, !dbg !9900
  br label %if.end28, !dbg !9901

if.else15:                                        ; preds = %if.end
  %and16 = and i32 %op, 2, !dbg !9902
  %cmp17 = icmp eq i32 %and16, 0, !dbg !9905
  br i1 %cmp17, label %if.then19, label %if.else21, !dbg !9906

if.then19:                                        ; preds = %if.else15
  br label %while.body20, !dbg !9907

while.body20:                                     ; preds = %if.then19
  br label %while_continue___7, !dbg !9911

while_continue___7:                               ; preds = %while.body20
  br label %while_continue___2, !dbg !9911

while_continue___2:                               ; preds = %while_continue___7
  br label %while_break___2, !dbg !9912

while_break___7:                                  ; No predecessors!
  br label %while_break___2, !dbg !9914

while_break___2:                                  ; preds = %while_break___7, %while_continue___2
  br label %if.end24, !dbg !9915

if.else21:                                        ; preds = %if.else15
  %1 = load i8, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 0), align 2, !dbg !9916
  %conv22 = zext i8 %1 to i64, !dbg !9918
  call void @llvm.dbg.value(metadata i64 %conv22, metadata !9857, metadata !DIExpression()), !dbg !9841
  br label %while.body23, !dbg !9919

while.body23:                                     ; preds = %if.else21
  br label %while_continue___8, !dbg !9922

while_continue___8:                               ; preds = %while.body23
  br label %while_continue___3, !dbg !9922

while_continue___3:                               ; preds = %while_continue___8
  br label %while_break___3, !dbg !9923

while_break___8:                                  ; No predecessors!
  br label %while_break___3, !dbg !9925

while_break___3:                                  ; preds = %while_break___8, %while_continue___3
  br label %if.end24

if.end24:                                         ; preds = %while_break___3, %while_break___2
  %ofs.1 = phi i64 [ %conv, %while_break___2 ], [ %conv22, %while_break___3 ], !dbg !9892
  call void @llvm.dbg.value(metadata i64 %ofs.1, metadata !9857, metadata !DIExpression()), !dbg !9841
  %add25 = add nsw i64 65280, %ofs.1, !dbg !9926
  %conv26 = trunc i64 %add25 to i32, !dbg !9929
  %2 = load i8, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 6), align 2, !dbg !9930
  %conv27 = zext i8 %2 to i32, !dbg !9931
  call void @mem_put(i32 %conv26, i32 %conv27), !dbg !9932
  br label %if.end28

if.end28:                                         ; preds = %if.end24, %if.end11
  ret void, !dbg !9933
}

; Function Attrs: noinline nounwind ssp uwtable
define internal void @op_and_imm(i32 %op, %struct.opinfo* %oi) #0 !dbg !9934 {
entry:
  call void @llvm.dbg.value(metadata i32 %op, metadata !9935, metadata !DIExpression()), !dbg !9936
  call void @llvm.dbg.value(metadata %struct.opinfo* %oi, metadata !9937, metadata !DIExpression()), !dbg !9936
  %call = call i32 @get_imm8(), !dbg !9938
  call void @llvm.dbg.value(metadata i32 %call, metadata !9942, metadata !DIExpression()), !dbg !9936
  %conv = trunc i32 %call to i8, !dbg !9943
  call void @llvm.dbg.value(metadata i8 %conv, metadata !9944, metadata !DIExpression()), !dbg !9936
  br label %while.body, !dbg !9945

while.body:                                       ; preds = %entry
  br label %while_continue___0, !dbg !9948

while_continue___0:                               ; preds = %while.body
  br label %while_continue, !dbg !9948

while_continue:                                   ; preds = %while_continue___0
  br label %while_break, !dbg !9949

while_break___0:                                  ; No predecessors!
  br label %while_break, !dbg !9951

while_break:                                      ; preds = %while_break___0, %while_continue
  %0 = load i8, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 6), align 2, !dbg !9952
  %conv1 = zext i8 %0 to i32, !dbg !9953
  %conv2 = zext i8 %conv to i32, !dbg !9954
  %and = and i32 %conv1, %conv2, !dbg !9955
  %conv3 = trunc i32 %and to i8, !dbg !9956
  store i8 %conv3, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 6), align 2, !dbg !9957
  store i8 32, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !9958
  %1 = load i8, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 6), align 2, !dbg !9959
  %conv4 = zext i8 %1 to i32, !dbg !9961
  %cmp = icmp eq i32 %conv4, 0, !dbg !9962
  br i1 %cmp, label %if.then, label %if.end, !dbg !9963

if.then:                                          ; preds = %while_break
  %2 = load i8, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !9964
  %conv6 = zext i8 %2 to i32, !dbg !9966
  %or = or i32 %conv6, 128, !dbg !9967
  %conv7 = trunc i32 %or to i8, !dbg !9968
  store i8 %conv7, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !9969
  br label %if.end, !dbg !9970

if.end:                                           ; preds = %if.then, %while_break
  ret void, !dbg !9971
}

; Function Attrs: noinline nounwind ssp uwtable
define internal void @op_add_sp_imm(i32 %op, %struct.opinfo* %oi) #0 !dbg !9972 {
entry:
  call void @llvm.dbg.value(metadata i32 %op, metadata !9973, metadata !DIExpression()), !dbg !9974
  call void @llvm.dbg.value(metadata %struct.opinfo* %oi, metadata !9975, metadata !DIExpression()), !dbg !9974
  %call = call i32 @get_imm8(), !dbg !9976
  call void @llvm.dbg.value(metadata i32 %call, metadata !9980, metadata !DIExpression()), !dbg !9974
  %conv = trunc i32 %call to i8, !dbg !9981
  call void @llvm.dbg.value(metadata i8 %conv, metadata !9982, metadata !DIExpression()), !dbg !9974
  %0 = load i16, i16* bitcast (i8* getelementptr inbounds ([12 x i8], [12 x i8]* bitcast (%union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs to [12 x i8]*), i64 0, i64 8) to i16*), align 2, !dbg !9983
  call void @llvm.dbg.value(metadata i16 %0, metadata !9984, metadata !DIExpression()), !dbg !9974
  call void @llvm.dbg.value(metadata i16 %0, metadata !9985, metadata !DIExpression()), !dbg !9974
  br label %while.body, !dbg !9986

while.body:                                       ; preds = %entry
  br label %while_continue___0, !dbg !9989

while_continue___0:                               ; preds = %while.body
  br label %while_continue, !dbg !9989

while_continue:                                   ; preds = %while_continue___0
  br label %while_break, !dbg !9990

while_break___0:                                  ; No predecessors!
  br label %while_break, !dbg !9992

while_break:                                      ; preds = %while_break___0, %while_continue
  %conv1 = zext i16 %0 to i32, !dbg !9993
  %conv2 = sext i8 %conv to i32, !dbg !9994
  %add = add nsw i32 %conv1, %conv2, !dbg !9995
  %conv3 = trunc i32 %add to i16, !dbg !9996
  call void @llvm.dbg.value(metadata i16 %conv3, metadata !9985, metadata !DIExpression()), !dbg !9974
  store i16 %conv3, i16* bitcast (i8* getelementptr inbounds ([12 x i8], [12 x i8]* bitcast (%union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs to [12 x i8]*), i64 0, i64 8) to i16*), align 2, !dbg !9997
  store i8 0, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !9998
  %conv4 = zext i16 %0 to i32, !dbg !9999
  %conv5 = zext i16 %conv3 to i32, !dbg !10001
  %cmp = icmp sgt i32 %conv4, %conv5, !dbg !10002
  br i1 %cmp, label %if.then, label %if.end, !dbg !10003

if.then:                                          ; preds = %while_break
  %1 = load i8, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !10004
  %conv7 = zext i8 %1 to i32, !dbg !10006
  %or = or i32 %conv7, 16, !dbg !10007
  %conv8 = trunc i32 %or to i8, !dbg !10008
  store i8 %conv8, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !10009
  br label %if.end, !dbg !10010

if.end:                                           ; preds = %if.then, %while_break
  %conv9 = zext i16 %0 to i32, !dbg !10011
  %and = and i32 %conv9, 4095, !dbg !10013
  %conv10 = zext i16 %conv3 to i32, !dbg !10014
  %and11 = and i32 %conv10, 4095, !dbg !10015
  %cmp12 = icmp sgt i32 %and, %and11, !dbg !10016
  br i1 %cmp12, label %if.then14, label %if.end18, !dbg !10017

if.then14:                                        ; preds = %if.end
  %2 = load i8, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !10018
  %conv15 = zext i8 %2 to i32, !dbg !10020
  %or16 = or i32 %conv15, 32, !dbg !10021
  %conv17 = trunc i32 %or16 to i8, !dbg !10022
  store i8 %conv17, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !10023
  br label %if.end18, !dbg !10024

if.end18:                                         ; preds = %if.then14, %if.end
  ret void, !dbg !10025
}

; Function Attrs: noinline nounwind ssp uwtable
define internal void @op_jp_hl(i32 %op, %struct.opinfo* %oi) #0 !dbg !10026 {
entry:
  call void @llvm.dbg.value(metadata i32 %op, metadata !10027, metadata !DIExpression()), !dbg !10028
  call void @llvm.dbg.value(metadata %struct.opinfo* %oi, metadata !10029, metadata !DIExpression()), !dbg !10028
  br label %while.body, !dbg !10030

while.body:                                       ; preds = %entry
  br label %while_continue___0, !dbg !10034

while_continue___0:                               ; preds = %while.body
  br label %while_continue, !dbg !10034

while_continue:                                   ; preds = %while_continue___0
  br label %while_break, !dbg !10035

while_break___0:                                  ; No predecessors!
  br label %while_break, !dbg !10037

while_break:                                      ; preds = %while_break___0, %while_continue
  %0 = load i16, i16* bitcast (i8* getelementptr inbounds ([12 x i8], [12 x i8]* bitcast (%union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs to [12 x i8]*), i64 0, i64 4) to i16*), align 2, !dbg !10038
  store i16 %0, i16* bitcast (i8* getelementptr inbounds ([12 x i8], [12 x i8]* bitcast (%union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs to [12 x i8]*), i64 0, i64 10) to i16*), align 2, !dbg !10039
  ret void, !dbg !10040
}

; Function Attrs: noinline nounwind ssp uwtable
define internal void @op_ld_ind16_a(i32 %op, %struct.opinfo* %oi) #0 !dbg !10041 {
entry:
  call void @llvm.dbg.value(metadata i32 %op, metadata !10042, metadata !DIExpression()), !dbg !10043
  call void @llvm.dbg.value(metadata %struct.opinfo* %oi, metadata !10044, metadata !DIExpression()), !dbg !10043
  %call = call i32 @get_imm16(), !dbg !10045
  call void @llvm.dbg.value(metadata i32 %call, metadata !10049, metadata !DIExpression()), !dbg !10043
  %conv = zext i32 %call to i64, !dbg !10050
  call void @llvm.dbg.value(metadata i64 %conv, metadata !10051, metadata !DIExpression()), !dbg !10043
  br label %while.body, !dbg !10052

while.body:                                       ; preds = %entry
  br label %while_continue___0, !dbg !10055

while_continue___0:                               ; preds = %while.body
  br label %while_continue, !dbg !10055

while_continue:                                   ; preds = %while_continue___0
  br label %while_break, !dbg !10056

while_break___0:                                  ; No predecessors!
  br label %while_break, !dbg !10058

while_break:                                      ; preds = %while_break___0, %while_continue
  %conv1 = trunc i64 %conv to i32, !dbg !10059
  %0 = load i8, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 6), align 2, !dbg !10062
  %conv2 = zext i8 %0 to i32, !dbg !10063
  call void @mem_put(i32 %conv1, i32 %conv2), !dbg !10064
  ret void, !dbg !10065
}

; Function Attrs: noinline nounwind ssp uwtable
define internal void @op_xor_imm(i32 %op, %struct.opinfo* %oi) #0 !dbg !10066 {
entry:
  call void @llvm.dbg.value(metadata i32 %op, metadata !10067, metadata !DIExpression()), !dbg !10068
  call void @llvm.dbg.value(metadata %struct.opinfo* %oi, metadata !10069, metadata !DIExpression()), !dbg !10068
  %call = call i32 @get_imm8(), !dbg !10070
  call void @llvm.dbg.value(metadata i32 %call, metadata !10074, metadata !DIExpression()), !dbg !10068
  %conv = trunc i32 %call to i8, !dbg !10075
  call void @llvm.dbg.value(metadata i8 %conv, metadata !10076, metadata !DIExpression()), !dbg !10068
  br label %while.body, !dbg !10077

while.body:                                       ; preds = %entry
  br label %while_continue___0, !dbg !10080

while_continue___0:                               ; preds = %while.body
  br label %while_continue, !dbg !10080

while_continue:                                   ; preds = %while_continue___0
  br label %while_break, !dbg !10081

while_break___0:                                  ; No predecessors!
  br label %while_break, !dbg !10083

while_break:                                      ; preds = %while_break___0, %while_continue
  %0 = load i8, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 6), align 2, !dbg !10084
  %conv1 = zext i8 %0 to i32, !dbg !10085
  %conv2 = zext i8 %conv to i32, !dbg !10086
  %xor = xor i32 %conv1, %conv2, !dbg !10087
  %conv3 = trunc i32 %xor to i8, !dbg !10088
  store i8 %conv3, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 6), align 2, !dbg !10089
  store i8 0, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !10090
  %1 = load i8, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 6), align 2, !dbg !10091
  %conv4 = zext i8 %1 to i32, !dbg !10093
  %cmp = icmp eq i32 %conv4, 0, !dbg !10094
  br i1 %cmp, label %if.then, label %if.end, !dbg !10095

if.then:                                          ; preds = %while_break
  %2 = load i8, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !10096
  %conv6 = zext i8 %2 to i32, !dbg !10098
  %or = or i32 %conv6, 128, !dbg !10099
  %conv7 = trunc i32 %or to i8, !dbg !10100
  store i8 %conv7, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !10101
  br label %if.end, !dbg !10102

if.end:                                           ; preds = %if.then, %while_break
  ret void, !dbg !10103
}

; Function Attrs: noinline nounwind ssp uwtable
define internal void @op_di(i32 %op, %struct.opinfo* %oi) #0 !dbg !10104 {
entry:
  call void @llvm.dbg.value(metadata i32 %op, metadata !10105, metadata !DIExpression()), !dbg !10106
  call void @llvm.dbg.value(metadata %struct.opinfo* %oi, metadata !10107, metadata !DIExpression()), !dbg !10106
  store i64 0, i64* @gbcpu_if, align 8, !dbg !10108
  br label %while.body, !dbg !10110

while.body:                                       ; preds = %entry
  br label %while_continue___0, !dbg !10113

while_continue___0:                               ; preds = %while.body
  br label %while_continue, !dbg !10113

while_continue:                                   ; preds = %while_continue___0
  br label %while_break, !dbg !10114

while_break___0:                                  ; No predecessors!
  br label %while_break, !dbg !10116

while_break:                                      ; preds = %while_break___0, %while_continue
  ret void, !dbg !10117
}

; Function Attrs: noinline nounwind ssp uwtable
define internal void @op_or_imm(i32 %op, %struct.opinfo* %oi) #0 !dbg !10118 {
entry:
  call void @llvm.dbg.value(metadata i32 %op, metadata !10119, metadata !DIExpression()), !dbg !10120
  call void @llvm.dbg.value(metadata %struct.opinfo* %oi, metadata !10121, metadata !DIExpression()), !dbg !10120
  %call = call i32 @get_imm8(), !dbg !10122
  call void @llvm.dbg.value(metadata i32 %call, metadata !10126, metadata !DIExpression()), !dbg !10120
  %conv = trunc i32 %call to i8, !dbg !10127
  call void @llvm.dbg.value(metadata i8 %conv, metadata !10128, metadata !DIExpression()), !dbg !10120
  br label %while.body, !dbg !10129

while.body:                                       ; preds = %entry
  br label %while_continue___0, !dbg !10132

while_continue___0:                               ; preds = %while.body
  br label %while_continue, !dbg !10132

while_continue:                                   ; preds = %while_continue___0
  br label %while_break, !dbg !10133

while_break___0:                                  ; No predecessors!
  br label %while_break, !dbg !10135

while_break:                                      ; preds = %while_break___0, %while_continue
  %0 = load i8, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 6), align 2, !dbg !10136
  %conv1 = zext i8 %0 to i32, !dbg !10137
  %conv2 = zext i8 %conv to i32, !dbg !10138
  %or = or i32 %conv1, %conv2, !dbg !10139
  %conv3 = trunc i32 %or to i8, !dbg !10140
  store i8 %conv3, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 6), align 2, !dbg !10141
  store i8 0, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !10142
  %1 = load i8, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 6), align 2, !dbg !10143
  %conv4 = zext i8 %1 to i32, !dbg !10145
  %cmp = icmp eq i32 %conv4, 0, !dbg !10146
  br i1 %cmp, label %if.then, label %if.end, !dbg !10147

if.then:                                          ; preds = %while_break
  %2 = load i8, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !10148
  %conv6 = zext i8 %2 to i32, !dbg !10150
  %or7 = or i32 %conv6, 128, !dbg !10151
  %conv8 = trunc i32 %or7 to i8, !dbg !10152
  store i8 %conv8, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !10153
  br label %if.end, !dbg !10154

if.end:                                           ; preds = %if.then, %while_break
  ret void, !dbg !10155
}

; Function Attrs: noinline nounwind ssp uwtable
define internal void @op_ld_hlsp(i32 %op, %struct.opinfo* %oi) #0 !dbg !10156 {
entry:
  call void @llvm.dbg.value(metadata i32 %op, metadata !10157, metadata !DIExpression()), !dbg !10158
  call void @llvm.dbg.value(metadata %struct.opinfo* %oi, metadata !10159, metadata !DIExpression()), !dbg !10158
  %call = call i32 @get_imm8(), !dbg !10160
  call void @llvm.dbg.value(metadata i32 %call, metadata !10164, metadata !DIExpression()), !dbg !10158
  %conv = trunc i32 %call to i8, !dbg !10165
  call void @llvm.dbg.value(metadata i8 %conv, metadata !10166, metadata !DIExpression()), !dbg !10158
  %0 = load i16, i16* bitcast (i8* getelementptr inbounds ([12 x i8], [12 x i8]* bitcast (%union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs to [12 x i8]*), i64 0, i64 8) to i16*), align 2, !dbg !10167
  call void @llvm.dbg.value(metadata i16 %0, metadata !10168, metadata !DIExpression()), !dbg !10158
  %conv1 = zext i16 %0 to i32, !dbg !10169
  %conv2 = sext i8 %conv to i32, !dbg !10170
  %add = add nsw i32 %conv1, %conv2, !dbg !10171
  %conv3 = trunc i32 %add to i16, !dbg !10172
  call void @llvm.dbg.value(metadata i16 %conv3, metadata !10173, metadata !DIExpression()), !dbg !10158
  %conv4 = sext i8 %conv to i32, !dbg !10174
  %cmp = icmp sgt i32 %conv4, 0, !dbg !10176
  br i1 %cmp, label %if.then, label %if.else, !dbg !10177

if.then:                                          ; preds = %entry
  br label %while.body, !dbg !10178

while.body:                                       ; preds = %if.then
  br label %while_continue___1, !dbg !10182

while_continue___1:                               ; preds = %while.body
  br label %while_continue, !dbg !10182

while_continue:                                   ; preds = %while_continue___1
  br label %while_break, !dbg !10183

while_break___1:                                  ; No predecessors!
  br label %while_break, !dbg !10185

while_break:                                      ; preds = %while_break___1, %while_continue
  br label %if.end, !dbg !10186

if.else:                                          ; preds = %entry
  br label %while.body6, !dbg !10187

while.body6:                                      ; preds = %if.else
  br label %while_continue___2, !dbg !10191

while_continue___2:                               ; preds = %while.body6
  br label %while_continue___0, !dbg !10191

while_continue___0:                               ; preds = %while_continue___2
  br label %while_break___0, !dbg !10192

while_break___2:                                  ; No predecessors!
  br label %while_break___0, !dbg !10194

while_break___0:                                  ; preds = %while_break___2, %while_continue___0
  br label %if.end

if.end:                                           ; preds = %while_break___0, %while_break
  store i16 %conv3, i16* bitcast (i8* getelementptr inbounds ([12 x i8], [12 x i8]* bitcast (%union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs to [12 x i8]*), i64 0, i64 4) to i16*), align 2, !dbg !10195
  store i8 0, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !10196
  %conv7 = zext i16 %0 to i32, !dbg !10197
  %conv8 = zext i16 %conv3 to i32, !dbg !10199
  %cmp9 = icmp sgt i32 %conv7, %conv8, !dbg !10200
  br i1 %cmp9, label %if.then11, label %if.end14, !dbg !10201

if.then11:                                        ; preds = %if.end
  %1 = load i8, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !10202
  %conv12 = zext i8 %1 to i32, !dbg !10204
  %or = or i32 %conv12, 16, !dbg !10205
  %conv13 = trunc i32 %or to i8, !dbg !10206
  store i8 %conv13, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !10207
  br label %if.end14, !dbg !10208

if.end14:                                         ; preds = %if.then11, %if.end
  %conv15 = zext i16 %0 to i32, !dbg !10209
  %and = and i32 %conv15, 4095, !dbg !10211
  %conv16 = zext i16 %conv3 to i32, !dbg !10212
  %and17 = and i32 %conv16, 4095, !dbg !10213
  %cmp18 = icmp sgt i32 %and, %and17, !dbg !10214
  br i1 %cmp18, label %if.then20, label %if.end24, !dbg !10215

if.then20:                                        ; preds = %if.end14
  %2 = load i8, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !10216
  %conv21 = zext i8 %2 to i32, !dbg !10218
  %or22 = or i32 %conv21, 32, !dbg !10219
  %conv23 = trunc i32 %or22 to i8, !dbg !10220
  store i8 %conv23, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !10221
  br label %if.end24, !dbg !10222

if.end24:                                         ; preds = %if.then20, %if.end14
  ret void, !dbg !10223
}

; Function Attrs: noinline nounwind ssp uwtable
define internal void @op_ld_sphl(i32 %op, %struct.opinfo* %oi) #0 !dbg !10224 {
entry:
  call void @llvm.dbg.value(metadata i32 %op, metadata !10225, metadata !DIExpression()), !dbg !10226
  call void @llvm.dbg.value(metadata %struct.opinfo* %oi, metadata !10227, metadata !DIExpression()), !dbg !10226
  br label %while.body, !dbg !10228

while.body:                                       ; preds = %entry
  br label %while_continue___0, !dbg !10232

while_continue___0:                               ; preds = %while.body
  br label %while_continue, !dbg !10232

while_continue:                                   ; preds = %while_continue___0
  br label %while_break, !dbg !10233

while_break___0:                                  ; No predecessors!
  br label %while_break, !dbg !10235

while_break:                                      ; preds = %while_break___0, %while_continue
  %0 = load i16, i16* bitcast (i8* getelementptr inbounds ([12 x i8], [12 x i8]* bitcast (%union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs to [12 x i8]*), i64 0, i64 4) to i16*), align 2, !dbg !10236
  store i16 %0, i16* bitcast (i8* getelementptr inbounds ([12 x i8], [12 x i8]* bitcast (%union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs to [12 x i8]*), i64 0, i64 8) to i16*), align 2, !dbg !10237
  ret void, !dbg !10238
}

; Function Attrs: noinline nounwind ssp uwtable
define internal void @op_ld_imm(i32 %op, %struct.opinfo* %oi) #0 !dbg !10239 {
entry:
  call void @llvm.dbg.value(metadata i32 %op, metadata !10240, metadata !DIExpression()), !dbg !10241
  call void @llvm.dbg.value(metadata %struct.opinfo* %oi, metadata !10242, metadata !DIExpression()), !dbg !10241
  %call = call i32 @get_imm16(), !dbg !10243
  call void @llvm.dbg.value(metadata i32 %call, metadata !10247, metadata !DIExpression()), !dbg !10241
  %conv = zext i32 %call to i64, !dbg !10248
  call void @llvm.dbg.value(metadata i64 %conv, metadata !10249, metadata !DIExpression()), !dbg !10241
  br label %while.body, !dbg !10250

while.body:                                       ; preds = %entry
  br label %while_continue___0, !dbg !10253

while_continue___0:                               ; preds = %while.body
  br label %while_continue, !dbg !10253

while_continue:                                   ; preds = %while_continue___0
  br label %while_break, !dbg !10254

while_break___0:                                  ; No predecessors!
  br label %while_break, !dbg !10256

while_break:                                      ; preds = %while_break___0, %while_continue
  %conv1 = trunc i64 %conv to i32, !dbg !10257
  %call2 = call i32 @mem_get(i32 %conv1), !dbg !10260
  call void @llvm.dbg.value(metadata i32 %call2, metadata !10261, metadata !DIExpression()), !dbg !10241
  %conv3 = trunc i32 %call2 to i8, !dbg !10262
  store i8 %conv3, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 6), align 2, !dbg !10263
  ret void, !dbg !10264
}

; Function Attrs: noinline nounwind ssp uwtable
define internal void @op_ei(i32 %op, %struct.opinfo* %oi) #0 !dbg !10265 {
entry:
  call void @llvm.dbg.value(metadata i32 %op, metadata !10266, metadata !DIExpression()), !dbg !10267
  call void @llvm.dbg.value(metadata %struct.opinfo* %oi, metadata !10268, metadata !DIExpression()), !dbg !10267
  store i64 1, i64* @gbcpu_if, align 8, !dbg !10269
  br label %while.body, !dbg !10271

while.body:                                       ; preds = %entry
  br label %while_continue___0, !dbg !10274

while_continue___0:                               ; preds = %while.body
  br label %while_continue, !dbg !10274

while_continue:                                   ; preds = %while_continue___0
  br label %while_break, !dbg !10275

while_break___0:                                  ; No predecessors!
  br label %while_break, !dbg !10277

while_break:                                      ; preds = %while_break___0, %while_continue
  ret void, !dbg !10278
}

; Function Attrs: noinline nounwind ssp uwtable
define internal void @op_cp_imm(i32 %op, %struct.opinfo* %oi) #0 !dbg !10279 {
entry:
  call void @llvm.dbg.value(metadata i32 %op, metadata !10280, metadata !DIExpression()), !dbg !10281
  call void @llvm.dbg.value(metadata %struct.opinfo* %oi, metadata !10282, metadata !DIExpression()), !dbg !10281
  %call = call i32 @get_imm8(), !dbg !10283
  call void @llvm.dbg.value(metadata i32 %call, metadata !10287, metadata !DIExpression()), !dbg !10281
  %conv = trunc i32 %call to i8, !dbg !10288
  call void @llvm.dbg.value(metadata i8 %conv, metadata !10289, metadata !DIExpression()), !dbg !10281
  %0 = load i8, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 6), align 2, !dbg !10290
  call void @llvm.dbg.value(metadata i8 %0, metadata !10291, metadata !DIExpression()), !dbg !10281
  call void @llvm.dbg.value(metadata i8 %0, metadata !10292, metadata !DIExpression()), !dbg !10281
  br label %while.body, !dbg !10293

while.body:                                       ; preds = %entry
  br label %while_continue___0, !dbg !10296

while_continue___0:                               ; preds = %while.body
  br label %while_continue, !dbg !10296

while_continue:                                   ; preds = %while_continue___0
  br label %while_break, !dbg !10297

while_break___0:                                  ; No predecessors!
  br label %while_break, !dbg !10299

while_break:                                      ; preds = %while_break___0, %while_continue
  %conv1 = zext i8 %0 to i32, !dbg !10300
  %conv2 = zext i8 %conv to i32, !dbg !10301
  %sub = sub nsw i32 %conv1, %conv2, !dbg !10302
  %conv3 = trunc i32 %sub to i8, !dbg !10303
  call void @llvm.dbg.value(metadata i8 %conv3, metadata !10292, metadata !DIExpression()), !dbg !10281
  store i8 64, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !10304
  %conv4 = zext i8 %0 to i32, !dbg !10305
  %conv5 = zext i8 %conv3 to i32, !dbg !10307
  %cmp = icmp slt i32 %conv4, %conv5, !dbg !10308
  br i1 %cmp, label %if.then, label %if.end, !dbg !10309

if.then:                                          ; preds = %while_break
  %1 = load i8, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !10310
  %conv7 = zext i8 %1 to i32, !dbg !10312
  %or = or i32 %conv7, 16, !dbg !10313
  %conv8 = trunc i32 %or to i8, !dbg !10314
  store i8 %conv8, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !10315
  br label %if.end, !dbg !10316

if.end:                                           ; preds = %if.then, %while_break
  %conv9 = zext i8 %0 to i32, !dbg !10317
  %and = and i32 %conv9, 15, !dbg !10319
  %conv10 = zext i8 %conv3 to i32, !dbg !10320
  %and11 = and i32 %conv10, 15, !dbg !10321
  %cmp12 = icmp slt i32 %and, %and11, !dbg !10322
  br i1 %cmp12, label %if.then14, label %if.end18, !dbg !10323

if.then14:                                        ; preds = %if.end
  %2 = load i8, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !10324
  %conv15 = zext i8 %2 to i32, !dbg !10326
  %or16 = or i32 %conv15, 32, !dbg !10327
  %conv17 = trunc i32 %or16 to i8, !dbg !10328
  store i8 %conv17, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !10329
  br label %if.end18, !dbg !10330

if.end18:                                         ; preds = %if.then14, %if.end
  %conv19 = zext i8 %conv3 to i32, !dbg !10331
  %cmp20 = icmp eq i32 %conv19, 0, !dbg !10333
  br i1 %cmp20, label %if.then22, label %if.end26, !dbg !10334

if.then22:                                        ; preds = %if.end18
  %3 = load i8, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !10335
  %conv23 = zext i8 %3 to i32, !dbg !10337
  %or24 = or i32 %conv23, 128, !dbg !10338
  %conv25 = trunc i32 %or24 to i8, !dbg !10339
  store i8 %conv25, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !10340
  br label %if.end26, !dbg !10341

if.end26:                                         ; preds = %if.then22, %if.end18
  ret void, !dbg !10342
}

; Function Attrs: noinline nounwind ssp uwtable
define internal i32 @get_imm16() #0 !dbg !10343 {
entry:
  %0 = load i16, i16* bitcast (i8* getelementptr inbounds ([12 x i8], [12 x i8]* bitcast (%union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs to [12 x i8]*), i64 0, i64 10) to i16*), align 2, !dbg !10346
  %conv = zext i16 %0 to i32, !dbg !10349
  call void @llvm.dbg.value(metadata i32 %conv, metadata !10350, metadata !DIExpression()), !dbg !10351
  %add = add i32 %conv, 2, !dbg !10352
  %conv1 = trunc i32 %add to i16, !dbg !10353
  store i16 %conv1, i16* bitcast (i8* getelementptr inbounds ([12 x i8], [12 x i8]* bitcast (%union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs to [12 x i8]*), i64 0, i64 10) to i16*), align 2, !dbg !10354
  %call = call i32 @mem_get(i32 %conv), !dbg !10355
  call void @llvm.dbg.value(metadata i32 %call, metadata !10357, metadata !DIExpression()), !dbg !10351
  %add2 = add i32 %conv, 1, !dbg !10358
  %call3 = call i32 @mem_get(i32 %add2), !dbg !10360
  call void @llvm.dbg.value(metadata i32 %call3, metadata !10361, metadata !DIExpression()), !dbg !10351
  %shl = shl i32 %call3, 8, !dbg !10362
  %add4 = add i32 %call, %shl, !dbg !10363
  call void @llvm.dbg.value(metadata i32 %add4, metadata !10364, metadata !DIExpression()), !dbg !10351
  br label %while.body, !dbg !10365

while.body:                                       ; preds = %entry
  br label %while_continue___0, !dbg !10368

while_continue___0:                               ; preds = %while.body
  br label %while_continue, !dbg !10368

while_continue:                                   ; preds = %while_continue___0
  br label %while_break, !dbg !10369

while_break___0:                                  ; No predecessors!
  br label %while_break, !dbg !10371

while_break:                                      ; preds = %while_break___0, %while_continue
  ret i32 %add4, !dbg !10372
}

; Function Attrs: noinline nounwind ssp uwtable
define internal void @print_reg(i64 %i) #0 !dbg !10373 {
entry:
  call void @llvm.dbg.value(metadata i64 %i, metadata !10374, metadata !DIExpression()), !dbg !10375
  %cmp = icmp eq i64 %i, 6, !dbg !10376
  br i1 %cmp, label %if.then, label %if.else, !dbg !10379

if.then:                                          ; preds = %entry
  br label %while.body, !dbg !10380

while.body:                                       ; preds = %if.then
  br label %while_continue___1, !dbg !10384

while_continue___1:                               ; preds = %while.body
  br label %while_continue, !dbg !10384

while_continue:                                   ; preds = %while_continue___1
  br label %while_break, !dbg !10385

while_break___1:                                  ; No predecessors!
  br label %while_break, !dbg !10387

while_break:                                      ; preds = %while_break___1, %while_continue
  br label %if.end, !dbg !10388

if.else:                                          ; preds = %entry
  br label %while.body1, !dbg !10389

while.body1:                                      ; preds = %if.else
  br label %while_continue___2, !dbg !10393

while_continue___2:                               ; preds = %while.body1
  br label %while_continue___0, !dbg !10393

while_continue___0:                               ; preds = %while_continue___2
  br label %while_break___0, !dbg !10394

while_break___2:                                  ; No predecessors!
  br label %while_break___0, !dbg !10396

while_break___0:                                  ; preds = %while_break___2, %while_continue___0
  br label %if.end

if.end:                                           ; preds = %while_break___0, %while_break
  ret void, !dbg !10397
}

; Function Attrs: noinline nounwind ssp uwtable
define internal i32 @get_reg(i64 %i) #0 !dbg !10398 {
entry:
  call void @llvm.dbg.value(metadata i64 %i, metadata !10401, metadata !DIExpression()), !dbg !10402
  %cmp = icmp eq i64 %i, 6, !dbg !10403
  br i1 %cmp, label %if.then, label %if.end, !dbg !10406

if.then:                                          ; preds = %entry
  %0 = load i16, i16* bitcast (i8* getelementptr inbounds ([12 x i8], [12 x i8]* bitcast (%union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs to [12 x i8]*), i64 0, i64 4) to i16*), align 2, !dbg !10407
  %conv = zext i16 %0 to i32, !dbg !10411
  %call = call i32 @mem_get(i32 %conv), !dbg !10412
  call void @llvm.dbg.value(metadata i32 %call, metadata !10413, metadata !DIExpression()), !dbg !10402
  br label %return, !dbg !10414

if.end:                                           ; preds = %entry
  %xor = xor i64 %i, 1, !dbg !10415
  %arrayidx = getelementptr inbounds [12 x i8], [12 x i8]* bitcast (%union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs to [12 x i8]*), i64 0, i64 %xor, !dbg !10416
  %1 = load i8, i8* %arrayidx, align 1, !dbg !10416
  %conv1 = zext i8 %1 to i32, !dbg !10417
  br label %return, !dbg !10418

return:                                           ; preds = %if.end, %if.then
  %retval.0 = phi i32 [ %call, %if.then ], [ %conv1, %if.end ], !dbg !10419
  ret i32 %retval.0, !dbg !10420
}

; Function Attrs: noinline nounwind ssp uwtable
define internal void @put_reg(i64 %i, i32 %val) #0 !dbg !10421 {
entry:
  call void @llvm.dbg.value(metadata i64 %i, metadata !10424, metadata !DIExpression()), !dbg !10425
  call void @llvm.dbg.value(metadata i32 %val, metadata !10426, metadata !DIExpression()), !dbg !10425
  %cmp = icmp eq i64 %i, 6, !dbg !10427
  br i1 %cmp, label %if.then, label %if.else, !dbg !10430

if.then:                                          ; preds = %entry
  %0 = load i16, i16* bitcast (i8* getelementptr inbounds ([12 x i8], [12 x i8]* bitcast (%union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs to [12 x i8]*), i64 0, i64 4) to i16*), align 2, !dbg !10431
  %conv = zext i16 %0 to i32, !dbg !10435
  call void @mem_put(i32 %conv, i32 %val), !dbg !10436
  br label %if.end, !dbg !10437

if.else:                                          ; preds = %entry
  %conv1 = trunc i32 %val to i8, !dbg !10438
  %xor = xor i64 %i, 1, !dbg !10440
  %arrayidx = getelementptr inbounds [12 x i8], [12 x i8]* bitcast (%union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs to [12 x i8]*), i64 0, i64 %xor, !dbg !10441
  store i8 %conv1, i8* %arrayidx, align 1, !dbg !10442
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !10443
}

; Function Attrs: noinline nounwind ssp uwtable
define internal i32 @get_imm8() #0 !dbg !10444 {
entry:
  %0 = load i16, i16* bitcast (i8* getelementptr inbounds ([12 x i8], [12 x i8]* bitcast (%union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs to [12 x i8]*), i64 0, i64 10) to i16*), align 2, !dbg !10445
  %conv = zext i16 %0 to i32, !dbg !10448
  call void @llvm.dbg.value(metadata i32 %conv, metadata !10449, metadata !DIExpression()), !dbg !10450
  %add = add i32 %conv, 1, !dbg !10451
  %conv1 = trunc i32 %add to i16, !dbg !10452
  store i16 %conv1, i16* bitcast (i8* getelementptr inbounds ([12 x i8], [12 x i8]* bitcast (%union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs to [12 x i8]*), i64 0, i64 10) to i16*), align 2, !dbg !10453
  %call = call i32 @mem_get(i32 %conv), !dbg !10454
  call void @llvm.dbg.value(metadata i32 %call, metadata !10456, metadata !DIExpression()), !dbg !10450
  br label %while.body, !dbg !10457

while.body:                                       ; preds = %entry
  br label %while_continue___0, !dbg !10460

while_continue___0:                               ; preds = %while.body
  br label %while_continue, !dbg !10460

while_continue:                                   ; preds = %while_continue___0
  br label %while_break, !dbg !10461

while_break___0:                                  ; No predecessors!
  br label %while_break, !dbg !10463

while_break:                                      ; preds = %while_break___0, %while_continue
  ret i32 %call, !dbg !10464
}

; Function Attrs: noinline nounwind ssp uwtable
define internal i32 @pop() #0 !dbg !10465 {
entry:
  %0 = load i16, i16* bitcast (i8* getelementptr inbounds ([12 x i8], [12 x i8]* bitcast (%union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs to [12 x i8]*), i64 0, i64 8) to i16*), align 2, !dbg !10466
  %conv = zext i16 %0 to i32, !dbg !10469
  call void @llvm.dbg.value(metadata i32 %conv, metadata !10470, metadata !DIExpression()), !dbg !10471
  %call = call i32 @mem_get(i32 %conv), !dbg !10472
  call void @llvm.dbg.value(metadata i32 %call, metadata !10474, metadata !DIExpression()), !dbg !10471
  %add = add i32 %conv, 1, !dbg !10475
  %call1 = call i32 @mem_get(i32 %add), !dbg !10477
  call void @llvm.dbg.value(metadata i32 %call1, metadata !10478, metadata !DIExpression()), !dbg !10471
  %shl = shl i32 %call1, 8, !dbg !10479
  %add2 = add i32 %call, %shl, !dbg !10480
  call void @llvm.dbg.value(metadata i32 %add2, metadata !10474, metadata !DIExpression()), !dbg !10471
  %add3 = add i32 %conv, 2, !dbg !10481
  %conv4 = trunc i32 %add3 to i16, !dbg !10482
  store i16 %conv4, i16* bitcast (i8* getelementptr inbounds ([12 x i8], [12 x i8]* bitcast (%union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs to [12 x i8]*), i64 0, i64 8) to i16*), align 2, !dbg !10483
  ret i32 %add2, !dbg !10484
}

; Function Attrs: noinline nounwind ssp uwtable
define internal void @op_bit(i32 %op) #0 !dbg !10485 {
entry:
  call void @llvm.dbg.value(metadata i32 %op, metadata !10486, metadata !DIExpression()), !dbg !10487
  %and = and i32 %op, 7, !dbg !10488
  %conv = zext i32 %and to i64, !dbg !10490
  call void @llvm.dbg.value(metadata i64 %conv, metadata !10491, metadata !DIExpression()), !dbg !10487
  %shr = lshr i32 %op, 3, !dbg !10492
  %and1 = and i32 %shr, 7, !dbg !10493
  %conv2 = zext i32 %and1 to i64, !dbg !10494
  call void @llvm.dbg.value(metadata i64 %conv2, metadata !10495, metadata !DIExpression()), !dbg !10487
  br label %while.body, !dbg !10496

while.body:                                       ; preds = %entry
  br label %while_continue___0, !dbg !10499

while_continue___0:                               ; preds = %while.body
  br label %while_continue, !dbg !10499

while_continue:                                   ; preds = %while_continue___0
  br label %while_break, !dbg !10500

while_break___0:                                  ; No predecessors!
  br label %while_break, !dbg !10502

while_break:                                      ; preds = %while_break___0, %while_continue
  call void @print_reg(i64 %conv), !dbg !10503
  %0 = load i8, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !10506
  %conv3 = zext i8 %0 to i32, !dbg !10507
  %and4 = and i32 %conv3, -65, !dbg !10508
  %conv5 = trunc i32 %and4 to i8, !dbg !10509
  store i8 %conv5, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !10510
  %1 = load i8, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !10511
  %conv6 = zext i8 %1 to i32, !dbg !10512
  %or = or i32 %conv6, 160, !dbg !10513
  %conv7 = trunc i32 %or to i8, !dbg !10514
  store i8 %conv7, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !10515
  %call = call i32 @get_reg(i64 %conv), !dbg !10516
  call void @llvm.dbg.value(metadata i32 %call, metadata !10518, metadata !DIExpression()), !dbg !10487
  %2 = load i8, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !10519
  %conv8 = zext i8 %2 to i32, !dbg !10520
  %shl = shl i32 %call, 8, !dbg !10521
  %add = add i64 %conv2, 1, !dbg !10522
  %sh_prom = trunc i64 %add to i32, !dbg !10523
  %shr9 = lshr i32 %shl, %sh_prom, !dbg !10523
  %and10 = and i32 %shr9, 128, !dbg !10524
  %xor = xor i32 %conv8, %and10, !dbg !10525
  %conv11 = trunc i32 %xor to i8, !dbg !10526
  store i8 %conv11, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !10527
  ret void, !dbg !10528
}

; Function Attrs: noinline nounwind ssp uwtable
define internal void @op_res(i32 %op) #0 !dbg !10529 {
entry:
  call void @llvm.dbg.value(metadata i32 %op, metadata !10530, metadata !DIExpression()), !dbg !10531
  %and = and i32 %op, 7, !dbg !10532
  %conv = zext i32 %and to i64, !dbg !10534
  call void @llvm.dbg.value(metadata i64 %conv, metadata !10535, metadata !DIExpression()), !dbg !10531
  %shr = lshr i32 %op, 3, !dbg !10536
  %and1 = and i32 %shr, 7, !dbg !10537
  %conv2 = zext i32 %and1 to i64, !dbg !10538
  call void @llvm.dbg.value(metadata i64 %conv2, metadata !10539, metadata !DIExpression()), !dbg !10531
  br label %while.body, !dbg !10540

while.body:                                       ; preds = %entry
  br label %while_continue___0, !dbg !10543

while_continue___0:                               ; preds = %while.body
  br label %while_continue, !dbg !10543

while_continue:                                   ; preds = %while_continue___0
  br label %while_break, !dbg !10544

while_break___0:                                  ; No predecessors!
  br label %while_break, !dbg !10546

while_break:                                      ; preds = %while_break___0, %while_continue
  call void @print_reg(i64 %conv), !dbg !10547
  %call = call i32 @get_reg(i64 %conv), !dbg !10550
  call void @llvm.dbg.value(metadata i32 %call, metadata !10552, metadata !DIExpression()), !dbg !10531
  %sh_prom = trunc i64 %conv2 to i32, !dbg !10553
  %shl = shl i32 1, %sh_prom, !dbg !10553
  %neg = xor i32 %shl, -1, !dbg !10555
  %and3 = and i32 %call, %neg, !dbg !10556
  call void @put_reg(i64 %conv, i32 %and3), !dbg !10557
  ret void, !dbg !10558
}

; Function Attrs: noinline nounwind ssp uwtable
define internal void @op_set(i32 %op) #0 !dbg !10559 {
entry:
  call void @llvm.dbg.value(metadata i32 %op, metadata !10560, metadata !DIExpression()), !dbg !10561
  %and = and i32 %op, 7, !dbg !10562
  %conv = zext i32 %and to i64, !dbg !10564
  call void @llvm.dbg.value(metadata i64 %conv, metadata !10565, metadata !DIExpression()), !dbg !10561
  %shr = lshr i32 %op, 3, !dbg !10566
  %and1 = and i32 %shr, 7, !dbg !10567
  %conv2 = zext i32 %and1 to i64, !dbg !10568
  call void @llvm.dbg.value(metadata i64 %conv2, metadata !10569, metadata !DIExpression()), !dbg !10561
  br label %while.body, !dbg !10570

while.body:                                       ; preds = %entry
  br label %while_continue___0, !dbg !10573

while_continue___0:                               ; preds = %while.body
  br label %while_continue, !dbg !10573

while_continue:                                   ; preds = %while_continue___0
  br label %while_break, !dbg !10574

while_break___0:                                  ; No predecessors!
  br label %while_break, !dbg !10576

while_break:                                      ; preds = %while_break___0, %while_continue
  call void @print_reg(i64 %conv), !dbg !10577
  %call = call i32 @get_reg(i64 %conv), !dbg !10580
  call void @llvm.dbg.value(metadata i32 %call, metadata !10582, metadata !DIExpression()), !dbg !10561
  %sh_prom = trunc i64 %conv2 to i32, !dbg !10583
  %shl = shl i32 1, %sh_prom, !dbg !10583
  %or = or i32 %call, %shl, !dbg !10585
  call void @put_reg(i64 %conv, i32 %or), !dbg !10586
  ret void, !dbg !10587
}

; Function Attrs: noinline nounwind ssp uwtable
define internal void @op_rlc(i32 %op, %struct.opinfo* %oi) #0 !dbg !10588 {
entry:
  call void @llvm.dbg.value(metadata i32 %op, metadata !10589, metadata !DIExpression()), !dbg !10590
  call void @llvm.dbg.value(metadata %struct.opinfo* %oi, metadata !10591, metadata !DIExpression()), !dbg !10590
  %and = and i32 %op, 7, !dbg !10592
  %conv = zext i32 %and to i64, !dbg !10594
  call void @llvm.dbg.value(metadata i64 %conv, metadata !10595, metadata !DIExpression()), !dbg !10590
  br label %while.body, !dbg !10596

while.body:                                       ; preds = %entry
  br label %while_continue___0, !dbg !10599

while_continue___0:                               ; preds = %while.body
  br label %while_continue, !dbg !10599

while_continue:                                   ; preds = %while_continue___0
  br label %while_break, !dbg !10600

while_break___0:                                  ; No predecessors!
  br label %while_break, !dbg !10602

while_break:                                      ; preds = %while_break___0, %while_continue
  call void @print_reg(i64 %conv), !dbg !10603
  %call = call i32 @get_reg(i64 %conv), !dbg !10606
  call void @llvm.dbg.value(metadata i32 %call, metadata !10608, metadata !DIExpression()), !dbg !10590
  %conv1 = trunc i32 %call to i8, !dbg !10609
  call void @llvm.dbg.value(metadata i8 %conv1, metadata !10610, metadata !DIExpression()), !dbg !10590
  call void @llvm.dbg.value(metadata i8 %conv1, metadata !10611, metadata !DIExpression()), !dbg !10590
  %conv2 = zext i8 %conv1 to i32, !dbg !10612
  %shl = shl i32 %conv2, 1, !dbg !10613
  %conv3 = trunc i32 %shl to i8, !dbg !10614
  call void @llvm.dbg.value(metadata i8 %conv3, metadata !10611, metadata !DIExpression()), !dbg !10590
  %conv4 = zext i8 %conv3 to i32, !dbg !10615
  %conv5 = zext i8 %conv1 to i32, !dbg !10616
  %shr = ashr i32 %conv5, 7, !dbg !10617
  %or = or i32 %conv4, %shr, !dbg !10618
  %conv6 = trunc i32 %or to i8, !dbg !10619
  call void @llvm.dbg.value(metadata i8 %conv6, metadata !10611, metadata !DIExpression()), !dbg !10590
  %conv7 = zext i8 %conv1 to i32, !dbg !10620
  %shr8 = ashr i32 %conv7, 7, !dbg !10621
  %shl9 = shl i32 %shr8, 4, !dbg !10622
  %conv10 = trunc i32 %shl9 to i8, !dbg !10623
  store i8 %conv10, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !10624
  %conv11 = zext i8 %conv6 to i32, !dbg !10625
  %cmp = icmp eq i32 %conv11, 0, !dbg !10627
  br i1 %cmp, label %if.then, label %if.end, !dbg !10628

if.then:                                          ; preds = %while_break
  %0 = load i8, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !10629
  %conv13 = zext i8 %0 to i32, !dbg !10631
  %or14 = or i32 %conv13, 128, !dbg !10632
  %conv15 = trunc i32 %or14 to i8, !dbg !10633
  store i8 %conv15, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !10634
  br label %if.end, !dbg !10635

if.end:                                           ; preds = %if.then, %while_break
  %conv16 = zext i8 %conv6 to i32, !dbg !10636
  call void @put_reg(i64 %conv, i32 %conv16), !dbg !10639
  ret void, !dbg !10640
}

; Function Attrs: noinline nounwind ssp uwtable
define internal void @op_rrc(i32 %op, %struct.opinfo* %oi) #0 !dbg !10641 {
entry:
  call void @llvm.dbg.value(metadata i32 %op, metadata !10642, metadata !DIExpression()), !dbg !10643
  call void @llvm.dbg.value(metadata %struct.opinfo* %oi, metadata !10644, metadata !DIExpression()), !dbg !10643
  %and = and i32 %op, 7, !dbg !10645
  %conv = zext i32 %and to i64, !dbg !10647
  call void @llvm.dbg.value(metadata i64 %conv, metadata !10648, metadata !DIExpression()), !dbg !10643
  br label %while.body, !dbg !10649

while.body:                                       ; preds = %entry
  br label %while_continue___0, !dbg !10652

while_continue___0:                               ; preds = %while.body
  br label %while_continue, !dbg !10652

while_continue:                                   ; preds = %while_continue___0
  br label %while_break, !dbg !10653

while_break___0:                                  ; No predecessors!
  br label %while_break, !dbg !10655

while_break:                                      ; preds = %while_break___0, %while_continue
  call void @print_reg(i64 %conv), !dbg !10656
  %call = call i32 @get_reg(i64 %conv), !dbg !10659
  call void @llvm.dbg.value(metadata i32 %call, metadata !10661, metadata !DIExpression()), !dbg !10643
  %conv1 = trunc i32 %call to i8, !dbg !10662
  call void @llvm.dbg.value(metadata i8 %conv1, metadata !10663, metadata !DIExpression()), !dbg !10643
  call void @llvm.dbg.value(metadata i8 %conv1, metadata !10664, metadata !DIExpression()), !dbg !10643
  %conv2 = zext i8 %conv1 to i32, !dbg !10665
  %shr = ashr i32 %conv2, 1, !dbg !10666
  %conv3 = trunc i32 %shr to i8, !dbg !10667
  call void @llvm.dbg.value(metadata i8 %conv3, metadata !10664, metadata !DIExpression()), !dbg !10643
  %conv4 = zext i8 %conv3 to i32, !dbg !10668
  %conv5 = zext i8 %conv1 to i32, !dbg !10669
  %shl = shl i32 %conv5, 7, !dbg !10670
  %or = or i32 %conv4, %shl, !dbg !10671
  %conv6 = trunc i32 %or to i8, !dbg !10672
  call void @llvm.dbg.value(metadata i8 %conv6, metadata !10664, metadata !DIExpression()), !dbg !10643
  %conv7 = zext i8 %conv1 to i32, !dbg !10673
  %and8 = and i32 %conv7, 1, !dbg !10674
  %shl9 = shl i32 %and8, 4, !dbg !10675
  %conv10 = trunc i32 %shl9 to i8, !dbg !10676
  store i8 %conv10, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !10677
  %conv11 = zext i8 %conv6 to i32, !dbg !10678
  %cmp = icmp eq i32 %conv11, 0, !dbg !10680
  br i1 %cmp, label %if.then, label %if.end, !dbg !10681

if.then:                                          ; preds = %while_break
  %0 = load i8, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !10682
  %conv13 = zext i8 %0 to i32, !dbg !10684
  %or14 = or i32 %conv13, 128, !dbg !10685
  %conv15 = trunc i32 %or14 to i8, !dbg !10686
  store i8 %conv15, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !10687
  br label %if.end, !dbg !10688

if.end:                                           ; preds = %if.then, %while_break
  %conv16 = zext i8 %conv6 to i32, !dbg !10689
  call void @put_reg(i64 %conv, i32 %conv16), !dbg !10692
  ret void, !dbg !10693
}

; Function Attrs: noinline nounwind ssp uwtable
define internal void @op_rl(i32 %op, %struct.opinfo* %oi) #0 !dbg !10694 {
entry:
  call void @llvm.dbg.value(metadata i32 %op, metadata !10695, metadata !DIExpression()), !dbg !10696
  call void @llvm.dbg.value(metadata %struct.opinfo* %oi, metadata !10697, metadata !DIExpression()), !dbg !10696
  %and = and i32 %op, 7, !dbg !10698
  %conv = zext i32 %and to i64, !dbg !10700
  call void @llvm.dbg.value(metadata i64 %conv, metadata !10701, metadata !DIExpression()), !dbg !10696
  br label %while.body, !dbg !10702

while.body:                                       ; preds = %entry
  br label %while_continue___0, !dbg !10705

while_continue___0:                               ; preds = %while.body
  br label %while_continue, !dbg !10705

while_continue:                                   ; preds = %while_continue___0
  br label %while_break, !dbg !10706

while_break___0:                                  ; No predecessors!
  br label %while_break, !dbg !10708

while_break:                                      ; preds = %while_break___0, %while_continue
  call void @print_reg(i64 %conv), !dbg !10709
  %call = call i32 @get_reg(i64 %conv), !dbg !10712
  call void @llvm.dbg.value(metadata i32 %call, metadata !10714, metadata !DIExpression()), !dbg !10696
  %conv1 = trunc i32 %call to i8, !dbg !10715
  call void @llvm.dbg.value(metadata i8 %conv1, metadata !10716, metadata !DIExpression()), !dbg !10696
  call void @llvm.dbg.value(metadata i8 %conv1, metadata !10717, metadata !DIExpression()), !dbg !10696
  %conv2 = zext i8 %conv1 to i32, !dbg !10718
  %shl = shl i32 %conv2, 1, !dbg !10719
  %conv3 = trunc i32 %shl to i8, !dbg !10720
  call void @llvm.dbg.value(metadata i8 %conv3, metadata !10717, metadata !DIExpression()), !dbg !10696
  %conv4 = zext i8 %conv3 to i32, !dbg !10721
  %0 = load i8, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !10722
  %conv5 = zext i8 %0 to i32, !dbg !10723
  %and6 = and i32 %conv5, 16, !dbg !10724
  %shr = ashr i32 %and6, 4, !dbg !10725
  %or = or i32 %conv4, %shr, !dbg !10726
  %conv7 = trunc i32 %or to i8, !dbg !10727
  call void @llvm.dbg.value(metadata i8 %conv7, metadata !10717, metadata !DIExpression()), !dbg !10696
  %conv8 = zext i8 %conv1 to i32, !dbg !10728
  %shr9 = ashr i32 %conv8, 7, !dbg !10729
  %shl10 = shl i32 %shr9, 4, !dbg !10730
  %conv11 = trunc i32 %shl10 to i8, !dbg !10731
  store i8 %conv11, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !10732
  %conv12 = zext i8 %conv7 to i32, !dbg !10733
  %cmp = icmp eq i32 %conv12, 0, !dbg !10735
  br i1 %cmp, label %if.then, label %if.end, !dbg !10736

if.then:                                          ; preds = %while_break
  %1 = load i8, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !10737
  %conv14 = zext i8 %1 to i32, !dbg !10739
  %or15 = or i32 %conv14, 128, !dbg !10740
  %conv16 = trunc i32 %or15 to i8, !dbg !10741
  store i8 %conv16, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !10742
  br label %if.end, !dbg !10743

if.end:                                           ; preds = %if.then, %while_break
  %conv17 = zext i8 %conv7 to i32, !dbg !10744
  call void @put_reg(i64 %conv, i32 %conv17), !dbg !10747
  ret void, !dbg !10748
}

; Function Attrs: noinline nounwind ssp uwtable
define internal void @op_rr(i32 %op, %struct.opinfo* %oi) #0 !dbg !10749 {
entry:
  call void @llvm.dbg.value(metadata i32 %op, metadata !10750, metadata !DIExpression()), !dbg !10751
  call void @llvm.dbg.value(metadata %struct.opinfo* %oi, metadata !10752, metadata !DIExpression()), !dbg !10751
  %and = and i32 %op, 7, !dbg !10753
  %conv = zext i32 %and to i64, !dbg !10755
  call void @llvm.dbg.value(metadata i64 %conv, metadata !10756, metadata !DIExpression()), !dbg !10751
  br label %while.body, !dbg !10757

while.body:                                       ; preds = %entry
  br label %while_continue___0, !dbg !10760

while_continue___0:                               ; preds = %while.body
  br label %while_continue, !dbg !10760

while_continue:                                   ; preds = %while_continue___0
  br label %while_break, !dbg !10761

while_break___0:                                  ; No predecessors!
  br label %while_break, !dbg !10763

while_break:                                      ; preds = %while_break___0, %while_continue
  call void @print_reg(i64 %conv), !dbg !10764
  %call = call i32 @get_reg(i64 %conv), !dbg !10767
  call void @llvm.dbg.value(metadata i32 %call, metadata !10769, metadata !DIExpression()), !dbg !10751
  %conv1 = trunc i32 %call to i8, !dbg !10770
  call void @llvm.dbg.value(metadata i8 %conv1, metadata !10771, metadata !DIExpression()), !dbg !10751
  call void @llvm.dbg.value(metadata i8 %conv1, metadata !10772, metadata !DIExpression()), !dbg !10751
  %conv2 = zext i8 %conv1 to i32, !dbg !10773
  %shr = ashr i32 %conv2, 1, !dbg !10774
  %conv3 = trunc i32 %shr to i8, !dbg !10775
  call void @llvm.dbg.value(metadata i8 %conv3, metadata !10772, metadata !DIExpression()), !dbg !10751
  %conv4 = zext i8 %conv3 to i32, !dbg !10776
  %0 = load i8, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !10777
  %conv5 = zext i8 %0 to i32, !dbg !10778
  %and6 = and i32 %conv5, 16, !dbg !10779
  %shl = shl i32 %and6, 3, !dbg !10780
  %or = or i32 %conv4, %shl, !dbg !10781
  %conv7 = trunc i32 %or to i8, !dbg !10782
  call void @llvm.dbg.value(metadata i8 %conv7, metadata !10772, metadata !DIExpression()), !dbg !10751
  %conv8 = zext i8 %conv1 to i32, !dbg !10783
  %and9 = and i32 %conv8, 1, !dbg !10784
  %shl10 = shl i32 %and9, 4, !dbg !10785
  %conv11 = trunc i32 %shl10 to i8, !dbg !10786
  store i8 %conv11, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !10787
  %conv12 = zext i8 %conv7 to i32, !dbg !10788
  %cmp = icmp eq i32 %conv12, 0, !dbg !10790
  br i1 %cmp, label %if.then, label %if.end, !dbg !10791

if.then:                                          ; preds = %while_break
  %1 = load i8, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !10792
  %conv14 = zext i8 %1 to i32, !dbg !10794
  %or15 = or i32 %conv14, 128, !dbg !10795
  %conv16 = trunc i32 %or15 to i8, !dbg !10796
  store i8 %conv16, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !10797
  br label %if.end, !dbg !10798

if.end:                                           ; preds = %if.then, %while_break
  %conv17 = zext i8 %conv7 to i32, !dbg !10799
  call void @put_reg(i64 %conv, i32 %conv17), !dbg !10802
  ret void, !dbg !10803
}

; Function Attrs: noinline nounwind ssp uwtable
define internal void @op_sla(i32 %op, %struct.opinfo* %oi) #0 !dbg !10804 {
entry:
  call void @llvm.dbg.value(metadata i32 %op, metadata !10805, metadata !DIExpression()), !dbg !10806
  call void @llvm.dbg.value(metadata %struct.opinfo* %oi, metadata !10807, metadata !DIExpression()), !dbg !10806
  %and = and i32 %op, 7, !dbg !10808
  %conv = zext i32 %and to i64, !dbg !10810
  call void @llvm.dbg.value(metadata i64 %conv, metadata !10811, metadata !DIExpression()), !dbg !10806
  br label %while.body, !dbg !10812

while.body:                                       ; preds = %entry
  br label %while_continue___0, !dbg !10815

while_continue___0:                               ; preds = %while.body
  br label %while_continue, !dbg !10815

while_continue:                                   ; preds = %while_continue___0
  br label %while_break, !dbg !10816

while_break___0:                                  ; No predecessors!
  br label %while_break, !dbg !10818

while_break:                                      ; preds = %while_break___0, %while_continue
  call void @print_reg(i64 %conv), !dbg !10819
  %call = call i32 @get_reg(i64 %conv), !dbg !10822
  call void @llvm.dbg.value(metadata i32 %call, metadata !10824, metadata !DIExpression()), !dbg !10806
  %conv1 = trunc i32 %call to i8, !dbg !10825
  call void @llvm.dbg.value(metadata i8 %conv1, metadata !10826, metadata !DIExpression()), !dbg !10806
  call void @llvm.dbg.value(metadata i8 %conv1, metadata !10827, metadata !DIExpression()), !dbg !10806
  %conv2 = zext i8 %conv1 to i32, !dbg !10828
  %shl = shl i32 %conv2, 1, !dbg !10829
  %conv3 = trunc i32 %shl to i8, !dbg !10830
  call void @llvm.dbg.value(metadata i8 %conv3, metadata !10827, metadata !DIExpression()), !dbg !10806
  %conv4 = zext i8 %conv1 to i32, !dbg !10831
  %shr = ashr i32 %conv4, 7, !dbg !10832
  %shl5 = shl i32 %shr, 4, !dbg !10833
  %conv6 = trunc i32 %shl5 to i8, !dbg !10834
  store i8 %conv6, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !10835
  %conv7 = zext i8 %conv3 to i32, !dbg !10836
  %cmp = icmp eq i32 %conv7, 0, !dbg !10838
  br i1 %cmp, label %if.then, label %if.end, !dbg !10839

if.then:                                          ; preds = %while_break
  %0 = load i8, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !10840
  %conv9 = zext i8 %0 to i32, !dbg !10842
  %or = or i32 %conv9, 128, !dbg !10843
  %conv10 = trunc i32 %or to i8, !dbg !10844
  store i8 %conv10, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !10845
  br label %if.end, !dbg !10846

if.end:                                           ; preds = %if.then, %while_break
  %conv11 = zext i8 %conv3 to i32, !dbg !10847
  call void @put_reg(i64 %conv, i32 %conv11), !dbg !10850
  ret void, !dbg !10851
}

; Function Attrs: noinline nounwind ssp uwtable
define internal void @op_sra(i32 %op, %struct.opinfo* %oi) #0 !dbg !10852 {
entry:
  call void @llvm.dbg.value(metadata i32 %op, metadata !10853, metadata !DIExpression()), !dbg !10854
  call void @llvm.dbg.value(metadata %struct.opinfo* %oi, metadata !10855, metadata !DIExpression()), !dbg !10854
  %and = and i32 %op, 7, !dbg !10856
  %conv = zext i32 %and to i64, !dbg !10858
  call void @llvm.dbg.value(metadata i64 %conv, metadata !10859, metadata !DIExpression()), !dbg !10854
  br label %while.body, !dbg !10860

while.body:                                       ; preds = %entry
  br label %while_continue___0, !dbg !10863

while_continue___0:                               ; preds = %while.body
  br label %while_continue, !dbg !10863

while_continue:                                   ; preds = %while_continue___0
  br label %while_break, !dbg !10864

while_break___0:                                  ; No predecessors!
  br label %while_break, !dbg !10866

while_break:                                      ; preds = %while_break___0, %while_continue
  call void @print_reg(i64 %conv), !dbg !10867
  %call = call i32 @get_reg(i64 %conv), !dbg !10870
  call void @llvm.dbg.value(metadata i32 %call, metadata !10872, metadata !DIExpression()), !dbg !10854
  %conv1 = trunc i32 %call to i8, !dbg !10873
  call void @llvm.dbg.value(metadata i8 %conv1, metadata !10874, metadata !DIExpression()), !dbg !10854
  call void @llvm.dbg.value(metadata i8 %conv1, metadata !10875, metadata !DIExpression()), !dbg !10854
  %conv2 = zext i8 %conv1 to i32, !dbg !10876
  %shr = ashr i32 %conv2, 1, !dbg !10877
  %conv3 = trunc i32 %shr to i8, !dbg !10878
  call void @llvm.dbg.value(metadata i8 %conv3, metadata !10875, metadata !DIExpression()), !dbg !10854
  %conv4 = zext i8 %conv3 to i32, !dbg !10879
  %conv5 = zext i8 %conv1 to i32, !dbg !10880
  %and6 = and i32 %conv5, 128, !dbg !10881
  %or = or i32 %conv4, %and6, !dbg !10882
  %conv7 = trunc i32 %or to i8, !dbg !10883
  call void @llvm.dbg.value(metadata i8 %conv7, metadata !10875, metadata !DIExpression()), !dbg !10854
  %conv8 = zext i8 %conv1 to i32, !dbg !10884
  %and9 = and i32 %conv8, 1, !dbg !10885
  %shl = shl i32 %and9, 4, !dbg !10886
  %conv10 = trunc i32 %shl to i8, !dbg !10887
  store i8 %conv10, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !10888
  %conv11 = zext i8 %conv7 to i32, !dbg !10889
  %cmp = icmp eq i32 %conv11, 0, !dbg !10891
  br i1 %cmp, label %if.then, label %if.end, !dbg !10892

if.then:                                          ; preds = %while_break
  %0 = load i8, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !10893
  %conv13 = zext i8 %0 to i32, !dbg !10895
  %or14 = or i32 %conv13, 128, !dbg !10896
  %conv15 = trunc i32 %or14 to i8, !dbg !10897
  store i8 %conv15, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !10898
  br label %if.end, !dbg !10899

if.end:                                           ; preds = %if.then, %while_break
  %conv16 = zext i8 %conv7 to i32, !dbg !10900
  call void @put_reg(i64 %conv, i32 %conv16), !dbg !10903
  ret void, !dbg !10904
}

; Function Attrs: noinline nounwind ssp uwtable
define internal void @op_swap(i32 %op, %struct.opinfo* %oi) #0 !dbg !10905 {
entry:
  call void @llvm.dbg.value(metadata i32 %op, metadata !10906, metadata !DIExpression()), !dbg !10907
  call void @llvm.dbg.value(metadata %struct.opinfo* %oi, metadata !10908, metadata !DIExpression()), !dbg !10907
  %and = and i32 %op, 7, !dbg !10909
  %conv = zext i32 %and to i64, !dbg !10911
  call void @llvm.dbg.value(metadata i64 %conv, metadata !10912, metadata !DIExpression()), !dbg !10907
  br label %while.body, !dbg !10913

while.body:                                       ; preds = %entry
  br label %while_continue___0, !dbg !10916

while_continue___0:                               ; preds = %while.body
  br label %while_continue, !dbg !10916

while_continue:                                   ; preds = %while_continue___0
  br label %while_break, !dbg !10917

while_break___0:                                  ; No predecessors!
  br label %while_break, !dbg !10919

while_break:                                      ; preds = %while_break___0, %while_continue
  call void @print_reg(i64 %conv), !dbg !10920
  %call = call i32 @get_reg(i64 %conv), !dbg !10923
  call void @llvm.dbg.value(metadata i32 %call, metadata !10925, metadata !DIExpression()), !dbg !10907
  %shr = lshr i32 %call, 4, !dbg !10926
  %shl = shl i32 %call, 4, !dbg !10927
  %or = or i32 %shr, %shl, !dbg !10928
  call void @llvm.dbg.value(metadata i32 %or, metadata !10929, metadata !DIExpression()), !dbg !10907
  store i8 0, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !10930
  %cmp = icmp eq i32 %or, 0, !dbg !10931
  br i1 %cmp, label %if.then, label %if.end, !dbg !10933

if.then:                                          ; preds = %while_break
  %0 = load i8, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !10934
  %conv2 = zext i8 %0 to i32, !dbg !10936
  %or3 = or i32 %conv2, 128, !dbg !10937
  %conv4 = trunc i32 %or3 to i8, !dbg !10938
  store i8 %conv4, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !10939
  br label %if.end, !dbg !10940

if.end:                                           ; preds = %if.then, %while_break
  call void @put_reg(i64 %conv, i32 %or), !dbg !10941
  ret void, !dbg !10944
}

; Function Attrs: noinline nounwind ssp uwtable
define internal void @op_srl(i32 %op, %struct.opinfo* %oi) #0 !dbg !10945 {
entry:
  call void @llvm.dbg.value(metadata i32 %op, metadata !10946, metadata !DIExpression()), !dbg !10947
  call void @llvm.dbg.value(metadata %struct.opinfo* %oi, metadata !10948, metadata !DIExpression()), !dbg !10947
  %and = and i32 %op, 7, !dbg !10949
  %conv = zext i32 %and to i64, !dbg !10951
  call void @llvm.dbg.value(metadata i64 %conv, metadata !10952, metadata !DIExpression()), !dbg !10947
  br label %while.body, !dbg !10953

while.body:                                       ; preds = %entry
  br label %while_continue___0, !dbg !10956

while_continue___0:                               ; preds = %while.body
  br label %while_continue, !dbg !10956

while_continue:                                   ; preds = %while_continue___0
  br label %while_break, !dbg !10957

while_break___0:                                  ; No predecessors!
  br label %while_break, !dbg !10959

while_break:                                      ; preds = %while_break___0, %while_continue
  call void @print_reg(i64 %conv), !dbg !10960
  %call = call i32 @get_reg(i64 %conv), !dbg !10963
  call void @llvm.dbg.value(metadata i32 %call, metadata !10965, metadata !DIExpression()), !dbg !10947
  %conv1 = trunc i32 %call to i8, !dbg !10966
  call void @llvm.dbg.value(metadata i8 %conv1, metadata !10967, metadata !DIExpression()), !dbg !10947
  call void @llvm.dbg.value(metadata i8 %conv1, metadata !10968, metadata !DIExpression()), !dbg !10947
  %conv2 = zext i8 %conv1 to i32, !dbg !10969
  %shr = ashr i32 %conv2, 1, !dbg !10970
  %conv3 = trunc i32 %shr to i8, !dbg !10971
  call void @llvm.dbg.value(metadata i8 %conv3, metadata !10968, metadata !DIExpression()), !dbg !10947
  %conv4 = zext i8 %conv1 to i32, !dbg !10972
  %and5 = and i32 %conv4, 1, !dbg !10973
  %shl = shl i32 %and5, 4, !dbg !10974
  %conv6 = trunc i32 %shl to i8, !dbg !10975
  store i8 %conv6, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !10976
  %conv7 = zext i8 %conv3 to i32, !dbg !10977
  %cmp = icmp eq i32 %conv7, 0, !dbg !10979
  br i1 %cmp, label %if.then, label %if.end, !dbg !10980

if.then:                                          ; preds = %while_break
  %0 = load i8, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !10981
  %conv9 = zext i8 %0 to i32, !dbg !10983
  %or = or i32 %conv9, 128, !dbg !10984
  %conv10 = trunc i32 %or to i8, !dbg !10985
  store i8 %conv10, i8* getelementptr inbounds (%union.__anonunion_gbcpu_regs_u_28, %union.__anonunion_gbcpu_regs_u_28* @gbcpu_regs, i32 0, i32 0, i32 7), align 1, !dbg !10986
  br label %if.end, !dbg !10987

if.end:                                           ; preds = %if.then, %while_break
  %conv11 = zext i8 %conv3 to i32, !dbg !10988
  call void @put_reg(i64 %conv, i32 %conv11), !dbg !10991
  ret void, !dbg !10992
}

; Function Attrs: nounwind readnone speculatable willreturn
declare double @llvm.sin.f64(double) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare double @llvm.cos.f64(double) #1

; Function Attrs: noinline nounwind ssp uwtable
define internal void @gb_flush_buffer() #0 !dbg !10993 {
entry:
  call void @llvm.dbg.declare(metadata !666, metadata !10994, metadata !DIExpression()), !dbg !10995
  call void @llvm.dbg.declare(metadata !666, metadata !10996, metadata !DIExpression()), !dbg !10997
  call void @llvm.dbg.declare(metadata !666, metadata !10998, metadata !DIExpression()), !dbg !10999
  call void @llvm.dbg.declare(metadata !666, metadata !11000, metadata !DIExpression()), !dbg !11001
  call void @llvm.dbg.declare(metadata !666, metadata !11002, metadata !DIExpression()), !dbg !11003
  call void @llvm.dbg.declare(metadata !666, metadata !11004, metadata !DIExpression()), !dbg !11005
  call void @llvm.dbg.declare(metadata !666, metadata !11006, metadata !DIExpression()), !dbg !11007
  call void @llvm.dbg.declare(metadata !666, metadata !11008, metadata !DIExpression()), !dbg !11009
  call void @llvm.dbg.declare(metadata !666, metadata !11010, metadata !DIExpression()), !dbg !11011
  call void @llvm.dbg.declare(metadata !666, metadata !11012, metadata !DIExpression()), !dbg !11013
  call void @llvm.dbg.declare(metadata !666, metadata !11014, metadata !DIExpression()), !dbg !11015
  call void @llvm.dbg.declare(metadata !666, metadata !11016, metadata !DIExpression()), !dbg !11017
  %0 = load %struct.gbhw_buffer*, %struct.gbhw_buffer** @soundbuf, align 8, !dbg !11018
  %1 = ptrtoint %struct.gbhw_buffer* %0 to i64, !dbg !11021
  %cmp = icmp ne i64 %1, 0, !dbg !11022
  br i1 %cmp, label %if.end, label %if.then, !dbg !11023

if.then:                                          ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.71, i32 0, i32 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.64, i32 0, i32 0), i32 384, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.72, i32 0, i32 0)) #9, !dbg !11024
  unreachable, !dbg !11024

if.end:                                           ; preds = %entry
  %2 = load %struct.gbhw_buffer*, %struct.gbhw_buffer** @impbuf, align 8, !dbg !11028
  %3 = ptrtoint %struct.gbhw_buffer* %2 to i64, !dbg !11030
  %cmp1 = icmp ne i64 %3, 0, !dbg !11031
  br i1 %cmp1, label %if.end3, label %if.then2, !dbg !11032

if.then2:                                         ; preds = %if.end
  call void @__assert_fail(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.69, i32 0, i32 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.64, i32 0, i32 0), i32 385, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.72, i32 0, i32 0)) #9, !dbg !11033
  unreachable, !dbg !11033

if.end3:                                          ; preds = %if.end
  %4 = load %struct.gbhw_buffer*, %struct.gbhw_buffer** @soundbuf, align 8, !dbg !11037
  %l_lvl = getelementptr inbounds %struct.gbhw_buffer, %struct.gbhw_buffer* %4, i32 0, i32 2, !dbg !11038
  %5 = load i64, i64* %l_lvl, align 8, !dbg !11038
  call void @llvm.dbg.value(metadata i64 %5, metadata !11039, metadata !DIExpression()), !dbg !11040
  %6 = load %struct.gbhw_buffer*, %struct.gbhw_buffer** @soundbuf, align 8, !dbg !11041
  %r_lvl = getelementptr inbounds %struct.gbhw_buffer, %struct.gbhw_buffer* %6, i32 0, i32 3, !dbg !11042
  %7 = load i64, i64* %r_lvl, align 8, !dbg !11042
  call void @llvm.dbg.value(metadata i64 %7, metadata !11043, metadata !DIExpression()), !dbg !11040
  call void @llvm.dbg.value(metadata i64 0, metadata !11044, metadata !DIExpression()), !dbg !11040
  br label %while.body, !dbg !11045

while.body:                                       ; preds = %if.end40, %if.end3
  %l_smpl.0 = phi i64 [ %5, %if.end3 ], [ %add, %if.end40 ], !dbg !11048
  %r_smpl.0 = phi i64 [ %7, %if.end3 ], [ %add12, %if.end40 ], !dbg !11048
  %i.0 = phi i64 [ 0, %if.end3 ], [ %inc, %if.end40 ], !dbg !11048
  call void @llvm.dbg.value(metadata i64 %i.0, metadata !11044, metadata !DIExpression()), !dbg !11040
  call void @llvm.dbg.value(metadata i64 %r_smpl.0, metadata !11043, metadata !DIExpression()), !dbg !11040
  call void @llvm.dbg.value(metadata i64 %l_smpl.0, metadata !11039, metadata !DIExpression()), !dbg !11040
  br label %while_continue___0, !dbg !11049

while_continue___0:                               ; preds = %while.body
  br label %while_continue, !dbg !11049

while_continue:                                   ; preds = %while_continue___0
  %8 = load %struct.gbhw_buffer*, %struct.gbhw_buffer** @soundbuf, align 8, !dbg !11050
  %samples = getelementptr inbounds %struct.gbhw_buffer, %struct.gbhw_buffer* %8, i32 0, i32 5, !dbg !11053
  %9 = load i64, i64* %samples, align 8, !dbg !11053
  %cmp4 = icmp slt i64 %i.0, %9, !dbg !11054
  br i1 %cmp4, label %if.end6, label %if.then5, !dbg !11055

if.then5:                                         ; preds = %while_continue
  br label %while_break, !dbg !11056

if.end6:                                          ; preds = %while_continue
  %10 = load %struct.gbhw_buffer*, %struct.gbhw_buffer** @impbuf, align 8, !dbg !11058
  %data = getelementptr inbounds %struct.gbhw_buffer, %struct.gbhw_buffer* %10, i32 0, i32 0, !dbg !11059
  %11 = load i16*, i16** %data, align 8, !dbg !11059
  %mul = mul nsw i64 %i.0, 2, !dbg !11060
  %add.ptr = getelementptr inbounds i16, i16* %11, i64 %mul, !dbg !11061
  %12 = load i16, i16* %add.ptr, align 2, !dbg !11062
  %conv = sext i16 %12 to i64, !dbg !11063
  %add = add nsw i64 %l_smpl.0, %conv, !dbg !11064
  call void @llvm.dbg.value(metadata i64 %add, metadata !11039, metadata !DIExpression()), !dbg !11040
  %13 = load %struct.gbhw_buffer*, %struct.gbhw_buffer** @impbuf, align 8, !dbg !11065
  %data7 = getelementptr inbounds %struct.gbhw_buffer, %struct.gbhw_buffer* %13, i32 0, i32 0, !dbg !11066
  %14 = load i16*, i16** %data7, align 8, !dbg !11066
  %mul8 = mul nsw i64 %i.0, 2, !dbg !11067
  %add9 = add nsw i64 %mul8, 1, !dbg !11068
  %add.ptr10 = getelementptr inbounds i16, i16* %14, i64 %add9, !dbg !11069
  %15 = load i16, i16* %add.ptr10, align 2, !dbg !11070
  %conv11 = sext i16 %15 to i64, !dbg !11071
  %add12 = add nsw i64 %r_smpl.0, %conv11, !dbg !11072
  call void @llvm.dbg.value(metadata i64 %add12, metadata !11043, metadata !DIExpression()), !dbg !11040
  %16 = load i64, i64* @master_volume, align 8, !dbg !11073
  %mul13 = mul nsw i64 %add, %16, !dbg !11074
  %div = sdiv i64 %mul13, 65536, !dbg !11075
  %conv14 = trunc i64 %div to i16, !dbg !11076
  %17 = load %struct.gbhw_buffer*, %struct.gbhw_buffer** @soundbuf, align 8, !dbg !11077
  %data15 = getelementptr inbounds %struct.gbhw_buffer, %struct.gbhw_buffer* %17, i32 0, i32 0, !dbg !11078
  %18 = load i16*, i16** %data15, align 8, !dbg !11078
  %mul16 = mul nsw i64 %i.0, 2, !dbg !11079
  %add.ptr17 = getelementptr inbounds i16, i16* %18, i64 %mul16, !dbg !11080
  store i16 %conv14, i16* %add.ptr17, align 2, !dbg !11081
  %19 = load i64, i64* @master_volume, align 8, !dbg !11082
  %mul18 = mul nsw i64 %add12, %19, !dbg !11083
  %div19 = sdiv i64 %mul18, 65536, !dbg !11084
  %conv20 = trunc i64 %div19 to i16, !dbg !11085
  %20 = load %struct.gbhw_buffer*, %struct.gbhw_buffer** @soundbuf, align 8, !dbg !11086
  %data21 = getelementptr inbounds %struct.gbhw_buffer, %struct.gbhw_buffer* %20, i32 0, i32 0, !dbg !11087
  %21 = load i16*, i16** %data21, align 8, !dbg !11087
  %mul22 = mul nsw i64 %i.0, 2, !dbg !11088
  %add23 = add nsw i64 %mul22, 1, !dbg !11089
  %add.ptr24 = getelementptr inbounds i16, i16* %21, i64 %add23, !dbg !11090
  store i16 %conv20, i16* %add.ptr24, align 2, !dbg !11091
  %22 = load i64, i64* @lmaxval, align 8, !dbg !11092
  %cmp25 = icmp sgt i64 %add, %22, !dbg !11094
  br i1 %cmp25, label %if.then27, label %if.end28, !dbg !11095

if.then27:                                        ; preds = %if.end6
  store i64 %add, i64* @lmaxval, align 8, !dbg !11096
  br label %if.end28, !dbg !11098

if.end28:                                         ; preds = %if.then27, %if.end6
  %23 = load i64, i64* @lminval, align 8, !dbg !11099
  %cmp29 = icmp slt i64 %add, %23, !dbg !11101
  br i1 %cmp29, label %if.then31, label %if.end32, !dbg !11102

if.then31:                                        ; preds = %if.end28
  store i64 %add, i64* @lminval, align 8, !dbg !11103
  br label %if.end32, !dbg !11105

if.end32:                                         ; preds = %if.then31, %if.end28
  %24 = load i64, i64* @rmaxval, align 8, !dbg !11106
  %cmp33 = icmp sgt i64 %add12, %24, !dbg !11108
  br i1 %cmp33, label %if.then35, label %if.end36, !dbg !11109

if.then35:                                        ; preds = %if.end32
  store i64 %add12, i64* @rmaxval, align 8, !dbg !11110
  br label %if.end36, !dbg !11112

if.end36:                                         ; preds = %if.then35, %if.end32
  %25 = load i64, i64* @rminval, align 8, !dbg !11113
  %cmp37 = icmp slt i64 %add12, %25, !dbg !11115
  br i1 %cmp37, label %if.then39, label %if.end40, !dbg !11116

if.then39:                                        ; preds = %if.end36
  store i64 %add12, i64* @rminval, align 8, !dbg !11117
  br label %if.end40, !dbg !11119

if.end40:                                         ; preds = %if.then39, %if.end36
  %inc = add nsw i64 %i.0, 1, !dbg !11120
  call void @llvm.dbg.value(metadata i64 %inc, metadata !11044, metadata !DIExpression()), !dbg !11040
  br label %while.body, !dbg !11045, !llvm.loop !11121

while_break___0:                                  ; No predecessors!
  br label %while_break, !dbg !11123

while_break:                                      ; preds = %while_break___0, %if.then5
  %26 = load %struct.gbhw_buffer*, %struct.gbhw_buffer** @soundbuf, align 8, !dbg !11124
  %samples41 = getelementptr inbounds %struct.gbhw_buffer, %struct.gbhw_buffer* %26, i32 0, i32 5, !dbg !11125
  %27 = load i64, i64* %samples41, align 8, !dbg !11125
  %28 = load %struct.gbhw_buffer*, %struct.gbhw_buffer** @soundbuf, align 8, !dbg !11126
  %pos = getelementptr inbounds %struct.gbhw_buffer, %struct.gbhw_buffer* %28, i32 0, i32 1, !dbg !11127
  store i64 %27, i64* %pos, align 8, !dbg !11128
  %29 = load %struct.gbhw_buffer*, %struct.gbhw_buffer** @soundbuf, align 8, !dbg !11129
  %l_lvl42 = getelementptr inbounds %struct.gbhw_buffer, %struct.gbhw_buffer* %29, i32 0, i32 2, !dbg !11130
  store i64 %l_smpl.0, i64* %l_lvl42, align 8, !dbg !11131
  %30 = load %struct.gbhw_buffer*, %struct.gbhw_buffer** @soundbuf, align 8, !dbg !11132
  %r_lvl43 = getelementptr inbounds %struct.gbhw_buffer, %struct.gbhw_buffer* %30, i32 0, i32 3, !dbg !11133
  store i64 %r_smpl.0, i64* %r_lvl43, align 8, !dbg !11134
  %31 = load void (%struct.gbhw_buffer*, i8*)*, void (%struct.gbhw_buffer*, i8*)** @callback, align 8, !dbg !11135
  %32 = ptrtoint void (%struct.gbhw_buffer*, i8*)* %31 to i64, !dbg !11137
  %cmp44 = icmp ne i64 %32, 0, !dbg !11138
  br i1 %cmp44, label %if.then46, label %if.end47, !dbg !11139

if.then46:                                        ; preds = %while_break
  %33 = load void (%struct.gbhw_buffer*, i8*)*, void (%struct.gbhw_buffer*, i8*)** @callback, align 8, !dbg !11140
  %34 = load %struct.gbhw_buffer*, %struct.gbhw_buffer** @soundbuf, align 8, !dbg !11144
  %35 = load i8*, i8** @callbackpriv, align 8, !dbg !11145
  call void %33(%struct.gbhw_buffer* %34, i8* %35), !dbg !11146
  br label %if.end47, !dbg !11147

if.end47:                                         ; preds = %if.then46, %while_break
  %36 = load %struct.gbhw_buffer*, %struct.gbhw_buffer** @impbuf, align 8, !dbg !11148
  %samples48 = getelementptr inbounds %struct.gbhw_buffer, %struct.gbhw_buffer* %36, i32 0, i32 5, !dbg !11150
  %37 = load i64, i64* %samples48, align 8, !dbg !11150
  %38 = load %struct.gbhw_buffer*, %struct.gbhw_buffer** @soundbuf, align 8, !dbg !11151
  %samples49 = getelementptr inbounds %struct.gbhw_buffer, %struct.gbhw_buffer* %38, i32 0, i32 5, !dbg !11152
  %39 = load i64, i64* %samples49, align 8, !dbg !11152
  %sub = sub nsw i64 %37, %39, !dbg !11153
  call void @llvm.dbg.value(metadata i64 %sub, metadata !11154, metadata !DIExpression()), !dbg !11040
  %40 = load %struct.gbhw_buffer*, %struct.gbhw_buffer** @impbuf, align 8, !dbg !11155
  %data50 = getelementptr inbounds %struct.gbhw_buffer, %struct.gbhw_buffer* %40, i32 0, i32 0, !dbg !11157
  %41 = load i16*, i16** %data50, align 8, !dbg !11157
  %42 = bitcast i16* %41 to i8*, !dbg !11158
  %43 = load %struct.gbhw_buffer*, %struct.gbhw_buffer** @impbuf, align 8, !dbg !11159
  %data51 = getelementptr inbounds %struct.gbhw_buffer, %struct.gbhw_buffer* %43, i32 0, i32 0, !dbg !11160
  %44 = load i16*, i16** %data51, align 8, !dbg !11160
  %45 = load %struct.gbhw_buffer*, %struct.gbhw_buffer** @soundbuf, align 8, !dbg !11161
  %samples52 = getelementptr inbounds %struct.gbhw_buffer, %struct.gbhw_buffer* %45, i32 0, i32 5, !dbg !11162
  %46 = load i64, i64* %samples52, align 8, !dbg !11162
  %mul53 = mul nsw i64 2, %46, !dbg !11163
  %add.ptr54 = getelementptr inbounds i16, i16* %44, i64 %mul53, !dbg !11164
  %47 = bitcast i16* %add.ptr54 to i8*, !dbg !11165
  %mul55 = mul nsw i64 4, %sub, !dbg !11166
  %conv56 = trunc i64 %mul55 to i32, !dbg !11167
  %call = call i8* @memmove(i8* %42, i8* %47, i32 %conv56) #11, !dbg !11168
  %48 = load %struct.gbhw_buffer*, %struct.gbhw_buffer** @impbuf, align 8, !dbg !11169
  %data57 = getelementptr inbounds %struct.gbhw_buffer, %struct.gbhw_buffer* %48, i32 0, i32 0, !dbg !11171
  %49 = load i16*, i16** %data57, align 8, !dbg !11171
  %mul58 = mul nsw i64 2, %sub, !dbg !11172
  %add.ptr59 = getelementptr inbounds i16, i16* %49, i64 %mul58, !dbg !11173
  %50 = bitcast i16* %add.ptr59 to i8*, !dbg !11174
  %51 = load %struct.gbhw_buffer*, %struct.gbhw_buffer** @impbuf, align 8, !dbg !11175
  %bytes = getelementptr inbounds %struct.gbhw_buffer, %struct.gbhw_buffer* %51, i32 0, i32 4, !dbg !11176
  %52 = load i64, i64* %bytes, align 8, !dbg !11176
  %mul60 = mul nsw i64 4, %sub, !dbg !11177
  %sub61 = sub nsw i64 %52, %mul60, !dbg !11178
  %conv62 = trunc i64 %sub61 to i32, !dbg !11179
  %call63 = call i8* @memset(i8* %50, i32 0, i32 %conv62) #11, !dbg !11180
  %53 = load %struct.gbhw_buffer*, %struct.gbhw_buffer** @impbuf, align 8, !dbg !11181
  %bytes64 = getelementptr inbounds %struct.gbhw_buffer, %struct.gbhw_buffer* %53, i32 0, i32 4, !dbg !11183
  %54 = load i64, i64* %bytes64, align 8, !dbg !11183
  %55 = load %struct.gbhw_buffer*, %struct.gbhw_buffer** @impbuf, align 8, !dbg !11184
  %samples65 = getelementptr inbounds %struct.gbhw_buffer, %struct.gbhw_buffer* %55, i32 0, i32 5, !dbg !11185
  %56 = load i64, i64* %samples65, align 8, !dbg !11185
  %mul66 = mul nsw i64 %56, 4, !dbg !11186
  %cmp67 = icmp eq i64 %54, %mul66, !dbg !11187
  br i1 %cmp67, label %if.end70, label %if.then69, !dbg !11188

if.then69:                                        ; preds = %if.end47
  call void @__assert_fail(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.73, i32 0, i32 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.64, i32 0, i32 0), i32 409, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.72, i32 0, i32 0)) #9, !dbg !11189
  unreachable, !dbg !11189

if.end70:                                         ; preds = %if.end47
  %57 = load %struct.gbhw_buffer*, %struct.gbhw_buffer** @soundbuf, align 8, !dbg !11193
  %bytes71 = getelementptr inbounds %struct.gbhw_buffer, %struct.gbhw_buffer* %57, i32 0, i32 4, !dbg !11195
  %58 = load i64, i64* %bytes71, align 8, !dbg !11195
  %59 = load %struct.gbhw_buffer*, %struct.gbhw_buffer** @soundbuf, align 8, !dbg !11196
  %samples72 = getelementptr inbounds %struct.gbhw_buffer, %struct.gbhw_buffer* %59, i32 0, i32 5, !dbg !11197
  %60 = load i64, i64* %samples72, align 8, !dbg !11197
  %mul73 = mul nsw i64 %60, 4, !dbg !11198
  %cmp74 = icmp eq i64 %58, %mul73, !dbg !11199
  br i1 %cmp74, label %if.end77, label %if.then76, !dbg !11200

if.then76:                                        ; preds = %if.end70
  call void @__assert_fail(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.74, i32 0, i32 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.64, i32 0, i32 0), i32 410, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.72, i32 0, i32 0)) #9, !dbg !11201
  unreachable, !dbg !11201

if.end77:                                         ; preds = %if.end70
  %61 = load %struct.gbhw_buffer*, %struct.gbhw_buffer** @soundbuf, align 8, !dbg !11205
  %data78 = getelementptr inbounds %struct.gbhw_buffer, %struct.gbhw_buffer* %61, i32 0, i32 0, !dbg !11208
  %62 = load i16*, i16** %data78, align 8, !dbg !11208
  %63 = bitcast i16* %62 to i8*, !dbg !11209
  %64 = load %struct.gbhw_buffer*, %struct.gbhw_buffer** @soundbuf, align 8, !dbg !11210
  %bytes79 = getelementptr inbounds %struct.gbhw_buffer, %struct.gbhw_buffer* %64, i32 0, i32 4, !dbg !11211
  %65 = load i64, i64* %bytes79, align 8, !dbg !11211
  %conv80 = trunc i64 %65 to i32, !dbg !11212
  %call81 = call i8* @memset(i8* %63, i32 0, i32 %conv80) #11, !dbg !11213
  %66 = load %struct.gbhw_buffer*, %struct.gbhw_buffer** @soundbuf, align 8, !dbg !11214
  %pos82 = getelementptr inbounds %struct.gbhw_buffer, %struct.gbhw_buffer* %66, i32 0, i32 1, !dbg !11215
  store i64 0, i64* %pos82, align 8, !dbg !11216
  %67 = load %struct.gbhw_buffer*, %struct.gbhw_buffer** @impbuf, align 8, !dbg !11217
  %cycles = getelementptr inbounds %struct.gbhw_buffer, %struct.gbhw_buffer* %67, i32 0, i32 6, !dbg !11218
  %68 = load i64, i64* %cycles, align 8, !dbg !11218
  %69 = load i64, i64* @sound_div_tc, align 8, !dbg !11219
  %70 = load %struct.gbhw_buffer*, %struct.gbhw_buffer** @soundbuf, align 8, !dbg !11220
  %samples83 = getelementptr inbounds %struct.gbhw_buffer, %struct.gbhw_buffer* %70, i32 0, i32 5, !dbg !11221
  %71 = load i64, i64* %samples83, align 8, !dbg !11221
  %mul84 = mul nsw i64 %69, %71, !dbg !11222
  %div85 = sdiv i64 %mul84, 65536, !dbg !11223
  %sub86 = sub nsw i64 %68, %div85, !dbg !11224
  %72 = load %struct.gbhw_buffer*, %struct.gbhw_buffer** @impbuf, align 8, !dbg !11225
  %cycles87 = getelementptr inbounds %struct.gbhw_buffer, %struct.gbhw_buffer* %72, i32 0, i32 6, !dbg !11226
  store i64 %sub86, i64* %cycles87, align 8, !dbg !11227
  ret void, !dbg !11228
}

; Function Attrs: noinline nounwind ssp uwtable
define internal void @gb_change_level(i64 %l_ofs, i64 %r_ofs) #0 !dbg !11229 {
entry:
  call void @llvm.dbg.value(metadata i64 %l_ofs, metadata !11230, metadata !DIExpression()), !dbg !11231
  call void @llvm.dbg.value(metadata i64 %r_ofs, metadata !11232, metadata !DIExpression()), !dbg !11231
  call void @llvm.dbg.declare(metadata !666, metadata !11233, metadata !DIExpression()), !dbg !11234
  call void @llvm.dbg.declare(metadata !666, metadata !11235, metadata !DIExpression()), !dbg !11236
  call void @llvm.dbg.declare(metadata !666, metadata !11237, metadata !DIExpression()), !dbg !11238
  call void @llvm.dbg.declare(metadata !666, metadata !11239, metadata !DIExpression()), !dbg !11240
  call void @llvm.dbg.declare(metadata !666, metadata !11241, metadata !DIExpression()), !dbg !11242
  call void @llvm.dbg.declare(metadata !666, metadata !11243, metadata !DIExpression()), !dbg !11244
  call void @llvm.dbg.declare(metadata !666, metadata !11245, metadata !DIExpression()), !dbg !11246
  call void @llvm.dbg.declare(metadata !666, metadata !11247, metadata !DIExpression()), !dbg !11248
  call void @llvm.dbg.declare(metadata !666, metadata !11249, metadata !DIExpression()), !dbg !11250
  %0 = load i64, i64* @impulse_w_shift, align 8, !dbg !11251
  %sh_prom = trunc i64 %0 to i32, !dbg !11253
  %shl = shl i32 1, %sh_prom, !dbg !11253
  %sub = sub nsw i32 0, %shl, !dbg !11254
  %div = sdiv i32 %sub, 2, !dbg !11255
  %conv = sext i32 %div to i64, !dbg !11256
  call void @llvm.dbg.value(metadata i64 %conv, metadata !11257, metadata !DIExpression()), !dbg !11231
  %1 = load i64, i64* @impulse_w_shift, align 8, !dbg !11258
  %sh_prom1 = trunc i64 %1 to i32, !dbg !11259
  %shl2 = shl i32 1, %sh_prom1, !dbg !11259
  %div3 = sdiv i32 %shl2, 2, !dbg !11260
  %conv4 = sext i32 %div3 to i64, !dbg !11261
  call void @llvm.dbg.value(metadata i64 %conv4, metadata !11262, metadata !DIExpression()), !dbg !11231
  %2 = load i16*, i16** @base_impulse, align 8, !dbg !11263
  call void @llvm.dbg.value(metadata i16* %2, metadata !11264, metadata !DIExpression()), !dbg !11231
  %3 = load %struct.gbhw_buffer*, %struct.gbhw_buffer** @impbuf, align 8, !dbg !11265
  %4 = ptrtoint %struct.gbhw_buffer* %3 to i64, !dbg !11267
  %cmp = icmp ne i64 %4, 0, !dbg !11268
  br i1 %cmp, label %if.end, label %if.then, !dbg !11269

if.then:                                          ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.69, i32 0, i32 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.64, i32 0, i32 0), i32 426, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.75, i32 0, i32 0)) #9, !dbg !11270
  unreachable, !dbg !11270

if.end:                                           ; preds = %entry
  %5 = load %struct.gbhw_buffer*, %struct.gbhw_buffer** @impbuf, align 8, !dbg !11274
  %cycles = getelementptr inbounds %struct.gbhw_buffer, %struct.gbhw_buffer* %5, i32 0, i32 6, !dbg !11275
  %6 = load i64, i64* %cycles, align 8, !dbg !11275
  %mul = mul nsw i64 %6, 65536, !dbg !11276
  %7 = load i64, i64* @sound_div_tc, align 8, !dbg !11277
  %div6 = sdiv i64 %mul, %7, !dbg !11278
  call void @llvm.dbg.value(metadata i64 %div6, metadata !11279, metadata !DIExpression()), !dbg !11231
  %8 = load %struct.gbhw_buffer*, %struct.gbhw_buffer** @impbuf, align 8, !dbg !11280
  %cycles7 = getelementptr inbounds %struct.gbhw_buffer, %struct.gbhw_buffer* %8, i32 0, i32 6, !dbg !11281
  %9 = load i64, i64* %cycles7, align 8, !dbg !11281
  %10 = load i64, i64* @impulse_n_shift, align 8, !dbg !11282
  %shl8 = shl i64 %9, %10, !dbg !11283
  %mul9 = mul nsw i64 %shl8, 65536, !dbg !11284
  %11 = load i64, i64* @sound_div_tc, align 8, !dbg !11285
  %div10 = sdiv i64 %mul9, %11, !dbg !11286
  %12 = load i64, i64* @impulse_n_shift, align 8, !dbg !11287
  %sh_prom11 = trunc i64 %12 to i32, !dbg !11288
  %shl12 = shl i32 1, %sh_prom11, !dbg !11288
  %sub13 = sub nsw i32 %shl12, 1, !dbg !11289
  %conv14 = sext i32 %sub13 to i64, !dbg !11290
  %and = and i64 %div10, %conv14, !dbg !11291
  call void @llvm.dbg.value(metadata i64 %and, metadata !11292, metadata !DIExpression()), !dbg !11231
  %add = add nsw i64 %div6, %conv4, !dbg !11293
  %13 = load %struct.gbhw_buffer*, %struct.gbhw_buffer** @impbuf, align 8, !dbg !11295
  %samples = getelementptr inbounds %struct.gbhw_buffer, %struct.gbhw_buffer* %13, i32 0, i32 5, !dbg !11296
  %14 = load i64, i64* %samples, align 8, !dbg !11296
  %cmp15 = icmp slt i64 %add, %14, !dbg !11297
  br i1 %cmp15, label %if.end18, label %if.then17, !dbg !11298

if.then17:                                        ; preds = %if.end
  call void @__assert_fail(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.76, i32 0, i32 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.64, i32 0, i32 0), i32 429, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.75, i32 0, i32 0)) #9, !dbg !11299
  unreachable, !dbg !11299

if.end18:                                         ; preds = %if.end
  %add19 = add nsw i64 %div6, %conv, !dbg !11303
  %cmp20 = icmp sge i64 %add19, 0, !dbg !11305
  br i1 %cmp20, label %if.end23, label %if.then22, !dbg !11306

if.then22:                                        ; preds = %if.end18
  call void @__assert_fail(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.77, i32 0, i32 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.64, i32 0, i32 0), i32 430, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.75, i32 0, i32 0)) #9, !dbg !11307
  unreachable, !dbg !11307

if.end23:                                         ; preds = %if.end18
  %15 = load i64, i64* @impulse_w_shift, align 8, !dbg !11311
  %sh_prom24 = trunc i64 %15 to i32, !dbg !11312
  %shl25 = shl i32 1, %sh_prom24, !dbg !11312
  %conv26 = sext i32 %shl25 to i64, !dbg !11313
  %mul27 = mul nsw i64 %and, %conv26, !dbg !11314
  %add.ptr = getelementptr inbounds i16, i16* %2, i64 %mul27, !dbg !11315
  call void @llvm.dbg.value(metadata i16* %add.ptr, metadata !11264, metadata !DIExpression()), !dbg !11231
  call void @llvm.dbg.value(metadata i64 %conv, metadata !11316, metadata !DIExpression()), !dbg !11231
  br label %while.body, !dbg !11317

while.body:                                       ; preds = %if.end31, %if.end23
  %i.0 = phi i64 [ %conv, %if.end23 ], [ %inc, %if.end31 ], !dbg !11320
  call void @llvm.dbg.value(metadata i64 %i.0, metadata !11316, metadata !DIExpression()), !dbg !11231
  br label %while_continue___0, !dbg !11321

while_continue___0:                               ; preds = %while.body
  br label %while_continue, !dbg !11321

while_continue:                                   ; preds = %while_continue___0
  %cmp28 = icmp slt i64 %i.0, %conv4, !dbg !11322
  br i1 %cmp28, label %if.end31, label %if.then30, !dbg !11325

if.then30:                                        ; preds = %while_continue
  br label %while_break, !dbg !11326

if.end31:                                         ; preds = %while_continue
  %add32 = add nsw i64 %div6, %i.0, !dbg !11328
  call void @llvm.dbg.value(metadata i64 %add32, metadata !11329, metadata !DIExpression()), !dbg !11231
  %16 = load i64, i64* @impulse_w_shift, align 8, !dbg !11330
  %sh_prom33 = trunc i64 %16 to i32, !dbg !11331
  %shl34 = shl i32 1, %sh_prom33, !dbg !11331
  %div35 = sdiv i32 %shl34, 2, !dbg !11332
  %conv36 = sext i32 %div35 to i64, !dbg !11333
  %add37 = add nsw i64 %i.0, %conv36, !dbg !11334
  call void @llvm.dbg.value(metadata i64 %add37, metadata !11335, metadata !DIExpression()), !dbg !11231
  %17 = load %struct.gbhw_buffer*, %struct.gbhw_buffer** @impbuf, align 8, !dbg !11336
  %data = getelementptr inbounds %struct.gbhw_buffer, %struct.gbhw_buffer* %17, i32 0, i32 0, !dbg !11337
  %18 = load i16*, i16** %data, align 8, !dbg !11337
  %mul38 = mul nsw i64 %add32, 2, !dbg !11338
  %add.ptr39 = getelementptr inbounds i16, i16* %18, i64 %mul38, !dbg !11339
  %19 = load i16, i16* %add.ptr39, align 2, !dbg !11340
  %conv40 = sext i16 %19 to i64, !dbg !11341
  %add.ptr41 = getelementptr inbounds i16, i16* %add.ptr, i64 %add37, !dbg !11342
  %20 = load i16, i16* %add.ptr41, align 2, !dbg !11343
  %conv42 = sext i16 %20 to i64, !dbg !11344
  %mul43 = mul nsw i64 %conv42, %l_ofs, !dbg !11345
  %add44 = add nsw i64 %conv40, %mul43, !dbg !11346
  %conv45 = trunc i64 %add44 to i16, !dbg !11347
  %21 = load %struct.gbhw_buffer*, %struct.gbhw_buffer** @impbuf, align 8, !dbg !11348
  %data46 = getelementptr inbounds %struct.gbhw_buffer, %struct.gbhw_buffer* %21, i32 0, i32 0, !dbg !11349
  %22 = load i16*, i16** %data46, align 8, !dbg !11349
  %mul47 = mul nsw i64 %add32, 2, !dbg !11350
  %add.ptr48 = getelementptr inbounds i16, i16* %22, i64 %mul47, !dbg !11351
  store i16 %conv45, i16* %add.ptr48, align 2, !dbg !11352
  %23 = load %struct.gbhw_buffer*, %struct.gbhw_buffer** @impbuf, align 8, !dbg !11353
  %data49 = getelementptr inbounds %struct.gbhw_buffer, %struct.gbhw_buffer* %23, i32 0, i32 0, !dbg !11354
  %24 = load i16*, i16** %data49, align 8, !dbg !11354
  %mul50 = mul nsw i64 %add32, 2, !dbg !11355
  %add51 = add nsw i64 %mul50, 1, !dbg !11356
  %add.ptr52 = getelementptr inbounds i16, i16* %24, i64 %add51, !dbg !11357
  %25 = load i16, i16* %add.ptr52, align 2, !dbg !11358
  %conv53 = sext i16 %25 to i64, !dbg !11359
  %add.ptr54 = getelementptr inbounds i16, i16* %add.ptr, i64 %add37, !dbg !11360
  %26 = load i16, i16* %add.ptr54, align 2, !dbg !11361
  %conv55 = sext i16 %26 to i64, !dbg !11362
  %mul56 = mul nsw i64 %conv55, %r_ofs, !dbg !11363
  %add57 = add nsw i64 %conv53, %mul56, !dbg !11364
  %conv58 = trunc i64 %add57 to i16, !dbg !11365
  %27 = load %struct.gbhw_buffer*, %struct.gbhw_buffer** @impbuf, align 8, !dbg !11366
  %data59 = getelementptr inbounds %struct.gbhw_buffer, %struct.gbhw_buffer* %27, i32 0, i32 0, !dbg !11367
  %28 = load i16*, i16** %data59, align 8, !dbg !11367
  %mul60 = mul nsw i64 %add32, 2, !dbg !11368
  %add61 = add nsw i64 %mul60, 1, !dbg !11369
  %add.ptr62 = getelementptr inbounds i16, i16* %28, i64 %add61, !dbg !11370
  store i16 %conv58, i16* %add.ptr62, align 2, !dbg !11371
  %inc = add nsw i64 %i.0, 1, !dbg !11372
  call void @llvm.dbg.value(metadata i64 %inc, metadata !11316, metadata !DIExpression()), !dbg !11231
  br label %while.body, !dbg !11317, !llvm.loop !11373

while_break___0:                                  ; No predecessors!
  br label %while_break, !dbg !11375

while_break:                                      ; preds = %while_break___0, %if.then30
  %mul63 = mul nsw i64 %l_ofs, 256, !dbg !11376
  %29 = load %struct.gbhw_buffer*, %struct.gbhw_buffer** @impbuf, align 8, !dbg !11377
  %l_lvl = getelementptr inbounds %struct.gbhw_buffer, %struct.gbhw_buffer* %29, i32 0, i32 2, !dbg !11378
  %30 = load i64, i64* %l_lvl, align 8, !dbg !11379
  %add64 = add nsw i64 %30, %mul63, !dbg !11379
  store i64 %add64, i64* %l_lvl, align 8, !dbg !11379
  %mul65 = mul nsw i64 %r_ofs, 256, !dbg !11380
  %31 = load %struct.gbhw_buffer*, %struct.gbhw_buffer** @impbuf, align 8, !dbg !11381
  %r_lvl = getelementptr inbounds %struct.gbhw_buffer, %struct.gbhw_buffer* %31, i32 0, i32 3, !dbg !11382
  %32 = load i64, i64* %r_lvl, align 8, !dbg !11383
  %add66 = add nsw i64 %32, %mul65, !dbg !11383
  store i64 %add66, i64* %r_lvl, align 8, !dbg !11383
  ret void, !dbg !11384
}

; Function Attrs: noinline nounwind ssp uwtable
define internal void @gb_sound_sweep() #0 !dbg !11385 {
entry:
  %0 = load i64, i64* getelementptr inbounds ([4 x %struct.gbhw_channel], [4 x %struct.gbhw_channel]* @gbhw_ch, i64 0, i64 0, i32 11), align 8, !dbg !11386
  %tobool = icmp ne i64 %0, 0, !dbg !11389
  br i1 %tobool, label %if.then, label %if.end12, !dbg !11390

if.then:                                          ; preds = %entry
  %1 = load i64, i64* getelementptr inbounds ([4 x %struct.gbhw_channel], [4 x %struct.gbhw_channel]* @gbhw_ch, i64 0, i64 0, i32 12), align 16, !dbg !11391
  %dec = add nsw i64 %1, -1, !dbg !11391
  store i64 %dec, i64* getelementptr inbounds ([4 x %struct.gbhw_channel], [4 x %struct.gbhw_channel]* @gbhw_ch, i64 0, i64 0, i32 12), align 16, !dbg !11391
  %2 = load i64, i64* getelementptr inbounds ([4 x %struct.gbhw_channel], [4 x %struct.gbhw_channel]* @gbhw_ch, i64 0, i64 0, i32 12), align 16, !dbg !11393
  %cmp = icmp slt i64 %2, 0, !dbg !11395
  br i1 %cmp, label %if.then1, label %if.end11, !dbg !11396

if.then1:                                         ; preds = %if.then
  %3 = load i64, i64* getelementptr inbounds ([4 x %struct.gbhw_channel], [4 x %struct.gbhw_channel]* @gbhw_ch, i64 0, i64 0, i32 16), align 16, !dbg !11397
  %4 = load i64, i64* getelementptr inbounds ([4 x %struct.gbhw_channel], [4 x %struct.gbhw_channel]* @gbhw_ch, i64 0, i64 0, i32 13), align 8, !dbg !11399
  %shr = ashr i64 %3, %4, !dbg !11400
  call void @llvm.dbg.value(metadata i64 %shr, metadata !11401, metadata !DIExpression()), !dbg !11402
  %5 = load i64, i64* getelementptr inbounds ([4 x %struct.gbhw_channel], [4 x %struct.gbhw_channel]* @gbhw_ch, i64 0, i64 0, i32 11), align 8, !dbg !11403
  store i64 %5, i64* getelementptr inbounds ([4 x %struct.gbhw_channel], [4 x %struct.gbhw_channel]* @gbhw_ch, i64 0, i64 0, i32 12), align 16, !dbg !11404
  %6 = load i64, i64* getelementptr inbounds ([4 x %struct.gbhw_channel], [4 x %struct.gbhw_channel]* @gbhw_ch, i64 0, i64 0, i32 10), align 16, !dbg !11405
  %tobool2 = icmp ne i64 %6, 0, !dbg !11407
  br i1 %tobool2, label %if.then3, label %if.else, !dbg !11408

if.then3:                                         ; preds = %if.then1
  %7 = load i64, i64* getelementptr inbounds ([4 x %struct.gbhw_channel], [4 x %struct.gbhw_channel]* @gbhw_ch, i64 0, i64 0, i32 16), align 16, !dbg !11409
  %sub = sub nsw i64 2048, %shr, !dbg !11412
  %cmp4 = icmp slt i64 %7, %sub, !dbg !11413
  br i1 %cmp4, label %if.then5, label %if.end, !dbg !11414

if.then5:                                         ; preds = %if.then3
  %8 = load i64, i64* getelementptr inbounds ([4 x %struct.gbhw_channel], [4 x %struct.gbhw_channel]* @gbhw_ch, i64 0, i64 0, i32 16), align 16, !dbg !11415
  %add = add nsw i64 %8, %shr, !dbg !11415
  store i64 %add, i64* getelementptr inbounds ([4 x %struct.gbhw_channel], [4 x %struct.gbhw_channel]* @gbhw_ch, i64 0, i64 0, i32 16), align 16, !dbg !11415
  br label %if.end, !dbg !11417

if.end:                                           ; preds = %if.then5, %if.then3
  br label %if.end10, !dbg !11418

if.else:                                          ; preds = %if.then1
  %9 = load i64, i64* getelementptr inbounds ([4 x %struct.gbhw_channel], [4 x %struct.gbhw_channel]* @gbhw_ch, i64 0, i64 0, i32 16), align 16, !dbg !11419
  %cmp6 = icmp sgt i64 %9, %shr, !dbg !11421
  br i1 %cmp6, label %if.then7, label %if.end9, !dbg !11422

if.then7:                                         ; preds = %if.else
  %10 = load i64, i64* getelementptr inbounds ([4 x %struct.gbhw_channel], [4 x %struct.gbhw_channel]* @gbhw_ch, i64 0, i64 0, i32 16), align 16, !dbg !11423
  %sub8 = sub nsw i64 %10, %shr, !dbg !11423
  store i64 %sub8, i64* getelementptr inbounds ([4 x %struct.gbhw_channel], [4 x %struct.gbhw_channel]* @gbhw_ch, i64 0, i64 0, i32 16), align 16, !dbg !11423
  br label %if.end9, !dbg !11425

if.end9:                                          ; preds = %if.then7, %if.else
  br label %if.end10

if.end10:                                         ; preds = %if.end9, %if.end
  %11 = load i64, i64* getelementptr inbounds ([4 x %struct.gbhw_channel], [4 x %struct.gbhw_channel]* @gbhw_ch, i64 0, i64 0, i32 16), align 16, !dbg !11426
  %12 = load i64, i64* getelementptr inbounds ([4 x %struct.gbhw_channel], [4 x %struct.gbhw_channel]* @gbhw_ch, i64 0, i64 0, i32 19), align 8, !dbg !11427
  %mul = mul nsw i64 %11, %12, !dbg !11428
  %div = sdiv i64 %mul, 8, !dbg !11429
  store i64 %div, i64* getelementptr inbounds ([4 x %struct.gbhw_channel], [4 x %struct.gbhw_channel]* @gbhw_ch, i64 0, i64 0, i32 18), align 16, !dbg !11430
  br label %if.end11, !dbg !11431

if.end11:                                         ; preds = %if.end10, %if.then
  br label %if.end12, !dbg !11432

if.end12:                                         ; preds = %if.end11, %entry
  call void @llvm.dbg.value(metadata i64 0, metadata !11433, metadata !DIExpression()), !dbg !11402
  br label %while.body, !dbg !11434

while.body:                                       ; preds = %if.end68, %if.end12
  %i.0 = phi i64 [ 0, %if.end12 ], [ %inc69, %if.end68 ], !dbg !11437
  call void @llvm.dbg.value(metadata i64 %i.0, metadata !11433, metadata !DIExpression()), !dbg !11402
  br label %while_continue___0, !dbg !11438

while_continue___0:                               ; preds = %while.body
  br label %while_continue, !dbg !11438

while_continue:                                   ; preds = %while_continue___0
  %cmp13 = icmp slt i64 %i.0, 4, !dbg !11439
  br i1 %cmp13, label %if.end15, label %if.then14, !dbg !11442

if.then14:                                        ; preds = %while_continue
  br label %while_break, !dbg !11443

if.end15:                                         ; preds = %while_continue
  %arrayidx = getelementptr inbounds [4 x %struct.gbhw_channel], [4 x %struct.gbhw_channel]* @gbhw_ch, i64 0, i64 %i.0, !dbg !11445
  %len = getelementptr inbounds %struct.gbhw_channel, %struct.gbhw_channel* %arrayidx, i32 0, i32 14, !dbg !11447
  %13 = load i64, i64* %len, align 16, !dbg !11447
  %cmp16 = icmp sgt i64 %13, 0, !dbg !11448
  br i1 %cmp16, label %if.then17, label %if.end32, !dbg !11449

if.then17:                                        ; preds = %if.end15
  %arrayidx18 = getelementptr inbounds [4 x %struct.gbhw_channel], [4 x %struct.gbhw_channel]* @gbhw_ch, i64 0, i64 %i.0, !dbg !11450
  %len_enable = getelementptr inbounds %struct.gbhw_channel, %struct.gbhw_channel* %arrayidx18, i32 0, i32 15, !dbg !11453
  %14 = load i64, i64* %len_enable, align 8, !dbg !11453
  %tobool19 = icmp ne i64 %14, 0, !dbg !11450
  br i1 %tobool19, label %if.then20, label %if.end31, !dbg !11454

if.then20:                                        ; preds = %if.then17
  %arrayidx21 = getelementptr inbounds [4 x %struct.gbhw_channel], [4 x %struct.gbhw_channel]* @gbhw_ch, i64 0, i64 %i.0, !dbg !11455
  %len22 = getelementptr inbounds %struct.gbhw_channel, %struct.gbhw_channel* %arrayidx21, i32 0, i32 14, !dbg !11457
  %15 = load i64, i64* %len22, align 16, !dbg !11458
  %dec23 = add nsw i64 %15, -1, !dbg !11458
  store i64 %dec23, i64* %len22, align 16, !dbg !11458
  %arrayidx24 = getelementptr inbounds [4 x %struct.gbhw_channel], [4 x %struct.gbhw_channel]* @gbhw_ch, i64 0, i64 %i.0, !dbg !11459
  %len25 = getelementptr inbounds %struct.gbhw_channel, %struct.gbhw_channel* %arrayidx24, i32 0, i32 14, !dbg !11461
  %16 = load i64, i64* %len25, align 16, !dbg !11461
  %cmp26 = icmp eq i64 %16, 0, !dbg !11462
  br i1 %cmp26, label %if.then27, label %if.end30, !dbg !11463

if.then27:                                        ; preds = %if.then20
  %arrayidx28 = getelementptr inbounds [4 x %struct.gbhw_channel], [4 x %struct.gbhw_channel]* @gbhw_ch, i64 0, i64 %i.0, !dbg !11464
  %volume = getelementptr inbounds %struct.gbhw_channel, %struct.gbhw_channel* %arrayidx28, i32 0, i32 6, !dbg !11466
  store i64 0, i64* %volume, align 16, !dbg !11467
  %arrayidx29 = getelementptr inbounds [4 x %struct.gbhw_channel], [4 x %struct.gbhw_channel]* @gbhw_ch, i64 0, i64 %i.0, !dbg !11468
  %env_tc = getelementptr inbounds %struct.gbhw_channel, %struct.gbhw_channel* %arrayidx29, i32 0, i32 8, !dbg !11469
  store i64 0, i64* %env_tc, align 16, !dbg !11470
  br label %if.end30, !dbg !11471

if.end30:                                         ; preds = %if.then27, %if.then20
  br label %if.end31, !dbg !11472

if.end31:                                         ; preds = %if.end30, %if.then17
  br label %if.end32, !dbg !11473

if.end32:                                         ; preds = %if.end31, %if.end15
  %arrayidx33 = getelementptr inbounds [4 x %struct.gbhw_channel], [4 x %struct.gbhw_channel]* @gbhw_ch, i64 0, i64 %i.0, !dbg !11474
  %env_tc34 = getelementptr inbounds %struct.gbhw_channel, %struct.gbhw_channel* %arrayidx33, i32 0, i32 8, !dbg !11476
  %17 = load i64, i64* %env_tc34, align 16, !dbg !11476
  %tobool35 = icmp ne i64 %17, 0, !dbg !11474
  br i1 %tobool35, label %if.then36, label %if.end68, !dbg !11477

if.then36:                                        ; preds = %if.end32
  %arrayidx37 = getelementptr inbounds [4 x %struct.gbhw_channel], [4 x %struct.gbhw_channel]* @gbhw_ch, i64 0, i64 %i.0, !dbg !11478
  %env_ctr = getelementptr inbounds %struct.gbhw_channel, %struct.gbhw_channel* %arrayidx37, i32 0, i32 9, !dbg !11480
  %18 = load i64, i64* %env_ctr, align 8, !dbg !11481
  %dec38 = add nsw i64 %18, -1, !dbg !11481
  store i64 %dec38, i64* %env_ctr, align 8, !dbg !11481
  %arrayidx39 = getelementptr inbounds [4 x %struct.gbhw_channel], [4 x %struct.gbhw_channel]* @gbhw_ch, i64 0, i64 %i.0, !dbg !11482
  %env_ctr40 = getelementptr inbounds %struct.gbhw_channel, %struct.gbhw_channel* %arrayidx39, i32 0, i32 9, !dbg !11484
  %19 = load i64, i64* %env_ctr40, align 8, !dbg !11484
  %cmp41 = icmp sle i64 %19, 0, !dbg !11485
  br i1 %cmp41, label %if.then42, label %if.end67, !dbg !11486

if.then42:                                        ; preds = %if.then36
  %arrayidx43 = getelementptr inbounds [4 x %struct.gbhw_channel], [4 x %struct.gbhw_channel]* @gbhw_ch, i64 0, i64 %i.0, !dbg !11487
  %env_tc44 = getelementptr inbounds %struct.gbhw_channel, %struct.gbhw_channel* %arrayidx43, i32 0, i32 8, !dbg !11489
  %20 = load i64, i64* %env_tc44, align 16, !dbg !11489
  %arrayidx45 = getelementptr inbounds [4 x %struct.gbhw_channel], [4 x %struct.gbhw_channel]* @gbhw_ch, i64 0, i64 %i.0, !dbg !11490
  %env_ctr46 = getelementptr inbounds %struct.gbhw_channel, %struct.gbhw_channel* %arrayidx45, i32 0, i32 9, !dbg !11491
  store i64 %20, i64* %env_ctr46, align 8, !dbg !11492
  %arrayidx47 = getelementptr inbounds [4 x %struct.gbhw_channel], [4 x %struct.gbhw_channel]* @gbhw_ch, i64 0, i64 %i.0, !dbg !11493
  %env_dir = getelementptr inbounds %struct.gbhw_channel, %struct.gbhw_channel* %arrayidx47, i32 0, i32 7, !dbg !11495
  %21 = load i64, i64* %env_dir, align 8, !dbg !11495
  %tobool48 = icmp ne i64 %21, 0, !dbg !11493
  br i1 %tobool48, label %if.else58, label %if.then49, !dbg !11496

if.then49:                                        ; preds = %if.then42
  %arrayidx50 = getelementptr inbounds [4 x %struct.gbhw_channel], [4 x %struct.gbhw_channel]* @gbhw_ch, i64 0, i64 %i.0, !dbg !11497
  %volume51 = getelementptr inbounds %struct.gbhw_channel, %struct.gbhw_channel* %arrayidx50, i32 0, i32 6, !dbg !11500
  %22 = load i64, i64* %volume51, align 16, !dbg !11500
  %cmp52 = icmp sgt i64 %22, 0, !dbg !11501
  br i1 %cmp52, label %if.then53, label %if.end57, !dbg !11502

if.then53:                                        ; preds = %if.then49
  %arrayidx54 = getelementptr inbounds [4 x %struct.gbhw_channel], [4 x %struct.gbhw_channel]* @gbhw_ch, i64 0, i64 %i.0, !dbg !11503
  %volume55 = getelementptr inbounds %struct.gbhw_channel, %struct.gbhw_channel* %arrayidx54, i32 0, i32 6, !dbg !11505
  %23 = load i64, i64* %volume55, align 16, !dbg !11506
  %dec56 = add nsw i64 %23, -1, !dbg !11506
  store i64 %dec56, i64* %volume55, align 16, !dbg !11506
  br label %if.end57, !dbg !11507

if.end57:                                         ; preds = %if.then53, %if.then49
  br label %if.end66, !dbg !11508

if.else58:                                        ; preds = %if.then42
  %arrayidx59 = getelementptr inbounds [4 x %struct.gbhw_channel], [4 x %struct.gbhw_channel]* @gbhw_ch, i64 0, i64 %i.0, !dbg !11509
  %volume60 = getelementptr inbounds %struct.gbhw_channel, %struct.gbhw_channel* %arrayidx59, i32 0, i32 6, !dbg !11511
  %24 = load i64, i64* %volume60, align 16, !dbg !11511
  %cmp61 = icmp slt i64 %24, 15, !dbg !11512
  br i1 %cmp61, label %if.then62, label %if.end65, !dbg !11513

if.then62:                                        ; preds = %if.else58
  %arrayidx63 = getelementptr inbounds [4 x %struct.gbhw_channel], [4 x %struct.gbhw_channel]* @gbhw_ch, i64 0, i64 %i.0, !dbg !11514
  %volume64 = getelementptr inbounds %struct.gbhw_channel, %struct.gbhw_channel* %arrayidx63, i32 0, i32 6, !dbg !11516
  %25 = load i64, i64* %volume64, align 16, !dbg !11517
  %inc = add nsw i64 %25, 1, !dbg !11517
  store i64 %inc, i64* %volume64, align 16, !dbg !11517
  br label %if.end65, !dbg !11518

if.end65:                                         ; preds = %if.then62, %if.else58
  br label %if.end66

if.end66:                                         ; preds = %if.end65, %if.end57
  br label %if.end67, !dbg !11519

if.end67:                                         ; preds = %if.end66, %if.then36
  br label %if.end68, !dbg !11520

if.end68:                                         ; preds = %if.end67, %if.end32
  %inc69 = add nsw i64 %i.0, 1, !dbg !11521
  call void @llvm.dbg.value(metadata i64 %inc69, metadata !11433, metadata !DIExpression()), !dbg !11402
  br label %while.body, !dbg !11434, !llvm.loop !11522

while_break___0:                                  ; No predecessors!
  br label %while_break, !dbg !11524

while_break:                                      ; preds = %while_break___0, %if.then14
  %26 = load i64, i64* @master_fade, align 8, !dbg !11525
  %tobool70 = icmp ne i64 %26, 0, !dbg !11525
  br i1 %tobool70, label %if.then71, label %if.end87, !dbg !11527

if.then71:                                        ; preds = %while_break
  %27 = load i64, i64* @master_fade, align 8, !dbg !11528
  %28 = load i64, i64* @master_volume, align 8, !dbg !11530
  %add72 = add nsw i64 %28, %27, !dbg !11530
  store i64 %add72, i64* @master_volume, align 8, !dbg !11530
  %29 = load i64, i64* @master_fade, align 8, !dbg !11531
  %cmp73 = icmp sgt i64 %29, 0, !dbg !11533
  br i1 %cmp73, label %if.then74, label %if.else79, !dbg !11534

if.then74:                                        ; preds = %if.then71
  %30 = load i64, i64* @master_volume, align 8, !dbg !11535
  %31 = load i64, i64* @master_dstvol, align 8, !dbg !11538
  %cmp75 = icmp sge i64 %30, %31, !dbg !11539
  br i1 %cmp75, label %if.then76, label %if.else77, !dbg !11540

if.then76:                                        ; preds = %if.then74
  store i64 0, i64* @master_fade, align 8, !dbg !11541
  %32 = load i64, i64* @master_dstvol, align 8, !dbg !11543
  store i64 %32, i64* @master_volume, align 8, !dbg !11544
  br label %if.end78, !dbg !11545

if.else77:                                        ; preds = %if.then74
  br label %_L, !dbg !11546

if.end78:                                         ; preds = %if.then76
  br label %if.end86, !dbg !11548

if.else79:                                        ; preds = %if.then71
  br label %_L, !dbg !11548

_L:                                               ; preds = %if.else79, %if.else77
  %33 = load i64, i64* @master_fade, align 8, !dbg !11549
  %cmp80 = icmp slt i64 %33, 0, !dbg !11551
  br i1 %cmp80, label %if.then81, label %if.end85, !dbg !11531

if.then81:                                        ; preds = %_L
  %34 = load i64, i64* @master_volume, align 8, !dbg !11552
  %35 = load i64, i64* @master_dstvol, align 8, !dbg !11555
  %cmp82 = icmp sle i64 %34, %35, !dbg !11556
  br i1 %cmp82, label %if.then83, label %if.end84, !dbg !11557

if.then83:                                        ; preds = %if.then81
  store i64 0, i64* @master_fade, align 8, !dbg !11558
  %36 = load i64, i64* @master_dstvol, align 8, !dbg !11560
  store i64 %36, i64* @master_volume, align 8, !dbg !11561
  br label %if.end84, !dbg !11562

if.end84:                                         ; preds = %if.then83, %if.then81
  br label %if.end85, !dbg !11563

if.end85:                                         ; preds = %if.end84, %_L
  br label %if.end86

if.end86:                                         ; preds = %if.end85, %if.end78
  br label %if.end87, !dbg !11564

if.end87:                                         ; preds = %if.end86, %while_break
  ret void, !dbg !11565
}

; Function Attrs: nounwind
declare i8* @memmove(i8*, i8*, i32) #4

; Function Attrs: nounwind
declare i32 @ioctl(i32, i64, ...) #4

; Function Attrs: nounwind
declare i32 @dup(i32) #4

; Function Attrs: nounwind
declare i8* @setlocale(i32, i8*) #4

; Function Attrs: nounwind
declare i8* @bindtextdomain(i8*, i8*) #4

; Function Attrs: nounwind
declare i8* @textdomain(i8*) #4

; Function Attrs: nounwind readonly
declare i32 @strcasecmp(i8*, i8*) #2

; Function Attrs: noinline nounwind ssp uwtable
define internal void @version___0() #0 !dbg !11566 {
entry:
  call void @llvm.dbg.declare(metadata !666, metadata !11567, metadata !DIExpression()), !dbg !11568
  %call = call i32 @puts(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.51, i32 0, i32 0)), !dbg !11569
  call void @exit(i32 0) #9, !dbg !11573
  unreachable, !dbg !11573

return:                                           ; No predecessors!
  ret void, !dbg !11575
}

; Function Attrs: noinline nounwind ssp uwtable
define internal i64 @is_le_machine() #0 !dbg !11576 {
entry:
  ret i64 1, !dbg !11577
}

; Function Attrs: noinline nounwind ssp uwtable
define internal void @swap_endian(%struct.gbhw_buffer* %buf___3) #0 !dbg !11579 {
entry:
  call void @llvm.dbg.value(metadata %struct.gbhw_buffer* %buf___3, metadata !11580, metadata !DIExpression()), !dbg !11581
  call void @llvm.dbg.value(metadata i64 0, metadata !11582, metadata !DIExpression()), !dbg !11581
  br label %while.body, !dbg !11583

while.body:                                       ; preds = %if.end, %entry
  %i.0 = phi i64 [ 0, %entry ], [ %inc, %if.end ], !dbg !11587
  call void @llvm.dbg.value(metadata i64 %i.0, metadata !11582, metadata !DIExpression()), !dbg !11581
  br label %while_continue___0, !dbg !11588

while_continue___0:                               ; preds = %while.body
  br label %while_continue, !dbg !11588

while_continue:                                   ; preds = %while_continue___0
  %bytes = getelementptr inbounds %struct.gbhw_buffer, %struct.gbhw_buffer* %buf___3, i32 0, i32 4, !dbg !11589
  %0 = load i64, i64* %bytes, align 8, !dbg !11589
  %div = udiv i64 %0, 2, !dbg !11592
  %cmp = icmp ult i64 %i.0, %div, !dbg !11593
  br i1 %cmp, label %if.end, label %if.then, !dbg !11594

if.then:                                          ; preds = %while_continue
  br label %while_break, !dbg !11595

if.end:                                           ; preds = %while_continue
  %data = getelementptr inbounds %struct.gbhw_buffer, %struct.gbhw_buffer* %buf___3, i32 0, i32 0, !dbg !11597
  %1 = load i16*, i16** %data, align 8, !dbg !11597
  %add.ptr = getelementptr inbounds i16, i16* %1, i64 %i.0, !dbg !11598
  %2 = load i16, i16* %add.ptr, align 2, !dbg !11599
  call void @llvm.dbg.value(metadata i16 %2, metadata !11600, metadata !DIExpression()), !dbg !11581
  %conv = sext i16 %2 to i32, !dbg !11601
  %and = and i32 %conv, 255, !dbg !11602
  %shl = shl i32 %and, 8, !dbg !11603
  %conv1 = sext i16 %2 to i32, !dbg !11604
  %shr = ashr i32 %conv1, 8, !dbg !11605
  %or = or i32 %shl, %shr, !dbg !11606
  %conv2 = trunc i32 %or to i16, !dbg !11607
  %data3 = getelementptr inbounds %struct.gbhw_buffer, %struct.gbhw_buffer* %buf___3, i32 0, i32 0, !dbg !11608
  %3 = load i16*, i16** %data3, align 8, !dbg !11608
  %add.ptr4 = getelementptr inbounds i16, i16* %3, i64 %i.0, !dbg !11609
  store i16 %conv2, i16* %add.ptr4, align 2, !dbg !11610
  %inc = add nsw i64 %i.0, 1, !dbg !11611
  call void @llvm.dbg.value(metadata i64 %inc, metadata !11582, metadata !DIExpression()), !dbg !11581
  br label %while.body, !dbg !11583, !llvm.loop !11612

while_break___0:                                  ; No predecessors!
  br label %while_break, !dbg !11614

while_break:                                      ; preds = %while_break___0, %if.then
  ret void, !dbg !11615
}

; Function Attrs: noinline nounwind ssp uwtable
define internal i64 @is_be_machine() #0 !dbg !11616 {
entry:
  ret i64 0, !dbg !11617
}

; Function Attrs: noinline nounwind ssp uwtable
define internal i64 @get_next_subsong(%struct.gbs* %gbs) #0 !dbg !11619 {
entry:
  call void @llvm.dbg.value(metadata %struct.gbs* %gbs, metadata !11620, metadata !DIExpression()), !dbg !11621
  call void @llvm.dbg.value(metadata i64 -1, metadata !11622, metadata !DIExpression()), !dbg !11621
  %0 = load i64, i64* @playmode, align 8, !dbg !11623
  %cmp = icmp eq i64 %0, 2, !dbg !11627
  br i1 %cmp, label %if.then, label %if.end, !dbg !11628

if.then:                                          ; preds = %entry
  br label %case_2, !dbg !11629

if.end:                                           ; preds = %entry
  %1 = load i64, i64* @playmode, align 8, !dbg !11631
  %cmp1 = icmp eq i64 %1, 3, !dbg !11633
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !11634

if.then2:                                         ; preds = %if.end
  br label %case_3, !dbg !11635

if.end3:                                          ; preds = %if.end
  %2 = load i64, i64* @playmode, align 8, !dbg !11637
  %cmp4 = icmp eq i64 %2, 1, !dbg !11639
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !11640

if.then5:                                         ; preds = %if.end3
  br label %case_1, !dbg !11641

if.end6:                                          ; preds = %if.end3
  br label %switch_break, !dbg !11643

case_2:                                           ; preds = %if.then
  %songs = getelementptr inbounds %struct.gbs, %struct.gbs* %gbs, i32 0, i32 2, !dbg !11644
  %3 = load i64, i64* %songs, align 8, !dbg !11644
  %call = call i64 @rand_long(i64 %3), !dbg !11647
  call void @llvm.dbg.value(metadata i64 %call, metadata !11622, metadata !DIExpression()), !dbg !11621
  br label %switch_break, !dbg !11648

case_3:                                           ; preds = %if.then2
  %4 = load i64, i64* @subsong_playlist_idx, align 8, !dbg !11649
  %inc = add nsw i64 %4, 1, !dbg !11649
  store i64 %inc, i64* @subsong_playlist_idx, align 8, !dbg !11649
  %5 = load i64, i64* @subsong_playlist_idx, align 8, !dbg !11650
  %songs7 = getelementptr inbounds %struct.gbs, %struct.gbs* %gbs, i32 0, i32 2, !dbg !11652
  %6 = load i64, i64* %songs7, align 8, !dbg !11652
  %cmp8 = icmp eq i64 %5, %6, !dbg !11653
  br i1 %cmp8, label %if.then9, label %if.end13, !dbg !11654

if.then9:                                         ; preds = %case_3
  %7 = load i64*, i64** @subsong_playlist, align 8, !dbg !11655
  %8 = bitcast i64* %7 to i8*, !dbg !11659
  call void @free(i8* %8) #11, !dbg !11660
  %9 = load i64, i64* @random_seed, align 8, !dbg !11661
  %inc10 = add i64 %9, 1, !dbg !11661
  store i64 %inc10, i64* @random_seed, align 8, !dbg !11661
  %songs11 = getelementptr inbounds %struct.gbs, %struct.gbs* %gbs, i32 0, i32 2, !dbg !11662
  %10 = load i64, i64* %songs11, align 8, !dbg !11662
  %call12 = call i64* @setup_playlist(i64 %10), !dbg !11664
  store i64* %call12, i64** @subsong_playlist, align 8, !dbg !11665
  store i64 0, i64* @subsong_playlist_idx, align 8, !dbg !11666
  br label %if.end13, !dbg !11667

if.end13:                                         ; preds = %if.then9, %case_3
  %11 = load i64*, i64** @subsong_playlist, align 8, !dbg !11668
  %12 = load i64, i64* @subsong_playlist_idx, align 8, !dbg !11669
  %add.ptr = getelementptr inbounds i64, i64* %11, i64 %12, !dbg !11670
  %13 = load i64, i64* %add.ptr, align 8, !dbg !11671
  call void @llvm.dbg.value(metadata i64 %13, metadata !11622, metadata !DIExpression()), !dbg !11621
  br label %switch_break, !dbg !11672

case_1:                                           ; preds = %if.then5
  %subsong = getelementptr inbounds %struct.gbs, %struct.gbs* %gbs, i32 0, i32 36, !dbg !11673
  %14 = load i64, i64* %subsong, align 8, !dbg !11673
  %add = add nsw i64 %14, 1, !dbg !11674
  call void @llvm.dbg.value(metadata i64 %add, metadata !11622, metadata !DIExpression()), !dbg !11621
  br label %switch_break, !dbg !11675

switch_break:                                     ; preds = %case_1, %if.end13, %case_2, %if.end6
  %next.0 = phi i64 [ %call, %case_2 ], [ %13, %if.end13 ], [ %add, %case_1 ], [ -1, %if.end6 ], !dbg !11676
  call void @llvm.dbg.value(metadata i64 %next.0, metadata !11622, metadata !DIExpression()), !dbg !11621
  ret i64 %next.0, !dbg !11677
}

; Function Attrs: noinline nounwind ssp uwtable
define internal i64* @setup_playlist(i64 %songs) #0 !dbg !11678 {
entry:
  call void @llvm.dbg.value(metadata i64 %songs, metadata !11681, metadata !DIExpression()), !dbg !11682
  %conv = trunc i64 %songs to i32, !dbg !11683
  %call = call noalias i8* @calloc(i32 %conv, i32 8) #11, !dbg !11687
  call void @llvm.dbg.value(metadata i8* %call, metadata !11688, metadata !DIExpression()), !dbg !11682
  %0 = bitcast i8* %call to i64*, !dbg !11689
  call void @llvm.dbg.value(metadata i64* %0, metadata !11690, metadata !DIExpression()), !dbg !11682
  call void @llvm.dbg.value(metadata i64 0, metadata !11691, metadata !DIExpression()), !dbg !11682
  br label %while.body, !dbg !11692

while.body:                                       ; preds = %if.end, %entry
  %i.0 = phi i64 [ 0, %entry ], [ %inc, %if.end ], !dbg !11695
  call void @llvm.dbg.value(metadata i64 %i.0, metadata !11691, metadata !DIExpression()), !dbg !11682
  br label %while_continue___0, !dbg !11696

while_continue___0:                               ; preds = %while.body
  br label %while_continue, !dbg !11696

while_continue:                                   ; preds = %while_continue___0
  %cmp = icmp slt i64 %i.0, %songs, !dbg !11697
  br i1 %cmp, label %if.end, label %if.then, !dbg !11700

if.then:                                          ; preds = %while_continue
  br label %while_break, !dbg !11701

if.end:                                           ; preds = %while_continue
  %add.ptr = getelementptr inbounds i64, i64* %0, i64 %i.0, !dbg !11703
  store i64 %i.0, i64* %add.ptr, align 8, !dbg !11704
  %inc = add nsw i64 %i.0, 1, !dbg !11705
  call void @llvm.dbg.value(metadata i64 %inc, metadata !11691, metadata !DIExpression()), !dbg !11682
  br label %while.body, !dbg !11692, !llvm.loop !11706

while_break___0:                                  ; No predecessors!
  br label %while_break, !dbg !11708

while_break:                                      ; preds = %while_break___0, %if.then
  %1 = load i64, i64* @random_seed, align 8, !dbg !11709
  %conv2 = trunc i64 %1 to i32, !dbg !11712
  call void @srand(i32 %conv2) #11, !dbg !11713
  call void @shuffle_long(i64* %0, i64 %songs), !dbg !11714
  ret i64* %0, !dbg !11716
}

; Function Attrs: noinline nounwind ssp uwtable
define internal i8* @volstring(i64 %v) #0 !dbg !11717 {
entry:
  call void @llvm.dbg.value(metadata i64 %v, metadata !11718, metadata !DIExpression()), !dbg !11719
  %cmp = icmp slt i64 %v, 0, !dbg !11720
  br i1 %cmp, label %if.then, label %if.end, !dbg !11723

if.then:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata i64 0, metadata !11718, metadata !DIExpression()), !dbg !11719
  br label %if.end, !dbg !11724

if.end:                                           ; preds = %if.then, %entry
  %v.addr.0 = phi i64 [ 0, %if.then ], [ %v, %entry ]
  call void @llvm.dbg.value(metadata i64 %v.addr.0, metadata !11718, metadata !DIExpression()), !dbg !11719
  %cmp1 = icmp sgt i64 %v.addr.0, 15, !dbg !11726
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !11728

if.then2:                                         ; preds = %if.end
  call void @llvm.dbg.value(metadata i64 15, metadata !11718, metadata !DIExpression()), !dbg !11719
  br label %if.end3, !dbg !11729

if.end3:                                          ; preds = %if.then2, %if.end
  %v.addr.1 = phi i64 [ 15, %if.then2 ], [ %v.addr.0, %if.end ], !dbg !11731
  call void @llvm.dbg.value(metadata i64 %v.addr.1, metadata !11718, metadata !DIExpression()), !dbg !11719
  %mul = mul nsw i64 5, %v.addr.1, !dbg !11732
  %arrayidx = getelementptr inbounds [80 x i8], [80 x i8]* @vollookup, i64 0, i64 %mul, !dbg !11733
  ret i8* %arrayidx, !dbg !11734
}

; Function Attrs: noinline nounwind ssp uwtable
define internal i8* @reverse_vol(i8* %s) #0 !dbg !11735 {
entry:
  call void @llvm.dbg.value(metadata i8* %s, metadata !11738, metadata !DIExpression()), !dbg !11739
  call void @llvm.dbg.value(metadata i64 0, metadata !11740, metadata !DIExpression()), !dbg !11739
  br label %while.body, !dbg !11741

while.body:                                       ; preds = %if.end, %entry
  %i.0 = phi i64 [ 0, %entry ], [ %inc, %if.end ], !dbg !11745
  call void @llvm.dbg.value(metadata i64 %i.0, metadata !11740, metadata !DIExpression()), !dbg !11739
  br label %while_continue___0, !dbg !11746

while_continue___0:                               ; preds = %while.body
  br label %while_continue, !dbg !11746

while_continue:                                   ; preds = %while_continue___0
  %cmp = icmp slt i64 %i.0, 4, !dbg !11747
  br i1 %cmp, label %if.end, label %if.then, !dbg !11750

if.then:                                          ; preds = %while_continue
  br label %while_break, !dbg !11751

if.end:                                           ; preds = %while_continue
  %sub = sub nsw i64 3, %i.0, !dbg !11753
  %add.ptr = getelementptr inbounds i8, i8* %s, i64 %sub, !dbg !11754
  %0 = load i8, i8* %add.ptr, align 1, !dbg !11755
  %arrayidx = getelementptr inbounds [5 x i8], [5 x i8]* @buf___0, i64 0, i64 %i.0, !dbg !11756
  store i8 %0, i8* %arrayidx, align 1, !dbg !11757
  %inc = add nsw i64 %i.0, 1, !dbg !11758
  call void @llvm.dbg.value(metadata i64 %inc, metadata !11740, metadata !DIExpression()), !dbg !11739
  br label %while.body, !dbg !11741, !llvm.loop !11759

while_break___0:                                  ; No predecessors!
  br label %while_break, !dbg !11761

while_break:                                      ; preds = %while_break___0, %if.then
  store i8 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @buf___0, i64 0, i64 4), align 1, !dbg !11762
  ret i8* getelementptr inbounds ([5 x i8], [5 x i8]* @buf___0, i32 0, i32 0), !dbg !11763
}

; Function Attrs: noinline nounwind ssp uwtable
define internal i64 @chvol(i64 %ch) #0 !dbg !11764 {
entry:
  call void @llvm.dbg.value(metadata i64 %ch, metadata !11765, metadata !DIExpression()), !dbg !11766
  %arrayidx = getelementptr inbounds [4 x %struct.gbhw_channel], [4 x %struct.gbhw_channel]* @gbhw_ch, i64 0, i64 %ch, !dbg !11767
  %mute = getelementptr inbounds %struct.gbhw_channel, %struct.gbhw_channel* %arrayidx, i32 0, i32 0, !dbg !11770
  %0 = load i64, i64* %mute, align 16, !dbg !11770
  %tobool = icmp ne i64 %0, 0, !dbg !11767
  br i1 %tobool, label %if.then, label %if.else, !dbg !11771

if.then:                                          ; preds = %entry
  br label %return, !dbg !11772

if.else:                                          ; preds = %entry
  %arrayidx1 = getelementptr inbounds [4 x %struct.gbhw_channel], [4 x %struct.gbhw_channel]* @gbhw_ch, i64 0, i64 %ch, !dbg !11774
  %master = getelementptr inbounds %struct.gbhw_channel, %struct.gbhw_channel* %arrayidx1, i32 0, i32 1, !dbg !11776
  %1 = load i64, i64* %master, align 8, !dbg !11776
  %cmp = icmp eq i64 %1, 0, !dbg !11777
  br i1 %cmp, label %if.then2, label %if.end, !dbg !11767

if.then2:                                         ; preds = %if.else
  br label %return, !dbg !11778

if.end:                                           ; preds = %if.else
  br label %if.end3

if.end3:                                          ; preds = %if.end
  %cmp4 = icmp eq i64 %ch, 2, !dbg !11780
  br i1 %cmp4, label %if.then5, label %if.else6, !dbg !11782

if.then5:                                         ; preds = %if.end3
  %2 = load i64, i64* getelementptr inbounds ([4 x %struct.gbhw_channel], [4 x %struct.gbhw_channel]* @gbhw_ch, i64 0, i64 2, i32 6), align 16, !dbg !11783
  %add = add nsw i64 %2, 3, !dbg !11785
  %and = and i64 %add, 3, !dbg !11786
  %sub = sub nsw i64 3, %and, !dbg !11787
  %shl = shl i64 %sub, 2, !dbg !11788
  call void @llvm.dbg.value(metadata i64 %shl, metadata !11789, metadata !DIExpression()), !dbg !11766
  br label %if.end8, !dbg !11790

if.else6:                                         ; preds = %if.end3
  %arrayidx7 = getelementptr inbounds [4 x %struct.gbhw_channel], [4 x %struct.gbhw_channel]* @gbhw_ch, i64 0, i64 %ch, !dbg !11791
  %volume = getelementptr inbounds %struct.gbhw_channel, %struct.gbhw_channel* %arrayidx7, i32 0, i32 6, !dbg !11793
  %3 = load i64, i64* %volume, align 16, !dbg !11793
  call void @llvm.dbg.value(metadata i64 %3, metadata !11789, metadata !DIExpression()), !dbg !11766
  br label %if.end8

if.end8:                                          ; preds = %if.else6, %if.then5
  %v.0 = phi i64 [ %shl, %if.then5 ], [ %3, %if.else6 ], !dbg !11794
  call void @llvm.dbg.value(metadata i64 %v.0, metadata !11789, metadata !DIExpression()), !dbg !11766
  br label %return, !dbg !11795

return:                                           ; preds = %if.end8, %if.then2, %if.then
  %retval.0 = phi i64 [ 0, %if.then ], [ 0, %if.then2 ], [ %v.0, %if.end8 ], !dbg !11796
  ret i64 %retval.0, !dbg !11797
}

; Function Attrs: noinline nounwind ssp uwtable
define internal i8* @notestring(i64 %ch) #0 !dbg !11798 {
entry:
  call void @llvm.dbg.value(metadata i64 %ch, metadata !11799, metadata !DIExpression()), !dbg !11800
  call void @llvm.dbg.declare(metadata !666, metadata !11801, metadata !DIExpression()), !dbg !11802
  call void @llvm.dbg.declare(metadata !666, metadata !11803, metadata !DIExpression()), !dbg !11804
  call void @llvm.dbg.declare(metadata !666, metadata !11805, metadata !DIExpression()), !dbg !11806
  call void @llvm.dbg.declare(metadata !666, metadata !11807, metadata !DIExpression()), !dbg !11808
  %arrayidx = getelementptr inbounds [4 x %struct.gbhw_channel], [4 x %struct.gbhw_channel]* @gbhw_ch, i64 0, i64 %ch, !dbg !11809
  %mute = getelementptr inbounds %struct.gbhw_channel, %struct.gbhw_channel* %arrayidx, i32 0, i32 0, !dbg !11812
  %0 = load i64, i64* %mute, align 16, !dbg !11812
  %tobool = icmp ne i64 %0, 0, !dbg !11809
  br i1 %tobool, label %if.then, label %if.end, !dbg !11813

if.then:                                          ; preds = %entry
  br label %return, !dbg !11814

if.end:                                           ; preds = %entry
  %arrayidx1 = getelementptr inbounds [4 x %struct.gbhw_channel], [4 x %struct.gbhw_channel]* @gbhw_ch, i64 0, i64 %ch, !dbg !11816
  %volume = getelementptr inbounds %struct.gbhw_channel, %struct.gbhw_channel* %arrayidx1, i32 0, i32 6, !dbg !11818
  %1 = load i64, i64* %volume, align 16, !dbg !11818
  %cmp = icmp eq i64 %1, 0, !dbg !11819
  br i1 %cmp, label %if.then2, label %if.else, !dbg !11820

if.then2:                                         ; preds = %if.end
  br label %return, !dbg !11821

if.else:                                          ; preds = %if.end
  %arrayidx3 = getelementptr inbounds [4 x %struct.gbhw_channel], [4 x %struct.gbhw_channel]* @gbhw_ch, i64 0, i64 %ch, !dbg !11823
  %master = getelementptr inbounds %struct.gbhw_channel, %struct.gbhw_channel* %arrayidx3, i32 0, i32 1, !dbg !11825
  %2 = load i64, i64* %master, align 8, !dbg !11825
  %cmp4 = icmp eq i64 %2, 0, !dbg !11826
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !11816

if.then5:                                         ; preds = %if.else
  br label %return, !dbg !11827

if.end6:                                          ; preds = %if.else
  br label %if.end7

if.end7:                                          ; preds = %if.end6
  %arrayidx8 = getelementptr inbounds [4 x %struct.gbhw_channel], [4 x %struct.gbhw_channel]* @gbhw_ch, i64 0, i64 %ch, !dbg !11829
  %div_tc = getelementptr inbounds %struct.gbhw_channel, %struct.gbhw_channel* %arrayidx8, i32 0, i32 16, !dbg !11832
  %3 = load i64, i64* %div_tc, align 16, !dbg !11832
  %call = call i64 @getnote(i64 %3), !dbg !11833
  call void @llvm.dbg.value(metadata i64 %call, metadata !11834, metadata !DIExpression()), !dbg !11800
  %cmp9 = icmp ne i64 %ch, 3, !dbg !11835
  br i1 %cmp9, label %if.then10, label %if.else12, !dbg !11837

if.then10:                                        ; preds = %if.end7
  %mul = mul nsw i64 4, %call, !dbg !11838
  %arrayidx11 = getelementptr inbounds [432 x i8], [432 x i8]* @notelookup, i64 0, i64 %mul, !dbg !11840
  br label %return, !dbg !11841

if.else12:                                        ; preds = %if.end7
  br label %return, !dbg !11842

return:                                           ; preds = %if.else12, %if.then10, %if.then5, %if.then2, %if.then
  %retval.0 = phi i8* [ getelementptr inbounds ([4 x i8], [4 x i8]* @.str.115, i32 0, i32 0), %if.then ], [ getelementptr inbounds ([4 x i8], [4 x i8]* @.str.116, i32 0, i32 0), %if.then2 ], [ getelementptr inbounds ([4 x i8], [4 x i8]* @.str.116, i32 0, i32 0), %if.then5 ], [ %arrayidx11, %if.then10 ], [ getelementptr inbounds ([4 x i8], [4 x i8]* @.str.117, i32 0, i32 0), %if.else12 ], !dbg !11844
  ret i8* %retval.0, !dbg !11845
}

declare i32 @fflush(%struct._IO_FILE*) #5

; Function Attrs: noinline nounwind ssp uwtable
define internal i64 @getnote(i64 %div___2) #0 !dbg !11846 {
entry:
  call void @llvm.dbg.value(metadata i64 %div___2, metadata !11847, metadata !DIExpression()), !dbg !11848
  call void @llvm.dbg.value(metadata i64 0, metadata !11849, metadata !DIExpression()), !dbg !11848
  %cmp = icmp sgt i64 %div___2, 0, !dbg !11850
  br i1 %cmp, label %if.then, label %if.end, !dbg !11853

if.then:                                          ; preds = %entry
  %div = sdiv i64 262144, %div___2, !dbg !11854
  %conv = sitofp i64 %div to double, !dbg !11858
  %0 = call double @llvm.log.f64(double %conv), !dbg !11859
  call void @llvm.dbg.value(metadata double %0, metadata !11860, metadata !DIExpression()), !dbg !11848
  %div1 = fdiv double %0, 0x3FE62E42FEFA39EF, !dbg !11861
  %sub = fsub double %div1, 0x4017201CC2C0005A, !dbg !11862
  %mul = fmul double %sub, 1.200000e+01, !dbg !11863
  %add = fadd double %mul, 2.000000e-01, !dbg !11864
  %conv2 = fptosi double %add to i64, !dbg !11865
  call void @llvm.dbg.value(metadata i64 %conv2, metadata !11849, metadata !DIExpression()), !dbg !11848
  br label %if.end, !dbg !11866

if.end:                                           ; preds = %if.then, %entry
  %n.0 = phi i64 [ %conv2, %if.then ], [ 0, %entry ], !dbg !11867
  call void @llvm.dbg.value(metadata i64 %n.0, metadata !11849, metadata !DIExpression()), !dbg !11848
  %cmp3 = icmp slt i64 %n.0, 0, !dbg !11868
  br i1 %cmp3, label %if.then5, label %if.else, !dbg !11870

if.then5:                                         ; preds = %if.end
  call void @llvm.dbg.value(metadata i64 0, metadata !11849, metadata !DIExpression()), !dbg !11848
  br label %if.end10, !dbg !11871

if.else:                                          ; preds = %if.end
  %cmp6 = icmp sge i64 %n.0, 108, !dbg !11873
  br i1 %cmp6, label %if.then8, label %if.end9, !dbg !11875

if.then8:                                         ; preds = %if.else
  call void @llvm.dbg.value(metadata i64 8, metadata !11849, metadata !DIExpression()), !dbg !11848
  br label %if.end9, !dbg !11876

if.end9:                                          ; preds = %if.then8, %if.else
  %n.1 = phi i64 [ 8, %if.then8 ], [ %n.0, %if.else ], !dbg !11867
  call void @llvm.dbg.value(metadata i64 %n.1, metadata !11849, metadata !DIExpression()), !dbg !11848
  br label %if.end10

if.end10:                                         ; preds = %if.end9, %if.then5
  %n.2 = phi i64 [ 0, %if.then5 ], [ %n.1, %if.end9 ], !dbg !11878
  call void @llvm.dbg.value(metadata i64 %n.2, metadata !11849, metadata !DIExpression()), !dbg !11848
  ret i64 %n.2, !dbg !11879
}

; Function Attrs: noinline nounwind ssp uwtable
define internal i32 @get_prev_subsong(%struct.gbs* %gbs) #0 !dbg !11880 {
entry:
  call void @llvm.dbg.value(metadata %struct.gbs* %gbs, metadata !11883, metadata !DIExpression()), !dbg !11884
  call void @llvm.dbg.value(metadata i32 -1, metadata !11885, metadata !DIExpression()), !dbg !11884
  %0 = load i64, i64* @playmode, align 8, !dbg !11886
  %cmp = icmp eq i64 %0, 2, !dbg !11890
  br i1 %cmp, label %if.then, label %if.end, !dbg !11891

if.then:                                          ; preds = %entry
  br label %case_2, !dbg !11892

if.end:                                           ; preds = %entry
  %1 = load i64, i64* @playmode, align 8, !dbg !11894
  %cmp1 = icmp eq i64 %1, 3, !dbg !11896
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !11897

if.then2:                                         ; preds = %if.end
  br label %case_3, !dbg !11898

if.end3:                                          ; preds = %if.end
  %2 = load i64, i64* @playmode, align 8, !dbg !11900
  %cmp4 = icmp eq i64 %2, 1, !dbg !11902
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !11903

if.then5:                                         ; preds = %if.end3
  br label %case_1, !dbg !11904

if.end6:                                          ; preds = %if.end3
  br label %switch_break, !dbg !11906

case_2:                                           ; preds = %if.then
  %songs = getelementptr inbounds %struct.gbs, %struct.gbs* %gbs, i32 0, i32 2, !dbg !11907
  %3 = load i64, i64* %songs, align 8, !dbg !11907
  %call = call i64 @rand_long(i64 %3), !dbg !11910
  call void @llvm.dbg.value(metadata i64 %call, metadata !11911, metadata !DIExpression()), !dbg !11884
  %conv = trunc i64 %call to i32, !dbg !11912
  call void @llvm.dbg.value(metadata i32 %conv, metadata !11885, metadata !DIExpression()), !dbg !11884
  br label %switch_break, !dbg !11913

case_3:                                           ; preds = %if.then2
  %4 = load i64, i64* @subsong_playlist_idx, align 8, !dbg !11914
  %dec = add nsw i64 %4, -1, !dbg !11914
  store i64 %dec, i64* @subsong_playlist_idx, align 8, !dbg !11914
  %5 = load i64, i64* @subsong_playlist_idx, align 8, !dbg !11915
  %cmp7 = icmp eq i64 %5, -1, !dbg !11917
  br i1 %cmp7, label %if.then9, label %if.end14, !dbg !11918

if.then9:                                         ; preds = %case_3
  %6 = load i64*, i64** @subsong_playlist, align 8, !dbg !11919
  %7 = bitcast i64* %6 to i8*, !dbg !11923
  call void @free(i8* %7) #11, !dbg !11924
  %8 = load i64, i64* @random_seed, align 8, !dbg !11925
  %dec10 = add i64 %8, -1, !dbg !11925
  store i64 %dec10, i64* @random_seed, align 8, !dbg !11925
  %songs11 = getelementptr inbounds %struct.gbs, %struct.gbs* %gbs, i32 0, i32 2, !dbg !11926
  %9 = load i64, i64* %songs11, align 8, !dbg !11926
  %call12 = call i64* @setup_playlist(i64 %9), !dbg !11928
  store i64* %call12, i64** @subsong_playlist, align 8, !dbg !11929
  %songs13 = getelementptr inbounds %struct.gbs, %struct.gbs* %gbs, i32 0, i32 2, !dbg !11930
  %10 = load i64, i64* %songs13, align 8, !dbg !11930
  %sub = sub nsw i64 %10, 1, !dbg !11931
  store i64 %sub, i64* @subsong_playlist_idx, align 8, !dbg !11932
  br label %if.end14, !dbg !11933

if.end14:                                         ; preds = %if.then9, %case_3
  %11 = load i64*, i64** @subsong_playlist, align 8, !dbg !11934
  %12 = load i64, i64* @subsong_playlist_idx, align 8, !dbg !11935
  %add.ptr = getelementptr inbounds i64, i64* %11, i64 %12, !dbg !11936
  %13 = load i64, i64* %add.ptr, align 8, !dbg !11937
  %conv15 = trunc i64 %13 to i32, !dbg !11938
  call void @llvm.dbg.value(metadata i32 %conv15, metadata !11885, metadata !DIExpression()), !dbg !11884
  br label %switch_break, !dbg !11939

case_1:                                           ; preds = %if.then5
  %subsong = getelementptr inbounds %struct.gbs, %struct.gbs* %gbs, i32 0, i32 36, !dbg !11940
  %14 = load i64, i64* %subsong, align 8, !dbg !11940
  %sub16 = sub nsw i64 %14, 1, !dbg !11941
  %conv17 = trunc i64 %sub16 to i32, !dbg !11942
  call void @llvm.dbg.value(metadata i32 %conv17, metadata !11885, metadata !DIExpression()), !dbg !11884
  br label %switch_break, !dbg !11943

switch_break:                                     ; preds = %case_1, %if.end14, %case_2, %if.end6
  %prev.0 = phi i32 [ %conv, %case_2 ], [ %conv15, %if.end14 ], [ %conv17, %case_1 ], [ -1, %if.end6 ], !dbg !11944
  call void @llvm.dbg.value(metadata i32 %prev.0, metadata !11885, metadata !DIExpression()), !dbg !11884
  ret i32 %prev.0, !dbg !11945
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #1

attributes #0 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "darwin-stkchk-strong-link" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "probe-stack"="___chkstk_darwin" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "darwin-stkchk-strong-link" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "probe-stack"="___chkstk_darwin" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "darwin-stkchk-strong-link" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "probe-stack"="___chkstk_darwin" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "darwin-stkchk-strong-link" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "probe-stack"="___chkstk_darwin" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "darwin-stkchk-strong-link" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "probe-stack"="___chkstk_darwin" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "darwin-stkchk-strong-link" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "probe-stack"="___chkstk_darwin" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { argmemonly nounwind willreturn }
attributes #8 = { nounwind readonly }
attributes #9 = { noreturn nounwind }
attributes #10 = { nounwind readnone }
attributes #11 = { nounwind }

!llvm.module.flags = !{!659, !660, !661, !662, !663}
!llvm.dbg.cu = !{!2}
!llvm.ident = !{!664}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "c", scope: !2, file: !323, line: 60, type: !15, isLocal: true, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Apple clang version 11.0.0 (clang-1100.0.33.17)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !12, globals: !294, nameTableKind: GNU)
!3 = !DIFile(filename: "c/gbsplay-0.0.91.c", directory: "/Users/hakjoooh/Documents/llir/pa2020/test")
!4 = !{!5}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "plugout_endian", file: !6, line: 6, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "/home/wslee/benchmarks/sound/gbsplay-0.0.91/plugout.h", directory: "")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11}
!9 = !DIEnumerator(name: "PLUGOUT_ENDIAN_BIG", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "PLUGOUT_ENDIAN_LITTLE", value: 1, isUnsigned: true)
!11 = !DIEnumerator(name: "PLUGOUT_ENDIAN_NATIVE", value: 2, isUnsigned: true)
!12 = !{!13, !14, !15, !16, !5, !17, !18, !20, !21, !22, !23, !24, !76, !83, !85, !86, !87, !89, !91, !90, !88, !70, !92, !94, !96, !120, !131, !151, !156, !163, !164, !183, !184, !7, !187, !274, !275, !277, !279, !281, !282, !285, !288, !291, !271}
!13 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5, size: 64)
!14 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!15 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17, size: 64)
!17 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!18 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !19, size: 64)
!19 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !17)
!20 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16, size: 64)
!21 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15, size: 64)
!22 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!23 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!24 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !25, size: 64)
!25 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !26, line: 49, baseType: !27)
!26 = !DIFile(filename: "/usr/include/stdio.h", directory: "")
!27 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !28, line: 271, size: 1728, elements: !29)
!28 = !DIFile(filename: "/usr/include/libio.h", directory: "")
!29 = !{!30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !50, !51, !52, !53, !56, !58, !60, !64, !67, !71, !72, !73, !74, !75, !78, !79}
!30 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !27, file: !28, line: 272, baseType: !14, size: 32)
!31 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !27, file: !28, line: 273, baseType: !16, size: 64, offset: 64)
!32 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !27, file: !28, line: 274, baseType: !16, size: 64, offset: 128)
!33 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !27, file: !28, line: 275, baseType: !16, size: 64, offset: 192)
!34 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !27, file: !28, line: 276, baseType: !16, size: 64, offset: 256)
!35 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !27, file: !28, line: 277, baseType: !16, size: 64, offset: 320)
!36 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !27, file: !28, line: 278, baseType: !16, size: 64, offset: 384)
!37 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !27, file: !28, line: 279, baseType: !16, size: 64, offset: 448)
!38 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !27, file: !28, line: 280, baseType: !16, size: 64, offset: 512)
!39 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !27, file: !28, line: 281, baseType: !16, size: 64, offset: 576)
!40 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !27, file: !28, line: 282, baseType: !16, size: 64, offset: 640)
!41 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !27, file: !28, line: 283, baseType: !16, size: 64, offset: 704)
!42 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !27, file: !28, line: 284, baseType: !43, size: 64, offset: 768)
!43 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !44, size: 64)
!44 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !28, line: 186, size: 192, elements: !45)
!45 = !{!46, !47, !49}
!46 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !44, file: !28, line: 187, baseType: !43, size: 64)
!47 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !44, file: !28, line: 188, baseType: !48, size: 64, offset: 64)
!48 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !27, size: 64)
!49 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !44, file: !28, line: 189, baseType: !14, size: 32, offset: 128)
!50 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !27, file: !28, line: 285, baseType: !48, size: 64, offset: 832)
!51 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !27, file: !28, line: 286, baseType: !14, size: 32, offset: 896)
!52 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !27, file: !28, line: 287, baseType: !14, size: 32, offset: 928)
!53 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !27, file: !28, line: 288, baseType: !54, size: 64, offset: 960)
!54 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !55, line: 141, baseType: !15)
!55 = !DIFile(filename: "/usr/include/bits/types.h", directory: "")
!56 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !27, file: !28, line: 289, baseType: !57, size: 16, offset: 1024)
!57 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!58 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !27, file: !28, line: 290, baseType: !59, size: 8, offset: 1040)
!59 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!60 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !27, file: !28, line: 291, baseType: !61, size: 8, offset: 1048)
!61 = !DICompositeType(tag: DW_TAG_array_type, baseType: !17, size: 8, elements: !62)
!62 = !{!63}
!63 = !DISubrange(count: 1)
!64 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !27, file: !28, line: 292, baseType: !65, size: 64, offset: 1088)
!65 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !66, size: 64)
!66 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !28, line: 180, baseType: null)
!67 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !27, file: !28, line: 293, baseType: !68, size: 64, offset: 1152)
!68 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !55, line: 142, baseType: !69)
!69 = !DIDerivedType(tag: DW_TAG_typedef, name: "__quad_t", file: !55, line: 56, baseType: !70)
!70 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!71 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !27, file: !28, line: 294, baseType: !23, size: 64, offset: 1216)
!72 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !27, file: !28, line: 295, baseType: !23, size: 64, offset: 1280)
!73 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !27, file: !28, line: 296, baseType: !23, size: 64, offset: 1344)
!74 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !27, file: !28, line: 297, baseType: !23, size: 64, offset: 1408)
!75 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !27, file: !28, line: 298, baseType: !76, size: 32, offset: 1472)
!76 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !77, line: 211, baseType: !7)
!77 = !DIFile(filename: "/usr/lib/gcc/i486-linux-gnu/4.4.3/include/stddef.h", directory: "")
!78 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !27, file: !28, line: 299, baseType: !14, size: 32, offset: 1504)
!79 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !27, file: !28, line: 300, baseType: !80, size: 192, offset: 1536)
!80 = !DICompositeType(tag: DW_TAG_array_type, baseType: !17, size: 192, elements: !81)
!81 = !{!82}
!82 = !DISubrange(count: 24)
!83 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !84, line: 52, baseType: !7)
!84 = !DIFile(filename: "/usr/include/stdint.h", directory: "")
!85 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !86, size: 64)
!86 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !84, line: 50, baseType: !57)
!87 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !84, line: 49, baseType: !88)
!88 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!89 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !90, size: 64)
!90 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!91 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!92 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !93, line: 196, baseType: !90)
!93 = !DIFile(filename: "/usr/include/sys/types.h", directory: "")
!94 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !95, size: 64)
!95 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!96 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !97, size: 64)
!97 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gbs", file: !98, line: 26, size: 2688, elements: !99)
!98 = !DIFile(filename: "/home/wslee/benchmarks/sound/gbsplay-0.0.91/gbs.h", directory: "")
!99 = !{!100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !125, !126, !130, !132, !133, !134, !135, !136, !137, !138, !139, !140, !141, !142, !143, !144, !145, !146, !150}
!100 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !97, file: !98, line: 27, baseType: !16, size: 64)
!101 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !97, file: !98, line: 28, baseType: !15, size: 64, offset: 64)
!102 = !DIDerivedType(tag: DW_TAG_member, name: "songs", scope: !97, file: !98, line: 29, baseType: !15, size: 64, offset: 128)
!103 = !DIDerivedType(tag: DW_TAG_member, name: "defaultsong", scope: !97, file: !98, line: 30, baseType: !15, size: 64, offset: 192)
!104 = !DIDerivedType(tag: DW_TAG_member, name: "load", scope: !97, file: !98, line: 31, baseType: !86, size: 16, offset: 256)
!105 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !97, file: !98, line: 32, baseType: !86, size: 16, offset: 272)
!106 = !DIDerivedType(tag: DW_TAG_member, name: "play", scope: !97, file: !98, line: 33, baseType: !86, size: 16, offset: 288)
!107 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !97, file: !98, line: 34, baseType: !86, size: 16, offset: 304)
!108 = !DIDerivedType(tag: DW_TAG_member, name: "tma", scope: !97, file: !98, line: 35, baseType: !87, size: 8, offset: 320)
!109 = !DIDerivedType(tag: DW_TAG_member, name: "tmc", scope: !97, file: !98, line: 36, baseType: !87, size: 8, offset: 328)
!110 = !DIDerivedType(tag: DW_TAG_member, name: "title", scope: !97, file: !98, line: 37, baseType: !16, size: 64, offset: 384)
!111 = !DIDerivedType(tag: DW_TAG_member, name: "author", scope: !97, file: !98, line: 38, baseType: !16, size: 64, offset: 448)
!112 = !DIDerivedType(tag: DW_TAG_member, name: "copyright", scope: !97, file: !98, line: 39, baseType: !16, size: 64, offset: 512)
!113 = !DIDerivedType(tag: DW_TAG_member, name: "codelen", scope: !97, file: !98, line: 40, baseType: !22, size: 64, offset: 576)
!114 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !97, file: !98, line: 41, baseType: !16, size: 64, offset: 640)
!115 = !DIDerivedType(tag: DW_TAG_member, name: "exthdr", scope: !97, file: !98, line: 42, baseType: !16, size: 64, offset: 704)
!116 = !DIDerivedType(tag: DW_TAG_member, name: "filesize", scope: !97, file: !98, line: 43, baseType: !76, size: 32, offset: 768)
!117 = !DIDerivedType(tag: DW_TAG_member, name: "crc", scope: !97, file: !98, line: 44, baseType: !83, size: 32, offset: 800)
!118 = !DIDerivedType(tag: DW_TAG_member, name: "crcnow", scope: !97, file: !98, line: 45, baseType: !83, size: 32, offset: 832)
!119 = !DIDerivedType(tag: DW_TAG_member, name: "subsong_info", scope: !97, file: !98, line: 46, baseType: !120, size: 64, offset: 896)
!120 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !121, size: 64)
!121 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gbs_subsong_info", file: !98, line: 21, size: 128, elements: !122)
!122 = !{!123, !124}
!123 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !121, file: !98, line: 22, baseType: !83, size: 32)
!124 = !DIDerivedType(tag: DW_TAG_member, name: "title", scope: !121, file: !98, line: 23, baseType: !16, size: 64, offset: 64)
!125 = !DIDerivedType(tag: DW_TAG_member, name: "strings", scope: !97, file: !98, line: 47, baseType: !16, size: 64, offset: 960)
!126 = !DIDerivedType(tag: DW_TAG_member, name: "v1strings", scope: !97, file: !98, line: 48, baseType: !127, size: 792, offset: 1024)
!127 = !DICompositeType(tag: DW_TAG_array_type, baseType: !17, size: 792, elements: !128)
!128 = !{!129}
!129 = !DISubrange(count: 99)
!130 = !DIDerivedType(tag: DW_TAG_member, name: "rom", scope: !97, file: !98, line: 49, baseType: !131, size: 64, offset: 1856)
!131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !87, size: 64)
!132 = !DIDerivedType(tag: DW_TAG_member, name: "romsize", scope: !97, file: !98, line: 50, baseType: !22, size: 64, offset: 1920)
!133 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !97, file: !98, line: 51, baseType: !70, size: 64, offset: 1984)
!134 = !DIDerivedType(tag: DW_TAG_member, name: "lmin", scope: !97, file: !98, line: 52, baseType: !92, size: 16, offset: 2048)
!135 = !DIDerivedType(tag: DW_TAG_member, name: "lmax", scope: !97, file: !98, line: 53, baseType: !92, size: 16, offset: 2064)
!136 = !DIDerivedType(tag: DW_TAG_member, name: "lvol", scope: !97, file: !98, line: 54, baseType: !92, size: 16, offset: 2080)
!137 = !DIDerivedType(tag: DW_TAG_member, name: "rmin", scope: !97, file: !98, line: 55, baseType: !92, size: 16, offset: 2096)
!138 = !DIDerivedType(tag: DW_TAG_member, name: "rmax", scope: !97, file: !98, line: 56, baseType: !92, size: 16, offset: 2112)
!139 = !DIDerivedType(tag: DW_TAG_member, name: "rvol", scope: !97, file: !98, line: 57, baseType: !92, size: 16, offset: 2128)
!140 = !DIDerivedType(tag: DW_TAG_member, name: "subsong_timeout", scope: !97, file: !98, line: 58, baseType: !15, size: 64, offset: 2176)
!141 = !DIDerivedType(tag: DW_TAG_member, name: "silence_timeout", scope: !97, file: !98, line: 59, baseType: !15, size: 64, offset: 2240)
!142 = !DIDerivedType(tag: DW_TAG_member, name: "fadeout", scope: !97, file: !98, line: 60, baseType: !15, size: 64, offset: 2304)
!143 = !DIDerivedType(tag: DW_TAG_member, name: "gap", scope: !97, file: !98, line: 61, baseType: !15, size: 64, offset: 2368)
!144 = !DIDerivedType(tag: DW_TAG_member, name: "silence_start", scope: !97, file: !98, line: 62, baseType: !70, size: 64, offset: 2432)
!145 = !DIDerivedType(tag: DW_TAG_member, name: "subsong", scope: !97, file: !98, line: 63, baseType: !15, size: 64, offset: 2496)
!146 = !DIDerivedType(tag: DW_TAG_member, name: "nextsubsong_cb", scope: !97, file: !98, line: 64, baseType: !147, size: 64, offset: 2560)
!147 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !148, size: 64)
!148 = !DISubroutineType(types: !149)
!149 = !{!15, !96, !23}
!150 = !DIDerivedType(tag: DW_TAG_member, name: "nextsubsong_cb_priv", scope: !97, file: !98, line: 65, baseType: !23, size: 64, offset: 2624)
!151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !152, size: 64)
!152 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gbhw_buffer", file: !153, line: 16, size: 448, elements: !154)
!153 = !DIFile(filename: "/home/wslee/benchmarks/sound/gbsplay-0.0.91/gbhw.h", directory: "")
!154 = !{!155, !157, !158, !159, !160, !161, !162}
!155 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !152, file: !153, line: 17, baseType: !156, size: 64)
!156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !92, size: 64)
!157 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !152, file: !153, line: 18, baseType: !15, size: 64, offset: 64)
!158 = !DIDerivedType(tag: DW_TAG_member, name: "l_lvl", scope: !152, file: !153, line: 19, baseType: !15, size: 64, offset: 128)
!159 = !DIDerivedType(tag: DW_TAG_member, name: "r_lvl", scope: !152, file: !153, line: 20, baseType: !15, size: 64, offset: 192)
!160 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !152, file: !153, line: 21, baseType: !15, size: 64, offset: 256)
!161 = !DIDerivedType(tag: DW_TAG_member, name: "samples", scope: !152, file: !153, line: 22, baseType: !15, size: 64, offset: 320)
!162 = !DIDerivedType(tag: DW_TAG_member, name: "cycles", scope: !152, file: !153, line: 23, baseType: !15, size: 64, offset: 384)
!163 = !DIDerivedType(tag: DW_TAG_typedef, name: "__useconds_t", file: !55, line: 150, baseType: !7)
!164 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !165, size: 64)
!165 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !166)
!166 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "termios", file: !167, line: 30, size: 480, elements: !168)
!167 = !DIFile(filename: "/usr/include/bits/termios.h", directory: "")
!168 = !{!169, !171, !172, !173, !174, !176, !180, !182}
!169 = !DIDerivedType(tag: DW_TAG_member, name: "c_iflag", scope: !166, file: !167, line: 31, baseType: !170, size: 32)
!170 = !DIDerivedType(tag: DW_TAG_typedef, name: "tcflag_t", file: !167, line: 27, baseType: !7)
!171 = !DIDerivedType(tag: DW_TAG_member, name: "c_oflag", scope: !166, file: !167, line: 32, baseType: !170, size: 32, offset: 32)
!172 = !DIDerivedType(tag: DW_TAG_member, name: "c_cflag", scope: !166, file: !167, line: 33, baseType: !170, size: 32, offset: 64)
!173 = !DIDerivedType(tag: DW_TAG_member, name: "c_lflag", scope: !166, file: !167, line: 34, baseType: !170, size: 32, offset: 96)
!174 = !DIDerivedType(tag: DW_TAG_member, name: "c_line", scope: !166, file: !167, line: 35, baseType: !175, size: 8, offset: 128)
!175 = !DIDerivedType(tag: DW_TAG_typedef, name: "cc_t", file: !167, line: 25, baseType: !88)
!176 = !DIDerivedType(tag: DW_TAG_member, name: "c_cc", scope: !166, file: !167, line: 36, baseType: !177, size: 256, offset: 136)
!177 = !DICompositeType(tag: DW_TAG_array_type, baseType: !175, size: 256, elements: !178)
!178 = !{!179}
!179 = !DISubrange(count: 32)
!180 = !DIDerivedType(tag: DW_TAG_member, name: "c_ispeed", scope: !166, file: !167, line: 37, baseType: !181, size: 32, offset: 416)
!181 = !DIDerivedType(tag: DW_TAG_typedef, name: "speed_t", file: !167, line: 26, baseType: !7)
!182 = !DIDerivedType(tag: DW_TAG_member, name: "c_ospeed", scope: !166, file: !167, line: 38, baseType: !181, size: 32, offset: 448)
!183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !184, size: 64)
!184 = !DIDerivedType(tag: DW_TAG_typedef, name: "time_t", file: !185, line: 76, baseType: !186)
!185 = !DIFile(filename: "/usr/include/time.h", directory: "")
!186 = !DIDerivedType(tag: DW_TAG_typedef, name: "__time_t", file: !55, line: 149, baseType: !15)
!187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !188, size: 64)
!188 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !189)
!189 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigaction", file: !190, line: 25, size: 1216, elements: !191)
!190 = !DIFile(filename: "/usr/include/bits/sigaction.h", directory: "")
!191 = !{!192, !260, !269, !270}
!192 = !DIDerivedType(tag: DW_TAG_member, name: "__sigaction_handler", scope: !189, file: !190, line: 26, baseType: !193, size: 64)
!193 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "__anonunion___sigaction_handler_47", file: !190, line: 25, size: 64, elements: !194)
!194 = !{!195, !199}
!195 = !DIDerivedType(tag: DW_TAG_member, name: "sa_handler", scope: !193, file: !190, line: 26, baseType: !196, size: 64)
!196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !197, size: 64)
!197 = !DISubroutineType(types: !198)
!198 = !{null, !14}
!199 = !DIDerivedType(tag: DW_TAG_member, name: "sa_sigaction", scope: !193, file: !190, line: 27, baseType: !200, size: 64)
!200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !201, size: 64)
!201 = !DISubroutineType(types: !202)
!202 = !{null, !14, !203, !23}
!203 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !204, size: 64)
!204 = !DIDerivedType(tag: DW_TAG_typedef, name: "siginfo_t", file: !205, line: 51, baseType: !206)
!205 = !DIFile(filename: "/usr/include/bits/siginfo.h", directory: "")
!206 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "siginfo", file: !205, line: 51, size: 1088, elements: !207)
!207 = !{!208, !209, !210, !211}
!208 = !DIDerivedType(tag: DW_TAG_member, name: "si_signo", scope: !206, file: !205, line: 52, baseType: !14, size: 32)
!209 = !DIDerivedType(tag: DW_TAG_member, name: "si_errno", scope: !206, file: !205, line: 53, baseType: !14, size: 32, offset: 32)
!210 = !DIDerivedType(tag: DW_TAG_member, name: "si_code", scope: !206, file: !205, line: 54, baseType: !14, size: 32, offset: 64)
!211 = !DIDerivedType(tag: DW_TAG_member, name: "_sifields", scope: !206, file: !205, line: 55, baseType: !212, size: 960, offset: 128)
!212 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "__anonunion__sifields_29", file: !205, line: 51, size: 960, elements: !213)
!213 = !{!214, !218, !225, !236, !242, !251, !255}
!214 = !DIDerivedType(tag: DW_TAG_member, name: "_pad", scope: !212, file: !205, line: 52, baseType: !215, size: 928)
!215 = !DICompositeType(tag: DW_TAG_array_type, baseType: !14, size: 928, elements: !216)
!216 = !{!217}
!217 = !DISubrange(count: 29)
!218 = !DIDerivedType(tag: DW_TAG_member, name: "_kill", scope: !212, file: !205, line: 53, baseType: !219, size: 64)
!219 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__anonstruct__kill_30", file: !205, line: 51, size: 64, elements: !220)
!220 = !{!221, !223}
!221 = !DIDerivedType(tag: DW_TAG_member, name: "si_pid", scope: !219, file: !205, line: 52, baseType: !222, size: 32)
!222 = !DIDerivedType(tag: DW_TAG_typedef, name: "__pid_t", file: !55, line: 143, baseType: !14)
!223 = !DIDerivedType(tag: DW_TAG_member, name: "si_uid", scope: !219, file: !205, line: 53, baseType: !224, size: 32, offset: 32)
!224 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uid_t", file: !55, line: 135, baseType: !7)
!225 = !DIDerivedType(tag: DW_TAG_member, name: "_timer", scope: !212, file: !205, line: 54, baseType: !226, size: 128)
!226 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__anonstruct__timer_31", file: !205, line: 51, size: 128, elements: !227)
!227 = !{!228, !229, !230}
!228 = !DIDerivedType(tag: DW_TAG_member, name: "si_tid", scope: !226, file: !205, line: 52, baseType: !14, size: 32)
!229 = !DIDerivedType(tag: DW_TAG_member, name: "si_overrun", scope: !226, file: !205, line: 53, baseType: !14, size: 32, offset: 32)
!230 = !DIDerivedType(tag: DW_TAG_member, name: "si_sigval", scope: !226, file: !205, line: 54, baseType: !231, size: 64, offset: 64)
!231 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigval_t", file: !205, line: 33, baseType: !232)
!232 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "sigval", file: !205, line: 33, size: 64, elements: !233)
!233 = !{!234, !235}
!234 = !DIDerivedType(tag: DW_TAG_member, name: "sival_int", scope: !232, file: !205, line: 34, baseType: !14, size: 32)
!235 = !DIDerivedType(tag: DW_TAG_member, name: "sival_ptr", scope: !232, file: !205, line: 35, baseType: !23, size: 64)
!236 = !DIDerivedType(tag: DW_TAG_member, name: "_rt", scope: !212, file: !205, line: 55, baseType: !237, size: 128)
!237 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__anonstruct__rt_32", file: !205, line: 51, size: 128, elements: !238)
!238 = !{!239, !240, !241}
!239 = !DIDerivedType(tag: DW_TAG_member, name: "si_pid", scope: !237, file: !205, line: 52, baseType: !222, size: 32)
!240 = !DIDerivedType(tag: DW_TAG_member, name: "si_uid", scope: !237, file: !205, line: 53, baseType: !224, size: 32, offset: 32)
!241 = !DIDerivedType(tag: DW_TAG_member, name: "si_sigval", scope: !237, file: !205, line: 54, baseType: !231, size: 64, offset: 64)
!242 = !DIDerivedType(tag: DW_TAG_member, name: "_sigchld", scope: !212, file: !205, line: 56, baseType: !243, size: 256)
!243 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__anonstruct__sigchld_33", file: !205, line: 51, size: 256, elements: !244)
!244 = !{!245, !246, !247, !248, !250}
!245 = !DIDerivedType(tag: DW_TAG_member, name: "si_pid", scope: !243, file: !205, line: 52, baseType: !222, size: 32)
!246 = !DIDerivedType(tag: DW_TAG_member, name: "si_uid", scope: !243, file: !205, line: 53, baseType: !224, size: 32, offset: 32)
!247 = !DIDerivedType(tag: DW_TAG_member, name: "si_status", scope: !243, file: !205, line: 54, baseType: !14, size: 32, offset: 64)
!248 = !DIDerivedType(tag: DW_TAG_member, name: "si_utime", scope: !243, file: !205, line: 55, baseType: !249, size: 64, offset: 128)
!249 = !DIDerivedType(tag: DW_TAG_typedef, name: "__clock_t", file: !55, line: 145, baseType: !15)
!250 = !DIDerivedType(tag: DW_TAG_member, name: "si_stime", scope: !243, file: !205, line: 56, baseType: !249, size: 64, offset: 192)
!251 = !DIDerivedType(tag: DW_TAG_member, name: "_sigfault", scope: !212, file: !205, line: 57, baseType: !252, size: 64)
!252 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__anonstruct__sigfault_34", file: !205, line: 51, size: 64, elements: !253)
!253 = !{!254}
!254 = !DIDerivedType(tag: DW_TAG_member, name: "si_addr", scope: !252, file: !205, line: 52, baseType: !23, size: 64)
!255 = !DIDerivedType(tag: DW_TAG_member, name: "_sigpoll", scope: !212, file: !205, line: 58, baseType: !256, size: 128)
!256 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__anonstruct__sigpoll_35", file: !205, line: 51, size: 128, elements: !257)
!257 = !{!258, !259}
!258 = !DIDerivedType(tag: DW_TAG_member, name: "si_band", scope: !256, file: !205, line: 52, baseType: !15, size: 64)
!259 = !DIDerivedType(tag: DW_TAG_member, name: "si_fd", scope: !256, file: !205, line: 53, baseType: !14, size: 32, offset: 64)
!260 = !DIDerivedType(tag: DW_TAG_member, name: "sa_mask", scope: !189, file: !190, line: 27, baseType: !261, size: 1024, offset: 64)
!261 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sigset_t", file: !262, line: 29, baseType: !263)
!262 = !DIFile(filename: "/usr/include/bits/sigset.h", directory: "")
!263 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__anonstruct___sigset_t_7", file: !262, line: 29, size: 1024, elements: !264)
!264 = !{!265}
!265 = !DIDerivedType(tag: DW_TAG_member, name: "__val", scope: !263, file: !262, line: 30, baseType: !266, size: 1024)
!266 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 1024, elements: !267)
!267 = !{!268}
!268 = !DISubrange(count: 16)
!269 = !DIDerivedType(tag: DW_TAG_member, name: "sa_flags", scope: !189, file: !190, line: 28, baseType: !14, size: 32, offset: 1088)
!270 = !DIDerivedType(tag: DW_TAG_member, name: "sa_restorer", scope: !189, file: !190, line: 29, baseType: !271, size: 64, offset: 1152)
!271 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !272, size: 64)
!272 = !DISubroutineType(types: !273)
!273 = !{null}
!274 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !189, size: 64)
!275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !276, size: 64)
!276 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !16)
!277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !278, size: 64)
!278 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !87)
!279 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !93, line: 110, baseType: !280)
!280 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ssize_t", file: !55, line: 180, baseType: !14)
!281 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !93, line: 195, baseType: !59)
!282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !283, size: 64)
!283 = !DISubroutineType(types: !284)
!284 = !{!15, !5, !15}
!285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !286, size: 64)
!286 = !DISubroutineType(types: !287)
!287 = !{!14, !14}
!288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !289, size: 64)
!289 = !DISubroutineType(types: !290)
!290 = !{!14, !15, !83, !87}
!291 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !292, size: 64)
!292 = !DISubroutineType(types: !293)
!293 = !{!279, !94, !76}
!294 = !{!295, !309, !313, !315, !318, !321, !324, !326, !328, !330, !332, !0, !334, !336, !359, !361, !363, !366, !372, !399, !401, !406, !408, !413, !415, !417, !419, !421, !423, !425, !427, !429, !431, !433, !438, !440, !445, !447, !449, !452, !454, !456, !458, !460, !463, !465, !467, !469, !471, !474, !477, !479, !486, !493, !504, !509, !515, !517, !519, !521, !523, !525, !528, !530, !532, !534, !536, !538, !540, !542, !544, !546, !548, !550, !552, !554, !556, !558, !560, !562, !564, !566, !568, !573, !586, !588, !590, !592, !594, !596, !598, !603, !608, !613, !615, !617, !619, !621, !623, !625, !627, !629, !631, !633, !635, !637, !642, !644, !646, !648, !651, !653}
!295 = !DIGlobalVariableExpression(var: !296, expr: !DIExpression())
!296 = distinct !DIGlobalVariable(name: "plugout_midi", scope: !2, file: !297, line: 308, type: !298, isLocal: false, isDefinition: true)
!297 = !DIFile(filename: "/home/wslee/benchmarks/sound/gbsplay-0.0.91/plugout_midi.c", directory: "")
!298 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !299)
!299 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "output_plugin", file: !6, line: 20, size: 512, elements: !300)
!300 = !{!301, !302, !303, !304, !305, !306, !307, !308}
!301 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !299, file: !6, line: 21, baseType: !16, size: 64)
!302 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !299, file: !6, line: 22, baseType: !16, size: 64, offset: 64)
!303 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !299, file: !6, line: 23, baseType: !15, size: 64, offset: 128)
!304 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !299, file: !6, line: 24, baseType: !282, size: 64, offset: 192)
!305 = !DIDerivedType(tag: DW_TAG_member, name: "skip", scope: !299, file: !6, line: 25, baseType: !285, size: 64, offset: 256)
!306 = !DIDerivedType(tag: DW_TAG_member, name: "io", scope: !299, file: !6, line: 26, baseType: !288, size: 64, offset: 320)
!307 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !299, file: !6, line: 27, baseType: !291, size: 64, offset: 384)
!308 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !299, file: !6, line: 28, baseType: !271, size: 64, offset: 448)
!309 = !DIGlobalVariableExpression(var: !310, expr: !DIExpression(DW_OP_constu, 4194, DW_OP_stack_value))
!310 = distinct !DIGlobalVariable(name: "msec_cycles", scope: !2, file: !311, line: 47, type: !312, isLocal: true, isDefinition: true)
!311 = !DIFile(filename: "/home/wslee/benchmarks/sound/gbsplay-0.0.91/gbhw.c", directory: "")
!312 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !15)
!313 = !DIGlobalVariableExpression(var: !314, expr: !DIExpression(DW_OP_constu, 70256, DW_OP_stack_value))
!314 = distinct !DIGlobalVariable(name: "vblanktc", scope: !2, file: !311, line: 42, type: !312, isLocal: true, isDefinition: true)
!315 = !DIGlobalVariableExpression(var: !316, expr: !DIExpression())
!316 = distinct !DIGlobalVariable(name: "plugout_devdsp", scope: !2, file: !317, line: 81, type: !298, isLocal: false, isDefinition: true)
!317 = !DIFile(filename: "/home/wslee/benchmarks/sound/gbsplay-0.0.91/plugout_devdsp.c", directory: "")
!318 = !DIGlobalVariableExpression(var: !319, expr: !DIExpression())
!319 = distinct !DIGlobalVariable(name: "plugout_stdout", scope: !2, file: !320, line: 42, type: !298, isLocal: false, isDefinition: true)
!320 = !DIFile(filename: "/home/wslee/benchmarks/sound/gbsplay-0.0.91/plugout_stdout.c", directory: "")
!321 = !DIGlobalVariableExpression(var: !322, expr: !DIExpression())
!322 = distinct !DIGlobalVariable(name: "cfg_line", scope: !2, file: !323, line: 21, type: !15, isLocal: true, isDefinition: true)
!323 = !DIFile(filename: "/home/wslee/benchmarks/sound/gbsplay-0.0.91/cfgparser.c", directory: "")
!324 = !DIGlobalVariableExpression(var: !325, expr: !DIExpression())
!325 = distinct !DIGlobalVariable(name: "cfg_char", scope: !2, file: !323, line: 21, type: !15, isLocal: true, isDefinition: true)
!326 = !DIGlobalVariableExpression(var: !327, expr: !DIExpression())
!327 = distinct !DIGlobalVariable(name: "cfg_file", scope: !2, file: !323, line: 22, type: !24, isLocal: true, isDefinition: true)
!328 = !DIGlobalVariableExpression(var: !329, expr: !DIExpression())
!329 = distinct !DIGlobalVariable(name: "nextchar_state", scope: !2, file: !323, line: 24, type: !15, isLocal: true, isDefinition: true)
!330 = !DIGlobalVariableExpression(var: !331, expr: !DIExpression())
!331 = distinct !DIGlobalVariable(name: "state", scope: !2, file: !323, line: 58, type: !15, isLocal: true, isDefinition: true)
!332 = !DIGlobalVariableExpression(var: !333, expr: !DIExpression())
!333 = distinct !DIGlobalVariable(name: "nextstate", scope: !2, file: !323, line: 59, type: !15, isLocal: true, isDefinition: true)
!334 = !DIGlobalVariableExpression(var: !335, expr: !DIExpression())
!335 = distinct !DIGlobalVariable(name: "filename", scope: !2, file: !323, line: 61, type: !18, isLocal: true, isDefinition: true)
!336 = !DIGlobalVariableExpression(var: !337, expr: !DIExpression())
!337 = distinct !DIGlobalVariable(name: "gbcpu_regs", scope: !2, file: !338, line: 102, type: !339, isLocal: false, isDefinition: true)
!338 = !DIFile(filename: "/home/wslee/benchmarks/sound/gbsplay-0.0.91/gbcpu.h", directory: "")
!339 = !DIDerivedType(tag: DW_TAG_typedef, name: "gbcpu_regs_u", file: !338, line: 58, baseType: !340)
!340 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "__anonunion_gbcpu_regs_u_28", file: !338, line: 58, size: 96, elements: !341)
!341 = !{!342, !346}
!342 = !DIDerivedType(tag: DW_TAG_member, name: "ri", scope: !340, file: !338, line: 59, baseType: !343, size: 96)
!343 = !DICompositeType(tag: DW_TAG_array_type, baseType: !87, size: 96, elements: !344)
!344 = !{!345}
!345 = !DISubrange(count: 12)
!346 = !DIDerivedType(tag: DW_TAG_member, name: "rn", scope: !340, file: !338, line: 60, baseType: !347, size: 96)
!347 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__anonstruct_rn_29", file: !338, line: 58, size: 96, elements: !348)
!348 = !{!349, !350, !351, !352, !353, !354, !355, !356, !357, !358}
!349 = !DIDerivedType(tag: DW_TAG_member, name: "c", scope: !347, file: !338, line: 59, baseType: !87, size: 8)
!350 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !347, file: !338, line: 60, baseType: !87, size: 8, offset: 8)
!351 = !DIDerivedType(tag: DW_TAG_member, name: "e", scope: !347, file: !338, line: 61, baseType: !87, size: 8, offset: 16)
!352 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !347, file: !338, line: 62, baseType: !87, size: 8, offset: 24)
!353 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !347, file: !338, line: 63, baseType: !87, size: 8, offset: 32)
!354 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !347, file: !338, line: 64, baseType: !87, size: 8, offset: 40)
!355 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !347, file: !338, line: 65, baseType: !87, size: 8, offset: 48)
!356 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !347, file: !338, line: 66, baseType: !87, size: 8, offset: 56)
!357 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !347, file: !338, line: 67, baseType: !86, size: 16, offset: 64)
!358 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !347, file: !338, line: 68, baseType: !86, size: 16, offset: 80)
!359 = !DIGlobalVariableExpression(var: !360, expr: !DIExpression())
!360 = distinct !DIGlobalVariable(name: "gbcpu_halted", scope: !2, file: !338, line: 103, type: !15, isLocal: false, isDefinition: true)
!361 = !DIGlobalVariableExpression(var: !362, expr: !DIExpression())
!362 = distinct !DIGlobalVariable(name: "gbcpu_if", scope: !2, file: !338, line: 104, type: !15, isLocal: false, isDefinition: true)
!363 = !DIGlobalVariableExpression(var: !364, expr: !DIExpression())
!364 = distinct !DIGlobalVariable(name: "gbcpu_stopped", scope: !2, file: !365, line: 40, type: !15, isLocal: false, isDefinition: true)
!365 = !DIFile(filename: "/home/wslee/benchmarks/sound/gbsplay-0.0.91/gbcpu.c", directory: "")
!366 = !DIGlobalVariableExpression(var: !367, expr: !DIExpression())
!367 = distinct !DIGlobalVariable(name: "crc_table", scope: !2, file: !368, line: 13, type: !369, isLocal: true, isDefinition: true)
!368 = !DIFile(filename: "/home/wslee/benchmarks/sound/gbsplay-0.0.91/crc32.c", directory: "")
!369 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 16384, elements: !370)
!370 = !{!371}
!371 = !DISubrange(count: 256)
!372 = !DIGlobalVariableExpression(var: !373, expr: !DIExpression())
!373 = distinct !DIGlobalVariable(name: "gbhw_ch", scope: !2, file: !153, line: 49, type: !374, isLocal: false, isDefinition: true)
!374 = !DICompositeType(tag: DW_TAG_array_type, baseType: !375, size: 5120, elements: !397)
!375 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gbhw_channel", file: !153, line: 26, size: 1280, elements: !376)
!376 = !{!377, !378, !379, !380, !381, !382, !383, !384, !385, !386, !387, !388, !389, !390, !391, !392, !393, !394, !395, !396}
!377 = !DIDerivedType(tag: DW_TAG_member, name: "mute", scope: !375, file: !153, line: 27, baseType: !15, size: 64)
!378 = !DIDerivedType(tag: DW_TAG_member, name: "master", scope: !375, file: !153, line: 28, baseType: !15, size: 64, offset: 64)
!379 = !DIDerivedType(tag: DW_TAG_member, name: "leftgate", scope: !375, file: !153, line: 29, baseType: !15, size: 64, offset: 128)
!380 = !DIDerivedType(tag: DW_TAG_member, name: "rightgate", scope: !375, file: !153, line: 30, baseType: !15, size: 64, offset: 192)
!381 = !DIDerivedType(tag: DW_TAG_member, name: "l_lvl", scope: !375, file: !153, line: 31, baseType: !15, size: 64, offset: 256)
!382 = !DIDerivedType(tag: DW_TAG_member, name: "r_lvl", scope: !375, file: !153, line: 32, baseType: !15, size: 64, offset: 320)
!383 = !DIDerivedType(tag: DW_TAG_member, name: "volume", scope: !375, file: !153, line: 33, baseType: !15, size: 64, offset: 384)
!384 = !DIDerivedType(tag: DW_TAG_member, name: "env_dir", scope: !375, file: !153, line: 34, baseType: !15, size: 64, offset: 448)
!385 = !DIDerivedType(tag: DW_TAG_member, name: "env_tc", scope: !375, file: !153, line: 35, baseType: !15, size: 64, offset: 512)
!386 = !DIDerivedType(tag: DW_TAG_member, name: "env_ctr", scope: !375, file: !153, line: 36, baseType: !15, size: 64, offset: 576)
!387 = !DIDerivedType(tag: DW_TAG_member, name: "sweep_dir", scope: !375, file: !153, line: 37, baseType: !15, size: 64, offset: 640)
!388 = !DIDerivedType(tag: DW_TAG_member, name: "sweep_tc", scope: !375, file: !153, line: 38, baseType: !15, size: 64, offset: 704)
!389 = !DIDerivedType(tag: DW_TAG_member, name: "sweep_ctr", scope: !375, file: !153, line: 39, baseType: !15, size: 64, offset: 768)
!390 = !DIDerivedType(tag: DW_TAG_member, name: "sweep_shift", scope: !375, file: !153, line: 40, baseType: !15, size: 64, offset: 832)
!391 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !375, file: !153, line: 41, baseType: !15, size: 64, offset: 896)
!392 = !DIDerivedType(tag: DW_TAG_member, name: "len_enable", scope: !375, file: !153, line: 42, baseType: !15, size: 64, offset: 960)
!393 = !DIDerivedType(tag: DW_TAG_member, name: "div_tc", scope: !375, file: !153, line: 43, baseType: !15, size: 64, offset: 1024)
!394 = !DIDerivedType(tag: DW_TAG_member, name: "div_ctr", scope: !375, file: !153, line: 44, baseType: !15, size: 64, offset: 1088)
!395 = !DIDerivedType(tag: DW_TAG_member, name: "duty_tc", scope: !375, file: !153, line: 45, baseType: !15, size: 64, offset: 1152)
!396 = !DIDerivedType(tag: DW_TAG_member, name: "duty_ctr", scope: !375, file: !153, line: 46, baseType: !15, size: 64, offset: 1216)
!397 = !{!398}
!398 = !DISubrange(count: 4)
!399 = !DIGlobalVariableExpression(var: !400, expr: !DIExpression())
!400 = distinct !DIGlobalVariable(name: "rom", scope: !2, file: !311, line: 20, type: !131, isLocal: true, isDefinition: true)
!401 = !DIGlobalVariableExpression(var: !402, expr: !DIExpression())
!402 = distinct !DIGlobalVariable(name: "intram", scope: !2, file: !311, line: 21, type: !403, isLocal: true, isDefinition: true)
!403 = !DICompositeType(tag: DW_TAG_array_type, baseType: !87, size: 65536, elements: !404)
!404 = !{!405}
!405 = !DISubrange(count: 8192)
!406 = !DIGlobalVariableExpression(var: !407, expr: !DIExpression())
!407 = distinct !DIGlobalVariable(name: "extram", scope: !2, file: !311, line: 22, type: !403, isLocal: true, isDefinition: true)
!408 = !DIGlobalVariableExpression(var: !409, expr: !DIExpression())
!409 = distinct !DIGlobalVariable(name: "ioregs", scope: !2, file: !311, line: 23, type: !410, isLocal: true, isDefinition: true)
!410 = !DICompositeType(tag: DW_TAG_array_type, baseType: !87, size: 1024, elements: !411)
!411 = !{!412}
!412 = !DISubrange(count: 128)
!413 = !DIGlobalVariableExpression(var: !414, expr: !DIExpression())
!414 = distinct !DIGlobalVariable(name: "hiram", scope: !2, file: !311, line: 24, type: !410, isLocal: true, isDefinition: true)
!415 = !DIGlobalVariableExpression(var: !416, expr: !DIExpression())
!416 = distinct !DIGlobalVariable(name: "lastbank", scope: !2, file: !311, line: 26, type: !15, isLocal: true, isDefinition: true)
!417 = !DIGlobalVariableExpression(var: !418, expr: !DIExpression())
!418 = distinct !DIGlobalVariable(name: "lminval", scope: !2, file: !311, line: 34, type: !15, isLocal: true, isDefinition: true)
!419 = !DIGlobalVariableExpression(var: !420, expr: !DIExpression())
!420 = distinct !DIGlobalVariable(name: "lmaxval", scope: !2, file: !311, line: 34, type: !15, isLocal: true, isDefinition: true)
!421 = !DIGlobalVariableExpression(var: !422, expr: !DIExpression())
!422 = distinct !DIGlobalVariable(name: "rminval", scope: !2, file: !311, line: 34, type: !15, isLocal: true, isDefinition: true)
!423 = !DIGlobalVariableExpression(var: !424, expr: !DIExpression())
!424 = distinct !DIGlobalVariable(name: "rmaxval", scope: !2, file: !311, line: 34, type: !15, isLocal: true, isDefinition: true)
!425 = !DIGlobalVariableExpression(var: !426, expr: !DIExpression())
!426 = distinct !DIGlobalVariable(name: "master_volume", scope: !2, file: !311, line: 38, type: !15, isLocal: true, isDefinition: true)
!427 = !DIGlobalVariableExpression(var: !428, expr: !DIExpression())
!428 = distinct !DIGlobalVariable(name: "master_fade", scope: !2, file: !311, line: 39, type: !15, isLocal: true, isDefinition: true)
!429 = !DIGlobalVariableExpression(var: !430, expr: !DIExpression())
!430 = distinct !DIGlobalVariable(name: "master_dstvol", scope: !2, file: !311, line: 40, type: !15, isLocal: true, isDefinition: true)
!431 = !DIGlobalVariableExpression(var: !432, expr: !DIExpression())
!432 = distinct !DIGlobalVariable(name: "sum_cycles", scope: !2, file: !311, line: 49, type: !15, isLocal: true, isDefinition: true)
!433 = !DIGlobalVariableExpression(var: !434, expr: !DIExpression())
!434 = distinct !DIGlobalVariable(name: "callback", scope: !2, file: !311, line: 53, type: !435, isLocal: true, isDefinition: true)
!435 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !436, size: 64)
!436 = !DISubroutineType(types: !437)
!437 = !{null, !151, !23}
!438 = !DIGlobalVariableExpression(var: !439, expr: !DIExpression())
!439 = distinct !DIGlobalVariable(name: "callbackpriv", scope: !2, file: !311, line: 54, type: !23, isLocal: true, isDefinition: true)
!440 = !DIGlobalVariableExpression(var: !441, expr: !DIExpression())
!441 = distinct !DIGlobalVariable(name: "iocallback", scope: !2, file: !311, line: 58, type: !442, isLocal: true, isDefinition: true)
!442 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !443, size: 64)
!443 = !DISubroutineType(types: !444)
!444 = !{null, !15, !83, !87, !23}
!445 = !DIGlobalVariableExpression(var: !446, expr: !DIExpression())
!446 = distinct !DIGlobalVariable(name: "iocallback_priv", scope: !2, file: !311, line: 59, type: !23, isLocal: true, isDefinition: true)
!447 = !DIGlobalVariableExpression(var: !448, expr: !DIExpression())
!448 = distinct !DIGlobalVariable(name: "fd", scope: !2, file: !320, line: 16, type: !14, isLocal: false, isDefinition: true)
!449 = !DIGlobalVariableExpression(var: !450, expr: !DIExpression())
!450 = distinct !DIGlobalVariable(name: "ots", scope: !2, file: !451, line: 51, type: !166, isLocal: true, isDefinition: true)
!451 = !DIFile(filename: "/home/wslee/benchmarks/sound/gbsplay-0.0.91/gbsplay.c", directory: "")
!452 = !DIGlobalVariableExpression(var: !453, expr: !DIExpression())
!453 = distinct !DIGlobalVariable(name: "random_seed", scope: !2, file: !451, line: 56, type: !22, isLocal: false, isDefinition: true)
!454 = !DIGlobalVariableExpression(var: !455, expr: !DIExpression())
!455 = distinct !DIGlobalVariable(name: "sound_open", scope: !2, file: !451, line: 80, type: !282, isLocal: true, isDefinition: true)
!456 = !DIGlobalVariableExpression(var: !457, expr: !DIExpression())
!457 = distinct !DIGlobalVariable(name: "sound_skip", scope: !2, file: !451, line: 81, type: !285, isLocal: true, isDefinition: true)
!458 = !DIGlobalVariableExpression(var: !459, expr: !DIExpression())
!459 = distinct !DIGlobalVariable(name: "sound_close", scope: !2, file: !451, line: 84, type: !271, isLocal: true, isDefinition: true)
!460 = !DIGlobalVariableExpression(var: !461, expr: !DIExpression())
!461 = distinct !DIGlobalVariable(name: "myname", scope: !2, file: !462, line: 19, type: !16, isLocal: false, isDefinition: true)
!462 = !DIFile(filename: "/home/wslee/benchmarks/sound/gbsplay-0.0.91/gbsinfo.c", directory: "")
!463 = !DIGlobalVariableExpression(var: !464, expr: !DIExpression())
!464 = distinct !DIGlobalVariable(name: "cycles_prev", scope: !2, file: !297, line: 40, type: !15, isLocal: true, isDefinition: true)
!465 = !DIGlobalVariableExpression(var: !466, expr: !DIExpression())
!466 = distinct !DIGlobalVariable(name: "file", scope: !2, file: !297, line: 35, type: !24, isLocal: true, isDefinition: true)
!467 = !DIGlobalVariableExpression(var: !468, expr: !DIExpression())
!468 = distinct !DIGlobalVariable(name: "track_length_offset", scope: !2, file: !297, line: 38, type: !15, isLocal: true, isDefinition: true)
!469 = !DIGlobalVariableExpression(var: !470, expr: !DIExpression())
!470 = distinct !DIGlobalVariable(name: "track_length", scope: !2, file: !297, line: 37, type: !15, isLocal: true, isDefinition: true)
!471 = !DIGlobalVariableExpression(var: !472, expr: !DIExpression())
!472 = distinct !DIGlobalVariable(name: "volume", scope: !2, file: !297, line: 234, type: !473, isLocal: true, isDefinition: true)
!473 = !DICompositeType(tag: DW_TAG_array_type, baseType: !14, size: 128, elements: !397)
!474 = !DIGlobalVariableExpression(var: !475, expr: !DIExpression())
!475 = distinct !DIGlobalVariable(name: "div___0", scope: !2, file: !297, line: 232, type: !476, isLocal: true, isDefinition: true)
!476 = !DICompositeType(tag: DW_TAG_array_type, baseType: !15, size: 256, elements: !397)
!477 = !DIGlobalVariableExpression(var: !478, expr: !DIExpression())
!478 = distinct !DIGlobalVariable(name: "note", scope: !2, file: !297, line: 233, type: !476, isLocal: true, isDefinition: true)
!479 = !DIGlobalVariableExpression(var: !480, expr: !DIExpression())
!480 = distinct !DIGlobalVariable(name: "putlookup", scope: !2, file: !365, line: 311, type: !481, isLocal: true, isDefinition: true)
!481 = !DICompositeType(tag: DW_TAG_array_type, baseType: !482, size: 16384, elements: !370)
!482 = !DIDerivedType(tag: DW_TAG_typedef, name: "gbcpu_put_fn", file: !338, line: 99, baseType: !483)
!483 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !484, size: 64)
!484 = !DISubroutineType(types: !485)
!485 = !{null, !83, !87}
!486 = !DIGlobalVariableExpression(var: !487, expr: !DIExpression())
!487 = distinct !DIGlobalVariable(name: "getlookup", scope: !2, file: !365, line: 52, type: !488, isLocal: true, isDefinition: true)
!488 = !DICompositeType(tag: DW_TAG_array_type, baseType: !489, size: 16384, elements: !370)
!489 = !DIDerivedType(tag: DW_TAG_typedef, name: "gbcpu_get_fn", file: !338, line: 100, baseType: !490)
!490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !491, size: 64)
!491 = !DISubroutineType(types: !492)
!492 = !{!83, !83}
!493 = !DIGlobalVariableExpression(var: !494, expr: !DIExpression())
!494 = distinct !DIGlobalVariable(name: "ops", scope: !2, file: !365, line: 1474, type: !495, isLocal: true, isDefinition: true)
!495 = !DICompositeType(tag: DW_TAG_array_type, baseType: !496, size: 16384, elements: !370)
!496 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !497)
!497 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "opinfo", file: !365, line: 31, size: 64, elements: !498)
!498 = !{!499}
!499 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !497, file: !365, line: 32, baseType: !500, size: 64)
!500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !501, size: 64)
!501 = !DISubroutineType(types: !502)
!502 = !{null, !83, !503}
!503 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !496, size: 64)
!504 = !DIGlobalVariableExpression(var: !505, expr: !DIExpression())
!505 = distinct !DIGlobalVariable(name: "cbops", scope: !2, file: !365, line: 851, type: !506, isLocal: true, isDefinition: true)
!506 = !DICompositeType(tag: DW_TAG_array_type, baseType: !496, size: 512, elements: !507)
!507 = !{!508}
!508 = !DISubrange(count: 8)
!509 = !DIGlobalVariableExpression(var: !510, expr: !DIExpression())
!510 = distinct !DIGlobalVariable(name: "playercode", scope: !2, file: !511, line: 27, type: !512, isLocal: true, isDefinition: true)
!511 = !DIFile(filename: "/home/wslee/benchmarks/sound/gbsplay-0.0.91/gbs.c", directory: "")
!512 = !DICompositeType(tag: DW_TAG_array_type, baseType: !278, size: 1016, elements: !513)
!513 = !{!514}
!514 = !DISubrange(count: 127)
!515 = !DIGlobalVariableExpression(var: !516, expr: !DIExpression())
!516 = distinct !DIGlobalVariable(name: "soundbuf", scope: !2, file: !311, line: 55, type: !151, isLocal: true, isDefinition: true)
!517 = !DIGlobalVariableExpression(var: !518, expr: !DIExpression())
!518 = distinct !DIGlobalVariable(name: "impbuf", scope: !2, file: !311, line: 56, type: !151, isLocal: true, isDefinition: true)
!519 = !DIGlobalVariableExpression(var: !520, expr: !DIExpression())
!520 = distinct !DIGlobalVariable(name: "impulse_w_shift", scope: !2, file: !311, line: 81, type: !15, isLocal: true, isDefinition: true)
!521 = !DIGlobalVariableExpression(var: !522, expr: !DIExpression())
!522 = distinct !DIGlobalVariable(name: "sound_div_tc", scope: !2, file: !311, line: 72, type: !70, isLocal: true, isDefinition: true)
!523 = !DIGlobalVariableExpression(var: !524, expr: !DIExpression())
!524 = distinct !DIGlobalVariable(name: "rombank", scope: !2, file: !311, line: 25, type: !15, isLocal: true, isDefinition: true)
!525 = !DIGlobalVariableExpression(var: !526, expr: !DIExpression())
!526 = distinct !DIGlobalVariable(name: "dutylookup", scope: !2, file: !311, line: 28, type: !527, isLocal: true, isDefinition: true)
!527 = !DICompositeType(tag: DW_TAG_array_type, baseType: !19, size: 32, elements: !397)
!528 = !DIGlobalVariableExpression(var: !529, expr: !DIExpression())
!529 = distinct !DIGlobalVariable(name: "tap1", scope: !2, file: !311, line: 66, type: !83, isLocal: true, isDefinition: true)
!530 = !DIGlobalVariableExpression(var: !531, expr: !DIExpression())
!531 = distinct !DIGlobalVariable(name: "tap2", scope: !2, file: !311, line: 67, type: !83, isLocal: true, isDefinition: true)
!532 = !DIGlobalVariableExpression(var: !533, expr: !DIExpression())
!533 = distinct !DIGlobalVariable(name: "lfsr", scope: !2, file: !311, line: 68, type: !83, isLocal: true, isDefinition: true)
!534 = !DIGlobalVariableExpression(var: !535, expr: !DIExpression())
!535 = distinct !DIGlobalVariable(name: "base_impulse", scope: !2, file: !311, line: 84, type: !89, isLocal: true, isDefinition: true)
!536 = !DIGlobalVariableExpression(var: !537, expr: !DIExpression())
!537 = distinct !DIGlobalVariable(name: "impulse_n_shift", scope: !2, file: !311, line: 80, type: !15, isLocal: true, isDefinition: true)
!538 = !DIGlobalVariableExpression(var: !539, expr: !DIExpression())
!539 = distinct !DIGlobalVariable(name: "impulse_cutoff", scope: !2, file: !311, line: 82, type: !91, isLocal: true, isDefinition: true)
!540 = !DIGlobalVariableExpression(var: !541, expr: !DIExpression())
!541 = distinct !DIGlobalVariable(name: "pause_output", scope: !2, file: !311, line: 51, type: !15, isLocal: true, isDefinition: true)
!542 = !DIGlobalVariableExpression(var: !543, expr: !DIExpression())
!543 = distinct !DIGlobalVariable(name: "vblankctr", scope: !2, file: !311, line: 43, type: !15, isLocal: true, isDefinition: true)
!544 = !DIGlobalVariableExpression(var: !545, expr: !DIExpression())
!545 = distinct !DIGlobalVariable(name: "timerctr", scope: !2, file: !311, line: 45, type: !15, isLocal: true, isDefinition: true)
!546 = !DIGlobalVariableExpression(var: !547, expr: !DIExpression(DW_OP_constu, 32, DW_OP_stack_value))
!547 = distinct !DIGlobalVariable(name: "main_div_tc", scope: !2, file: !311, line: 73, type: !312, isLocal: true, isDefinition: true)
!548 = !DIGlobalVariableExpression(var: !549, expr: !DIExpression(DW_OP_constu, 256, DW_OP_stack_value))
!549 = distinct !DIGlobalVariable(name: "sweep_div_tc", scope: !2, file: !311, line: 75, type: !312, isLocal: true, isDefinition: true)
!550 = !DIGlobalVariableExpression(var: !551, expr: !DIExpression())
!551 = distinct !DIGlobalVariable(name: "main_div", scope: !2, file: !311, line: 74, type: !15, isLocal: true, isDefinition: true)
!552 = !DIGlobalVariableExpression(var: !553, expr: !DIExpression())
!553 = distinct !DIGlobalVariable(name: "ch3pos", scope: !2, file: !311, line: 78, type: !15, isLocal: true, isDefinition: true)
!554 = !DIGlobalVariableExpression(var: !555, expr: !DIExpression())
!555 = distinct !DIGlobalVariable(name: "val___1", scope: !2, file: !311, line: 511, type: !15, isLocal: true, isDefinition: true)
!556 = !DIGlobalVariableExpression(var: !557, expr: !DIExpression())
!557 = distinct !DIGlobalVariable(name: "old_l", scope: !2, file: !311, line: 449, type: !15, isLocal: true, isDefinition: true)
!558 = !DIGlobalVariableExpression(var: !559, expr: !DIExpression())
!559 = distinct !DIGlobalVariable(name: "old_r", scope: !2, file: !311, line: 449, type: !15, isLocal: true, isDefinition: true)
!560 = !DIGlobalVariableExpression(var: !561, expr: !DIExpression())
!561 = distinct !DIGlobalVariable(name: "sweep_div", scope: !2, file: !311, line: 76, type: !15, isLocal: true, isDefinition: true)
!562 = !DIGlobalVariableExpression(var: !563, expr: !DIExpression())
!563 = distinct !DIGlobalVariable(name: "timertc", scope: !2, file: !311, line: 44, type: !15, isLocal: true, isDefinition: true)
!564 = !DIGlobalVariableExpression(var: !565, expr: !DIExpression())
!565 = distinct !DIGlobalVariable(name: "fd___0", scope: !2, file: !317, line: 24, type: !14, isLocal: true, isDefinition: true)
!566 = !DIGlobalVariableExpression(var: !567, expr: !DIExpression())
!567 = distinct !DIGlobalVariable(name: "redraw", scope: !2, file: !451, line: 74, type: !15, isLocal: true, isDefinition: true)
!568 = !DIGlobalVariableExpression(var: !569, expr: !DIExpression())
!569 = distinct !DIGlobalVariable(name: "cfgfile", scope: !2, file: !451, line: 76, type: !570, isLocal: true, isDefinition: true)
!570 = !DICompositeType(tag: DW_TAG_array_type, baseType: !19, size: 88, elements: !571)
!571 = !{!572}
!572 = !DISubrange(count: 11)
!573 = !DIGlobalVariableExpression(var: !574, expr: !DIExpression())
!574 = distinct !DIGlobalVariable(name: "options", scope: !2, file: !451, line: 94, type: !575, isLocal: true, isDefinition: true)
!575 = !DICompositeType(tag: DW_TAG_array_type, baseType: !576, size: 2112, elements: !571)
!576 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !577)
!577 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cfg_option", file: !578, line: 14, size: 192, elements: !579)
!578 = !DIFile(filename: "/home/wslee/benchmarks/sound/gbsplay-0.0.91/cfgparser.h", directory: "")
!579 = !{!580, !581, !582}
!580 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !577, file: !578, line: 15, baseType: !16, size: 64)
!581 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !577, file: !578, line: 16, baseType: !23, size: 64, offset: 64)
!582 = !DIDerivedType(tag: DW_TAG_member, name: "parse_fn", scope: !577, file: !578, line: 17, baseType: !583, size: 64, offset: 128)
!583 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !584, size: 64)
!584 = !DISubroutineType(types: !585)
!585 = !{null, !23}
!586 = !DIGlobalVariableExpression(var: !587, expr: !DIExpression())
!587 = distinct !DIGlobalVariable(name: "loopmode", scope: !2, file: !451, line: 64, type: !15, isLocal: true, isDefinition: true)
!588 = !DIGlobalVariableExpression(var: !589, expr: !DIExpression())
!589 = distinct !DIGlobalVariable(name: "myname___0", scope: !2, file: !451, line: 49, type: !16, isLocal: true, isDefinition: true)
!590 = !DIGlobalVariableExpression(var: !591, expr: !DIExpression())
!591 = distinct !DIGlobalVariable(name: "playmode", scope: !2, file: !451, line: 63, type: !15, isLocal: true, isDefinition: true)
!592 = !DIGlobalVariableExpression(var: !593, expr: !DIExpression())
!593 = distinct !DIGlobalVariable(name: "sound_io", scope: !2, file: !451, line: 82, type: !288, isLocal: true, isDefinition: true)
!594 = !DIGlobalVariableExpression(var: !595, expr: !DIExpression())
!595 = distinct !DIGlobalVariable(name: "sound_write", scope: !2, file: !451, line: 83, type: !291, isLocal: true, isDefinition: true)
!596 = !DIGlobalVariableExpression(var: !597, expr: !DIExpression())
!597 = distinct !DIGlobalVariable(name: "sound_description", scope: !2, file: !451, line: 79, type: !16, isLocal: true, isDefinition: true)
!598 = !DIGlobalVariableExpression(var: !599, expr: !DIExpression())
!599 = distinct !DIGlobalVariable(name: "notelookup", scope: !2, file: !451, line: 44, type: !600, isLocal: true, isDefinition: true)
!600 = !DICompositeType(tag: DW_TAG_array_type, baseType: !17, size: 3456, elements: !601)
!601 = !{!602}
!602 = !DISubrange(count: 432)
!603 = !DIGlobalVariableExpression(var: !604, expr: !DIExpression())
!604 = distinct !DIGlobalVariable(name: "vollookup", scope: !2, file: !451, line: 45, type: !605, isLocal: true, isDefinition: true)
!605 = !DICompositeType(tag: DW_TAG_array_type, baseType: !17, size: 640, elements: !606)
!606 = !{!607}
!607 = !DISubrange(count: 80)
!608 = !DIGlobalVariableExpression(var: !609, expr: !DIExpression())
!609 = distinct !DIGlobalVariable(name: "vols", scope: !2, file: !451, line: 46, type: !610, isLocal: true, isDefinition: true)
!610 = !DICompositeType(tag: DW_TAG_array_type, baseType: !19, size: 40, elements: !611)
!611 = !{!612}
!612 = !DISubrange(count: 5)
!613 = !DIGlobalVariableExpression(var: !614, expr: !DIExpression())
!614 = distinct !DIGlobalVariable(name: "endian", scope: !2, file: !451, line: 65, type: !5, isLocal: true, isDefinition: true)
!615 = !DIGlobalVariableExpression(var: !616, expr: !DIExpression())
!616 = distinct !DIGlobalVariable(name: "rate", scope: !2, file: !451, line: 67, type: !15, isLocal: true, isDefinition: true)
!617 = !DIGlobalVariableExpression(var: !618, expr: !DIExpression())
!618 = distinct !DIGlobalVariable(name: "sound_name", scope: !2, file: !451, line: 78, type: !16, isLocal: true, isDefinition: true)
!619 = !DIGlobalVariableExpression(var: !620, expr: !DIExpression())
!620 = distinct !DIGlobalVariable(name: "subsong_start", scope: !2, file: !451, line: 71, type: !15, isLocal: true, isDefinition: true)
!621 = !DIGlobalVariableExpression(var: !622, expr: !DIExpression())
!622 = distinct !DIGlobalVariable(name: "subsong_stop", scope: !2, file: !451, line: 72, type: !15, isLocal: true, isDefinition: true)
!623 = !DIGlobalVariableExpression(var: !624, expr: !DIExpression())
!624 = distinct !DIGlobalVariable(name: "subsong_timeout", scope: !2, file: !451, line: 73, type: !15, isLocal: true, isDefinition: true)
!625 = !DIGlobalVariableExpression(var: !626, expr: !DIExpression())
!626 = distinct !DIGlobalVariable(name: "silence_timeout", scope: !2, file: !451, line: 68, type: !15, isLocal: true, isDefinition: true)
!627 = !DIGlobalVariableExpression(var: !628, expr: !DIExpression())
!628 = distinct !DIGlobalVariable(name: "subsong_gap", scope: !2, file: !451, line: 70, type: !15, isLocal: true, isDefinition: true)
!629 = !DIGlobalVariableExpression(var: !630, expr: !DIExpression())
!630 = distinct !DIGlobalVariable(name: "fadeout", scope: !2, file: !451, line: 69, type: !15, isLocal: true, isDefinition: true)
!631 = !DIGlobalVariableExpression(var: !632, expr: !DIExpression())
!632 = distinct !DIGlobalVariable(name: "subsong_playlist", scope: !2, file: !451, line: 52, type: !21, isLocal: true, isDefinition: true)
!633 = !DIGlobalVariableExpression(var: !634, expr: !DIExpression())
!634 = distinct !DIGlobalVariable(name: "subsong_playlist_idx", scope: !2, file: !451, line: 53, type: !15, isLocal: true, isDefinition: true)
!635 = !DIGlobalVariableExpression(var: !636, expr: !DIExpression())
!636 = distinct !DIGlobalVariable(name: "buf", scope: !2, file: !451, line: 87, type: !152, isLocal: true, isDefinition: true)
!637 = !DIGlobalVariableExpression(var: !638, expr: !DIExpression())
!638 = distinct !DIGlobalVariable(name: "samples", scope: !2, file: !451, line: 86, type: !639, isLocal: true, isDefinition: true)
!639 = !DICompositeType(tag: DW_TAG_array_type, baseType: !92, size: 65536, elements: !640)
!640 = !{!641}
!641 = !DISubrange(count: 4096)
!642 = !DIGlobalVariableExpression(var: !643, expr: !DIExpression())
!643 = distinct !DIGlobalVariable(name: "quit", scope: !2, file: !451, line: 50, type: !15, isLocal: true, isDefinition: true)
!644 = !DIGlobalVariableExpression(var: !645, expr: !DIExpression())
!645 = distinct !DIGlobalVariable(name: "refresh_delay", scope: !2, file: !451, line: 60, type: !15, isLocal: true, isDefinition: true)
!646 = !DIGlobalVariableExpression(var: !647, expr: !DIExpression())
!647 = distinct !DIGlobalVariable(name: "verbosity", scope: !2, file: !451, line: 66, type: !15, isLocal: true, isDefinition: true)
!648 = !DIGlobalVariableExpression(var: !649, expr: !DIExpression())
!649 = distinct !DIGlobalVariable(name: "buf___0", scope: !2, file: !451, line: 146, type: !650, isLocal: true, isDefinition: true)
!650 = !DICompositeType(tag: DW_TAG_array_type, baseType: !17, size: 40, elements: !611)
!651 = !DIGlobalVariableExpression(var: !652, expr: !DIExpression())
!652 = distinct !DIGlobalVariable(name: "pause_mode", scope: !2, file: !451, line: 54, type: !15, isLocal: true, isDefinition: true)
!653 = !DIGlobalVariableExpression(var: !654, expr: !DIExpression())
!654 = distinct !DIGlobalVariable(name: "plugouts", scope: !2, file: !655, line: 35, type: !656, isLocal: true, isDefinition: true)
!655 = !DIFile(filename: "/home/wslee/benchmarks/sound/gbsplay-0.0.91/plugout.c", directory: "")
!656 = !DICompositeType(tag: DW_TAG_array_type, baseType: !657, size: 256, elements: !397)
!657 = !DIDerivedType(tag: DW_TAG_typedef, name: "output_plugin_const_t", file: !655, line: 33, baseType: !658)
!658 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !298, size: 64)
!659 = !{i32 2, !"SDK Version", [2 x i32] [i32 10, i32 15]}
!660 = !{i32 2, !"Dwarf Version", i32 4}
!661 = !{i32 2, !"Debug Info Version", i32 3}
!662 = !{i32 1, !"wchar_size", i32 4}
!663 = !{i32 7, !"PIC Level", i32 2}
!664 = !{!"Apple clang version 11.0.0 (clang-1100.0.33.17)"}
!665 = distinct !DISubprogram(name: "cfg_endian", scope: !323, file: !323, line: 72, type: !584, scopeLine: 73, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !666)
!666 = !{}
!667 = !DILocalVariable(name: "ptr", arg: 1, scope: !665, file: !323, line: 72, type: !23)
!668 = !DILocation(line: 0, scope: !665)
!669 = !DILocalVariable(name: "__cil_tmp5", scope: !665, file: !323, line: 77, type: !16)
!670 = !DILocation(line: 77, column: 9, scope: !665)
!671 = !DILocation(line: 74, column: 16, scope: !672)
!672 = distinct !DILexicalBlock(scope: !673, file: !323, line: 80, column: 3)
!673 = distinct !DILexicalBlock(scope: !665, file: !323, line: 79, column: 3)
!674 = !DILocalVariable(name: "endian___1", scope: !665, file: !323, line: 74, type: !13)
!675 = !DILocation(line: 76, column: 23, scope: !676)
!676 = distinct !DILexicalBlock(scope: !672, file: !323, line: 75, column: 3)
!677 = !DILocation(line: 76, column: 17, scope: !676)
!678 = !DILocation(line: 76, column: 9, scope: !676)
!679 = !DILocalVariable(name: "tmp", scope: !665, file: !323, line: 75, type: !14)
!680 = !DILocation(line: 76, column: 7, scope: !672)
!681 = !DILocation(line: 76, column: 5, scope: !672)
!682 = !DILocation(line: 77, column: 7, scope: !683)
!683 = distinct !DILexicalBlock(scope: !673, file: !323, line: 77, column: 7)
!684 = !DILocation(line: 77, column: 9, scope: !683)
!685 = !DILocation(line: 77, column: 7, scope: !673)
!686 = !DILocation(line: 77, column: 9, scope: !687)
!687 = distinct !DILexicalBlock(scope: !688, file: !323, line: 77, column: 9)
!688 = distinct !DILexicalBlock(scope: !683, file: !323, line: 77, column: 17)
!689 = !DILocation(line: 77, column: 11, scope: !687)
!690 = !DILocation(line: 77, column: 9, scope: !688)
!691 = !DILocation(line: 77, column: 11, scope: !692)
!692 = distinct !DILexicalBlock(scope: !693, file: !323, line: 77, column: 11)
!693 = distinct !DILexicalBlock(scope: !687, file: !323, line: 77, column: 20)
!694 = !DILocation(line: 77, column: 13, scope: !692)
!695 = !DILocation(line: 77, column: 11, scope: !693)
!696 = !DILocation(line: 78, column: 9, scope: !697)
!697 = distinct !DILexicalBlock(scope: !698, file: !323, line: 79, column: 9)
!698 = distinct !DILexicalBlock(scope: !699, file: !323, line: 78, column: 9)
!699 = distinct !DILexicalBlock(scope: !692, file: !323, line: 77, column: 22)
!700 = !DILocation(line: 79, column: 9, scope: !699)
!701 = !DILocation(line: 81, column: 5, scope: !693)
!702 = !DILocation(line: 82, column: 3, scope: !688)
!703 = !DILocation(line: 83, column: 7, scope: !704)
!704 = distinct !DILexicalBlock(scope: !705, file: !323, line: 83, column: 7)
!705 = distinct !DILexicalBlock(scope: !673, file: !323, line: 83, column: 3)
!706 = !DILocation(line: 83, column: 9, scope: !704)
!707 = !DILocation(line: 83, column: 7, scope: !705)
!708 = !DILocation(line: 83, column: 5, scope: !709)
!709 = distinct !DILexicalBlock(scope: !704, file: !323, line: 83, column: 17)
!710 = !DILocation(line: 84, column: 7, scope: !711)
!711 = distinct !DILexicalBlock(scope: !705, file: !323, line: 84, column: 7)
!712 = !DILocation(line: 84, column: 9, scope: !711)
!713 = !DILocation(line: 84, column: 7, scope: !705)
!714 = !DILocation(line: 84, column: 5, scope: !715)
!715 = distinct !DILexicalBlock(scope: !711, file: !323, line: 84, column: 18)
!716 = !DILocation(line: 85, column: 3, scope: !705)
!717 = !DILocation(line: 83, column: 15, scope: !705)
!718 = !DILocation(line: 83, column: 3, scope: !705)
!719 = !DILocation(line: 84, column: 15, scope: !705)
!720 = !DILocation(line: 84, column: 3, scope: !705)
!721 = !DILocation(line: 85, column: 15, scope: !705)
!722 = !DILocation(line: 88, column: 13, scope: !723)
!723 = distinct !DILexicalBlock(scope: !724, file: !323, line: 89, column: 3)
!724 = distinct !DILexicalBlock(scope: !673, file: !323, line: 88, column: 3)
!725 = !DILocalVariable(name: "tmp___0", scope: !665, file: !323, line: 76, type: !17)
!726 = !DILocation(line: 88, column: 7, scope: !724)
!727 = !DILocation(line: 88, column: 5, scope: !724)
!728 = !DILocation(line: 89, column: 9, scope: !724)
!729 = !DILocation(line: 90, column: 13, scope: !724)
!730 = !DILocation(line: 91, column: 3, scope: !673)
!731 = !DILocation(line: 93, column: 1, scope: !665)
!732 = distinct !DISubprogram(name: "err_expect", scope: !323, file: !323, line: 63, type: !733, scopeLine: 64, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !666)
!733 = !DISubroutineType(types: !734)
!734 = !{null, !16}
!735 = !DILocalVariable(name: "s", arg: 1, scope: !732, file: !323, line: 63, type: !16)
!736 = !DILocation(line: 0, scope: !732)
!737 = !DILocalVariable(name: "__cil_tmp4", scope: !732, file: !323, line: 67, type: !16)
!738 = !DILocation(line: 67, column: 9, scope: !732)
!739 = !DILocation(line: 65, column: 9, scope: !740)
!740 = distinct !DILexicalBlock(scope: !741, file: !323, line: 71, column: 3)
!741 = distinct !DILexicalBlock(scope: !742, file: !323, line: 70, column: 3)
!742 = distinct !DILexicalBlock(scope: !732, file: !323, line: 69, column: 3)
!743 = !DILocalVariable(name: "tmp", scope: !732, file: !323, line: 65, type: !16)
!744 = !DILocation(line: 65, column: 36, scope: !745)
!745 = distinct !DILexicalBlock(scope: !741, file: !323, line: 67, column: 3)
!746 = !DILocation(line: 66, column: 11, scope: !745)
!747 = !DILocation(line: 66, column: 21, scope: !745)
!748 = !DILocation(line: 66, column: 31, scope: !745)
!749 = !DILocation(line: 65, column: 3, scope: !745)
!750 = !DILocation(line: 67, column: 13, scope: !751)
!751 = distinct !DILexicalBlock(scope: !741, file: !323, line: 68, column: 3)
!752 = !DILocalVariable(name: "tmp___0", scope: !732, file: !323, line: 66, type: !17)
!753 = !DILocation(line: 67, column: 7, scope: !741)
!754 = !DILocation(line: 67, column: 5, scope: !741)
!755 = !DILocation(line: 68, column: 9, scope: !741)
!756 = !DILocation(line: 69, column: 13, scope: !741)
!757 = !DILocation(line: 70, column: 3, scope: !742)
!758 = distinct !DISubprogram(name: "nextchar", scope: !323, file: !323, line: 26, type: !759, scopeLine: 27, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !666)
!759 = !DISubroutineType(types: !760)
!760 = !{!17}
!761 = !DILocalVariable(name: "__cil_tmp3", scope: !758, file: !323, line: 30, type: !16)
!762 = !DILocation(line: 30, column: 9, scope: !758)
!763 = !DILocalVariable(name: "__cil_tmp4", scope: !758, file: !323, line: 31, type: !16)
!764 = !DILocation(line: 31, column: 9, scope: !758)
!765 = !DILocalVariable(name: "__cil_tmp5", scope: !758, file: !323, line: 32, type: !16)
!766 = !DILocation(line: 32, column: 9, scope: !758)
!767 = !DILocation(line: 30, column: 26, scope: !768)
!768 = distinct !DILexicalBlock(scope: !769, file: !323, line: 30, column: 7)
!769 = distinct !DILexicalBlock(scope: !758, file: !323, line: 34, column: 3)
!770 = !DILocation(line: 30, column: 10, scope: !768)
!771 = !DILocation(line: 30, column: 35, scope: !768)
!772 = !DILocation(line: 30, column: 7, scope: !769)
!773 = !DILocation(line: 30, column: 5, scope: !774)
!774 = distinct !DILexicalBlock(scope: !775, file: !323, line: 32, column: 5)
!775 = distinct !DILexicalBlock(scope: !776, file: !323, line: 31, column: 5)
!776 = distinct !DILexicalBlock(scope: !768, file: !323, line: 30, column: 68)
!777 = !DILocation(line: 32, column: 3, scope: !778)
!778 = distinct !DILexicalBlock(scope: !779, file: !323, line: 36, column: 3)
!779 = distinct !DILexicalBlock(scope: !769, file: !323, line: 35, column: 3)
!780 = !DILocation(line: 32, column: 13, scope: !778)
!781 = !DILocation(line: 33, column: 17, scope: !782)
!782 = distinct !DILexicalBlock(scope: !783, file: !323, line: 36, column: 5)
!783 = distinct !DILexicalBlock(scope: !784, file: !323, line: 35, column: 5)
!784 = distinct !DILexicalBlock(scope: !778, file: !323, line: 32, column: 13)
!785 = !DILocation(line: 33, column: 11, scope: !782)
!786 = !DILocalVariable(name: "tmp", scope: !758, file: !323, line: 29, type: !14)
!787 = !DILocation(line: 0, scope: !758)
!788 = !DILocation(line: 33, column: 13, scope: !783)
!789 = !DILocalVariable(name: "c___3", scope: !758, file: !323, line: 28, type: !15)
!790 = !DILocation(line: 33, column: 15, scope: !791)
!791 = distinct !DILexicalBlock(scope: !784, file: !323, line: 33, column: 9)
!792 = !DILocation(line: 33, column: 9, scope: !784)
!793 = !DILocation(line: 33, column: 7, scope: !794)
!794 = distinct !DILexicalBlock(scope: !791, file: !323, line: 33, column: 23)
!795 = !DILocation(line: 35, column: 15, scope: !796)
!796 = distinct !DILexicalBlock(scope: !784, file: !323, line: 35, column: 9)
!797 = !DILocation(line: 35, column: 9, scope: !784)
!798 = !DILocation(line: 36, column: 16, scope: !799)
!799 = distinct !DILexicalBlock(scope: !796, file: !323, line: 35, column: 23)
!800 = !DILocation(line: 37, column: 16, scope: !799)
!801 = !DILocation(line: 38, column: 5, scope: !799)
!802 = !DILocation(line: 38, column: 16, scope: !803)
!803 = distinct !DILexicalBlock(scope: !796, file: !323, line: 38, column: 12)
!804 = !DILocation(line: 41, column: 9, scope: !805)
!805 = distinct !DILexicalBlock(scope: !806, file: !323, line: 41, column: 9)
!806 = distinct !DILexicalBlock(scope: !784, file: !323, line: 40, column: 5)
!807 = !DILocation(line: 41, column: 24, scope: !805)
!808 = !DILocation(line: 41, column: 9, scope: !806)
!809 = !DILocation(line: 41, column: 7, scope: !810)
!810 = distinct !DILexicalBlock(scope: !805, file: !323, line: 41, column: 31)
!811 = !DILocation(line: 45, column: 9, scope: !812)
!812 = distinct !DILexicalBlock(scope: !806, file: !323, line: 45, column: 9)
!813 = !DILocation(line: 45, column: 24, scope: !812)
!814 = !DILocation(line: 45, column: 9, scope: !806)
!815 = !DILocation(line: 45, column: 7, scope: !816)
!816 = distinct !DILexicalBlock(scope: !812, file: !323, line: 45, column: 31)
!817 = !DILocation(line: 49, column: 9, scope: !818)
!818 = distinct !DILexicalBlock(scope: !806, file: !323, line: 49, column: 9)
!819 = !DILocation(line: 49, column: 24, scope: !818)
!820 = !DILocation(line: 49, column: 9, scope: !806)
!821 = !DILocation(line: 49, column: 7, scope: !822)
!822 = distinct !DILexicalBlock(scope: !818, file: !323, line: 49, column: 31)
!823 = !DILocation(line: 40, column: 5, scope: !806)
!824 = !DILocation(line: 42, column: 15, scope: !825)
!825 = distinct !DILexicalBlock(scope: !806, file: !323, line: 42, column: 9)
!826 = !DILocation(line: 42, column: 9, scope: !806)
!827 = !DILocation(line: 42, column: 22, scope: !828)
!828 = distinct !DILexicalBlock(scope: !825, file: !323, line: 42, column: 23)
!829 = !DILocation(line: 43, column: 5, scope: !828)
!830 = !DILocation(line: 43, column: 15, scope: !831)
!831 = distinct !DILexicalBlock(scope: !825, file: !323, line: 43, column: 9)
!832 = !DILocation(line: 43, column: 9, scope: !825)
!833 = !DILocation(line: 43, column: 22, scope: !834)
!834 = distinct !DILexicalBlock(scope: !831, file: !323, line: 43, column: 23)
!835 = !DILocation(line: 44, column: 5, scope: !834)
!836 = !DILocation(line: 44, column: 5, scope: !806)
!837 = !DILocation(line: 46, column: 20, scope: !806)
!838 = !DILocation(line: 47, column: 15, scope: !839)
!839 = distinct !DILexicalBlock(scope: !806, file: !323, line: 47, column: 9)
!840 = !DILocation(line: 47, column: 9, scope: !806)
!841 = !DILocation(line: 48, column: 5, scope: !842)
!842 = distinct !DILexicalBlock(scope: !839, file: !323, line: 47, column: 24)
!843 = !DILocation(line: 0, scope: !784)
!844 = !DILocation(line: 48, column: 5, scope: !806)
!845 = !DILocation(line: 50, column: 15, scope: !846)
!846 = distinct !DILexicalBlock(scope: !806, file: !323, line: 50, column: 9)
!847 = !DILocation(line: 50, column: 9, scope: !806)
!848 = !DILocation(line: 50, column: 22, scope: !849)
!849 = distinct !DILexicalBlock(scope: !846, file: !323, line: 50, column: 22)
!850 = !DILocation(line: 51, column: 5, scope: !849)
!851 = !DILocation(line: 50, column: 15, scope: !852)
!852 = distinct !DILexicalBlock(scope: !846, file: !323, line: 50, column: 9)
!853 = !DILocation(line: 50, column: 9, scope: !846)
!854 = !DILocation(line: 50, column: 22, scope: !855)
!855 = distinct !DILexicalBlock(scope: !852, file: !323, line: 50, column: 23)
!856 = !DILocation(line: 51, column: 5, scope: !855)
!857 = !DILocation(line: 51, column: 5, scope: !806)
!858 = !DILocation(line: 32, column: 12, scope: !859)
!859 = distinct !DILexicalBlock(scope: !784, file: !323, line: 32, column: 9)
!860 = !DILocation(line: 32, column: 27, scope: !859)
!861 = !DILocation(line: 32, column: 9, scope: !784)
!862 = !DILocation(line: 32, column: 7, scope: !863)
!863 = distinct !DILexicalBlock(scope: !859, file: !323, line: 32, column: 35)
!864 = distinct !{!864, !777, !865}
!865 = !DILocation(line: 34, column: 3, scope: !778)
!866 = !DILocation(line: 36, column: 3, scope: !778)
!867 = !DILocation(line: 55, column: 11, scope: !769)
!868 = !DILocation(line: 55, column: 3, scope: !769)
!869 = !DILocation(line: 0, scope: !769)
!870 = !DILocation(line: 57, column: 1, scope: !758)
!871 = distinct !DISubprogram(name: "cfg_string", scope: !323, file: !323, line: 93, type: !584, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !666)
!872 = !DILocalVariable(name: "ptr", arg: 1, scope: !871, file: !323, line: 93, type: !23)
!873 = !DILocation(line: 0, scope: !871)
!874 = !DILocalVariable(name: "s", scope: !871, file: !323, line: 95, type: !875)
!875 = !DICompositeType(tag: DW_TAG_array_type, baseType: !17, size: 1600, elements: !876)
!876 = !{!877}
!877 = !DISubrange(count: 200)
!878 = !DILocation(line: 95, column: 8, scope: !871)
!879 = !DILocalVariable(name: "__cil_tmp8", scope: !871, file: !323, line: 101, type: !23)
!880 = !DILocation(line: 101, column: 9, scope: !871)
!881 = !DILocalVariable(name: "__cil_tmp9", scope: !871, file: !323, line: 102, type: !16)
!882 = !DILocation(line: 102, column: 9, scope: !871)
!883 = !DILocalVariable(name: "n", scope: !871, file: !323, line: 96, type: !22)
!884 = !DILocation(line: 98, column: 9, scope: !885)
!885 = distinct !DILexicalBlock(scope: !886, file: !323, line: 97, column: 3)
!886 = distinct !DILexicalBlock(scope: !887, file: !323, line: 105, column: 3)
!887 = distinct !DILexicalBlock(scope: !871, file: !323, line: 104, column: 3)
!888 = !DILocalVariable(name: "tmp", scope: !871, file: !323, line: 97, type: !889)
!889 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !890, size: 64)
!890 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !891, size: 64)
!891 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !57)
!892 = !DILocation(line: 98, column: 26, scope: !893)
!893 = distinct !DILexicalBlock(scope: !887, file: !323, line: 98, column: 7)
!894 = !DILocation(line: 98, column: 39, scope: !893)
!895 = !DILocation(line: 98, column: 33, scope: !893)
!896 = !DILocation(line: 98, column: 31, scope: !893)
!897 = !DILocation(line: 98, column: 24, scope: !893)
!898 = !DILocation(line: 98, column: 10, scope: !893)
!899 = !DILocation(line: 98, column: 42, scope: !893)
!900 = !DILocation(line: 98, column: 7, scope: !887)
!901 = !DILocation(line: 98, column: 9, scope: !902)
!902 = distinct !DILexicalBlock(scope: !903, file: !323, line: 98, column: 9)
!903 = distinct !DILexicalBlock(scope: !893, file: !323, line: 98, column: 51)
!904 = !DILocation(line: 98, column: 11, scope: !902)
!905 = !DILocation(line: 98, column: 9, scope: !903)
!906 = !DILocation(line: 98, column: 11, scope: !907)
!907 = distinct !DILexicalBlock(scope: !908, file: !323, line: 98, column: 11)
!908 = distinct !DILexicalBlock(scope: !902, file: !323, line: 98, column: 19)
!909 = !DILocation(line: 98, column: 13, scope: !907)
!910 = !DILocation(line: 98, column: 11, scope: !908)
!911 = !DILocation(line: 99, column: 9, scope: !912)
!912 = distinct !DILexicalBlock(scope: !913, file: !323, line: 100, column: 9)
!913 = distinct !DILexicalBlock(scope: !914, file: !323, line: 99, column: 9)
!914 = distinct !DILexicalBlock(scope: !907, file: !323, line: 98, column: 21)
!915 = !DILocation(line: 100, column: 9, scope: !914)
!916 = !DILocation(line: 102, column: 5, scope: !908)
!917 = !DILocation(line: 103, column: 3, scope: !903)
!918 = !DILocation(line: 102, column: 3, scope: !919)
!919 = distinct !DILexicalBlock(scope: !920, file: !323, line: 105, column: 3)
!920 = distinct !DILexicalBlock(scope: !887, file: !323, line: 104, column: 3)
!921 = !DILocation(line: 0, scope: !887)
!922 = !DILocation(line: 102, column: 13, scope: !919)
!923 = !DILocalVariable(name: "tmp___0", scope: !871, file: !323, line: 98, type: !22)
!924 = !DILocation(line: 103, column: 7, scope: !925)
!925 = distinct !DILexicalBlock(scope: !926, file: !323, line: 105, column: 5)
!926 = distinct !DILexicalBlock(scope: !919, file: !323, line: 102, column: 13)
!927 = !DILocation(line: 103, column: 25, scope: !925)
!928 = !DILocation(line: 103, column: 18, scope: !925)
!929 = !DILocation(line: 103, column: 5, scope: !925)
!930 = !DILocation(line: 103, column: 16, scope: !925)
!931 = !DILocation(line: 104, column: 15, scope: !932)
!932 = distinct !DILexicalBlock(scope: !925, file: !323, line: 104, column: 5)
!933 = !DILocalVariable(name: "tmp___1", scope: !871, file: !323, line: 99, type: !17)
!934 = !DILocation(line: 104, column: 9, scope: !925)
!935 = !DILocation(line: 104, column: 7, scope: !925)
!936 = !DILocation(line: 102, column: 15, scope: !937)
!937 = distinct !DILexicalBlock(scope: !925, file: !323, line: 105, column: 5)
!938 = !DILocalVariable(name: "tmp___2", scope: !871, file: !323, line: 100, type: !889)
!939 = !DILocation(line: 102, column: 25, scope: !940)
!940 = distinct !DILexicalBlock(scope: !926, file: !323, line: 102, column: 9)
!941 = !DILocation(line: 102, column: 42, scope: !940)
!942 = !DILocation(line: 102, column: 36, scope: !940)
!943 = !DILocation(line: 102, column: 34, scope: !940)
!944 = !DILocation(line: 102, column: 23, scope: !940)
!945 = !DILocation(line: 102, column: 9, scope: !940)
!946 = !DILocation(line: 102, column: 45, scope: !940)
!947 = !DILocation(line: 102, column: 9, scope: !926)
!948 = !DILocation(line: 102, column: 7, scope: !949)
!949 = distinct !DILexicalBlock(scope: !940, file: !323, line: 102, column: 50)
!950 = !DILocation(line: 102, column: 9, scope: !951)
!951 = distinct !DILexicalBlock(scope: !940, file: !323, line: 102, column: 9)
!952 = !DILocation(line: 102, column: 11, scope: !951)
!953 = !DILocation(line: 102, column: 7, scope: !954)
!954 = distinct !DILexicalBlock(scope: !951, file: !323, line: 102, column: 19)
!955 = !DILocation(line: 102, column: 9, scope: !956)
!956 = distinct !DILexicalBlock(scope: !951, file: !323, line: 102, column: 9)
!957 = !DILocation(line: 102, column: 11, scope: !956)
!958 = !DILocation(line: 102, column: 19, scope: !956)
!959 = !DILocation(line: 102, column: 16, scope: !960)
!960 = distinct !DILexicalBlock(scope: !961, file: !323, line: 102, column: 11)
!961 = distinct !DILexicalBlock(scope: !956, file: !323, line: 102, column: 19)
!962 = !DILocation(line: 102, column: 11, scope: !961)
!963 = !DILocation(line: 102, column: 9, scope: !964)
!964 = distinct !DILexicalBlock(scope: !960, file: !323, line: 102, column: 36)
!965 = !DILocation(line: 104, column: 5, scope: !961)
!966 = !DILocation(line: 102, column: 7, scope: !967)
!967 = distinct !DILexicalBlock(scope: !956, file: !323, line: 104, column: 12)
!968 = distinct !{!968, !918, !969}
!969 = !DILocation(line: 104, column: 3, scope: !919)
!970 = !DILocation(line: 106, column: 3, scope: !919)
!971 = !DILocation(line: 107, column: 3, scope: !972)
!972 = distinct !DILexicalBlock(scope: !887, file: !323, line: 109, column: 3)
!973 = !DILocation(line: 107, column: 8, scope: !972)
!974 = !DILocation(line: 109, column: 44, scope: !975)
!975 = distinct !DILexicalBlock(scope: !972, file: !323, line: 108, column: 3)
!976 = !DILocation(line: 109, column: 21, scope: !975)
!977 = !DILocation(line: 109, column: 5, scope: !975)
!978 = !DILocation(line: 109, column: 19, scope: !975)
!979 = !DILocation(line: 111, column: 9, scope: !972)
!980 = !DILocation(line: 112, column: 13, scope: !972)
!981 = !DILocation(line: 113, column: 3, scope: !887)
!982 = !DILocation(line: 115, column: 1, scope: !871)
!983 = distinct !DISubprogram(name: "cfg_long", scope: !323, file: !323, line: 115, type: !584, scopeLine: 116, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !666)
!984 = !DILocalVariable(name: "ptr", arg: 1, scope: !983, file: !323, line: 115, type: !23)
!985 = !DILocation(line: 0, scope: !983)
!986 = !DILocalVariable(name: "num", scope: !983, file: !323, line: 117, type: !987)
!987 = !DICompositeType(tag: DW_TAG_array_type, baseType: !17, size: 160, elements: !988)
!988 = !{!989}
!989 = !DISubrange(count: 20)
!990 = !DILocation(line: 117, column: 8, scope: !983)
!991 = !DILocalVariable(name: "__cil_tmp9", scope: !983, file: !323, line: 124, type: !23)
!992 = !DILocation(line: 124, column: 9, scope: !983)
!993 = !DILocalVariable(name: "__cil_tmp10", scope: !983, file: !323, line: 125, type: !16)
!994 = !DILocation(line: 125, column: 9, scope: !983)
!995 = !DILocalVariable(name: "n", scope: !983, file: !323, line: 118, type: !22)
!996 = !DILocation(line: 120, column: 9, scope: !997)
!997 = distinct !DILexicalBlock(scope: !998, file: !323, line: 119, column: 3)
!998 = distinct !DILexicalBlock(scope: !999, file: !323, line: 128, column: 3)
!999 = distinct !DILexicalBlock(scope: !983, file: !323, line: 127, column: 3)
!1000 = !DILocalVariable(name: "tmp", scope: !983, file: !323, line: 119, type: !889)
!1001 = !DILocation(line: 120, column: 26, scope: !1002)
!1002 = distinct !DILexicalBlock(scope: !999, file: !323, line: 120, column: 7)
!1003 = !DILocation(line: 120, column: 39, scope: !1002)
!1004 = !DILocation(line: 120, column: 33, scope: !1002)
!1005 = !DILocation(line: 120, column: 31, scope: !1002)
!1006 = !DILocation(line: 120, column: 24, scope: !1002)
!1007 = !DILocation(line: 120, column: 10, scope: !1002)
!1008 = !DILocation(line: 120, column: 42, scope: !1002)
!1009 = !DILocation(line: 120, column: 7, scope: !999)
!1010 = !DILocation(line: 121, column: 5, scope: !1011)
!1011 = distinct !DILexicalBlock(scope: !1012, file: !323, line: 122, column: 5)
!1012 = distinct !DILexicalBlock(scope: !1013, file: !323, line: 121, column: 5)
!1013 = distinct !DILexicalBlock(scope: !1002, file: !323, line: 120, column: 51)
!1014 = !DILocation(line: 122, column: 5, scope: !1013)
!1015 = !DILocation(line: 124, column: 3, scope: !1016)
!1016 = distinct !DILexicalBlock(scope: !1017, file: !323, line: 125, column: 3)
!1017 = distinct !DILexicalBlock(scope: !999, file: !323, line: 124, column: 3)
!1018 = !DILocation(line: 0, scope: !999)
!1019 = !DILocation(line: 124, column: 13, scope: !1016)
!1020 = !DILocalVariable(name: "tmp___0", scope: !983, file: !323, line: 120, type: !22)
!1021 = !DILocation(line: 125, column: 7, scope: !1022)
!1022 = distinct !DILexicalBlock(scope: !1023, file: !323, line: 127, column: 5)
!1023 = distinct !DILexicalBlock(scope: !1016, file: !323, line: 124, column: 13)
!1024 = !DILocation(line: 125, column: 27, scope: !1022)
!1025 = !DILocation(line: 125, column: 20, scope: !1022)
!1026 = !DILocation(line: 125, column: 5, scope: !1022)
!1027 = !DILocation(line: 125, column: 18, scope: !1022)
!1028 = !DILocation(line: 126, column: 15, scope: !1029)
!1029 = distinct !DILexicalBlock(scope: !1022, file: !323, line: 126, column: 5)
!1030 = !DILocalVariable(name: "tmp___1", scope: !983, file: !323, line: 121, type: !17)
!1031 = !DILocation(line: 126, column: 9, scope: !1022)
!1032 = !DILocation(line: 126, column: 7, scope: !1022)
!1033 = !DILocation(line: 124, column: 15, scope: !1034)
!1034 = distinct !DILexicalBlock(scope: !1022, file: !323, line: 127, column: 5)
!1035 = !DILocalVariable(name: "tmp___2", scope: !983, file: !323, line: 122, type: !889)
!1036 = !DILocation(line: 124, column: 25, scope: !1037)
!1037 = distinct !DILexicalBlock(scope: !1023, file: !323, line: 124, column: 9)
!1038 = !DILocation(line: 124, column: 42, scope: !1037)
!1039 = !DILocation(line: 124, column: 36, scope: !1037)
!1040 = !DILocation(line: 124, column: 34, scope: !1037)
!1041 = !DILocation(line: 124, column: 23, scope: !1037)
!1042 = !DILocation(line: 124, column: 9, scope: !1037)
!1043 = !DILocation(line: 124, column: 45, scope: !1037)
!1044 = !DILocation(line: 124, column: 9, scope: !1023)
!1045 = !DILocation(line: 124, column: 16, scope: !1046)
!1046 = distinct !DILexicalBlock(scope: !1047, file: !323, line: 124, column: 11)
!1047 = distinct !DILexicalBlock(scope: !1037, file: !323, line: 124, column: 53)
!1048 = !DILocation(line: 124, column: 11, scope: !1047)
!1049 = !DILocation(line: 124, column: 9, scope: !1050)
!1050 = distinct !DILexicalBlock(scope: !1046, file: !323, line: 124, column: 38)
!1051 = !DILocation(line: 126, column: 5, scope: !1047)
!1052 = !DILocation(line: 124, column: 7, scope: !1053)
!1053 = distinct !DILexicalBlock(scope: !1037, file: !323, line: 126, column: 12)
!1054 = distinct !{!1054, !1015, !1055}
!1055 = !DILocation(line: 126, column: 3, scope: !1016)
!1056 = !DILocation(line: 128, column: 3, scope: !1016)
!1057 = !DILocation(line: 129, column: 3, scope: !1058)
!1058 = distinct !DILexicalBlock(scope: !999, file: !323, line: 131, column: 3)
!1059 = !DILocation(line: 129, column: 10, scope: !1058)
!1060 = !DILocation(line: 131, column: 34, scope: !1061)
!1061 = distinct !DILexicalBlock(scope: !1058, file: !323, line: 130, column: 3)
!1062 = !DILocation(line: 131, column: 13, scope: !1061)
!1063 = !DILocalVariable(name: "tmp___3", scope: !983, file: !323, line: 123, type: !14)
!1064 = !DILocation(line: 131, column: 20, scope: !1058)
!1065 = !DILocation(line: 131, column: 5, scope: !1058)
!1066 = !DILocation(line: 131, column: 18, scope: !1058)
!1067 = !DILocation(line: 133, column: 9, scope: !1058)
!1068 = !DILocation(line: 134, column: 13, scope: !1058)
!1069 = !DILocation(line: 135, column: 3, scope: !999)
!1070 = !DILocation(line: 137, column: 1, scope: !983)
!1071 = distinct !DISubprogram(name: "cfg_parse", scope: !323, file: !323, line: 137, type: !1072, scopeLine: 138, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !666)
!1072 = !DISubroutineType(types: !1073)
!1073 = !{null, !18, !1074}
!1074 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !576, size: 64)
!1075 = !DILocalVariable(name: "fname", arg: 1, scope: !1071, file: !323, line: 137, type: !18)
!1076 = !DILocation(line: 0, scope: !1071)
!1077 = !DILocalVariable(name: "options___1", arg: 2, scope: !1071, file: !323, line: 137, type: !1074)
!1078 = !DILocalVariable(name: "option", scope: !1071, file: !323, line: 140, type: !875)
!1079 = !DILocation(line: 140, column: 8, scope: !1071)
!1080 = !DILocalVariable(name: "__cil_tmp19", scope: !1071, file: !323, line: 155, type: !23)
!1081 = !DILocation(line: 155, column: 9, scope: !1071)
!1082 = !DILocalVariable(name: "__cil_tmp20", scope: !1071, file: !323, line: 156, type: !16)
!1083 = !DILocation(line: 156, column: 9, scope: !1071)
!1084 = !DILocalVariable(name: "__cil_tmp21", scope: !1071, file: !323, line: 157, type: !16)
!1085 = !DILocation(line: 157, column: 9, scope: !1071)
!1086 = !DILocalVariable(name: "__cil_tmp22", scope: !1071, file: !323, line: 158, type: !16)
!1087 = !DILocation(line: 158, column: 9, scope: !1071)
!1088 = !DILocalVariable(name: "__cil_tmp23", scope: !1071, file: !323, line: 159, type: !16)
!1089 = !DILocation(line: 159, column: 9, scope: !1071)
!1090 = !DILocation(line: 139, column: 12, scope: !1091)
!1091 = distinct !DILexicalBlock(scope: !1092, file: !323, line: 162, column: 3)
!1092 = distinct !DILexicalBlock(scope: !1071, file: !323, line: 161, column: 3)
!1093 = !DILocation(line: 140, column: 14, scope: !1094)
!1094 = distinct !DILexicalBlock(scope: !1091, file: !323, line: 140, column: 3)
!1095 = !DILocation(line: 140, column: 12, scope: !1094)
!1096 = !DILocation(line: 141, column: 23, scope: !1097)
!1097 = distinct !DILexicalBlock(scope: !1092, file: !323, line: 141, column: 7)
!1098 = !DILocation(line: 141, column: 7, scope: !1097)
!1099 = !DILocation(line: 141, column: 32, scope: !1097)
!1100 = !DILocation(line: 141, column: 7, scope: !1092)
!1101 = !DILocation(line: 141, column: 5, scope: !1102)
!1102 = distinct !DILexicalBlock(scope: !1097, file: !323, line: 141, column: 64)
!1103 = !DILocation(line: 143, column: 18, scope: !1104)
!1104 = distinct !DILexicalBlock(scope: !1092, file: !323, line: 143, column: 3)
!1105 = !DILocation(line: 144, column: 9, scope: !1104)
!1106 = !DILocation(line: 145, column: 13, scope: !1104)
!1107 = !DILocation(line: 146, column: 12, scope: !1104)
!1108 = !DILocation(line: 147, column: 12, scope: !1104)
!1109 = !DILocation(line: 148, column: 9, scope: !1110)
!1110 = distinct !DILexicalBlock(scope: !1104, file: !323, line: 148, column: 3)
!1111 = !DILocalVariable(name: "tmp", scope: !1071, file: !323, line: 139, type: !17)
!1112 = !DILocation(line: 148, column: 7, scope: !1104)
!1113 = !DILocation(line: 148, column: 5, scope: !1104)
!1114 = !DILocation(line: 150, column: 3, scope: !1104)
!1115 = !DILocation(line: 150, column: 13, scope: !1104)
!1116 = !DILocalVariable(name: "tmp___0", scope: !1071, file: !323, line: 141, type: !7)
!1117 = !DILocation(line: 150, column: 3, scope: !1118)
!1118 = distinct !DILexicalBlock(scope: !1119, file: !323, line: 153, column: 3)
!1119 = distinct !DILexicalBlock(scope: !1092, file: !323, line: 152, column: 3)
!1120 = !DILocation(line: 0, scope: !1092)
!1121 = !DILocation(line: 150, column: 13, scope: !1118)
!1122 = !DILocation(line: 150, column: 17, scope: !1123)
!1123 = distinct !DILexicalBlock(scope: !1124, file: !323, line: 150, column: 9)
!1124 = distinct !DILexicalBlock(scope: !1118, file: !323, line: 150, column: 13)
!1125 = !DILocation(line: 150, column: 9, scope: !1124)
!1126 = !DILocation(line: 150, column: 7, scope: !1127)
!1127 = distinct !DILexicalBlock(scope: !1123, file: !323, line: 150, column: 26)
!1128 = !DILocation(line: 150, column: 5, scope: !1124)
!1129 = !DILocation(line: 150, column: 21, scope: !1124)
!1130 = !DILocation(line: 150, column: 13, scope: !1124)
!1131 = distinct !{!1131, !1117, !1132}
!1132 = !DILocation(line: 151, column: 3, scope: !1118)
!1133 = !DILocation(line: 153, column: 3, scope: !1118)
!1134 = !DILocation(line: 151, column: 3, scope: !1135)
!1135 = distinct !DILexicalBlock(scope: !1136, file: !323, line: 157, column: 3)
!1136 = distinct !DILexicalBlock(scope: !1092, file: !323, line: 156, column: 3)
!1137 = !DILocation(line: 151, column: 13, scope: !1135)
!1138 = !DILocation(line: 154, column: 9, scope: !1139)
!1139 = distinct !DILexicalBlock(scope: !1140, file: !323, line: 154, column: 9)
!1140 = distinct !DILexicalBlock(scope: !1141, file: !323, line: 154, column: 5)
!1141 = distinct !DILexicalBlock(scope: !1135, file: !323, line: 151, column: 13)
!1142 = !DILocation(line: 154, column: 15, scope: !1139)
!1143 = !DILocation(line: 154, column: 9, scope: !1140)
!1144 = !DILocation(line: 154, column: 7, scope: !1145)
!1145 = distinct !DILexicalBlock(scope: !1139, file: !323, line: 154, column: 22)
!1146 = !DILocation(line: 159, column: 9, scope: !1147)
!1147 = distinct !DILexicalBlock(scope: !1140, file: !323, line: 159, column: 9)
!1148 = !DILocation(line: 159, column: 15, scope: !1147)
!1149 = !DILocation(line: 159, column: 9, scope: !1140)
!1150 = !DILocation(line: 159, column: 7, scope: !1151)
!1151 = distinct !DILexicalBlock(scope: !1147, file: !323, line: 159, column: 22)
!1152 = !DILocation(line: 176, column: 9, scope: !1153)
!1153 = distinct !DILexicalBlock(scope: !1140, file: !323, line: 176, column: 9)
!1154 = !DILocation(line: 176, column: 15, scope: !1153)
!1155 = !DILocation(line: 176, column: 9, scope: !1140)
!1156 = !DILocation(line: 176, column: 7, scope: !1157)
!1157 = distinct !DILexicalBlock(scope: !1153, file: !323, line: 176, column: 22)
!1158 = !DILocation(line: 185, column: 9, scope: !1159)
!1159 = distinct !DILexicalBlock(scope: !1140, file: !323, line: 185, column: 9)
!1160 = !DILocation(line: 185, column: 15, scope: !1159)
!1161 = !DILocation(line: 185, column: 9, scope: !1140)
!1162 = !DILocation(line: 185, column: 7, scope: !1163)
!1163 = distinct !DILexicalBlock(scope: !1159, file: !323, line: 185, column: 22)
!1164 = !DILocation(line: 153, column: 5, scope: !1140)
!1165 = !DILocation(line: 155, column: 15, scope: !1166)
!1166 = distinct !DILexicalBlock(scope: !1167, file: !323, line: 156, column: 5)
!1167 = distinct !DILexicalBlock(scope: !1140, file: !323, line: 155, column: 5)
!1168 = !DILocalVariable(name: "tmp___3", scope: !1071, file: !323, line: 145, type: !889)
!1169 = !DILocation(line: 155, column: 25, scope: !1170)
!1170 = distinct !DILexicalBlock(scope: !1140, file: !323, line: 155, column: 9)
!1171 = !DILocation(line: 155, column: 42, scope: !1170)
!1172 = !DILocation(line: 155, column: 36, scope: !1170)
!1173 = !DILocation(line: 155, column: 34, scope: !1170)
!1174 = !DILocation(line: 155, column: 23, scope: !1170)
!1175 = !DILocation(line: 155, column: 9, scope: !1170)
!1176 = !DILocation(line: 155, column: 45, scope: !1170)
!1177 = !DILocation(line: 155, column: 9, scope: !1140)
!1178 = !DILocation(line: 156, column: 7, scope: !1179)
!1179 = distinct !DILexicalBlock(scope: !1180, file: !323, line: 157, column: 7)
!1180 = distinct !DILexicalBlock(scope: !1181, file: !323, line: 156, column: 7)
!1181 = distinct !DILexicalBlock(scope: !1170, file: !323, line: 155, column: 53)
!1182 = !DILocation(line: 156, column: 17, scope: !1179)
!1183 = !DILocation(line: 156, column: 19, scope: !1184)
!1184 = distinct !DILexicalBlock(scope: !1185, file: !323, line: 160, column: 9)
!1185 = distinct !DILexicalBlock(scope: !1186, file: !323, line: 159, column: 9)
!1186 = distinct !DILexicalBlock(scope: !1179, file: !323, line: 156, column: 17)
!1187 = !DILocalVariable(name: "tmp___1", scope: !1071, file: !323, line: 143, type: !889)
!1188 = !DILocation(line: 156, column: 19, scope: !1189)
!1189 = distinct !DILexicalBlock(scope: !1185, file: !323, line: 158, column: 9)
!1190 = !DILocalVariable(name: "tmp___2", scope: !1071, file: !323, line: 144, type: !17)
!1191 = !DILocation(line: 156, column: 13, scope: !1185)
!1192 = !DILocation(line: 156, column: 11, scope: !1185)
!1193 = !DILocation(line: 156, column: 32, scope: !1194)
!1194 = distinct !DILexicalBlock(scope: !1186, file: !323, line: 156, column: 13)
!1195 = !DILocation(line: 156, column: 49, scope: !1194)
!1196 = !DILocation(line: 156, column: 43, scope: !1194)
!1197 = !DILocation(line: 156, column: 41, scope: !1194)
!1198 = !DILocation(line: 156, column: 30, scope: !1194)
!1199 = !DILocation(line: 156, column: 16, scope: !1194)
!1200 = !DILocation(line: 156, column: 52, scope: !1194)
!1201 = !DILocation(line: 156, column: 13, scope: !1186)
!1202 = !DILocation(line: 156, column: 11, scope: !1203)
!1203 = distinct !DILexicalBlock(scope: !1194, file: !323, line: 156, column: 61)
!1204 = distinct !{!1204, !1178, !1205}
!1205 = !DILocation(line: 158, column: 7, scope: !1179)
!1206 = !DILocation(line: 160, column: 7, scope: !1179)
!1207 = !DILocation(line: 163, column: 5, scope: !1181)
!1208 = !DILocation(line: 157, column: 13, scope: !1140)
!1209 = !DILocation(line: 157, column: 11, scope: !1140)
!1210 = !DILocation(line: 158, column: 5, scope: !1140)
!1211 = !DILocalVariable(name: "n", scope: !1071, file: !323, line: 142, type: !22)
!1212 = !DILocation(line: 161, column: 15, scope: !1213)
!1213 = distinct !DILexicalBlock(scope: !1214, file: !323, line: 161, column: 5)
!1214 = distinct !DILexicalBlock(scope: !1140, file: !323, line: 160, column: 5)
!1215 = !DILocalVariable(name: "tmp___4", scope: !1071, file: !323, line: 146, type: !889)
!1216 = !DILocation(line: 161, column: 28, scope: !1217)
!1217 = distinct !DILexicalBlock(scope: !1140, file: !323, line: 161, column: 9)
!1218 = !DILocation(line: 161, column: 45, scope: !1217)
!1219 = !DILocation(line: 161, column: 39, scope: !1217)
!1220 = !DILocation(line: 161, column: 37, scope: !1217)
!1221 = !DILocation(line: 161, column: 26, scope: !1217)
!1222 = !DILocation(line: 161, column: 12, scope: !1217)
!1223 = !DILocation(line: 161, column: 48, scope: !1217)
!1224 = !DILocation(line: 161, column: 9, scope: !1140)
!1225 = !DILocation(line: 162, column: 7, scope: !1226)
!1226 = distinct !DILexicalBlock(scope: !1227, file: !323, line: 163, column: 7)
!1227 = distinct !DILexicalBlock(scope: !1228, file: !323, line: 162, column: 7)
!1228 = distinct !DILexicalBlock(scope: !1217, file: !323, line: 161, column: 57)
!1229 = !DILocation(line: 163, column: 7, scope: !1228)
!1230 = !DILocation(line: 165, column: 5, scope: !1231)
!1231 = distinct !DILexicalBlock(scope: !1232, file: !323, line: 166, column: 5)
!1232 = distinct !DILexicalBlock(scope: !1140, file: !323, line: 165, column: 5)
!1233 = !DILocation(line: 0, scope: !1140)
!1234 = !DILocation(line: 165, column: 15, scope: !1231)
!1235 = !DILocalVariable(name: "tmp___5", scope: !1071, file: !323, line: 147, type: !22)
!1236 = !DILocation(line: 166, column: 9, scope: !1237)
!1237 = distinct !DILexicalBlock(scope: !1238, file: !323, line: 168, column: 7)
!1238 = distinct !DILexicalBlock(scope: !1231, file: !323, line: 165, column: 15)
!1239 = !DILocation(line: 166, column: 32, scope: !1237)
!1240 = !DILocation(line: 166, column: 25, scope: !1237)
!1241 = !DILocation(line: 166, column: 7, scope: !1237)
!1242 = !DILocation(line: 166, column: 23, scope: !1237)
!1243 = !DILocation(line: 167, column: 17, scope: !1244)
!1244 = distinct !DILexicalBlock(scope: !1237, file: !323, line: 167, column: 7)
!1245 = !DILocalVariable(name: "tmp___6", scope: !1071, file: !323, line: 148, type: !17)
!1246 = !DILocation(line: 167, column: 11, scope: !1237)
!1247 = !DILocation(line: 167, column: 9, scope: !1237)
!1248 = !DILocation(line: 165, column: 17, scope: !1249)
!1249 = distinct !DILexicalBlock(scope: !1237, file: !323, line: 168, column: 7)
!1250 = !DILocalVariable(name: "tmp___7", scope: !1071, file: !323, line: 149, type: !889)
!1251 = !DILocation(line: 165, column: 27, scope: !1252)
!1252 = distinct !DILexicalBlock(scope: !1238, file: !323, line: 165, column: 11)
!1253 = !DILocation(line: 165, column: 44, scope: !1252)
!1254 = !DILocation(line: 165, column: 38, scope: !1252)
!1255 = !DILocation(line: 165, column: 36, scope: !1252)
!1256 = !DILocation(line: 165, column: 25, scope: !1252)
!1257 = !DILocation(line: 165, column: 11, scope: !1252)
!1258 = !DILocation(line: 165, column: 47, scope: !1252)
!1259 = !DILocation(line: 165, column: 11, scope: !1238)
!1260 = !DILocation(line: 165, column: 9, scope: !1261)
!1261 = distinct !DILexicalBlock(scope: !1252, file: !323, line: 165, column: 52)
!1262 = !DILocation(line: 165, column: 11, scope: !1263)
!1263 = distinct !DILexicalBlock(scope: !1252, file: !323, line: 165, column: 11)
!1264 = !DILocation(line: 165, column: 13, scope: !1263)
!1265 = !DILocation(line: 165, column: 9, scope: !1266)
!1266 = distinct !DILexicalBlock(scope: !1263, file: !323, line: 165, column: 21)
!1267 = !DILocation(line: 165, column: 11, scope: !1268)
!1268 = distinct !DILexicalBlock(scope: !1263, file: !323, line: 165, column: 11)
!1269 = !DILocation(line: 165, column: 13, scope: !1268)
!1270 = !DILocation(line: 165, column: 21, scope: !1268)
!1271 = !DILocation(line: 165, column: 18, scope: !1272)
!1272 = distinct !DILexicalBlock(scope: !1273, file: !323, line: 165, column: 13)
!1273 = distinct !DILexicalBlock(scope: !1268, file: !323, line: 165, column: 21)
!1274 = !DILocation(line: 165, column: 13, scope: !1273)
!1275 = !DILocation(line: 165, column: 11, scope: !1276)
!1276 = distinct !DILexicalBlock(scope: !1272, file: !323, line: 165, column: 43)
!1277 = !DILocation(line: 167, column: 7, scope: !1273)
!1278 = !DILocation(line: 165, column: 9, scope: !1279)
!1279 = distinct !DILexicalBlock(scope: !1268, file: !323, line: 167, column: 14)
!1280 = distinct !{!1280, !1230, !1281}
!1281 = !DILocation(line: 167, column: 5, scope: !1231)
!1282 = !DILocation(line: 169, column: 5, scope: !1231)
!1283 = !DILocation(line: 172, column: 5, scope: !1140)
!1284 = !DILocation(line: 172, column: 15, scope: !1140)
!1285 = !DILocation(line: 173, column: 11, scope: !1140)
!1286 = !DILocation(line: 174, column: 15, scope: !1140)
!1287 = !DILocation(line: 175, column: 5, scope: !1140)
!1288 = !DILocation(line: 177, column: 9, scope: !1289)
!1289 = distinct !DILexicalBlock(scope: !1140, file: !323, line: 177, column: 9)
!1290 = !DILocation(line: 177, column: 11, scope: !1289)
!1291 = !DILocation(line: 177, column: 9, scope: !1140)
!1292 = !DILocation(line: 178, column: 7, scope: !1293)
!1293 = distinct !DILexicalBlock(scope: !1294, file: !323, line: 179, column: 7)
!1294 = distinct !DILexicalBlock(scope: !1295, file: !323, line: 178, column: 7)
!1295 = distinct !DILexicalBlock(scope: !1289, file: !323, line: 177, column: 19)
!1296 = !DILocation(line: 179, column: 7, scope: !1295)
!1297 = !DILocation(line: 181, column: 11, scope: !1298)
!1298 = distinct !DILexicalBlock(scope: !1140, file: !323, line: 181, column: 5)
!1299 = !DILocation(line: 182, column: 15, scope: !1298)
!1300 = !DILocation(line: 183, column: 15, scope: !1301)
!1301 = distinct !DILexicalBlock(scope: !1298, file: !323, line: 183, column: 5)
!1302 = !DILocalVariable(name: "tmp___8", scope: !1071, file: !323, line: 150, type: !17)
!1303 = !DILocation(line: 183, column: 9, scope: !1298)
!1304 = !DILocation(line: 183, column: 7, scope: !1298)
!1305 = !DILocation(line: 184, column: 5, scope: !1140)
!1306 = !DILocation(line: 187, column: 5, scope: !1307)
!1307 = distinct !DILexicalBlock(scope: !1308, file: !323, line: 188, column: 5)
!1308 = distinct !DILexicalBlock(scope: !1140, file: !323, line: 187, column: 5)
!1309 = !DILocation(line: 187, column: 15, scope: !1307)
!1310 = !DILocation(line: 187, column: 40, scope: !1311)
!1311 = distinct !DILexicalBlock(scope: !1312, file: !323, line: 187, column: 11)
!1312 = distinct !DILexicalBlock(scope: !1307, file: !323, line: 187, column: 15)
!1313 = !DILocation(line: 187, column: 46, scope: !1311)
!1314 = !DILocation(line: 187, column: 11, scope: !1311)
!1315 = !DILocation(line: 187, column: 51, scope: !1311)
!1316 = !DILocation(line: 187, column: 11, scope: !1312)
!1317 = !DILocation(line: 187, column: 55, scope: !1318)
!1318 = distinct !DILexicalBlock(scope: !1319, file: !323, line: 189, column: 9)
!1319 = distinct !DILexicalBlock(scope: !1320, file: !323, line: 188, column: 9)
!1320 = distinct !DILexicalBlock(scope: !1311, file: !323, line: 187, column: 83)
!1321 = !DILocation(line: 187, column: 61, scope: !1318)
!1322 = !DILocation(line: 187, column: 83, scope: !1318)
!1323 = !DILocation(line: 187, column: 19, scope: !1318)
!1324 = !DILocalVariable(name: "tmp___9", scope: !1071, file: !323, line: 151, type: !14)
!1325 = !DILocation(line: 187, column: 24, scope: !1326)
!1326 = distinct !DILexicalBlock(scope: !1320, file: !323, line: 187, column: 13)
!1327 = !DILocation(line: 187, column: 13, scope: !1320)
!1328 = !DILocation(line: 187, column: 11, scope: !1329)
!1329 = distinct !DILexicalBlock(scope: !1326, file: !323, line: 187, column: 31)
!1330 = !DILocation(line: 189, column: 7, scope: !1320)
!1331 = !DILocation(line: 187, column: 9, scope: !1332)
!1332 = distinct !DILexicalBlock(scope: !1311, file: !323, line: 189, column: 14)
!1333 = !DILocation(line: 188, column: 9, scope: !1312)
!1334 = distinct !{!1334, !1306, !1335}
!1335 = !DILocation(line: 189, column: 5, scope: !1307)
!1336 = !DILocation(line: 191, column: 5, scope: !1307)
!1337 = !DILocation(line: 189, column: 22, scope: !1338)
!1338 = distinct !DILexicalBlock(scope: !1140, file: !323, line: 189, column: 9)
!1339 = !DILocation(line: 189, column: 28, scope: !1338)
!1340 = !DILocation(line: 189, column: 9, scope: !1338)
!1341 = !DILocation(line: 189, column: 9, scope: !1140)
!1342 = !DILocation(line: 190, column: 23, scope: !1343)
!1343 = distinct !DILexicalBlock(scope: !1344, file: !323, line: 191, column: 7)
!1344 = distinct !DILexicalBlock(scope: !1345, file: !323, line: 190, column: 7)
!1345 = distinct !DILexicalBlock(scope: !1338, file: !323, line: 189, column: 38)
!1346 = !DILocation(line: 190, column: 29, scope: !1343)
!1347 = !DILocation(line: 190, column: 61, scope: !1343)
!1348 = !DILocation(line: 190, column: 67, scope: !1343)
!1349 = !DILocation(line: 190, column: 7, scope: !1343)
!1350 = !DILocation(line: 193, column: 5, scope: !1345)
!1351 = !DILocation(line: 192, column: 18, scope: !1352)
!1352 = distinct !DILexicalBlock(scope: !1353, file: !323, line: 195, column: 7)
!1353 = distinct !DILexicalBlock(scope: !1354, file: !323, line: 194, column: 7)
!1354 = distinct !DILexicalBlock(scope: !1338, file: !323, line: 193, column: 12)
!1355 = !DILocalVariable(name: "tmp___10", scope: !1071, file: !323, line: 152, type: !16)
!1356 = !DILocation(line: 192, column: 40, scope: !1357)
!1357 = distinct !DILexicalBlock(scope: !1353, file: !323, line: 194, column: 7)
!1358 = !DILocation(line: 193, column: 15, scope: !1357)
!1359 = !DILocation(line: 193, column: 30, scope: !1357)
!1360 = !DILocation(line: 192, column: 7, scope: !1357)
!1361 = !DILocation(line: 193, column: 7, scope: !1362)
!1362 = distinct !DILexicalBlock(scope: !1363, file: !323, line: 197, column: 7)
!1363 = distinct !DILexicalBlock(scope: !1354, file: !323, line: 196, column: 7)
!1364 = !DILocation(line: 193, column: 17, scope: !1362)
!1365 = !DILocation(line: 193, column: 20, scope: !1366)
!1366 = distinct !DILexicalBlock(scope: !1367, file: !323, line: 197, column: 9)
!1367 = distinct !DILexicalBlock(scope: !1368, file: !323, line: 196, column: 9)
!1368 = distinct !DILexicalBlock(scope: !1362, file: !323, line: 193, column: 17)
!1369 = !DILocalVariable(name: "tmp___11", scope: !1071, file: !323, line: 153, type: !17)
!1370 = !DILocation(line: 193, column: 13, scope: !1367)
!1371 = !DILocation(line: 193, column: 11, scope: !1367)
!1372 = !DILocation(line: 193, column: 13, scope: !1373)
!1373 = distinct !DILexicalBlock(scope: !1368, file: !323, line: 193, column: 13)
!1374 = !DILocation(line: 193, column: 15, scope: !1373)
!1375 = !DILocation(line: 193, column: 13, scope: !1368)
!1376 = !DILocation(line: 193, column: 18, scope: !1377)
!1377 = distinct !DILexicalBlock(scope: !1378, file: !323, line: 193, column: 15)
!1378 = distinct !DILexicalBlock(scope: !1373, file: !323, line: 193, column: 23)
!1379 = !DILocation(line: 193, column: 20, scope: !1377)
!1380 = !DILocation(line: 193, column: 15, scope: !1378)
!1381 = !DILocation(line: 193, column: 13, scope: !1382)
!1382 = distinct !DILexicalBlock(scope: !1377, file: !323, line: 193, column: 28)
!1383 = !DILocation(line: 195, column: 9, scope: !1378)
!1384 = !DILocation(line: 193, column: 11, scope: !1385)
!1385 = distinct !DILexicalBlock(scope: !1373, file: !323, line: 195, column: 16)
!1386 = distinct !{!1386, !1361, !1387}
!1387 = !DILocation(line: 195, column: 7, scope: !1362)
!1388 = !DILocation(line: 197, column: 7, scope: !1362)
!1389 = !DILocation(line: 194, column: 13, scope: !1354)
!1390 = !DILocation(line: 195, column: 17, scope: !1354)
!1391 = !DILocation(line: 197, column: 16, scope: !1392)
!1392 = distinct !DILexicalBlock(scope: !1393, file: !323, line: 198, column: 5)
!1393 = distinct !DILexicalBlock(scope: !1140, file: !323, line: 197, column: 5)
!1394 = !DILocalVariable(name: "tmp___12", scope: !1071, file: !323, line: 154, type: !17)
!1395 = !DILocation(line: 197, column: 9, scope: !1393)
!1396 = !DILocation(line: 197, column: 7, scope: !1393)
!1397 = !DILocation(line: 198, column: 5, scope: !1140)
!1398 = !DILocation(line: 151, column: 12, scope: !1399)
!1399 = distinct !DILexicalBlock(scope: !1141, file: !323, line: 151, column: 9)
!1400 = !DILocation(line: 151, column: 14, scope: !1399)
!1401 = !DILocation(line: 151, column: 9, scope: !1141)
!1402 = !DILocation(line: 151, column: 7, scope: !1403)
!1403 = distinct !DILexicalBlock(scope: !1399, file: !323, line: 151, column: 22)
!1404 = distinct !{!1404, !1134, !1405}
!1405 = !DILocation(line: 153, column: 3, scope: !1135)
!1406 = !DILocation(line: 155, column: 3, scope: !1135)
!1407 = !DILocation(line: 202, column: 10, scope: !1408)
!1408 = distinct !DILexicalBlock(scope: !1409, file: !323, line: 159, column: 3)
!1409 = distinct !DILexicalBlock(scope: !1092, file: !323, line: 158, column: 3)
!1410 = !DILocation(line: 202, column: 3, scope: !1408)
!1411 = !DILocation(line: 203, column: 3, scope: !1092)
!1412 = !DILocation(line: 205, column: 1, scope: !1071)
!1413 = distinct !DISubprogram(name: "_", scope: !1414, file: !1414, line: 53, type: !1415, scopeLine: 54, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !666)
!1414 = !DIFile(filename: "/home/wslee/benchmarks/sound/gbsplay-0.0.91/common.h", directory: "")
!1415 = !DISubroutineType(types: !1416)
!1416 = !{!16, !18}
!1417 = !DILocalVariable(name: "msgid", arg: 1, scope: !1413, file: !1414, line: 53, type: !18)
!1418 = !DILocation(line: 0, scope: !1413)
!1419 = !DILocation(line: 55, column: 9, scope: !1420)
!1420 = distinct !DILexicalBlock(scope: !1421, file: !1414, line: 59, column: 3)
!1421 = distinct !DILexicalBlock(scope: !1422, file: !1414, line: 58, column: 3)
!1422 = distinct !DILexicalBlock(scope: !1413, file: !1414, line: 57, column: 3)
!1423 = !DILocalVariable(name: "tmp", scope: !1413, file: !1414, line: 55, type: !16)
!1424 = !DILocation(line: 55, column: 3, scope: !1422)
!1425 = distinct !DISubprogram(name: "get_userconfig", scope: !323, file: !323, line: 205, type: !1415, scopeLine: 206, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !666)
!1426 = !DILocalVariable(name: "cfgfile___1", arg: 1, scope: !1425, file: !323, line: 205, type: !18)
!1427 = !DILocation(line: 0, scope: !1425)
!1428 = !DILocalVariable(name: "__cil_tmp9", scope: !1425, file: !323, line: 214, type: !16)
!1429 = !DILocation(line: 214, column: 9, scope: !1425)
!1430 = !DILocalVariable(name: "__cil_tmp10", scope: !1425, file: !323, line: 215, type: !16)
!1431 = !DILocation(line: 215, column: 9, scope: !1425)
!1432 = !DILocalVariable(name: "__cil_tmp11", scope: !1425, file: !323, line: 216, type: !16)
!1433 = !DILocation(line: 216, column: 9, scope: !1425)
!1434 = !DILocalVariable(name: "__cil_tmp12", scope: !1425, file: !323, line: 217, type: !16)
!1435 = !DILocation(line: 217, column: 9, scope: !1425)
!1436 = !DILocation(line: 210, column: 13, scope: !1437)
!1437 = distinct !DILexicalBlock(scope: !1438, file: !323, line: 221, column: 3)
!1438 = distinct !DILexicalBlock(scope: !1439, file: !323, line: 220, column: 3)
!1439 = distinct !DILexicalBlock(scope: !1425, file: !323, line: 219, column: 3)
!1440 = !DILocalVariable(name: "homedir", scope: !1425, file: !323, line: 207, type: !16)
!1441 = !DILocation(line: 211, column: 9, scope: !1442)
!1442 = distinct !DILexicalBlock(scope: !1439, file: !323, line: 211, column: 7)
!1443 = !DILocation(line: 211, column: 7, scope: !1439)
!1444 = !DILocation(line: 211, column: 5, scope: !1445)
!1445 = distinct !DILexicalBlock(scope: !1442, file: !323, line: 211, column: 18)
!1446 = !DILocation(line: 211, column: 9, scope: !1447)
!1447 = distinct !DILexicalBlock(scope: !1442, file: !323, line: 211, column: 7)
!1448 = !DILocation(line: 211, column: 7, scope: !1442)
!1449 = !DILocation(line: 211, column: 5, scope: !1450)
!1450 = distinct !DILexicalBlock(scope: !1447, file: !323, line: 211, column: 22)
!1451 = !DILocation(line: 213, column: 9, scope: !1452)
!1452 = distinct !DILexicalBlock(scope: !1453, file: !323, line: 214, column: 3)
!1453 = distinct !DILexicalBlock(scope: !1439, file: !323, line: 213, column: 3)
!1454 = !DILocalVariable(name: "tmp", scope: !1425, file: !323, line: 210, type: !76)
!1455 = !DILocation(line: 213, column: 13, scope: !1456)
!1456 = distinct !DILexicalBlock(scope: !1453, file: !323, line: 215, column: 3)
!1457 = !DILocalVariable(name: "tmp___0", scope: !1425, file: !323, line: 211, type: !76)
!1458 = !DILocation(line: 213, column: 25, scope: !1453)
!1459 = !DILocation(line: 213, column: 36, scope: !1453)
!1460 = !DILocation(line: 213, column: 12, scope: !1453)
!1461 = !DILocalVariable(name: "length", scope: !1425, file: !323, line: 209, type: !15)
!1462 = !DILocation(line: 214, column: 20, scope: !1463)
!1463 = distinct !DILexicalBlock(scope: !1453, file: !323, line: 214, column: 3)
!1464 = !DILocation(line: 214, column: 13, scope: !1463)
!1465 = !DILocalVariable(name: "tmp___1", scope: !1425, file: !323, line: 212, type: !23)
!1466 = !DILocalVariable(name: "usercfg", scope: !1425, file: !323, line: 208, type: !16)
!1467 = !DILocation(line: 215, column: 7, scope: !1468)
!1468 = distinct !DILexicalBlock(scope: !1439, file: !323, line: 215, column: 7)
!1469 = !DILocation(line: 215, column: 31, scope: !1468)
!1470 = !DILocation(line: 215, column: 7, scope: !1439)
!1471 = !DILocation(line: 216, column: 15, scope: !1472)
!1472 = distinct !DILexicalBlock(scope: !1473, file: !323, line: 217, column: 5)
!1473 = distinct !DILexicalBlock(scope: !1474, file: !323, line: 216, column: 5)
!1474 = distinct !DILexicalBlock(scope: !1468, file: !323, line: 215, column: 63)
!1475 = !DILocalVariable(name: "tmp___2", scope: !1425, file: !323, line: 213, type: !16)
!1476 = !DILocation(line: 216, column: 38, scope: !1477)
!1477 = distinct !DILexicalBlock(scope: !1473, file: !323, line: 218, column: 5)
!1478 = !DILocation(line: 216, column: 5, scope: !1477)
!1479 = !DILocation(line: 217, column: 5, scope: !1474)
!1480 = !DILocation(line: 219, column: 46, scope: !1481)
!1481 = distinct !DILexicalBlock(scope: !1482, file: !323, line: 220, column: 3)
!1482 = distinct !DILexicalBlock(scope: !1439, file: !323, line: 219, column: 3)
!1483 = !DILocation(line: 219, column: 3, scope: !1481)
!1484 = !DILocation(line: 221, column: 3, scope: !1439)
!1485 = !DILocation(line: 0, scope: !1439)
!1486 = !DILocation(line: 223, column: 1, scope: !1425)
!1487 = distinct !DISubprogram(name: "midi_open", scope: !297, file: !297, line: 30, type: !283, scopeLine: 32, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !666)
!1488 = !DILocalVariable(name: "endian___1", arg: 1, scope: !1487, file: !297, line: 30, type: !5)
!1489 = !DILocation(line: 0, scope: !1487)
!1490 = !DILocalVariable(name: "rate___1", arg: 2, scope: !1487, file: !297, line: 31, type: !15)
!1491 = !DILocation(line: 32, column: 3, scope: !1492)
!1492 = distinct !DILexicalBlock(scope: !1487, file: !297, line: 35, column: 3)
!1493 = distinct !DISubprogram(name: "midi_skip", scope: !297, file: !297, line: 188, type: !286, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !666)
!1494 = !DILocalVariable(name: "subsong", arg: 1, scope: !1493, file: !297, line: 188, type: !14)
!1495 = !DILocation(line: 0, scope: !1493)
!1496 = !DILocation(line: 190, column: 15, scope: !1497)
!1497 = distinct !DILexicalBlock(scope: !1493, file: !297, line: 193, column: 3)
!1498 = !DILocation(line: 192, column: 7, scope: !1499)
!1499 = distinct !DILexicalBlock(scope: !1497, file: !297, line: 192, column: 7)
!1500 = !DILocation(line: 192, column: 7, scope: !1497)
!1501 = !DILocation(line: 193, column: 11, scope: !1502)
!1502 = distinct !DILexicalBlock(scope: !1503, file: !297, line: 194, column: 5)
!1503 = distinct !DILexicalBlock(scope: !1504, file: !297, line: 193, column: 5)
!1504 = distinct !DILexicalBlock(scope: !1499, file: !297, line: 192, column: 13)
!1505 = !DILocalVariable(name: "tmp", scope: !1493, file: !297, line: 190, type: !14)
!1506 = !DILocation(line: 193, column: 9, scope: !1507)
!1507 = distinct !DILexicalBlock(scope: !1504, file: !297, line: 193, column: 9)
!1508 = !DILocation(line: 193, column: 9, scope: !1504)
!1509 = !DILocation(line: 194, column: 7, scope: !1510)
!1510 = distinct !DILexicalBlock(scope: !1507, file: !297, line: 193, column: 14)
!1511 = !DILocation(line: 196, column: 3, scope: !1504)
!1512 = !DILocation(line: 197, column: 13, scope: !1513)
!1513 = distinct !DILexicalBlock(scope: !1514, file: !297, line: 198, column: 3)
!1514 = distinct !DILexicalBlock(scope: !1497, file: !297, line: 197, column: 3)
!1515 = !DILocalVariable(name: "tmp___0", scope: !1493, file: !297, line: 191, type: !14)
!1516 = !DILocation(line: 197, column: 3, scope: !1497)
!1517 = !DILocation(line: 0, scope: !1497)
!1518 = !DILocation(line: 199, column: 1, scope: !1493)
!1519 = distinct !DISubprogram(name: "midi_io", scope: !297, file: !297, line: 230, type: !289, scopeLine: 232, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !666)
!1520 = !DILocalVariable(name: "cycles", arg: 1, scope: !1519, file: !297, line: 230, type: !15)
!1521 = !DILocation(line: 0, scope: !1519)
!1522 = !DILocalVariable(name: "addr", arg: 2, scope: !1519, file: !297, line: 230, type: !83)
!1523 = !DILocalVariable(name: "val", arg: 3, scope: !1519, file: !297, line: 231, type: !87)
!1524 = !DILocation(line: 236, column: 24, scope: !1525)
!1525 = distinct !DILexicalBlock(scope: !1519, file: !297, line: 240, column: 3)
!1526 = !DILocation(line: 236, column: 34, scope: !1525)
!1527 = !DILocation(line: 236, column: 10, scope: !1525)
!1528 = !DILocalVariable(name: "chan", scope: !1519, file: !297, line: 233, type: !15)
!1529 = !DILocation(line: 241, column: 12, scope: !1530)
!1530 = distinct !DILexicalBlock(scope: !1531, file: !297, line: 241, column: 7)
!1531 = distinct !DILexicalBlock(scope: !1525, file: !297, line: 237, column: 3)
!1532 = !DILocation(line: 241, column: 7, scope: !1531)
!1533 = !DILocation(line: 241, column: 5, scope: !1534)
!1534 = distinct !DILexicalBlock(scope: !1530, file: !297, line: 241, column: 23)
!1535 = !DILocation(line: 241, column: 12, scope: !1536)
!1536 = distinct !DILexicalBlock(scope: !1531, file: !297, line: 241, column: 7)
!1537 = !DILocation(line: 241, column: 5, scope: !1538)
!1538 = distinct !DILexicalBlock(scope: !1536, file: !297, line: 241, column: 23)
!1539 = !DILocation(line: 241, column: 12, scope: !1540)
!1540 = distinct !DILexicalBlock(scope: !1531, file: !297, line: 241, column: 7)
!1541 = !DILocation(line: 241, column: 5, scope: !1542)
!1542 = distinct !DILexicalBlock(scope: !1540, file: !297, line: 241, column: 23)
!1543 = !DILocation(line: 246, column: 12, scope: !1544)
!1544 = distinct !DILexicalBlock(scope: !1531, file: !297, line: 246, column: 7)
!1545 = !DILocation(line: 246, column: 7, scope: !1531)
!1546 = !DILocation(line: 246, column: 5, scope: !1547)
!1547 = distinct !DILexicalBlock(scope: !1544, file: !297, line: 246, column: 23)
!1548 = !DILocation(line: 246, column: 12, scope: !1549)
!1549 = distinct !DILexicalBlock(scope: !1531, file: !297, line: 246, column: 7)
!1550 = !DILocation(line: 246, column: 5, scope: !1551)
!1551 = distinct !DILexicalBlock(scope: !1549, file: !297, line: 246, column: 23)
!1552 = !DILocation(line: 246, column: 12, scope: !1553)
!1553 = distinct !DILexicalBlock(scope: !1531, file: !297, line: 246, column: 7)
!1554 = !DILocation(line: 246, column: 5, scope: !1555)
!1555 = distinct !DILexicalBlock(scope: !1553, file: !297, line: 246, column: 23)
!1556 = !DILocation(line: 252, column: 12, scope: !1557)
!1557 = distinct !DILexicalBlock(scope: !1531, file: !297, line: 252, column: 7)
!1558 = !DILocation(line: 252, column: 7, scope: !1531)
!1559 = !DILocation(line: 252, column: 5, scope: !1560)
!1560 = distinct !DILexicalBlock(scope: !1557, file: !297, line: 252, column: 23)
!1561 = !DILocation(line: 252, column: 12, scope: !1562)
!1562 = distinct !DILexicalBlock(scope: !1531, file: !297, line: 252, column: 7)
!1563 = !DILocation(line: 252, column: 5, scope: !1564)
!1564 = distinct !DILexicalBlock(scope: !1562, file: !297, line: 252, column: 23)
!1565 = !DILocation(line: 252, column: 12, scope: !1566)
!1566 = distinct !DILexicalBlock(scope: !1531, file: !297, line: 252, column: 7)
!1567 = !DILocation(line: 252, column: 5, scope: !1568)
!1568 = distinct !DILexicalBlock(scope: !1566, file: !297, line: 252, column: 23)
!1569 = !DILocation(line: 278, column: 12, scope: !1570)
!1570 = distinct !DILexicalBlock(scope: !1531, file: !297, line: 278, column: 7)
!1571 = !DILocation(line: 278, column: 7, scope: !1531)
!1572 = !DILocation(line: 278, column: 5, scope: !1573)
!1573 = distinct !DILexicalBlock(scope: !1570, file: !297, line: 278, column: 23)
!1574 = !DILocation(line: 289, column: 12, scope: !1575)
!1575 = distinct !DILexicalBlock(scope: !1531, file: !297, line: 289, column: 7)
!1576 = !DILocation(line: 289, column: 7, scope: !1531)
!1577 = !DILocation(line: 289, column: 5, scope: !1578)
!1578 = distinct !DILexicalBlock(scope: !1575, file: !297, line: 289, column: 23)
!1579 = !DILocation(line: 238, column: 3, scope: !1531)
!1580 = !DILocation(line: 242, column: 23, scope: !1531)
!1581 = !DILocation(line: 242, column: 33, scope: !1531)
!1582 = !DILocation(line: 242, column: 20, scope: !1531)
!1583 = !DILocation(line: 242, column: 3, scope: !1531)
!1584 = !DILocation(line: 242, column: 16, scope: !1531)
!1585 = !DILocation(line: 243, column: 3, scope: !1531)
!1586 = !DILocation(line: 247, column: 3, scope: !1531)
!1587 = !DILocation(line: 247, column: 17, scope: !1531)
!1588 = !DILocation(line: 248, column: 20, scope: !1531)
!1589 = !DILocation(line: 248, column: 3, scope: !1531)
!1590 = !DILocation(line: 248, column: 17, scope: !1531)
!1591 = !DILocation(line: 249, column: 3, scope: !1531)
!1592 = !DILocation(line: 253, column: 3, scope: !1593)
!1593 = distinct !DILexicalBlock(scope: !1531, file: !297, line: 253, column: 3)
!1594 = !DILocation(line: 253, column: 17, scope: !1593)
!1595 = !DILocation(line: 254, column: 28, scope: !1593)
!1596 = !DILocation(line: 254, column: 38, scope: !1593)
!1597 = !DILocation(line: 254, column: 20, scope: !1593)
!1598 = !DILocation(line: 254, column: 43, scope: !1593)
!1599 = !DILocation(line: 254, column: 3, scope: !1593)
!1600 = !DILocation(line: 254, column: 17, scope: !1593)
!1601 = !DILocation(line: 256, column: 42, scope: !1602)
!1602 = distinct !DILexicalBlock(scope: !1593, file: !297, line: 255, column: 3)
!1603 = !DILocation(line: 256, column: 40, scope: !1602)
!1604 = !DILocation(line: 256, column: 31, scope: !1602)
!1605 = !DILocation(line: 256, column: 13, scope: !1602)
!1606 = !DILocation(line: 256, column: 9, scope: !1602)
!1607 = !DILocalVariable(name: "tmp", scope: !1519, file: !297, line: 235, type: !91)
!1608 = !DILocation(line: 256, column: 34, scope: !1593)
!1609 = !DILocation(line: 256, column: 58, scope: !1593)
!1610 = !DILocation(line: 256, column: 84, scope: !1593)
!1611 = !DILocation(line: 256, column: 98, scope: !1593)
!1612 = !DILocation(line: 256, column: 21, scope: !1593)
!1613 = !DILocation(line: 256, column: 104, scope: !1593)
!1614 = !DILocation(line: 256, column: 14, scope: !1593)
!1615 = !DILocalVariable(name: "new_note", scope: !1519, file: !297, line: 234, type: !14)
!1616 = !DILocation(line: 259, column: 7, scope: !1617)
!1617 = distinct !DILexicalBlock(scope: !1531, file: !297, line: 259, column: 7)
!1618 = !DILocation(line: 259, column: 17, scope: !1617)
!1619 = !DILocation(line: 259, column: 7, scope: !1531)
!1620 = !DILocation(line: 260, column: 9, scope: !1621)
!1621 = distinct !DILexicalBlock(scope: !1622, file: !297, line: 260, column: 9)
!1622 = distinct !DILexicalBlock(scope: !1617, file: !297, line: 259, column: 24)
!1623 = !DILocation(line: 260, column: 9, scope: !1622)
!1624 = !DILocation(line: 261, column: 34, scope: !1625)
!1625 = distinct !DILexicalBlock(scope: !1626, file: !297, line: 262, column: 7)
!1626 = distinct !DILexicalBlock(scope: !1627, file: !297, line: 261, column: 7)
!1627 = distinct !DILexicalBlock(scope: !1621, file: !297, line: 260, column: 21)
!1628 = !DILocation(line: 261, column: 52, scope: !1625)
!1629 = !DILocation(line: 261, column: 46, scope: !1625)
!1630 = !DILocation(line: 261, column: 17, scope: !1625)
!1631 = !DILocalVariable(name: "tmp___0", scope: !1519, file: !297, line: 236, type: !14)
!1632 = !DILocation(line: 261, column: 11, scope: !1633)
!1633 = distinct !DILexicalBlock(scope: !1627, file: !297, line: 261, column: 11)
!1634 = !DILocation(line: 261, column: 11, scope: !1627)
!1635 = !DILocation(line: 262, column: 9, scope: !1636)
!1636 = distinct !DILexicalBlock(scope: !1633, file: !297, line: 261, column: 20)
!1637 = !DILocation(line: 264, column: 5, scope: !1627)
!1638 = !DILocation(line: 265, column: 18, scope: !1639)
!1639 = distinct !DILexicalBlock(scope: !1622, file: !297, line: 265, column: 9)
!1640 = !DILocation(line: 265, column: 9, scope: !1622)
!1641 = !DILocation(line: 266, column: 7, scope: !1642)
!1642 = distinct !DILexicalBlock(scope: !1639, file: !297, line: 265, column: 23)
!1643 = !DILocation(line: 265, column: 18, scope: !1644)
!1644 = distinct !DILexicalBlock(scope: !1639, file: !297, line: 265, column: 9)
!1645 = !DILocation(line: 265, column: 9, scope: !1639)
!1646 = !DILocation(line: 266, column: 7, scope: !1647)
!1647 = distinct !DILexicalBlock(scope: !1644, file: !297, line: 265, column: 26)
!1648 = !DILocation(line: 268, column: 31, scope: !1649)
!1649 = distinct !DILexicalBlock(scope: !1650, file: !297, line: 269, column: 5)
!1650 = distinct !DILexicalBlock(scope: !1622, file: !297, line: 268, column: 5)
!1651 = !DILocation(line: 268, column: 53, scope: !1649)
!1652 = !DILocation(line: 268, column: 15, scope: !1649)
!1653 = !DILocalVariable(name: "tmp___1", scope: !1519, file: !297, line: 237, type: !14)
!1654 = !DILocation(line: 268, column: 9, scope: !1655)
!1655 = distinct !DILexicalBlock(scope: !1622, file: !297, line: 268, column: 9)
!1656 = !DILocation(line: 268, column: 9, scope: !1622)
!1657 = !DILocation(line: 269, column: 7, scope: !1658)
!1658 = distinct !DILexicalBlock(scope: !1655, file: !297, line: 268, column: 18)
!1659 = !DILocation(line: 270, column: 18, scope: !1622)
!1660 = !DILocation(line: 270, column: 5, scope: !1622)
!1661 = !DILocation(line: 270, column: 16, scope: !1622)
!1662 = !DILocation(line: 271, column: 3, scope: !1622)
!1663 = !DILocation(line: 272, column: 32, scope: !1664)
!1664 = distinct !DILexicalBlock(scope: !1665, file: !297, line: 273, column: 5)
!1665 = distinct !DILexicalBlock(scope: !1666, file: !297, line: 272, column: 5)
!1666 = distinct !DILexicalBlock(scope: !1617, file: !297, line: 271, column: 10)
!1667 = !DILocation(line: 272, column: 50, scope: !1664)
!1668 = !DILocation(line: 272, column: 44, scope: !1664)
!1669 = !DILocation(line: 272, column: 15, scope: !1664)
!1670 = !DILocalVariable(name: "tmp___2", scope: !1519, file: !297, line: 238, type: !14)
!1671 = !DILocation(line: 272, column: 9, scope: !1672)
!1672 = distinct !DILexicalBlock(scope: !1666, file: !297, line: 272, column: 9)
!1673 = !DILocation(line: 272, column: 9, scope: !1666)
!1674 = !DILocation(line: 273, column: 7, scope: !1675)
!1675 = distinct !DILexicalBlock(scope: !1672, file: !297, line: 272, column: 18)
!1676 = !DILocation(line: 274, column: 5, scope: !1666)
!1677 = !DILocation(line: 274, column: 16, scope: !1666)
!1678 = !DILocation(line: 277, column: 3, scope: !1531)
!1679 = !DILocation(line: 288, column: 3, scope: !1531)
!1680 = !DILocation(line: 290, column: 27, scope: !1531)
!1681 = !DILocation(line: 290, column: 37, scope: !1531)
!1682 = !DILocation(line: 290, column: 24, scope: !1531)
!1683 = !DILocation(line: 290, column: 44, scope: !1531)
!1684 = !DILocation(line: 290, column: 18, scope: !1531)
!1685 = !DILocation(line: 290, column: 13, scope: !1531)
!1686 = !DILocation(line: 291, column: 3, scope: !1531)
!1687 = !DILocation(line: 294, column: 3, scope: !1525)
!1688 = !DILocation(line: 0, scope: !1525)
!1689 = !DILocation(line: 296, column: 1, scope: !1519)
!1690 = distinct !DISubprogram(name: "midi_write", scope: !297, file: !297, line: 297, type: !292, scopeLine: 299, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !666)
!1691 = !DILocalVariable(name: "buf___3", arg: 1, scope: !1690, file: !297, line: 297, type: !94)
!1692 = !DILocation(line: 0, scope: !1690)
!1693 = !DILocalVariable(name: "count", arg: 2, scope: !1690, file: !297, line: 298, type: !76)
!1694 = !DILocation(line: 299, column: 3, scope: !1695)
!1695 = distinct !DILexicalBlock(scope: !1690, file: !297, line: 302, column: 3)
!1696 = distinct !DISubprogram(name: "midi_close", scope: !297, file: !297, line: 302, type: !272, scopeLine: 303, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !666)
!1697 = !DILocation(line: 304, column: 7, scope: !1698)
!1698 = distinct !DILexicalBlock(scope: !1699, file: !297, line: 304, column: 7)
!1699 = distinct !DILexicalBlock(scope: !1696, file: !297, line: 306, column: 3)
!1700 = !DILocation(line: 304, column: 7, scope: !1699)
!1701 = !DILocation(line: 305, column: 5, scope: !1702)
!1702 = distinct !DILexicalBlock(scope: !1703, file: !297, line: 306, column: 5)
!1703 = distinct !DILexicalBlock(scope: !1704, file: !297, line: 305, column: 5)
!1704 = distinct !DILexicalBlock(scope: !1698, file: !297, line: 304, column: 13)
!1705 = !DILocation(line: 308, column: 3, scope: !1704)
!1706 = !DILocation(line: 306, column: 3, scope: !1699)
!1707 = distinct !DISubprogram(name: "gbcpu_addmem", scope: !365, file: !365, line: 1791, type: !1708, scopeLine: 1795, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !666)
!1708 = !DISubroutineType(types: !1709)
!1709 = !{null, !83, !83, !483, !490}
!1710 = !DILocalVariable(name: "start", arg: 1, scope: !1707, file: !365, line: 1791, type: !83)
!1711 = !DILocation(line: 0, scope: !1707)
!1712 = !DILocalVariable(name: "end", arg: 2, scope: !1707, file: !365, line: 1791, type: !83)
!1713 = !DILocalVariable(name: "putfn", arg: 3, scope: !1707, file: !365, line: 1792, type: !483)
!1714 = !DILocalVariable(name: "getfn", arg: 4, scope: !1707, file: !365, line: 1794, type: !490)
!1715 = !DILocalVariable(name: "i", scope: !1707, file: !365, line: 1796, type: !83)
!1716 = !DILocation(line: 1795, column: 3, scope: !1717)
!1717 = distinct !DILexicalBlock(scope: !1718, file: !365, line: 1797, column: 3)
!1718 = distinct !DILexicalBlock(scope: !1719, file: !365, line: 1796, column: 3)
!1719 = distinct !DILexicalBlock(scope: !1707, file: !365, line: 1798, column: 3)
!1720 = !DILocation(line: 0, scope: !1719)
!1721 = !DILocation(line: 1795, column: 13, scope: !1717)
!1722 = !DILocation(line: 1795, column: 14, scope: !1723)
!1723 = distinct !DILexicalBlock(scope: !1724, file: !365, line: 1795, column: 9)
!1724 = distinct !DILexicalBlock(scope: !1717, file: !365, line: 1795, column: 13)
!1725 = !DILocation(line: 1795, column: 9, scope: !1724)
!1726 = !DILocation(line: 1795, column: 7, scope: !1727)
!1727 = distinct !DILexicalBlock(scope: !1723, file: !365, line: 1795, column: 23)
!1728 = !DILocation(line: 1796, column: 5, scope: !1724)
!1729 = !DILocation(line: 1796, column: 18, scope: !1724)
!1730 = !DILocation(line: 1797, column: 5, scope: !1724)
!1731 = !DILocation(line: 1797, column: 18, scope: !1724)
!1732 = !DILocation(line: 1795, column: 7, scope: !1724)
!1733 = distinct !{!1733, !1716, !1734}
!1734 = !DILocation(line: 1796, column: 3, scope: !1717)
!1735 = !DILocation(line: 1798, column: 3, scope: !1717)
!1736 = !DILocation(line: 1799, column: 3, scope: !1719)
!1737 = distinct !DISubprogram(name: "gbcpu_init", scope: !365, file: !365, line: 1801, type: !272, scopeLine: 1802, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !666)
!1738 = !DILocation(line: 1803, column: 3, scope: !1739)
!1739 = distinct !DILexicalBlock(scope: !1740, file: !365, line: 1807, column: 3)
!1740 = distinct !DILexicalBlock(scope: !1741, file: !365, line: 1806, column: 3)
!1741 = distinct !DILexicalBlock(scope: !1737, file: !365, line: 1805, column: 3)
!1742 = !DILocation(line: 1804, column: 16, scope: !1740)
!1743 = !DILocation(line: 1805, column: 17, scope: !1740)
!1744 = !DILocation(line: 1806, column: 12, scope: !1740)
!1745 = !DILocation(line: 1808, column: 3, scope: !1741)
!1746 = distinct !DISubprogram(name: "gbcpu_intr", scope: !365, file: !365, line: 1810, type: !1747, scopeLine: 1811, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !666)
!1747 = !DISubroutineType(types: !1748)
!1748 = !{null, !15}
!1749 = !DILocalVariable(name: "vec", arg: 1, scope: !1746, file: !365, line: 1810, type: !15)
!1750 = !DILocation(line: 0, scope: !1746)
!1751 = !DILocation(line: 1812, column: 16, scope: !1752)
!1752 = distinct !DILexicalBlock(scope: !1753, file: !365, line: 1815, column: 3)
!1753 = distinct !DILexicalBlock(scope: !1746, file: !365, line: 1814, column: 3)
!1754 = !DILocation(line: 1813, column: 19, scope: !1755)
!1755 = distinct !DILexicalBlock(scope: !1752, file: !365, line: 1813, column: 3)
!1756 = !DILocation(line: 1813, column: 8, scope: !1755)
!1757 = !DILocation(line: 1813, column: 3, scope: !1755)
!1758 = !DILocation(line: 1814, column: 42, scope: !1752)
!1759 = !DILocation(line: 1814, column: 40, scope: !1752)
!1760 = !DILocation(line: 1815, column: 3, scope: !1753)
!1761 = distinct !DISubprogram(name: "push", scope: !365, file: !365, line: 582, type: !1762, scopeLine: 583, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !666)
!1762 = !DISubroutineType(types: !1763)
!1763 = !{null, !83}
!1764 = !DILocalVariable(name: "val", arg: 1, scope: !1761, file: !365, line: 582, type: !83)
!1765 = !DILocation(line: 0, scope: !1761)
!1766 = !DILocation(line: 584, column: 26, scope: !1767)
!1767 = distinct !DILexicalBlock(scope: !1768, file: !365, line: 587, column: 3)
!1768 = distinct !DILexicalBlock(scope: !1761, file: !365, line: 586, column: 3)
!1769 = !DILocation(line: 584, column: 20, scope: !1767)
!1770 = !DILocation(line: 584, column: 62, scope: !1767)
!1771 = !DILocalVariable(name: "sp", scope: !1761, file: !365, line: 584, type: !83)
!1772 = !DILocation(line: 585, column: 41, scope: !1767)
!1773 = !DILocation(line: 585, column: 39, scope: !1767)
!1774 = !DILocation(line: 586, column: 19, scope: !1775)
!1775 = distinct !DILexicalBlock(scope: !1767, file: !365, line: 586, column: 3)
!1776 = !DILocation(line: 586, column: 3, scope: !1775)
!1777 = !DILocation(line: 587, column: 14, scope: !1778)
!1778 = distinct !DILexicalBlock(scope: !1767, file: !365, line: 588, column: 3)
!1779 = !DILocation(line: 587, column: 24, scope: !1778)
!1780 = !DILocation(line: 587, column: 3, scope: !1778)
!1781 = !DILocation(line: 588, column: 3, scope: !1768)
!1782 = distinct !DISubprogram(name: "gbcpu_step", scope: !365, file: !365, line: 1817, type: !1783, scopeLine: 1818, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !666)
!1783 = !DISubroutineType(types: !1784)
!1784 = !{!15}
!1785 = !DILocalVariable(name: "__cil_tmp4", scope: !1782, file: !365, line: 1822, type: !16)
!1786 = !DILocation(line: 1822, column: 9, scope: !1782)
!1787 = !DILocation(line: 1821, column: 9, scope: !1788)
!1788 = distinct !DILexicalBlock(scope: !1789, file: !365, line: 1821, column: 7)
!1789 = distinct !DILexicalBlock(scope: !1782, file: !365, line: 1824, column: 3)
!1790 = !DILocation(line: 1821, column: 7, scope: !1789)
!1791 = !DILocation(line: 1822, column: 25, scope: !1792)
!1792 = distinct !DILexicalBlock(scope: !1793, file: !365, line: 1822, column: 5)
!1793 = distinct !DILexicalBlock(scope: !1788, file: !365, line: 1821, column: 23)
!1794 = !DILocalVariable(name: "tmp", scope: !1782, file: !365, line: 1820, type: !86)
!1795 = !DILocation(line: 0, scope: !1782)
!1796 = !DILocation(line: 1822, column: 56, scope: !1792)
!1797 = !DILocation(line: 1822, column: 36, scope: !1792)
!1798 = !DILocation(line: 1822, column: 59, scope: !1792)
!1799 = !DILocation(line: 1822, column: 24, scope: !1792)
!1800 = !DILocation(line: 1822, column: 22, scope: !1792)
!1801 = !DILocation(line: 1822, column: 23, scope: !1802)
!1802 = distinct !DILexicalBlock(scope: !1792, file: !365, line: 1823, column: 5)
!1803 = !DILocation(line: 1822, column: 15, scope: !1802)
!1804 = !DILocalVariable(name: "tmp___0", scope: !1782, file: !365, line: 1821, type: !83)
!1805 = !DILocation(line: 1822, column: 10, scope: !1792)
!1806 = !DILocalVariable(name: "op", scope: !1782, file: !365, line: 1819, type: !87)
!1807 = !DILocation(line: 1823, column: 5, scope: !1808)
!1808 = distinct !DILexicalBlock(scope: !1809, file: !365, line: 1825, column: 5)
!1809 = distinct !DILexicalBlock(scope: !1793, file: !365, line: 1824, column: 5)
!1810 = !DILocation(line: 1823, column: 15, scope: !1808)
!1811 = !DILocation(line: 1823, column: 7, scope: !1812)
!1812 = distinct !DILexicalBlock(scope: !1808, file: !365, line: 1823, column: 15)
!1813 = !DILocation(line: 1826, column: 5, scope: !1808)
!1814 = !DILocation(line: 1824, column: 8, scope: !1815)
!1815 = distinct !DILexicalBlock(scope: !1816, file: !365, line: 1830, column: 5)
!1816 = distinct !DILexicalBlock(scope: !1793, file: !365, line: 1829, column: 5)
!1817 = !DILocation(line: 1824, column: 16, scope: !1815)
!1818 = !DILocation(line: 1824, column: 21, scope: !1815)
!1819 = !DILocation(line: 1824, column: 38, scope: !1815)
!1820 = !DILocation(line: 1824, column: 5, scope: !1815)
!1821 = !DILocation(line: 1827, column: 5, scope: !1793)
!1822 = !DILocation(line: 1829, column: 7, scope: !1823)
!1823 = distinct !DILexicalBlock(scope: !1789, file: !365, line: 1829, column: 7)
!1824 = !DILocation(line: 1829, column: 20, scope: !1823)
!1825 = !DILocation(line: 1829, column: 7, scope: !1789)
!1826 = !DILocation(line: 1829, column: 9, scope: !1827)
!1827 = distinct !DILexicalBlock(scope: !1828, file: !365, line: 1829, column: 9)
!1828 = distinct !DILexicalBlock(scope: !1823, file: !365, line: 1829, column: 27)
!1829 = !DILocation(line: 1829, column: 18, scope: !1827)
!1830 = !DILocation(line: 1829, column: 9, scope: !1828)
!1831 = !DILocation(line: 1830, column: 40, scope: !1832)
!1832 = distinct !DILexicalBlock(scope: !1833, file: !365, line: 1831, column: 7)
!1833 = distinct !DILexicalBlock(scope: !1834, file: !365, line: 1830, column: 7)
!1834 = distinct !DILexicalBlock(scope: !1827, file: !365, line: 1829, column: 25)
!1835 = !DILocation(line: 1830, column: 7, scope: !1832)
!1836 = !DILocation(line: 1831, column: 21, scope: !1833)
!1837 = !DILocation(line: 1833, column: 5, scope: !1834)
!1838 = !DILocation(line: 1834, column: 3, scope: !1828)
!1839 = !DILocation(line: 1833, column: 7, scope: !1840)
!1840 = distinct !DILexicalBlock(scope: !1789, file: !365, line: 1833, column: 7)
!1841 = !DILocation(line: 1833, column: 7, scope: !1789)
!1842 = !DILocation(line: 1833, column: 5, scope: !1843)
!1843 = distinct !DILexicalBlock(scope: !1840, file: !365, line: 1833, column: 22)
!1844 = !DILocation(line: 1834, column: 3, scope: !1789)
!1845 = !DILocation(line: 0, scope: !1789)
!1846 = !DILocation(line: 1836, column: 1, scope: !1782)
!1847 = distinct !DISubprogram(name: "mem_get", scope: !365, file: !365, line: 570, type: !491, scopeLine: 571, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !666)
!1848 = !DILocalVariable(name: "addr", arg: 1, scope: !1847, file: !365, line: 570, type: !83)
!1849 = !DILocation(line: 0, scope: !1847)
!1850 = !DILocation(line: 572, column: 23, scope: !1851)
!1851 = distinct !DILexicalBlock(scope: !1852, file: !365, line: 576, column: 3)
!1852 = distinct !DILexicalBlock(scope: !1847, file: !365, line: 575, column: 3)
!1853 = !DILocation(line: 572, column: 8, scope: !1851)
!1854 = !DILocalVariable(name: "fn", scope: !1847, file: !365, line: 572, type: !490)
!1855 = !DILocation(line: 573, column: 9, scope: !1856)
!1856 = distinct !DILexicalBlock(scope: !1851, file: !365, line: 573, column: 3)
!1857 = !DILocalVariable(name: "tmp", scope: !1847, file: !365, line: 573, type: !83)
!1858 = !DILocation(line: 573, column: 3, scope: !1852)
!1859 = distinct !DISubprogram(name: "gen_impulsetab", scope: !1860, file: !1860, line: 28, type: !1861, scopeLine: 29, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !666)
!1860 = !DIFile(filename: "/home/wslee/benchmarks/sound/gbsplay-0.0.91/impulsegen.c", directory: "")
!1861 = !DISubroutineType(types: !1862)
!1862 = !{!89, !15, !15, !91}
!1863 = !DILocalVariable(name: "w_shift", arg: 1, scope: !1859, file: !1860, line: 28, type: !15)
!1864 = !DILocation(line: 0, scope: !1859)
!1865 = !DILocalVariable(name: "n_shift", arg: 2, scope: !1859, file: !1860, line: 28, type: !15)
!1866 = !DILocalVariable(name: "cutoff", arg: 3, scope: !1859, file: !1860, line: 28, type: !91)
!1867 = !DILocation(line: 32, column: 21, scope: !1868)
!1868 = distinct !DILexicalBlock(scope: !1869, file: !1860, line: 58, column: 3)
!1869 = distinct !DILexicalBlock(scope: !1859, file: !1860, line: 57, column: 3)
!1870 = !DILocation(line: 32, column: 11, scope: !1868)
!1871 = !DILocalVariable(name: "width", scope: !1859, file: !1860, line: 32, type: !15)
!1872 = !DILocation(line: 33, column: 17, scope: !1868)
!1873 = !DILocation(line: 33, column: 7, scope: !1868)
!1874 = !DILocalVariable(name: "n", scope: !1859, file: !1860, line: 33, type: !15)
!1875 = !DILocation(line: 34, column: 13, scope: !1868)
!1876 = !DILocalVariable(name: "m", scope: !1859, file: !1860, line: 34, type: !15)
!1877 = !DILocation(line: 35, column: 41, scope: !1868)
!1878 = !DILocation(line: 35, column: 46, scope: !1868)
!1879 = !DILocalVariable(name: "size", scope: !1859, file: !1860, line: 35, type: !15)
!1880 = !DILocation(line: 36, column: 16, scope: !1881)
!1881 = distinct !DILexicalBlock(scope: !1868, file: !1860, line: 36, column: 3)
!1882 = !DILocation(line: 36, column: 9, scope: !1881)
!1883 = !DILocalVariable(name: "tmp", scope: !1859, file: !1860, line: 37, type: !23)
!1884 = !DILocation(line: 36, column: 14, scope: !1868)
!1885 = !DILocalVariable(name: "pulsetab", scope: !1859, file: !1860, line: 36, type: !89)
!1886 = !DILocalVariable(name: "ptr", scope: !1859, file: !1860, line: 38, type: !89)
!1887 = !DILocation(line: 39, column: 9, scope: !1888)
!1888 = distinct !DILexicalBlock(scope: !1869, file: !1860, line: 39, column: 7)
!1889 = !DILocation(line: 39, column: 7, scope: !1869)
!1890 = !DILocation(line: 40, column: 5, scope: !1891)
!1891 = distinct !DILexicalBlock(scope: !1888, file: !1860, line: 39, column: 19)
!1892 = !DILocalVariable(name: "j", scope: !1859, file: !1860, line: 31, type: !91)
!1893 = !DILocation(line: 42, column: 3, scope: !1894)
!1894 = distinct !DILexicalBlock(scope: !1895, file: !1860, line: 44, column: 3)
!1895 = distinct !DILexicalBlock(scope: !1869, file: !1860, line: 43, column: 3)
!1896 = !DILocation(line: 37, column: 7, scope: !1868)
!1897 = !DILocation(line: 0, scope: !1869)
!1898 = !DILocation(line: 42, column: 13, scope: !1894)
!1899 = !DILocation(line: 42, column: 14, scope: !1900)
!1900 = distinct !DILexicalBlock(scope: !1901, file: !1860, line: 42, column: 9)
!1901 = distinct !DILexicalBlock(scope: !1894, file: !1860, line: 42, column: 13)
!1902 = !DILocation(line: 42, column: 9, scope: !1901)
!1903 = !DILocation(line: 42, column: 7, scope: !1904)
!1904 = distinct !DILexicalBlock(scope: !1900, file: !1860, line: 42, column: 22)
!1905 = !DILocalVariable(name: "sum", scope: !1859, file: !1860, line: 39, type: !15)
!1906 = !DILocalVariable(name: "n___0", scope: !1859, file: !1860, line: 41, type: !15)
!1907 = !DILocalVariable(name: "div___2", scope: !1859, file: !1860, line: 42, type: !91)
!1908 = !DILocalVariable(name: "dcorr", scope: !1859, file: !1860, line: 43, type: !91)
!1909 = !DILocation(line: 49, column: 5, scope: !1910)
!1910 = distinct !DILexicalBlock(scope: !1911, file: !1860, line: 49, column: 5)
!1911 = distinct !DILexicalBlock(scope: !1901, file: !1860, line: 48, column: 5)
!1912 = !DILocation(line: 0, scope: !1901)
!1913 = !DILocation(line: 49, column: 15, scope: !1910)
!1914 = !DILocation(line: 51, column: 11, scope: !1915)
!1915 = distinct !DILexicalBlock(scope: !1910, file: !1860, line: 49, column: 15)
!1916 = !DILocation(line: 51, column: 15, scope: !1915)
!1917 = !DILocalVariable(name: "i", scope: !1859, file: !1860, line: 30, type: !15)
!1918 = !DILocation(line: 51, column: 7, scope: !1919)
!1919 = distinct !DILexicalBlock(scope: !1920, file: !1860, line: 53, column: 7)
!1920 = distinct !DILexicalBlock(scope: !1915, file: !1860, line: 52, column: 7)
!1921 = !DILocation(line: 0, scope: !1915)
!1922 = !DILocation(line: 51, column: 17, scope: !1919)
!1923 = !DILocation(line: 51, column: 18, scope: !1924)
!1924 = distinct !DILexicalBlock(scope: !1925, file: !1860, line: 51, column: 13)
!1925 = distinct !DILexicalBlock(scope: !1919, file: !1860, line: 51, column: 17)
!1926 = !DILocation(line: 51, column: 13, scope: !1925)
!1927 = !DILocation(line: 51, column: 11, scope: !1928)
!1928 = distinct !DILexicalBlock(scope: !1924, file: !1860, line: 51, column: 25)
!1929 = !DILocation(line: 52, column: 25, scope: !1930)
!1930 = distinct !DILexicalBlock(scope: !1931, file: !1860, line: 54, column: 9)
!1931 = distinct !DILexicalBlock(scope: !1925, file: !1860, line: 53, column: 9)
!1932 = !DILocation(line: 52, column: 36, scope: !1930)
!1933 = !DILocation(line: 52, column: 41, scope: !1930)
!1934 = !DILocation(line: 52, column: 19, scope: !1930)
!1935 = !DILocalVariable(name: "tmp___0", scope: !1859, file: !1860, line: 45, type: !91)
!1936 = !DILocation(line: 52, column: 29, scope: !1937)
!1937 = distinct !DILexicalBlock(scope: !1931, file: !1860, line: 54, column: 9)
!1938 = !DILocation(line: 52, column: 40, scope: !1937)
!1939 = !DILocation(line: 52, column: 63, scope: !1937)
!1940 = !DILocation(line: 52, column: 47, scope: !1937)
!1941 = !DILocation(line: 52, column: 45, scope: !1937)
!1942 = !DILocation(line: 52, column: 70, scope: !1937)
!1943 = !DILocation(line: 52, column: 19, scope: !1937)
!1944 = !DILocalVariable(name: "tmp___1", scope: !1859, file: !1860, line: 46, type: !91)
!1945 = !DILocation(line: 52, column: 22, scope: !1931)
!1946 = !DILocation(line: 52, column: 31, scope: !1931)
!1947 = !DILocation(line: 52, column: 42, scope: !1931)
!1948 = !DILocalVariable(name: "xd", scope: !1859, file: !1860, line: 44, type: !91)
!1949 = !DILocation(line: 53, column: 19, scope: !1950)
!1950 = distinct !DILexicalBlock(scope: !1931, file: !1860, line: 53, column: 9)
!1951 = !DILocalVariable(name: "tmp___2", scope: !1859, file: !1860, line: 48, type: !91)
!1952 = !DILocation(line: 53, column: 13, scope: !1931)
!1953 = !DILocalVariable(name: "x", scope: !1859, file: !1860, line: 47, type: !90)
!1954 = !DILocation(line: 54, column: 16, scope: !1931)
!1955 = !DILocation(line: 54, column: 13, scope: !1931)
!1956 = !DILocation(line: 51, column: 11, scope: !1931)
!1957 = distinct !{!1957, !1918, !1958}
!1958 = !DILocation(line: 53, column: 7, scope: !1919)
!1959 = !DILocation(line: 55, column: 7, scope: !1919)
!1960 = !DILocation(line: 56, column: 30, scope: !1915)
!1961 = !DILocation(line: 56, column: 28, scope: !1915)
!1962 = !DILocation(line: 56, column: 14, scope: !1915)
!1963 = !DILocalVariable(name: "corr", scope: !1859, file: !1860, line: 40, type: !15)
!1964 = !DILocation(line: 57, column: 22, scope: !1915)
!1965 = !DILocation(line: 57, column: 36, scope: !1915)
!1966 = !DILocation(line: 57, column: 20, scope: !1915)
!1967 = !DILocation(line: 57, column: 13, scope: !1915)
!1968 = !DILocation(line: 58, column: 15, scope: !1915)
!1969 = !DILocation(line: 49, column: 16, scope: !1970)
!1970 = distinct !DILexicalBlock(scope: !1915, file: !1860, line: 49, column: 11)
!1971 = !DILocation(line: 49, column: 11, scope: !1915)
!1972 = !DILocalVariable(name: "tmp___3", scope: !1859, file: !1860, line: 49, type: !15)
!1973 = !DILocation(line: 49, column: 15, scope: !1974)
!1974 = distinct !DILexicalBlock(scope: !1970, file: !1860, line: 49, column: 23)
!1975 = !DILocation(line: 49, column: 24, scope: !1976)
!1976 = distinct !DILexicalBlock(scope: !1974, file: !1860, line: 49, column: 13)
!1977 = !DILocation(line: 49, column: 13, scope: !1974)
!1978 = !DILocation(line: 49, column: 11, scope: !1979)
!1979 = distinct !DILexicalBlock(scope: !1976, file: !1860, line: 49, column: 32)
!1980 = !DILocation(line: 51, column: 7, scope: !1974)
!1981 = !DILocation(line: 49, column: 9, scope: !1982)
!1982 = distinct !DILexicalBlock(scope: !1970, file: !1860, line: 51, column: 14)
!1983 = distinct !{!1983, !1909, !1984}
!1984 = !DILocation(line: 51, column: 5, scope: !1910)
!1985 = !DILocation(line: 53, column: 5, scope: !1910)
!1986 = !DILocation(line: 62, column: 9, scope: !1901)
!1987 = !DILocation(line: 62, column: 13, scope: !1901)
!1988 = !DILocation(line: 62, column: 5, scope: !1989)
!1989 = distinct !DILexicalBlock(scope: !1990, file: !1860, line: 64, column: 5)
!1990 = distinct !DILexicalBlock(scope: !1901, file: !1860, line: 63, column: 5)
!1991 = !DILocation(line: 62, column: 15, scope: !1989)
!1992 = !DILocation(line: 62, column: 16, scope: !1993)
!1993 = distinct !DILexicalBlock(scope: !1994, file: !1860, line: 62, column: 11)
!1994 = distinct !DILexicalBlock(scope: !1989, file: !1860, line: 62, column: 15)
!1995 = !DILocation(line: 62, column: 11, scope: !1994)
!1996 = !DILocation(line: 62, column: 9, scope: !1997)
!1997 = distinct !DILexicalBlock(scope: !1993, file: !1860, line: 62, column: 23)
!1998 = !DILocation(line: 63, column: 23, scope: !1999)
!1999 = distinct !DILexicalBlock(scope: !2000, file: !1860, line: 65, column: 7)
!2000 = distinct !DILexicalBlock(scope: !1994, file: !1860, line: 64, column: 7)
!2001 = !DILocation(line: 63, column: 34, scope: !1999)
!2002 = !DILocation(line: 63, column: 39, scope: !1999)
!2003 = !DILocation(line: 63, column: 17, scope: !1999)
!2004 = !DILocalVariable(name: "tmp___4", scope: !1859, file: !1860, line: 51, type: !91)
!2005 = !DILocation(line: 63, column: 27, scope: !2006)
!2006 = distinct !DILexicalBlock(scope: !2000, file: !1860, line: 65, column: 7)
!2007 = !DILocation(line: 63, column: 38, scope: !2006)
!2008 = !DILocation(line: 63, column: 61, scope: !2006)
!2009 = !DILocation(line: 63, column: 45, scope: !2006)
!2010 = !DILocation(line: 63, column: 43, scope: !2006)
!2011 = !DILocation(line: 63, column: 68, scope: !2006)
!2012 = !DILocation(line: 63, column: 17, scope: !2006)
!2013 = !DILocalVariable(name: "tmp___5", scope: !1859, file: !1860, line: 52, type: !91)
!2014 = !DILocation(line: 63, column: 24, scope: !2000)
!2015 = !DILocation(line: 63, column: 33, scope: !2000)
!2016 = !DILocation(line: 63, column: 44, scope: !2000)
!2017 = !DILocalVariable(name: "xd___0", scope: !1859, file: !1860, line: 50, type: !91)
!2018 = !DILocation(line: 64, column: 17, scope: !2019)
!2019 = distinct !DILexicalBlock(scope: !2000, file: !1860, line: 64, column: 7)
!2020 = !DILocalVariable(name: "tmp___6", scope: !1859, file: !1860, line: 54, type: !91)
!2021 = !DILocation(line: 64, column: 15, scope: !2000)
!2022 = !DILocalVariable(name: "x___0", scope: !1859, file: !1860, line: 53, type: !90)
!2023 = !DILocalVariable(name: "tmp___7", scope: !1859, file: !1860, line: 55, type: !89)
!2024 = !DILocation(line: 65, column: 11, scope: !2000)
!2025 = !DILocation(line: 65, column: 16, scope: !2000)
!2026 = !DILocation(line: 66, column: 14, scope: !2000)
!2027 = !DILocation(line: 66, column: 11, scope: !2000)
!2028 = !DILocation(line: 62, column: 9, scope: !2000)
!2029 = distinct !{!2029, !1988, !2030}
!2030 = !DILocation(line: 64, column: 5, scope: !1989)
!2031 = !DILocation(line: 66, column: 5, scope: !1989)
!2032 = !DILocation(line: 68, column: 42, scope: !1901)
!2033 = !DILocation(line: 68, column: 36, scope: !1901)
!2034 = !DILocation(line: 68, column: 27, scope: !1901)
!2035 = !DILocation(line: 68, column: 58, scope: !1901)
!2036 = !DILocation(line: 68, column: 56, scope: !1901)
!2037 = !DILocation(line: 68, column: 47, scope: !1901)
!2038 = !DILocation(line: 68, column: 18, scope: !1901)
!2039 = !DILocation(line: 68, column: 11, scope: !1901)
!2040 = !DILocation(line: 68, column: 16, scope: !1901)
!2041 = !DILocation(line: 42, column: 16, scope: !1901)
!2042 = !DILocation(line: 42, column: 14, scope: !1901)
!2043 = !DILocation(line: 42, column: 7, scope: !1901)
!2044 = distinct !{!2044, !1893, !2045}
!2045 = !DILocation(line: 43, column: 3, scope: !1894)
!2046 = !DILocation(line: 45, column: 3, scope: !1894)
!2047 = !DILocation(line: 71, column: 3, scope: !1869)
!2048 = !DILocation(line: 73, column: 1, scope: !1859)
!2049 = distinct !DISubprogram(name: "sinc", scope: !1860, file: !1860, line: 14, type: !2050, scopeLine: 15, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !666)
!2050 = !DISubroutineType(types: !2051)
!2051 = !{!91, !91}
!2052 = !DILocalVariable(name: "x", arg: 1, scope: !2049, file: !1860, line: 14, type: !91)
!2053 = !DILocation(line: 0, scope: !2049)
!2054 = !DILocation(line: 16, column: 30, scope: !2055)
!2055 = distinct !DILexicalBlock(scope: !2049, file: !1860, line: 19, column: 3)
!2056 = !DILocalVariable(name: "a", scope: !2049, file: !1860, line: 16, type: !91)
!2057 = !DILocation(line: 18, column: 9, scope: !2058)
!2058 = distinct !DILexicalBlock(scope: !2055, file: !1860, line: 18, column: 7)
!2059 = !DILocation(line: 18, column: 7, scope: !2055)
!2060 = !DILocation(line: 18, column: 5, scope: !2061)
!2061 = distinct !DILexicalBlock(scope: !2058, file: !1860, line: 18, column: 17)
!2062 = !DILocation(line: 20, column: 9, scope: !2063)
!2063 = distinct !DILexicalBlock(scope: !2064, file: !1860, line: 21, column: 3)
!2064 = distinct !DILexicalBlock(scope: !2055, file: !1860, line: 20, column: 3)
!2065 = !DILocalVariable(name: "tmp", scope: !2049, file: !1860, line: 17, type: !91)
!2066 = !DILocation(line: 20, column: 15, scope: !2055)
!2067 = !DILocation(line: 20, column: 3, scope: !2055)
!2068 = !DILocation(line: 0, scope: !2055)
!2069 = !DILocation(line: 22, column: 1, scope: !2049)
!2070 = distinct !DISubprogram(name: "blackman", scope: !1860, file: !1860, line: 23, type: !2071, scopeLine: 24, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !666)
!2071 = !DISubroutineType(types: !2072)
!2072 = !{!91, !91, !91}
!2073 = !DILocalVariable(name: "n", arg: 1, scope: !2070, file: !1860, line: 23, type: !91)
!2074 = !DILocation(line: 0, scope: !2070)
!2075 = !DILocalVariable(name: "m", arg: 2, scope: !2070, file: !1860, line: 23, type: !91)
!2076 = !DILocation(line: 25, column: 26, scope: !2077)
!2077 = distinct !DILexicalBlock(scope: !2078, file: !1860, line: 30, column: 3)
!2078 = distinct !DILexicalBlock(scope: !2079, file: !1860, line: 29, column: 3)
!2079 = distinct !DILexicalBlock(scope: !2070, file: !1860, line: 28, column: 3)
!2080 = !DILocation(line: 25, column: 31, scope: !2077)
!2081 = !DILocation(line: 25, column: 57, scope: !2077)
!2082 = !DILocation(line: 25, column: 9, scope: !2077)
!2083 = !DILocalVariable(name: "tmp", scope: !2070, file: !1860, line: 25, type: !91)
!2084 = !DILocation(line: 25, column: 30, scope: !2085)
!2085 = distinct !DILexicalBlock(scope: !2078, file: !1860, line: 27, column: 3)
!2086 = !DILocation(line: 25, column: 35, scope: !2085)
!2087 = !DILocation(line: 25, column: 61, scope: !2085)
!2088 = !DILocation(line: 25, column: 13, scope: !2085)
!2089 = !DILocalVariable(name: "tmp___0", scope: !2070, file: !1860, line: 26, type: !91)
!2090 = !DILocation(line: 25, column: 23, scope: !2079)
!2091 = !DILocation(line: 25, column: 17, scope: !2079)
!2092 = !DILocation(line: 25, column: 37, scope: !2079)
!2093 = !DILocation(line: 25, column: 30, scope: !2079)
!2094 = !DILocation(line: 25, column: 3, scope: !2079)
!2095 = distinct !DISubprogram(name: "gbs_crc32", scope: !368, file: !368, line: 41, type: !2096, scopeLine: 43, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !666)
!2096 = !DISubroutineType(types: !2097)
!2097 = !{!22, !22, !18, !76}
!2098 = !DILocalVariable(name: "crc", arg: 1, scope: !2095, file: !368, line: 41, type: !22)
!2099 = !DILocation(line: 0, scope: !2095)
!2100 = !DILocalVariable(name: "buf___3", arg: 2, scope: !2095, file: !368, line: 41, type: !18)
!2101 = !DILocalVariable(name: "len", arg: 3, scope: !2095, file: !368, line: 42, type: !76)
!2102 = !DILocation(line: 42, column: 7, scope: !2103)
!2103 = distinct !DILexicalBlock(scope: !2104, file: !368, line: 42, column: 7)
!2104 = distinct !DILexicalBlock(scope: !2095, file: !368, line: 47, column: 3)
!2105 = !DILocation(line: 42, column: 22, scope: !2103)
!2106 = !DILocation(line: 42, column: 7, scope: !2104)
!2107 = !DILocation(line: 43, column: 5, scope: !2108)
!2108 = distinct !DILexicalBlock(scope: !2109, file: !368, line: 44, column: 5)
!2109 = distinct !DILexicalBlock(scope: !2110, file: !368, line: 43, column: 5)
!2110 = distinct !DILexicalBlock(scope: !2103, file: !368, line: 42, column: 30)
!2111 = !DILocation(line: 46, column: 3, scope: !2110)
!2112 = !DILocation(line: 44, column: 7, scope: !2104)
!2113 = !DILocation(line: 45, column: 3, scope: !2114)
!2114 = distinct !DILexicalBlock(scope: !2115, file: !368, line: 46, column: 3)
!2115 = distinct !DILexicalBlock(scope: !2104, file: !368, line: 45, column: 3)
!2116 = !DILocation(line: 0, scope: !2104)
!2117 = !DILocation(line: 45, column: 13, scope: !2114)
!2118 = !DILocalVariable(name: "tmp___0", scope: !2095, file: !368, line: 45, type: !76)
!2119 = !DILocation(line: 45, column: 9, scope: !2120)
!2120 = distinct !DILexicalBlock(scope: !2114, file: !368, line: 45, column: 13)
!2121 = !DILocation(line: 45, column: 11, scope: !2122)
!2122 = distinct !DILexicalBlock(scope: !2120, file: !368, line: 45, column: 9)
!2123 = !DILocation(line: 45, column: 7, scope: !2124)
!2124 = distinct !DILexicalBlock(scope: !2122, file: !368, line: 45, column: 20)
!2125 = !DILocalVariable(name: "tmp", scope: !2095, file: !368, line: 44, type: !18)
!2126 = !DILocation(line: 46, column: 13, scope: !2120)
!2127 = !DILocation(line: 46, column: 16, scope: !2120)
!2128 = !DILocation(line: 46, column: 74, scope: !2120)
!2129 = !DILocation(line: 46, column: 41, scope: !2120)
!2130 = !DILocation(line: 46, column: 39, scope: !2120)
!2131 = !DILocation(line: 46, column: 81, scope: !2120)
!2132 = !DILocation(line: 46, column: 24, scope: !2120)
!2133 = !DILocation(line: 46, column: 22, scope: !2120)
!2134 = distinct !{!2134, !2113, !2135}
!2135 = !DILocation(line: 47, column: 3, scope: !2114)
!2136 = !DILocation(line: 49, column: 3, scope: !2114)
!2137 = !DILocation(line: 47, column: 15, scope: !2104)
!2138 = !DILocation(line: 47, column: 3, scope: !2104)
!2139 = distinct !DISubprogram(name: "make_crc_table", scope: !368, file: !368, line: 20, type: !272, scopeLine: 21, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !666)
!2140 = !DILocalVariable(name: "h", scope: !2139, file: !368, line: 24, type: !22)
!2141 = !DILocation(line: 0, scope: !2139)
!2142 = !DILocation(line: 22, column: 16, scope: !2143)
!2143 = distinct !DILexicalBlock(scope: !2139, file: !368, line: 27, column: 3)
!2144 = !DILocalVariable(name: "i", scope: !2139, file: !368, line: 22, type: !22)
!2145 = !DILocation(line: 23, column: 3, scope: !2146)
!2146 = distinct !DILexicalBlock(scope: !2147, file: !368, line: 25, column: 3)
!2147 = distinct !DILexicalBlock(scope: !2143, file: !368, line: 24, column: 3)
!2148 = !DILocation(line: 0, scope: !2143)
!2149 = !DILocation(line: 23, column: 13, scope: !2146)
!2150 = !DILocation(line: 23, column: 11, scope: !2151)
!2151 = distinct !DILexicalBlock(scope: !2152, file: !368, line: 23, column: 9)
!2152 = distinct !DILexicalBlock(scope: !2146, file: !368, line: 23, column: 13)
!2153 = !DILocation(line: 23, column: 9, scope: !2152)
!2154 = !DILocation(line: 23, column: 7, scope: !2155)
!2155 = distinct !DILexicalBlock(scope: !2151, file: !368, line: 23, column: 14)
!2156 = !DILocation(line: 24, column: 11, scope: !2157)
!2157 = distinct !DILexicalBlock(scope: !2152, file: !368, line: 24, column: 9)
!2158 = !DILocation(line: 24, column: 9, scope: !2152)
!2159 = !DILocalVariable(name: "tmp", scope: !2139, file: !368, line: 25, type: !22)
!2160 = !DILocation(line: 25, column: 5, scope: !2161)
!2161 = distinct !DILexicalBlock(scope: !2157, file: !368, line: 24, column: 18)
!2162 = !DILocation(line: 0, scope: !2157)
!2163 = !DILocation(line: 24, column: 12, scope: !2152)
!2164 = !DILocation(line: 24, column: 18, scope: !2152)
!2165 = !DILocalVariable(name: "j", scope: !2139, file: !368, line: 23, type: !22)
!2166 = !DILocation(line: 26, column: 5, scope: !2167)
!2167 = distinct !DILexicalBlock(scope: !2168, file: !368, line: 28, column: 5)
!2168 = distinct !DILexicalBlock(scope: !2152, file: !368, line: 27, column: 5)
!2169 = !DILocation(line: 0, scope: !2152)
!2170 = !DILocation(line: 26, column: 15, scope: !2167)
!2171 = !DILocation(line: 26, column: 16, scope: !2172)
!2172 = distinct !DILexicalBlock(scope: !2173, file: !368, line: 26, column: 11)
!2173 = distinct !DILexicalBlock(scope: !2167, file: !368, line: 26, column: 15)
!2174 = !DILocation(line: 26, column: 11, scope: !2173)
!2175 = !DILocation(line: 26, column: 9, scope: !2176)
!2176 = distinct !DILexicalBlock(scope: !2172, file: !368, line: 26, column: 26)
!2177 = !DILocation(line: 27, column: 26, scope: !2173)
!2178 = !DILocation(line: 27, column: 39, scope: !2173)
!2179 = !DILocation(line: 27, column: 19, scope: !2173)
!2180 = !DILocation(line: 27, column: 7, scope: !2173)
!2181 = !DILocation(line: 27, column: 24, scope: !2173)
!2182 = !DILocation(line: 26, column: 16, scope: !2173)
!2183 = !DILocation(line: 26, column: 9, scope: !2173)
!2184 = distinct !{!2184, !2166, !2185}
!2185 = !DILocation(line: 27, column: 5, scope: !2167)
!2186 = !DILocation(line: 29, column: 5, scope: !2167)
!2187 = !DILocation(line: 23, column: 7, scope: !2152)
!2188 = distinct !{!2188, !2145, !2189}
!2189 = !DILocation(line: 24, column: 3, scope: !2146)
!2190 = !DILocation(line: 26, column: 3, scope: !2146)
!2191 = !DILocation(line: 29, column: 3, scope: !2143)
!2192 = distinct !DISubprogram(name: "gbs_init", scope: !511, file: !511, line: 95, type: !2193, scopeLine: 96, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !666)
!2193 = !DISubroutineType(types: !2194)
!2194 = !{!15, !96, !15}
!2195 = !DILocalVariable(name: "gbs", arg: 1, scope: !2192, file: !511, line: 95, type: !96)
!2196 = !DILocation(line: 0, scope: !2192)
!2197 = !DILocalVariable(name: "subsong", arg: 2, scope: !2192, file: !511, line: 95, type: !15)
!2198 = !DILocalVariable(name: "__cil_tmp4", scope: !2192, file: !511, line: 98, type: !16)
!2199 = !DILocation(line: 98, column: 9, scope: !2192)
!2200 = !DILocation(line: 97, column: 18, scope: !2201)
!2201 = distinct !DILexicalBlock(scope: !2202, file: !511, line: 102, column: 3)
!2202 = distinct !DILexicalBlock(scope: !2203, file: !511, line: 101, column: 3)
!2203 = distinct !DILexicalBlock(scope: !2192, file: !511, line: 100, column: 3)
!2204 = !DILocation(line: 97, column: 39, scope: !2201)
!2205 = !DILocation(line: 97, column: 23, scope: !2201)
!2206 = !DILocation(line: 97, column: 3, scope: !2201)
!2207 = !DILocation(line: 99, column: 15, scope: !2208)
!2208 = distinct !DILexicalBlock(scope: !2203, file: !511, line: 99, column: 7)
!2209 = !DILocation(line: 99, column: 7, scope: !2203)
!2210 = !DILocation(line: 99, column: 20, scope: !2211)
!2211 = distinct !DILexicalBlock(scope: !2208, file: !511, line: 99, column: 23)
!2212 = !DILocation(line: 99, column: 32, scope: !2211)
!2213 = !DILocation(line: 100, column: 3, scope: !2211)
!2214 = !DILocation(line: 100, column: 23, scope: !2215)
!2215 = distinct !DILexicalBlock(scope: !2203, file: !511, line: 100, column: 7)
!2216 = !DILocation(line: 100, column: 15, scope: !2215)
!2217 = !DILocation(line: 100, column: 7, scope: !2203)
!2218 = !DILocation(line: 101, column: 11, scope: !2219)
!2219 = distinct !DILexicalBlock(scope: !2220, file: !511, line: 102, column: 5)
!2220 = distinct !DILexicalBlock(scope: !2221, file: !511, line: 101, column: 5)
!2221 = distinct !DILexicalBlock(scope: !2215, file: !511, line: 100, column: 30)
!2222 = !DILocalVariable(name: "tmp", scope: !2192, file: !511, line: 97, type: !16)
!2223 = !DILocation(line: 101, column: 38, scope: !2224)
!2224 = distinct !DILexicalBlock(scope: !2220, file: !511, line: 103, column: 5)
!2225 = !DILocation(line: 102, column: 18, scope: !2224)
!2226 = !DILocation(line: 102, column: 24, scope: !2224)
!2227 = !DILocation(line: 101, column: 5, scope: !2224)
!2228 = !DILocation(line: 102, column: 5, scope: !2221)
!2229 = !DILocation(line: 105, column: 8, scope: !2203)
!2230 = !DILocation(line: 105, column: 16, scope: !2203)
!2231 = !DILocation(line: 106, column: 40, scope: !2203)
!2232 = !DILocation(line: 107, column: 46, scope: !2203)
!2233 = !DILocation(line: 107, column: 39, scope: !2203)
!2234 = !DILocation(line: 108, column: 64, scope: !2203)
!2235 = !DILocation(line: 108, column: 53, scope: !2203)
!2236 = !DILocation(line: 108, column: 69, scope: !2203)
!2237 = !DILocation(line: 108, column: 41, scope: !2203)
!2238 = !DILocation(line: 108, column: 39, scope: !2203)
!2239 = !DILocation(line: 109, column: 21, scope: !2203)
!2240 = !DILocation(line: 109, column: 19, scope: !2203)
!2241 = !DILocation(line: 111, column: 8, scope: !2203)
!2242 = !DILocation(line: 111, column: 14, scope: !2203)
!2243 = !DILocation(line: 113, column: 3, scope: !2203)
!2244 = !DILocation(line: 0, scope: !2203)
!2245 = !DILocation(line: 115, column: 1, scope: !2192)
!2246 = distinct !DISubprogram(name: "gbhw_init", scope: !311, file: !311, line: 604, type: !2247, scopeLine: 605, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !666)
!2247 = !DISubroutineType(types: !2248)
!2248 = !{null, !131, !83}
!2249 = !DILocalVariable(name: "rombuf", arg: 1, scope: !2246, file: !311, line: 604, type: !131)
!2250 = !DILocation(line: 0, scope: !2246)
!2251 = !DILocalVariable(name: "size", arg: 2, scope: !2246, file: !311, line: 604, type: !83)
!2252 = !DILocalVariable(name: "mute_tmp", scope: !2246, file: !311, line: 607, type: !473)
!2253 = !DILocation(line: 607, column: 7, scope: !2246)
!2254 = !DILocalVariable(name: "__cil_tmp5", scope: !2246, file: !311, line: 608, type: !23)
!2255 = !DILocation(line: 608, column: 9, scope: !2246)
!2256 = !DILocalVariable(name: "i", scope: !2246, file: !311, line: 606, type: !15)
!2257 = !DILocation(line: 609, column: 3, scope: !2258)
!2258 = distinct !DILexicalBlock(scope: !2259, file: !311, line: 611, column: 3)
!2259 = distinct !DILexicalBlock(scope: !2260, file: !311, line: 610, column: 3)
!2260 = distinct !DILexicalBlock(scope: !2246, file: !311, line: 610, column: 3)
!2261 = !DILocation(line: 0, scope: !2260)
!2262 = !DILocation(line: 609, column: 13, scope: !2258)
!2263 = !DILocation(line: 609, column: 14, scope: !2264)
!2264 = distinct !DILexicalBlock(scope: !2265, file: !311, line: 609, column: 9)
!2265 = distinct !DILexicalBlock(scope: !2258, file: !311, line: 609, column: 13)
!2266 = !DILocation(line: 609, column: 9, scope: !2265)
!2267 = !DILocation(line: 609, column: 7, scope: !2268)
!2268 = distinct !DILexicalBlock(scope: !2264, file: !311, line: 609, column: 21)
!2269 = !DILocation(line: 610, column: 25, scope: !2265)
!2270 = !DILocation(line: 610, column: 36, scope: !2265)
!2271 = !DILocation(line: 610, column: 19, scope: !2265)
!2272 = !DILocation(line: 610, column: 5, scope: !2265)
!2273 = !DILocation(line: 610, column: 17, scope: !2265)
!2274 = !DILocation(line: 609, column: 7, scope: !2265)
!2275 = distinct !{!2275, !2257, !2276}
!2276 = !DILocation(line: 610, column: 3, scope: !2258)
!2277 = !DILocation(line: 612, column: 3, scope: !2258)
!2278 = !DILocation(line: 611, column: 7, scope: !2279)
!2279 = distinct !DILexicalBlock(scope: !2260, file: !311, line: 611, column: 7)
!2280 = !DILocation(line: 611, column: 7, scope: !2260)
!2281 = !DILocation(line: 612, column: 23, scope: !2282)
!2282 = distinct !DILexicalBlock(scope: !2283, file: !311, line: 613, column: 5)
!2283 = distinct !DILexicalBlock(scope: !2284, file: !311, line: 612, column: 5)
!2284 = distinct !DILexicalBlock(scope: !2279, file: !311, line: 611, column: 15)
!2285 = !DILocation(line: 612, column: 5, scope: !2282)
!2286 = !DILocation(line: 615, column: 3, scope: !2284)
!2287 = !DILocation(line: 613, column: 7, scope: !2260)
!2288 = !DILocation(line: 614, column: 28, scope: !2260)
!2289 = !DILocation(line: 614, column: 38, scope: !2260)
!2290 = !DILocation(line: 614, column: 47, scope: !2260)
!2291 = !DILocation(line: 614, column: 14, scope: !2260)
!2292 = !DILocation(line: 614, column: 12, scope: !2260)
!2293 = !DILocation(line: 615, column: 11, scope: !2260)
!2294 = !DILocation(line: 616, column: 17, scope: !2260)
!2295 = !DILocation(line: 617, column: 15, scope: !2260)
!2296 = !DILocation(line: 618, column: 7, scope: !2297)
!2297 = distinct !DILexicalBlock(scope: !2260, file: !311, line: 618, column: 7)
!2298 = !DILocation(line: 618, column: 7, scope: !2260)
!2299 = !DILocation(line: 619, column: 5, scope: !2300)
!2300 = distinct !DILexicalBlock(scope: !2297, file: !311, line: 618, column: 17)
!2301 = !DILocation(line: 619, column: 15, scope: !2300)
!2302 = !DILocation(line: 619, column: 19, scope: !2300)
!2303 = !DILocation(line: 620, column: 5, scope: !2300)
!2304 = !DILocation(line: 620, column: 15, scope: !2300)
!2305 = !DILocation(line: 620, column: 21, scope: !2300)
!2306 = !DILocation(line: 621, column: 5, scope: !2300)
!2307 = !DILocation(line: 621, column: 15, scope: !2300)
!2308 = !DILocation(line: 621, column: 21, scope: !2300)
!2309 = !DILocation(line: 622, column: 3, scope: !2300)
!2310 = !DILocation(line: 623, column: 11, scope: !2260)
!2311 = !DILocation(line: 623, column: 13, scope: !2260)
!2312 = !DILocation(line: 624, column: 11, scope: !2260)
!2313 = !DILocation(line: 624, column: 13, scope: !2260)
!2314 = !DILocation(line: 625, column: 3, scope: !2315)
!2315 = distinct !DILexicalBlock(scope: !2316, file: !311, line: 627, column: 3)
!2316 = distinct !DILexicalBlock(scope: !2260, file: !311, line: 626, column: 3)
!2317 = !DILocation(line: 625, column: 13, scope: !2315)
!2318 = !DILocation(line: 625, column: 14, scope: !2319)
!2319 = distinct !DILexicalBlock(scope: !2320, file: !311, line: 625, column: 9)
!2320 = distinct !DILexicalBlock(scope: !2315, file: !311, line: 625, column: 13)
!2321 = !DILocation(line: 625, column: 9, scope: !2320)
!2322 = !DILocation(line: 625, column: 7, scope: !2323)
!2323 = distinct !DILexicalBlock(scope: !2319, file: !311, line: 625, column: 21)
!2324 = !DILocation(line: 626, column: 5, scope: !2320)
!2325 = !DILocation(line: 626, column: 16, scope: !2320)
!2326 = !DILocation(line: 626, column: 25, scope: !2320)
!2327 = !DILocation(line: 627, column: 5, scope: !2320)
!2328 = !DILocation(line: 627, column: 16, scope: !2320)
!2329 = !DILocation(line: 627, column: 23, scope: !2320)
!2330 = !DILocation(line: 628, column: 5, scope: !2320)
!2331 = !DILocation(line: 628, column: 16, scope: !2320)
!2332 = !DILocation(line: 628, column: 23, scope: !2320)
!2333 = !DILocation(line: 629, column: 30, scope: !2320)
!2334 = !DILocation(line: 629, column: 23, scope: !2320)
!2335 = !DILocation(line: 629, column: 5, scope: !2320)
!2336 = !DILocation(line: 629, column: 16, scope: !2320)
!2337 = !DILocation(line: 629, column: 21, scope: !2320)
!2338 = !DILocation(line: 625, column: 7, scope: !2320)
!2339 = distinct !{!2339, !2314, !2340}
!2340 = !DILocation(line: 626, column: 3, scope: !2315)
!2341 = !DILocation(line: 628, column: 3, scope: !2315)
!2342 = !DILocation(line: 631, column: 3, scope: !2343)
!2343 = distinct !DILexicalBlock(scope: !2344, file: !311, line: 632, column: 3)
!2344 = distinct !DILexicalBlock(scope: !2260, file: !311, line: 631, column: 3)
!2345 = !DILocation(line: 632, column: 3, scope: !2346)
!2346 = distinct !DILexicalBlock(scope: !2344, file: !311, line: 633, column: 3)
!2347 = !DILocation(line: 633, column: 3, scope: !2348)
!2348 = distinct !DILexicalBlock(scope: !2344, file: !311, line: 634, column: 3)
!2349 = !DILocation(line: 634, column: 3, scope: !2350)
!2350 = distinct !DILexicalBlock(scope: !2344, file: !311, line: 635, column: 3)
!2351 = !DILocation(line: 636, column: 14, scope: !2344)
!2352 = !DILocation(line: 638, column: 3, scope: !2353)
!2353 = distinct !DILexicalBlock(scope: !2344, file: !311, line: 637, column: 3)
!2354 = !DILocation(line: 639, column: 3, scope: !2355)
!2355 = distinct !DILexicalBlock(scope: !2344, file: !311, line: 640, column: 3)
!2356 = !DILocation(line: 640, column: 3, scope: !2357)
!2357 = distinct !DILexicalBlock(scope: !2344, file: !311, line: 641, column: 3)
!2358 = !DILocation(line: 641, column: 3, scope: !2359)
!2359 = distinct !DILexicalBlock(scope: !2344, file: !311, line: 642, column: 3)
!2360 = !DILocation(line: 642, column: 3, scope: !2361)
!2361 = distinct !DILexicalBlock(scope: !2344, file: !311, line: 643, column: 3)
!2362 = !DILocation(line: 643, column: 3, scope: !2363)
!2363 = distinct !DILexicalBlock(scope: !2344, file: !311, line: 644, column: 3)
!2364 = !DILocation(line: 645, column: 7, scope: !2365)
!2365 = distinct !DILexicalBlock(scope: !2260, file: !311, line: 645, column: 7)
!2366 = !DILocation(line: 645, column: 7, scope: !2260)
!2367 = !DILocation(line: 646, column: 18, scope: !2368)
!2368 = distinct !DILexicalBlock(scope: !2369, file: !311, line: 647, column: 5)
!2369 = distinct !DILexicalBlock(scope: !2370, file: !311, line: 646, column: 5)
!2370 = distinct !DILexicalBlock(scope: !2365, file: !311, line: 645, column: 21)
!2371 = !DILocation(line: 646, column: 10, scope: !2368)
!2372 = !DILocation(line: 646, column: 5, scope: !2368)
!2373 = !DILocation(line: 649, column: 3, scope: !2370)
!2374 = !DILocation(line: 647, column: 33, scope: !2375)
!2375 = distinct !DILexicalBlock(scope: !2376, file: !311, line: 651, column: 3)
!2376 = distinct !DILexicalBlock(scope: !2260, file: !311, line: 650, column: 3)
!2377 = !DILocation(line: 647, column: 50, scope: !2375)
!2378 = !DILocation(line: 647, column: 67, scope: !2375)
!2379 = !DILocation(line: 647, column: 18, scope: !2375)
!2380 = !DILocation(line: 647, column: 16, scope: !2375)
!2381 = !DILocation(line: 648, column: 3, scope: !2260)
!2382 = distinct !DISubprogram(name: "gbs_set_nextsubsong_cb", scope: !511, file: !511, line: 116, type: !2383, scopeLine: 119, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !666)
!2383 = !DISubroutineType(types: !2384)
!2384 = !{null, !96, !147, !23}
!2385 = !DILocalVariable(name: "gbs", arg: 1, scope: !2382, file: !511, line: 116, type: !96)
!2386 = !DILocation(line: 0, scope: !2382)
!2387 = !DILocalVariable(name: "cb", arg: 2, scope: !2382, file: !511, line: 116, type: !147)
!2388 = !DILocalVariable(name: "priv", arg: 3, scope: !2382, file: !511, line: 118, type: !23)
!2389 = !DILocation(line: 118, column: 8, scope: !2390)
!2390 = distinct !DILexicalBlock(scope: !2382, file: !511, line: 122, column: 3)
!2391 = !DILocation(line: 118, column: 23, scope: !2390)
!2392 = !DILocation(line: 119, column: 8, scope: !2390)
!2393 = !DILocation(line: 119, column: 28, scope: !2390)
!2394 = !DILocation(line: 120, column: 3, scope: !2390)
!2395 = distinct !DISubprogram(name: "gbs_step", scope: !511, file: !511, line: 135, type: !2193, scopeLine: 136, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !666)
!2396 = !DILocalVariable(name: "gbs", arg: 1, scope: !2395, file: !511, line: 135, type: !96)
!2397 = !DILocation(line: 0, scope: !2395)
!2398 = !DILocalVariable(name: "time_to_work", arg: 2, scope: !2395, file: !511, line: 135, type: !15)
!2399 = !DILocation(line: 137, column: 9, scope: !2400)
!2400 = distinct !DILexicalBlock(scope: !2401, file: !511, line: 145, column: 3)
!2401 = distinct !DILexicalBlock(scope: !2402, file: !511, line: 144, column: 3)
!2402 = distinct !DILexicalBlock(scope: !2395, file: !511, line: 143, column: 3)
!2403 = !DILocalVariable(name: "tmp", scope: !2395, file: !511, line: 138, type: !15)
!2404 = !DILocalVariable(name: "cycles", scope: !2395, file: !511, line: 137, type: !15)
!2405 = !DILocation(line: 140, column: 14, scope: !2406)
!2406 = distinct !DILexicalBlock(scope: !2402, file: !511, line: 140, column: 7)
!2407 = !DILocation(line: 140, column: 7, scope: !2402)
!2408 = !DILocation(line: 141, column: 5, scope: !2409)
!2409 = distinct !DILexicalBlock(scope: !2406, file: !511, line: 140, column: 20)
!2410 = !DILocation(line: 144, column: 8, scope: !2411)
!2411 = distinct !DILexicalBlock(scope: !2402, file: !511, line: 143, column: 3)
!2412 = !DILocation(line: 144, column: 14, scope: !2411)
!2413 = !DILocation(line: 146, column: 25, scope: !2414)
!2414 = distinct !DILexicalBlock(scope: !2411, file: !511, line: 145, column: 3)
!2415 = !DILocation(line: 146, column: 38, scope: !2414)
!2416 = !DILocation(line: 146, column: 51, scope: !2414)
!2417 = !DILocation(line: 146, column: 64, scope: !2414)
!2418 = !DILocation(line: 146, column: 3, scope: !2414)
!2419 = !DILocation(line: 147, column: 21, scope: !2420)
!2420 = distinct !DILexicalBlock(scope: !2402, file: !511, line: 147, column: 7)
!2421 = !DILocation(line: 147, column: 10, scope: !2420)
!2422 = !DILocation(line: 147, column: 7, scope: !2420)
!2423 = !DILocation(line: 147, column: 40, scope: !2420)
!2424 = !DILocation(line: 147, column: 29, scope: !2420)
!2425 = !DILocation(line: 147, column: 27, scope: !2420)
!2426 = !DILocation(line: 147, column: 7, scope: !2402)
!2427 = !DILocation(line: 147, column: 42, scope: !2428)
!2428 = distinct !DILexicalBlock(scope: !2420, file: !511, line: 147, column: 46)
!2429 = !DILocation(line: 147, column: 31, scope: !2428)
!2430 = !DILocation(line: 147, column: 28, scope: !2428)
!2431 = !DILocation(line: 147, column: 17, scope: !2428)
!2432 = !DILocation(line: 147, column: 10, scope: !2428)
!2433 = !DILocation(line: 147, column: 15, scope: !2428)
!2434 = !DILocation(line: 148, column: 3, scope: !2428)
!2435 = !DILocation(line: 147, column: 22, scope: !2436)
!2436 = distinct !DILexicalBlock(scope: !2420, file: !511, line: 148, column: 10)
!2437 = !DILocation(line: 147, column: 10, scope: !2436)
!2438 = !DILocation(line: 147, column: 15, scope: !2436)
!2439 = !DILocation(line: 148, column: 21, scope: !2440)
!2440 = distinct !DILexicalBlock(scope: !2402, file: !511, line: 148, column: 7)
!2441 = !DILocation(line: 148, column: 10, scope: !2440)
!2442 = !DILocation(line: 148, column: 7, scope: !2440)
!2443 = !DILocation(line: 148, column: 40, scope: !2440)
!2444 = !DILocation(line: 148, column: 29, scope: !2440)
!2445 = !DILocation(line: 148, column: 27, scope: !2440)
!2446 = !DILocation(line: 148, column: 7, scope: !2402)
!2447 = !DILocation(line: 148, column: 42, scope: !2448)
!2448 = distinct !DILexicalBlock(scope: !2440, file: !511, line: 148, column: 46)
!2449 = !DILocation(line: 148, column: 31, scope: !2448)
!2450 = !DILocation(line: 148, column: 28, scope: !2448)
!2451 = !DILocation(line: 148, column: 17, scope: !2448)
!2452 = !DILocation(line: 148, column: 10, scope: !2448)
!2453 = !DILocation(line: 148, column: 15, scope: !2448)
!2454 = !DILocation(line: 149, column: 3, scope: !2448)
!2455 = !DILocation(line: 148, column: 22, scope: !2456)
!2456 = distinct !DILexicalBlock(scope: !2440, file: !511, line: 149, column: 10)
!2457 = !DILocation(line: 148, column: 10, scope: !2456)
!2458 = !DILocation(line: 148, column: 15, scope: !2456)
!2459 = !DILocation(line: 150, column: 27, scope: !2402)
!2460 = !DILocation(line: 150, column: 33, scope: !2402)
!2461 = !DILocalVariable(name: "time___0", scope: !2395, file: !511, line: 139, type: !15)
!2462 = !DILocation(line: 151, column: 12, scope: !2463)
!2463 = distinct !DILexicalBlock(scope: !2402, file: !511, line: 151, column: 7)
!2464 = !DILocation(line: 151, column: 7, scope: !2463)
!2465 = !DILocation(line: 151, column: 7, scope: !2402)
!2466 = !DILocation(line: 152, column: 20, scope: !2467)
!2467 = distinct !DILexicalBlock(scope: !2468, file: !511, line: 152, column: 9)
!2468 = distinct !DILexicalBlock(scope: !2463, file: !511, line: 151, column: 29)
!2469 = !DILocation(line: 152, column: 9, scope: !2467)
!2470 = !DILocation(line: 152, column: 39, scope: !2467)
!2471 = !DILocation(line: 152, column: 28, scope: !2467)
!2472 = !DILocation(line: 152, column: 25, scope: !2467)
!2473 = !DILocation(line: 152, column: 9, scope: !2468)
!2474 = !DILocation(line: 152, column: 22, scope: !2475)
!2475 = distinct !DILexicalBlock(scope: !2476, file: !511, line: 152, column: 11)
!2476 = distinct !DILexicalBlock(scope: !2467, file: !511, line: 152, column: 45)
!2477 = !DILocation(line: 152, column: 11, scope: !2475)
!2478 = !DILocation(line: 152, column: 41, scope: !2475)
!2479 = !DILocation(line: 152, column: 30, scope: !2475)
!2480 = !DILocation(line: 152, column: 27, scope: !2475)
!2481 = !DILocation(line: 152, column: 11, scope: !2476)
!2482 = !DILocation(line: 153, column: 18, scope: !2483)
!2483 = distinct !DILexicalBlock(scope: !2484, file: !511, line: 153, column: 13)
!2484 = distinct !DILexicalBlock(scope: !2475, file: !511, line: 152, column: 47)
!2485 = !DILocation(line: 153, column: 32, scope: !2483)
!2486 = !DILocation(line: 153, column: 13, scope: !2484)
!2487 = !DILocation(line: 154, column: 37, scope: !2488)
!2488 = distinct !DILexicalBlock(scope: !2483, file: !511, line: 153, column: 40)
!2489 = !DILocation(line: 154, column: 16, scope: !2488)
!2490 = !DILocation(line: 154, column: 30, scope: !2488)
!2491 = !DILocation(line: 155, column: 9, scope: !2488)
!2492 = !DILocation(line: 156, column: 7, scope: !2484)
!2493 = !DILocation(line: 155, column: 14, scope: !2494)
!2494 = distinct !DILexicalBlock(scope: !2475, file: !511, line: 156, column: 14)
!2495 = !DILocation(line: 155, column: 28, scope: !2494)
!2496 = !DILocation(line: 157, column: 5, scope: !2476)
!2497 = !DILocation(line: 155, column: 12, scope: !2498)
!2498 = distinct !DILexicalBlock(scope: !2467, file: !511, line: 157, column: 12)
!2499 = !DILocation(line: 155, column: 26, scope: !2498)
!2500 = !DILocation(line: 157, column: 3, scope: !2468)
!2501 = !DILocation(line: 158, column: 12, scope: !2502)
!2502 = distinct !DILexicalBlock(scope: !2402, file: !511, line: 158, column: 7)
!2503 = !DILocation(line: 158, column: 7, scope: !2502)
!2504 = !DILocation(line: 158, column: 7, scope: !2402)
!2505 = !DILocation(line: 158, column: 14, scope: !2506)
!2506 = distinct !DILexicalBlock(scope: !2507, file: !511, line: 158, column: 9)
!2507 = distinct !DILexicalBlock(scope: !2502, file: !511, line: 158, column: 21)
!2508 = !DILocation(line: 158, column: 9, scope: !2506)
!2509 = !DILocation(line: 158, column: 9, scope: !2507)
!2510 = !DILocation(line: 158, column: 29, scope: !2511)
!2511 = distinct !DILexicalBlock(scope: !2512, file: !511, line: 158, column: 11)
!2512 = distinct !DILexicalBlock(scope: !2506, file: !511, line: 158, column: 31)
!2513 = !DILocation(line: 158, column: 52, scope: !2511)
!2514 = !DILocation(line: 158, column: 45, scope: !2511)
!2515 = !DILocation(line: 158, column: 68, scope: !2511)
!2516 = !DILocation(line: 158, column: 61, scope: !2511)
!2517 = !DILocation(line: 158, column: 20, scope: !2511)
!2518 = !DILocation(line: 158, column: 11, scope: !2512)
!2519 = !DILocation(line: 160, column: 38, scope: !2520)
!2520 = distinct !DILexicalBlock(scope: !2521, file: !511, line: 160, column: 9)
!2521 = distinct !DILexicalBlock(scope: !2522, file: !511, line: 159, column: 9)
!2522 = distinct !DILexicalBlock(scope: !2511, file: !511, line: 158, column: 73)
!2523 = !DILocation(line: 160, column: 31, scope: !2520)
!2524 = !DILocation(line: 160, column: 9, scope: !2520)
!2525 = !DILocation(line: 163, column: 7, scope: !2522)
!2526 = !DILocation(line: 164, column: 5, scope: !2512)
!2527 = !DILocation(line: 165, column: 3, scope: !2507)
!2528 = !DILocation(line: 161, column: 12, scope: !2529)
!2529 = distinct !DILexicalBlock(scope: !2402, file: !511, line: 161, column: 7)
!2530 = !DILocation(line: 161, column: 7, scope: !2529)
!2531 = !DILocation(line: 161, column: 7, scope: !2402)
!2532 = !DILocation(line: 161, column: 26, scope: !2533)
!2533 = distinct !DILexicalBlock(scope: !2534, file: !511, line: 161, column: 9)
!2534 = distinct !DILexicalBlock(scope: !2529, file: !511, line: 161, column: 29)
!2535 = !DILocation(line: 161, column: 49, scope: !2533)
!2536 = !DILocation(line: 161, column: 42, scope: !2533)
!2537 = !DILocation(line: 161, column: 18, scope: !2533)
!2538 = !DILocation(line: 161, column: 9, scope: !2534)
!2539 = !DILocation(line: 163, column: 7, scope: !2540)
!2540 = distinct !DILexicalBlock(scope: !2541, file: !511, line: 163, column: 7)
!2541 = distinct !DILexicalBlock(scope: !2542, file: !511, line: 162, column: 7)
!2542 = distinct !DILexicalBlock(scope: !2533, file: !511, line: 161, column: 54)
!2543 = !DILocation(line: 166, column: 5, scope: !2542)
!2544 = !DILocation(line: 167, column: 3, scope: !2534)
!2545 = !DILocation(line: 165, column: 12, scope: !2546)
!2546 = distinct !DILexicalBlock(scope: !2402, file: !511, line: 165, column: 7)
!2547 = !DILocation(line: 165, column: 7, scope: !2546)
!2548 = !DILocation(line: 165, column: 7, scope: !2402)
!2549 = !DILocation(line: 165, column: 15, scope: !2550)
!2550 = distinct !DILexicalBlock(scope: !2551, file: !511, line: 165, column: 9)
!2551 = distinct !DILexicalBlock(scope: !2546, file: !511, line: 165, column: 27)
!2552 = !DILocation(line: 165, column: 28, scope: !2550)
!2553 = !DILocation(line: 165, column: 21, scope: !2550)
!2554 = !DILocation(line: 165, column: 43, scope: !2550)
!2555 = !DILocation(line: 165, column: 75, scope: !2550)
!2556 = !DILocation(line: 165, column: 55, scope: !2550)
!2557 = !DILocation(line: 165, column: 9, scope: !2551)
!2558 = !DILocation(line: 167, column: 17, scope: !2559)
!2559 = distinct !DILexicalBlock(scope: !2560, file: !511, line: 167, column: 11)
!2560 = distinct !DILexicalBlock(scope: !2550, file: !511, line: 165, column: 92)
!2561 = !DILocation(line: 167, column: 37, scope: !2559)
!2562 = !DILocation(line: 167, column: 30, scope: !2559)
!2563 = !DILocation(line: 167, column: 47, scope: !2559)
!2564 = !DILocation(line: 167, column: 51, scope: !2559)
!2565 = !DILocation(line: 167, column: 11, scope: !2560)
!2566 = !DILocation(line: 168, column: 69, scope: !2567)
!2567 = distinct !DILexicalBlock(scope: !2559, file: !511, line: 167, column: 58)
!2568 = !DILocation(line: 168, column: 75, scope: !2567)
!2569 = !DILocation(line: 168, column: 100, scope: !2567)
!2570 = !DILocation(line: 168, column: 51, scope: !2567)
!2571 = !DILocation(line: 168, column: 15, scope: !2567)
!2572 = !DILocation(line: 168, column: 35, scope: !2567)
!2573 = !DILocation(line: 168, column: 28, scope: !2567)
!2574 = !DILocation(line: 168, column: 45, scope: !2567)
!2575 = !DILocation(line: 168, column: 49, scope: !2567)
!2576 = !DILocation(line: 169, column: 7, scope: !2567)
!2577 = !DILocation(line: 170, column: 17, scope: !2578)
!2578 = distinct !DILexicalBlock(scope: !2579, file: !511, line: 171, column: 7)
!2579 = distinct !DILexicalBlock(scope: !2560, file: !511, line: 170, column: 7)
!2580 = !DILocalVariable(name: "tmp___0", scope: !2395, file: !511, line: 140, type: !15)
!2581 = !DILocation(line: 170, column: 7, scope: !2560)
!2582 = !DILocation(line: 172, column: 3, scope: !2551)
!2583 = !DILocation(line: 172, column: 12, scope: !2584)
!2584 = distinct !DILexicalBlock(scope: !2402, file: !511, line: 172, column: 7)
!2585 = !DILocation(line: 172, column: 7, scope: !2584)
!2586 = !DILocation(line: 172, column: 7, scope: !2402)
!2587 = !DILocation(line: 172, column: 26, scope: !2588)
!2588 = distinct !DILexicalBlock(scope: !2589, file: !511, line: 172, column: 9)
!2589 = distinct !DILexicalBlock(scope: !2584, file: !511, line: 172, column: 29)
!2590 = !DILocation(line: 172, column: 18, scope: !2588)
!2591 = !DILocation(line: 172, column: 9, scope: !2589)
!2592 = !DILocation(line: 173, column: 17, scope: !2593)
!2593 = distinct !DILexicalBlock(scope: !2594, file: !511, line: 174, column: 7)
!2594 = distinct !DILexicalBlock(scope: !2595, file: !511, line: 173, column: 7)
!2595 = distinct !DILexicalBlock(scope: !2588, file: !511, line: 172, column: 43)
!2596 = !DILocalVariable(name: "tmp___1", scope: !2395, file: !511, line: 141, type: !15)
!2597 = !DILocation(line: 173, column: 7, scope: !2595)
!2598 = !DILocation(line: 175, column: 3, scope: !2589)
!2599 = !DILocation(line: 175, column: 3, scope: !2402)
!2600 = !DILocation(line: 0, scope: !2402)
!2601 = !DILocation(line: 177, column: 1, scope: !2395)
!2602 = distinct !DISubprogram(name: "gbhw_step", scope: !311, file: !311, line: 654, type: !2603, scopeLine: 655, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !666)
!2603 = !DISubroutineType(types: !2604)
!2604 = !{!15, !15}
!2605 = !DILocalVariable(name: "time_to_work", arg: 1, scope: !2602, file: !311, line: 654, type: !15)
!2606 = !DILocation(line: 0, scope: !2602)
!2607 = !DILocalVariable(name: "cycles_total", scope: !2602, file: !311, line: 656, type: !15)
!2608 = !DILocation(line: 658, column: 7, scope: !2609)
!2609 = distinct !DILexicalBlock(scope: !2610, file: !311, line: 658, column: 7)
!2610 = distinct !DILexicalBlock(scope: !2602, file: !311, line: 662, column: 3)
!2611 = !DILocation(line: 658, column: 7, scope: !2610)
!2612 = !DILocation(line: 659, column: 41, scope: !2613)
!2613 = distinct !DILexicalBlock(scope: !2614, file: !311, line: 660, column: 5)
!2614 = distinct !DILexicalBlock(scope: !2615, file: !311, line: 659, column: 5)
!2615 = distinct !DILexicalBlock(scope: !2609, file: !311, line: 658, column: 21)
!2616 = !DILocation(line: 659, column: 12, scope: !2613)
!2617 = !DILocation(line: 659, column: 5, scope: !2613)
!2618 = !DILocation(line: 660, column: 5, scope: !2615)
!2619 = !DILocation(line: 663, column: 16, scope: !2610)
!2620 = !DILocation(line: 665, column: 3, scope: !2621)
!2621 = distinct !DILexicalBlock(scope: !2622, file: !311, line: 665, column: 3)
!2622 = distinct !DILexicalBlock(scope: !2610, file: !311, line: 664, column: 3)
!2623 = !DILocation(line: 0, scope: !2610)
!2624 = !DILocation(line: 665, column: 13, scope: !2621)
!2625 = !DILocation(line: 665, column: 25, scope: !2626)
!2626 = distinct !DILexicalBlock(scope: !2627, file: !311, line: 665, column: 9)
!2627 = distinct !DILexicalBlock(scope: !2621, file: !311, line: 665, column: 13)
!2628 = !DILocation(line: 665, column: 9, scope: !2627)
!2629 = !DILocation(line: 665, column: 7, scope: !2630)
!2630 = distinct !DILexicalBlock(scope: !2626, file: !311, line: 665, column: 42)
!2631 = !DILocation(line: 666, column: 30, scope: !2627)
!2632 = !DILocalVariable(name: "maxcycles", scope: !2602, file: !311, line: 657, type: !15)
!2633 = !DILocalVariable(name: "cycles", scope: !2602, file: !311, line: 658, type: !15)
!2634 = !DILocation(line: 669, column: 9, scope: !2635)
!2635 = distinct !DILexicalBlock(scope: !2627, file: !311, line: 669, column: 9)
!2636 = !DILocation(line: 669, column: 19, scope: !2635)
!2637 = !DILocation(line: 669, column: 9, scope: !2627)
!2638 = !DILocation(line: 669, column: 11, scope: !2639)
!2639 = distinct !DILexicalBlock(scope: !2640, file: !311, line: 669, column: 11)
!2640 = distinct !DILexicalBlock(scope: !2635, file: !311, line: 669, column: 25)
!2641 = !DILocation(line: 669, column: 21, scope: !2639)
!2642 = !DILocation(line: 669, column: 11, scope: !2640)
!2643 = !DILocation(line: 669, column: 21, scope: !2644)
!2644 = distinct !DILexicalBlock(scope: !2639, file: !311, line: 669, column: 34)
!2645 = !DILocation(line: 670, column: 7, scope: !2644)
!2646 = !DILocation(line: 0, scope: !2627)
!2647 = !DILocation(line: 671, column: 5, scope: !2640)
!2648 = !DILocation(line: 670, column: 9, scope: !2649)
!2649 = distinct !DILexicalBlock(scope: !2627, file: !311, line: 670, column: 9)
!2650 = !DILocation(line: 670, column: 18, scope: !2649)
!2651 = !DILocation(line: 670, column: 9, scope: !2627)
!2652 = !DILocation(line: 670, column: 11, scope: !2653)
!2653 = distinct !DILexicalBlock(scope: !2654, file: !311, line: 670, column: 11)
!2654 = distinct !DILexicalBlock(scope: !2649, file: !311, line: 670, column: 24)
!2655 = !DILocation(line: 670, column: 20, scope: !2653)
!2656 = !DILocation(line: 670, column: 11, scope: !2654)
!2657 = !DILocation(line: 670, column: 21, scope: !2658)
!2658 = distinct !DILexicalBlock(scope: !2653, file: !311, line: 670, column: 33)
!2659 = !DILocation(line: 671, column: 7, scope: !2658)
!2660 = !DILocation(line: 672, column: 5, scope: !2654)
!2661 = !DILocation(line: 672, column: 5, scope: !2662)
!2662 = distinct !DILexicalBlock(scope: !2663, file: !311, line: 674, column: 5)
!2663 = distinct !DILexicalBlock(scope: !2627, file: !311, line: 673, column: 5)
!2664 = !DILocation(line: 672, column: 15, scope: !2662)
!2665 = !DILocation(line: 672, column: 21, scope: !2666)
!2666 = distinct !DILexicalBlock(scope: !2667, file: !311, line: 672, column: 11)
!2667 = distinct !DILexicalBlock(scope: !2662, file: !311, line: 672, column: 15)
!2668 = !DILocation(line: 672, column: 11, scope: !2667)
!2669 = !DILocation(line: 672, column: 9, scope: !2670)
!2670 = distinct !DILexicalBlock(scope: !2666, file: !311, line: 672, column: 35)
!2671 = !DILocation(line: 673, column: 13, scope: !2672)
!2672 = distinct !DILexicalBlock(scope: !2673, file: !311, line: 675, column: 7)
!2673 = distinct !DILexicalBlock(scope: !2667, file: !311, line: 674, column: 7)
!2674 = !DILocalVariable(name: "tmp", scope: !2602, file: !311, line: 660, type: !15)
!2675 = !DILocalVariable(name: "step", scope: !2602, file: !311, line: 659, type: !15)
!2676 = !DILocation(line: 674, column: 16, scope: !2677)
!2677 = distinct !DILexicalBlock(scope: !2667, file: !311, line: 674, column: 11)
!2678 = !DILocation(line: 674, column: 11, scope: !2667)
!2679 = !DILocation(line: 674, column: 9, scope: !2680)
!2680 = distinct !DILexicalBlock(scope: !2677, file: !311, line: 674, column: 22)
!2681 = !DILocation(line: 675, column: 14, scope: !2682)
!2682 = distinct !DILexicalBlock(scope: !2667, file: !311, line: 676, column: 7)
!2683 = !DILocation(line: 676, column: 18, scope: !2682)
!2684 = !DILocation(line: 677, column: 7, scope: !2685)
!2685 = distinct !DILexicalBlock(scope: !2682, file: !311, line: 677, column: 7)
!2686 = distinct !{!2686, !2661, !2687}
!2687 = !DILocation(line: 680, column: 5, scope: !2662)
!2688 = !DILocation(line: 682, column: 5, scope: !2662)
!2689 = !DILocation(line: 680, column: 9, scope: !2690)
!2690 = distinct !DILexicalBlock(scope: !2627, file: !311, line: 680, column: 9)
!2691 = !DILocation(line: 680, column: 19, scope: !2690)
!2692 = !DILocation(line: 680, column: 9, scope: !2627)
!2693 = !DILocation(line: 680, column: 17, scope: !2694)
!2694 = distinct !DILexicalBlock(scope: !2690, file: !311, line: 680, column: 25)
!2695 = !DILocation(line: 681, column: 5, scope: !2694)
!2696 = !DILocation(line: 681, column: 9, scope: !2697)
!2697 = distinct !DILexicalBlock(scope: !2627, file: !311, line: 681, column: 9)
!2698 = !DILocation(line: 681, column: 19, scope: !2697)
!2699 = !DILocation(line: 681, column: 9, scope: !2627)
!2700 = !DILocation(line: 681, column: 11, scope: !2701)
!2701 = distinct !DILexicalBlock(scope: !2702, file: !311, line: 681, column: 11)
!2702 = distinct !DILexicalBlock(scope: !2697, file: !311, line: 681, column: 26)
!2703 = !DILocation(line: 681, column: 11, scope: !2702)
!2704 = !DILocation(line: 681, column: 19, scope: !2705)
!2705 = distinct !DILexicalBlock(scope: !2706, file: !311, line: 681, column: 13)
!2706 = distinct !DILexicalBlock(scope: !2701, file: !311, line: 681, column: 21)
!2707 = !DILocation(line: 681, column: 13, scope: !2705)
!2708 = !DILocation(line: 681, column: 31, scope: !2705)
!2709 = !DILocation(line: 681, column: 13, scope: !2706)
!2710 = !DILocation(line: 682, column: 21, scope: !2711)
!2711 = distinct !DILexicalBlock(scope: !2712, file: !311, line: 682, column: 11)
!2712 = distinct !DILexicalBlock(scope: !2705, file: !311, line: 681, column: 36)
!2713 = !DILocation(line: 683, column: 11, scope: !2714)
!2714 = distinct !DILexicalBlock(scope: !2711, file: !311, line: 683, column: 11)
!2715 = !DILocation(line: 686, column: 9, scope: !2712)
!2716 = !DILocation(line: 687, column: 7, scope: !2706)
!2717 = !DILocation(line: 688, column: 5, scope: !2702)
!2718 = !DILocation(line: 685, column: 9, scope: !2719)
!2719 = distinct !DILexicalBlock(scope: !2627, file: !311, line: 685, column: 9)
!2720 = !DILocation(line: 685, column: 18, scope: !2719)
!2721 = !DILocation(line: 685, column: 9, scope: !2627)
!2722 = !DILocation(line: 685, column: 16, scope: !2723)
!2723 = distinct !DILexicalBlock(scope: !2719, file: !311, line: 685, column: 24)
!2724 = !DILocation(line: 686, column: 5, scope: !2723)
!2725 = !DILocation(line: 686, column: 9, scope: !2726)
!2726 = distinct !DILexicalBlock(scope: !2627, file: !311, line: 686, column: 9)
!2727 = !DILocation(line: 686, column: 18, scope: !2726)
!2728 = !DILocation(line: 686, column: 9, scope: !2627)
!2729 = !DILocation(line: 686, column: 11, scope: !2730)
!2730 = distinct !DILexicalBlock(scope: !2731, file: !311, line: 686, column: 11)
!2731 = distinct !DILexicalBlock(scope: !2726, file: !311, line: 686, column: 25)
!2732 = !DILocation(line: 686, column: 11, scope: !2731)
!2733 = !DILocation(line: 686, column: 19, scope: !2734)
!2734 = distinct !DILexicalBlock(scope: !2735, file: !311, line: 686, column: 13)
!2735 = distinct !DILexicalBlock(scope: !2730, file: !311, line: 686, column: 21)
!2736 = !DILocation(line: 686, column: 13, scope: !2734)
!2737 = !DILocation(line: 686, column: 31, scope: !2734)
!2738 = !DILocation(line: 686, column: 13, scope: !2735)
!2739 = !DILocation(line: 687, column: 23, scope: !2740)
!2740 = distinct !DILexicalBlock(scope: !2741, file: !311, line: 687, column: 11)
!2741 = distinct !DILexicalBlock(scope: !2734, file: !311, line: 686, column: 36)
!2742 = !DILocation(line: 687, column: 20, scope: !2740)
!2743 = !DILocation(line: 688, column: 11, scope: !2744)
!2744 = distinct !DILexicalBlock(scope: !2740, file: !311, line: 688, column: 11)
!2745 = !DILocation(line: 691, column: 9, scope: !2741)
!2746 = !DILocation(line: 692, column: 7, scope: !2735)
!2747 = !DILocation(line: 693, column: 5, scope: !2731)
!2748 = !DILocation(line: 690, column: 18, scope: !2627)
!2749 = distinct !{!2749, !2620, !2750}
!2750 = !DILocation(line: 691, column: 3, scope: !2621)
!2751 = !DILocation(line: 693, column: 3, scope: !2621)
!2752 = !DILocation(line: 693, column: 3, scope: !2610)
!2753 = !DILocation(line: 695, column: 1, scope: !2602)
!2754 = distinct !DISubprogram(name: "gbhw_getminmax", scope: !311, file: !311, line: 587, type: !2755, scopeLine: 589, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !666)
!2755 = !DISubroutineType(types: !2756)
!2756 = !{null, !156, !156, !156, !156}
!2757 = !DILocalVariable(name: "lmin", arg: 1, scope: !2754, file: !311, line: 587, type: !156)
!2758 = !DILocation(line: 0, scope: !2754)
!2759 = !DILocalVariable(name: "lmax", arg: 2, scope: !2754, file: !311, line: 587, type: !156)
!2760 = !DILocalVariable(name: "rmin", arg: 3, scope: !2754, file: !311, line: 588, type: !156)
!2761 = !DILocalVariable(name: "rmax", arg: 4, scope: !2754, file: !311, line: 588, type: !156)
!2762 = !DILocation(line: 589, column: 7, scope: !2763)
!2763 = distinct !DILexicalBlock(scope: !2764, file: !311, line: 589, column: 7)
!2764 = distinct !DILexicalBlock(scope: !2754, file: !311, line: 592, column: 3)
!2765 = !DILocation(line: 589, column: 15, scope: !2763)
!2766 = !DILocation(line: 589, column: 7, scope: !2764)
!2767 = !DILocation(line: 589, column: 5, scope: !2768)
!2768 = distinct !DILexicalBlock(scope: !2763, file: !311, line: 589, column: 31)
!2769 = !DILocation(line: 590, column: 21, scope: !2764)
!2770 = !DILocation(line: 590, column: 11, scope: !2764)
!2771 = !DILocation(line: 590, column: 9, scope: !2764)
!2772 = !DILocation(line: 591, column: 21, scope: !2764)
!2773 = !DILocation(line: 591, column: 11, scope: !2764)
!2774 = !DILocation(line: 591, column: 9, scope: !2764)
!2775 = !DILocation(line: 592, column: 21, scope: !2764)
!2776 = !DILocation(line: 592, column: 11, scope: !2764)
!2777 = !DILocation(line: 592, column: 9, scope: !2764)
!2778 = !DILocation(line: 593, column: 21, scope: !2764)
!2779 = !DILocation(line: 593, column: 11, scope: !2764)
!2780 = !DILocation(line: 593, column: 9, scope: !2764)
!2781 = !DILocation(line: 594, column: 11, scope: !2764)
!2782 = !DILocation(line: 594, column: 13, scope: !2764)
!2783 = !DILocation(line: 595, column: 11, scope: !2764)
!2784 = !DILocation(line: 595, column: 13, scope: !2764)
!2785 = !DILocation(line: 596, column: 3, scope: !2764)
!2786 = !DILocation(line: 598, column: 1, scope: !2754)
!2787 = distinct !DISubprogram(name: "gbhw_master_fade", scope: !311, file: !311, line: 363, type: !2788, scopeLine: 364, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !666)
!2788 = !DISubroutineType(types: !2789)
!2789 = !{null, !15, !15}
!2790 = !DILocalVariable(name: "speed", arg: 1, scope: !2787, file: !311, line: 363, type: !15)
!2791 = !DILocation(line: 0, scope: !2787)
!2792 = !DILocalVariable(name: "dstvol", arg: 2, scope: !2787, file: !311, line: 363, type: !15)
!2793 = !DILocation(line: 365, column: 14, scope: !2794)
!2794 = distinct !DILexicalBlock(scope: !2795, file: !311, line: 365, column: 7)
!2795 = distinct !DILexicalBlock(scope: !2787, file: !311, line: 367, column: 3)
!2796 = !DILocation(line: 365, column: 7, scope: !2795)
!2797 = !DILocation(line: 366, column: 3, scope: !2798)
!2798 = distinct !DILexicalBlock(scope: !2794, file: !311, line: 365, column: 20)
!2799 = !DILocation(line: 366, column: 14, scope: !2800)
!2800 = distinct !DILexicalBlock(scope: !2795, file: !311, line: 366, column: 7)
!2801 = !DILocation(line: 366, column: 7, scope: !2795)
!2802 = !DILocation(line: 367, column: 3, scope: !2803)
!2803 = distinct !DILexicalBlock(scope: !2800, file: !311, line: 366, column: 24)
!2804 = !DILocation(line: 0, scope: !2795)
!2805 = !DILocation(line: 367, column: 17, scope: !2795)
!2806 = !DILocation(line: 368, column: 16, scope: !2807)
!2807 = distinct !DILexicalBlock(scope: !2795, file: !311, line: 368, column: 7)
!2808 = !DILocation(line: 368, column: 14, scope: !2807)
!2809 = !DILocation(line: 368, column: 7, scope: !2795)
!2810 = !DILocation(line: 369, column: 17, scope: !2811)
!2811 = distinct !DILexicalBlock(scope: !2807, file: !311, line: 368, column: 31)
!2812 = !DILocation(line: 370, column: 3, scope: !2811)
!2813 = !DILocation(line: 370, column: 19, scope: !2814)
!2814 = distinct !DILexicalBlock(scope: !2807, file: !311, line: 370, column: 10)
!2815 = !DILocation(line: 370, column: 17, scope: !2814)
!2816 = !DILocation(line: 371, column: 3, scope: !2795)
!2817 = distinct !DISubprogram(name: "gbs_nextsubsong", scope: !511, file: !511, line: 122, type: !2818, scopeLine: 123, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !666)
!2818 = !DISubroutineType(types: !2819)
!2819 = !{!15, !96}
!2820 = !DILocalVariable(name: "gbs", arg: 1, scope: !2817, file: !511, line: 122, type: !96)
!2821 = !DILocation(line: 0, scope: !2817)
!2822 = !DILocation(line: 124, column: 28, scope: !2823)
!2823 = distinct !DILexicalBlock(scope: !2824, file: !511, line: 124, column: 7)
!2824 = distinct !DILexicalBlock(scope: !2817, file: !511, line: 126, column: 3)
!2825 = !DILocation(line: 124, column: 7, scope: !2823)
!2826 = !DILocation(line: 124, column: 43, scope: !2823)
!2827 = !DILocation(line: 124, column: 7, scope: !2824)
!2828 = !DILocation(line: 125, column: 19, scope: !2829)
!2829 = distinct !DILexicalBlock(scope: !2830, file: !511, line: 126, column: 5)
!2830 = distinct !DILexicalBlock(scope: !2831, file: !511, line: 125, column: 5)
!2831 = distinct !DILexicalBlock(scope: !2823, file: !511, line: 124, column: 75)
!2832 = !DILocation(line: 125, column: 46, scope: !2829)
!2833 = !DILocation(line: 125, column: 11, scope: !2829)
!2834 = !DILocalVariable(name: "tmp", scope: !2817, file: !511, line: 124, type: !15)
!2835 = !DILocation(line: 125, column: 5, scope: !2831)
!2836 = !DILocation(line: 127, column: 11, scope: !2837)
!2837 = distinct !DILexicalBlock(scope: !2823, file: !511, line: 126, column: 10)
!2838 = !DILocation(line: 127, column: 20, scope: !2837)
!2839 = !DILocation(line: 128, column: 14, scope: !2840)
!2840 = distinct !DILexicalBlock(scope: !2837, file: !511, line: 128, column: 9)
!2841 = !DILocation(line: 128, column: 30, scope: !2840)
!2842 = !DILocation(line: 128, column: 22, scope: !2840)
!2843 = !DILocation(line: 128, column: 9, scope: !2837)
!2844 = !DILocation(line: 129, column: 7, scope: !2845)
!2845 = distinct !DILexicalBlock(scope: !2840, file: !511, line: 128, column: 37)
!2846 = !DILocation(line: 130, column: 24, scope: !2847)
!2847 = distinct !DILexicalBlock(scope: !2848, file: !511, line: 132, column: 5)
!2848 = distinct !DILexicalBlock(scope: !2837, file: !511, line: 131, column: 5)
!2849 = !DILocation(line: 130, column: 5, scope: !2847)
!2850 = !DILocation(line: 132, column: 3, scope: !2824)
!2851 = !DILocation(line: 0, scope: !2824)
!2852 = !DILocation(line: 134, column: 1, scope: !2817)
!2853 = distinct !DISubprogram(name: "gbs_printinfo", scope: !511, file: !511, line: 178, type: !2854, scopeLine: 179, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !666)
!2854 = !DISubroutineType(types: !2855)
!2855 = !{null, !96, !15}
!2856 = !DILocalVariable(name: "gbs", arg: 1, scope: !2853, file: !511, line: 178, type: !96)
!2857 = !DILocation(line: 0, scope: !2853)
!2858 = !DILocalVariable(name: "verbose", arg: 2, scope: !2853, file: !511, line: 178, type: !15)
!2859 = !DILocalVariable(name: "__cil_tmp13", scope: !2853, file: !511, line: 190, type: !16)
!2860 = !DILocation(line: 190, column: 9, scope: !2853)
!2861 = !DILocalVariable(name: "__cil_tmp14", scope: !2853, file: !511, line: 191, type: !16)
!2862 = !DILocation(line: 191, column: 9, scope: !2853)
!2863 = !DILocalVariable(name: "__cil_tmp15", scope: !2853, file: !511, line: 192, type: !16)
!2864 = !DILocation(line: 192, column: 9, scope: !2853)
!2865 = !DILocalVariable(name: "__cil_tmp16", scope: !2853, file: !511, line: 193, type: !16)
!2866 = !DILocation(line: 193, column: 9, scope: !2853)
!2867 = !DILocalVariable(name: "__cil_tmp17", scope: !2853, file: !511, line: 194, type: !16)
!2868 = !DILocation(line: 194, column: 9, scope: !2853)
!2869 = !DILocalVariable(name: "__cil_tmp18", scope: !2853, file: !511, line: 195, type: !16)
!2870 = !DILocation(line: 195, column: 9, scope: !2853)
!2871 = !DILocalVariable(name: "__cil_tmp19", scope: !2853, file: !511, line: 196, type: !16)
!2872 = !DILocation(line: 196, column: 9, scope: !2853)
!2873 = !DILocalVariable(name: "__cil_tmp20", scope: !2853, file: !511, line: 197, type: !16)
!2874 = !DILocation(line: 197, column: 9, scope: !2853)
!2875 = !DILocalVariable(name: "__cil_tmp21", scope: !2853, file: !511, line: 198, type: !16)
!2876 = !DILocation(line: 198, column: 9, scope: !2853)
!2877 = !DILocalVariable(name: "__cil_tmp22", scope: !2853, file: !511, line: 199, type: !16)
!2878 = !DILocation(line: 199, column: 9, scope: !2853)
!2879 = !DILocalVariable(name: "__cil_tmp23", scope: !2853, file: !511, line: 200, type: !16)
!2880 = !DILocation(line: 200, column: 9, scope: !2853)
!2881 = !DILocation(line: 180, column: 9, scope: !2882)
!2882 = distinct !DILexicalBlock(scope: !2883, file: !511, line: 204, column: 3)
!2883 = distinct !DILexicalBlock(scope: !2884, file: !511, line: 203, column: 3)
!2884 = distinct !DILexicalBlock(scope: !2853, file: !511, line: 202, column: 3)
!2885 = !DILocalVariable(name: "tmp", scope: !2853, file: !511, line: 180, type: !16)
!2886 = !DILocation(line: 180, column: 53, scope: !2887)
!2887 = distinct !DILexicalBlock(scope: !2883, file: !511, line: 182, column: 3)
!2888 = !DILocation(line: 180, column: 67, scope: !2887)
!2889 = !DILocation(line: 180, column: 79, scope: !2887)
!2890 = !DILocation(line: 181, column: 15, scope: !2887)
!2891 = !DILocation(line: 181, column: 37, scope: !2887)
!2892 = !DILocation(line: 181, column: 26, scope: !2887)
!2893 = !DILocation(line: 181, column: 54, scope: !2887)
!2894 = !DILocation(line: 181, column: 43, scope: !2887)
!2895 = !DILocation(line: 181, column: 71, scope: !2887)
!2896 = !DILocation(line: 181, column: 60, scope: !2887)
!2897 = !DILocation(line: 181, column: 88, scope: !2887)
!2898 = !DILocation(line: 181, column: 77, scope: !2887)
!2899 = !DILocation(line: 182, column: 15, scope: !2887)
!2900 = !DILocation(line: 182, column: 30, scope: !2887)
!2901 = !DILocation(line: 182, column: 44, scope: !2887)
!2902 = !DILocation(line: 182, column: 52, scope: !2887)
!2903 = !DILocation(line: 182, column: 68, scope: !2887)
!2904 = !DILocation(line: 180, column: 3, scope: !2887)
!2905 = !DILocation(line: 203, column: 12, scope: !2906)
!2906 = distinct !DILexicalBlock(scope: !2884, file: !511, line: 203, column: 7)
!2907 = !DILocation(line: 203, column: 20, scope: !2906)
!2908 = !DILocation(line: 203, column: 7, scope: !2884)
!2909 = !DILocation(line: 204, column: 14, scope: !2910)
!2910 = distinct !DILexicalBlock(scope: !2911, file: !511, line: 204, column: 9)
!2911 = distinct !DILexicalBlock(scope: !2906, file: !511, line: 203, column: 27)
!2912 = !DILocation(line: 204, column: 26, scope: !2910)
!2913 = !DILocation(line: 204, column: 18, scope: !2910)
!2914 = !DILocation(line: 204, column: 9, scope: !2911)
!2915 = !DILocation(line: 204, column: 17, scope: !2916)
!2916 = distinct !DILexicalBlock(scope: !2917, file: !511, line: 206, column: 7)
!2917 = distinct !DILexicalBlock(scope: !2918, file: !511, line: 205, column: 7)
!2918 = distinct !DILexicalBlock(scope: !2910, file: !511, line: 204, column: 34)
!2919 = !DILocalVariable(name: "tmp___0", scope: !2853, file: !511, line: 181, type: !16)
!2920 = !DILocalVariable(name: "tmp___2", scope: !2853, file: !511, line: 183, type: !16)
!2921 = !DILocation(line: 206, column: 5, scope: !2918)
!2922 = !DILocation(line: 204, column: 17, scope: !2923)
!2923 = distinct !DILexicalBlock(scope: !2924, file: !511, line: 208, column: 7)
!2924 = distinct !DILexicalBlock(scope: !2925, file: !511, line: 207, column: 7)
!2925 = distinct !DILexicalBlock(scope: !2910, file: !511, line: 206, column: 12)
!2926 = !DILocalVariable(name: "tmp___1", scope: !2853, file: !511, line: 182, type: !16)
!2927 = !DILocation(line: 0, scope: !2910)
!2928 = !DILocation(line: 204, column: 15, scope: !2929)
!2929 = distinct !DILexicalBlock(scope: !2930, file: !511, line: 208, column: 5)
!2930 = distinct !DILexicalBlock(scope: !2911, file: !511, line: 207, column: 5)
!2931 = !DILocalVariable(name: "tmp___3", scope: !2853, file: !511, line: 184, type: !16)
!2932 = !DILocation(line: 204, column: 75, scope: !2933)
!2933 = distinct !DILexicalBlock(scope: !2930, file: !511, line: 206, column: 5)
!2934 = !DILocation(line: 204, column: 54, scope: !2933)
!2935 = !DILocation(line: 204, column: 101, scope: !2933)
!2936 = !DILocation(line: 204, column: 80, scope: !2933)
!2937 = !DILocation(line: 204, column: 5, scope: !2933)
!2938 = !DILocation(line: 208, column: 3, scope: !2911)
!2939 = !DILocation(line: 208, column: 7, scope: !2940)
!2940 = distinct !DILexicalBlock(scope: !2884, file: !511, line: 208, column: 7)
!2941 = !DILocation(line: 208, column: 7, scope: !2884)
!2942 = !DILocation(line: 208, column: 14, scope: !2943)
!2943 = distinct !DILexicalBlock(scope: !2944, file: !511, line: 208, column: 9)
!2944 = distinct !DILexicalBlock(scope: !2940, file: !511, line: 208, column: 16)
!2945 = !DILocation(line: 208, column: 22, scope: !2943)
!2946 = !DILocation(line: 208, column: 9, scope: !2944)
!2947 = !DILocalVariable(name: "i", scope: !2853, file: !511, line: 185, type: !15)
!2948 = !DILocation(line: 210, column: 7, scope: !2949)
!2949 = distinct !DILexicalBlock(scope: !2950, file: !511, line: 212, column: 7)
!2950 = distinct !DILexicalBlock(scope: !2951, file: !511, line: 211, column: 7)
!2951 = distinct !DILexicalBlock(scope: !2943, file: !511, line: 208, column: 29)
!2952 = !DILocation(line: 0, scope: !2951)
!2953 = !DILocation(line: 210, column: 17, scope: !2949)
!2954 = !DILocation(line: 210, column: 25, scope: !2955)
!2955 = distinct !DILexicalBlock(scope: !2956, file: !511, line: 210, column: 13)
!2956 = distinct !DILexicalBlock(scope: !2949, file: !511, line: 210, column: 17)
!2957 = !DILocation(line: 210, column: 18, scope: !2955)
!2958 = !DILocation(line: 210, column: 13, scope: !2956)
!2959 = !DILocation(line: 210, column: 11, scope: !2960)
!2960 = distinct !DILexicalBlock(scope: !2955, file: !511, line: 210, column: 33)
!2961 = !DILocation(line: 211, column: 19, scope: !2962)
!2962 = distinct !DILexicalBlock(scope: !2963, file: !511, line: 213, column: 9)
!2963 = distinct !DILexicalBlock(scope: !2956, file: !511, line: 212, column: 9)
!2964 = !DILocalVariable(name: "tmp___4", scope: !2853, file: !511, line: 186, type: !16)
!2965 = !DILocation(line: 211, column: 9, scope: !2966)
!2966 = distinct !DILexicalBlock(scope: !2963, file: !511, line: 213, column: 9)
!2967 = !DILocation(line: 212, column: 19, scope: !2968)
!2968 = distinct !DILexicalBlock(scope: !2956, file: !511, line: 212, column: 13)
!2969 = !DILocation(line: 212, column: 32, scope: !2968)
!2970 = !DILocation(line: 212, column: 38, scope: !2968)
!2971 = !DILocation(line: 212, column: 13, scope: !2968)
!2972 = !DILocation(line: 212, column: 13, scope: !2956)
!2973 = !DILocation(line: 213, column: 68, scope: !2974)
!2974 = distinct !DILexicalBlock(scope: !2975, file: !511, line: 214, column: 11)
!2975 = distinct !DILexicalBlock(scope: !2976, file: !511, line: 213, column: 11)
!2976 = distinct !DILexicalBlock(scope: !2968, file: !511, line: 212, column: 45)
!2977 = !DILocation(line: 213, column: 81, scope: !2974)
!2978 = !DILocation(line: 213, column: 87, scope: !2974)
!2979 = !DILocation(line: 213, column: 11, scope: !2974)
!2980 = !DILocation(line: 216, column: 9, scope: !2976)
!2981 = !DILocation(line: 215, column: 21, scope: !2982)
!2982 = distinct !DILexicalBlock(scope: !2983, file: !511, line: 218, column: 11)
!2983 = distinct !DILexicalBlock(scope: !2984, file: !511, line: 217, column: 11)
!2984 = distinct !DILexicalBlock(scope: !2968, file: !511, line: 216, column: 16)
!2985 = !DILocalVariable(name: "tmp___5", scope: !2853, file: !511, line: 187, type: !16)
!2986 = !DILocation(line: 215, column: 11, scope: !2987)
!2987 = distinct !DILexicalBlock(scope: !2983, file: !511, line: 217, column: 11)
!2988 = !DILocation(line: 217, column: 19, scope: !2989)
!2989 = distinct !DILexicalBlock(scope: !2956, file: !511, line: 217, column: 13)
!2990 = !DILocation(line: 217, column: 32, scope: !2989)
!2991 = !DILocation(line: 217, column: 38, scope: !2989)
!2992 = !DILocation(line: 217, column: 13, scope: !2989)
!2993 = !DILocation(line: 217, column: 13, scope: !2956)
!2994 = !DILocation(line: 218, column: 21, scope: !2995)
!2995 = distinct !DILexicalBlock(scope: !2996, file: !511, line: 219, column: 11)
!2996 = distinct !DILexicalBlock(scope: !2997, file: !511, line: 218, column: 11)
!2997 = distinct !DILexicalBlock(scope: !2989, file: !511, line: 217, column: 43)
!2998 = !DILocalVariable(name: "tmp___6", scope: !2853, file: !511, line: 188, type: !16)
!2999 = !DILocation(line: 218, column: 74, scope: !3000)
!3000 = distinct !DILexicalBlock(scope: !2996, file: !511, line: 220, column: 11)
!3001 = !DILocation(line: 218, column: 87, scope: !3000)
!3002 = !DILocation(line: 218, column: 93, scope: !3000)
!3003 = !DILocation(line: 218, column: 97, scope: !3000)
!3004 = !DILocation(line: 218, column: 60, scope: !3000)
!3005 = !DILocation(line: 218, column: 11, scope: !3000)
!3006 = !DILocation(line: 221, column: 9, scope: !2997)
!3007 = !DILocation(line: 221, column: 21, scope: !3008)
!3008 = distinct !DILexicalBlock(scope: !3009, file: !511, line: 223, column: 11)
!3009 = distinct !DILexicalBlock(scope: !3010, file: !511, line: 222, column: 11)
!3010 = distinct !DILexicalBlock(scope: !2989, file: !511, line: 221, column: 16)
!3011 = !DILocalVariable(name: "tmp___7", scope: !2853, file: !511, line: 189, type: !16)
!3012 = !DILocation(line: 221, column: 11, scope: !3013)
!3013 = distinct !DILexicalBlock(scope: !3009, file: !511, line: 223, column: 11)
!3014 = !DILocation(line: 210, column: 11, scope: !2956)
!3015 = distinct !{!3015, !2948, !3016}
!3016 = !DILocation(line: 211, column: 7, scope: !2949)
!3017 = !DILocation(line: 213, column: 7, scope: !2949)
!3018 = !DILocation(line: 216, column: 5, scope: !2951)
!3019 = !DILocation(line: 217, column: 3, scope: !2944)
!3020 = !DILocation(line: 225, column: 3, scope: !2884)
!3021 = distinct !DISubprogram(name: "gbs_close", scope: !511, file: !511, line: 227, type: !3022, scopeLine: 228, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !666)
!3022 = !DISubroutineType(types: !3023)
!3023 = !{null, !96}
!3024 = !DILocalVariable(name: "gbs", arg: 1, scope: !3021, file: !511, line: 227, type: !96)
!3025 = !DILocation(line: 0, scope: !3021)
!3026 = !DILocation(line: 229, column: 21, scope: !3027)
!3027 = distinct !DILexicalBlock(scope: !3028, file: !511, line: 233, column: 3)
!3028 = distinct !DILexicalBlock(scope: !3029, file: !511, line: 232, column: 3)
!3029 = distinct !DILexicalBlock(scope: !3021, file: !511, line: 231, column: 3)
!3030 = !DILocation(line: 229, column: 8, scope: !3027)
!3031 = !DILocation(line: 229, column: 3, scope: !3027)
!3032 = !DILocation(line: 230, column: 8, scope: !3033)
!3033 = distinct !DILexicalBlock(scope: !3028, file: !511, line: 231, column: 3)
!3034 = !DILocation(line: 230, column: 3, scope: !3033)
!3035 = !DILocation(line: 231, column: 3, scope: !3029)
!3036 = distinct !DISubprogram(name: "gbs_write", scope: !511, file: !511, line: 258, type: !3037, scopeLine: 259, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !666)
!3037 = !DISubroutineType(types: !3038)
!3038 = !{!15, !96, !16, !15}
!3039 = !DILocalVariable(name: "gbs", arg: 1, scope: !3036, file: !511, line: 258, type: !96)
!3040 = !DILocation(line: 0, scope: !3036)
!3041 = !DILocalVariable(name: "name", arg: 2, scope: !3036, file: !511, line: 258, type: !16)
!3042 = !DILocalVariable(name: "version___2", arg: 3, scope: !3036, file: !511, line: 258, type: !15)
!3043 = !DILocalVariable(name: "pad", scope: !3036, file: !511, line: 262, type: !3044)
!3044 = !DICompositeType(tag: DW_TAG_array_type, baseType: !17, size: 128, elements: !267)
!3045 = !DILocation(line: 262, column: 8, scope: !3036)
!3046 = !DILocalVariable(name: "strings", scope: !3036, file: !511, line: 263, type: !3047)
!3047 = !DICompositeType(tag: DW_TAG_array_type, baseType: !17, size: 524288, elements: !3048)
!3048 = !{!3049}
!3049 = !DISubrange(count: 65536)
!3050 = !DILocation(line: 263, column: 8, scope: !3036)
!3051 = !DILocalVariable(name: "__cil_tmp26", scope: !3036, file: !511, line: 282, type: !23)
!3052 = !DILocation(line: 282, column: 9, scope: !3036)
!3053 = !DILocalVariable(name: "__cil_tmp27", scope: !3036, file: !511, line: 283, type: !23)
!3054 = !DILocation(line: 283, column: 9, scope: !3036)
!3055 = !DILocalVariable(name: "__cil_tmp28", scope: !3036, file: !511, line: 284, type: !16)
!3056 = !DILocation(line: 284, column: 9, scope: !3036)
!3057 = !DILocalVariable(name: "__cil_tmp29", scope: !3036, file: !511, line: 285, type: !16)
!3058 = !DILocation(line: 285, column: 9, scope: !3036)
!3059 = !DILocalVariable(name: "__cil_tmp30", scope: !3036, file: !511, line: 286, type: !16)
!3060 = !DILocation(line: 286, column: 9, scope: !3036)
!3061 = !DILocation(line: 261, column: 27, scope: !3062)
!3062 = distinct !DILexicalBlock(scope: !3063, file: !511, line: 289, column: 3)
!3063 = distinct !DILexicalBlock(scope: !3036, file: !511, line: 288, column: 3)
!3064 = !DILocation(line: 261, column: 35, scope: !3062)
!3065 = !DILocation(line: 261, column: 43, scope: !3062)
!3066 = !DILocalVariable(name: "codelen", scope: !3036, file: !511, line: 261, type: !15)
!3067 = !DILocalVariable(name: "stringofs", scope: !3036, file: !511, line: 264, type: !15)
!3068 = !DILocation(line: 265, column: 24, scope: !3062)
!3069 = !DILocation(line: 265, column: 12, scope: !3062)
!3070 = !DILocalVariable(name: "newlen", scope: !3036, file: !511, line: 265, type: !15)
!3071 = !DILocation(line: 267, column: 18, scope: !3072)
!3072 = distinct !DILexicalBlock(scope: !3062, file: !511, line: 266, column: 3)
!3073 = !DILocation(line: 267, column: 3, scope: !3072)
!3074 = !DILocation(line: 269, column: 13, scope: !3075)
!3075 = distinct !DILexicalBlock(scope: !3062, file: !511, line: 269, column: 3)
!3076 = !DILocalVariable(name: "tmp___2", scope: !3036, file: !511, line: 269, type: !14)
!3077 = !DILocation(line: 269, column: 12, scope: !3062)
!3078 = !DILocalVariable(name: "fd___2", scope: !3036, file: !511, line: 260, type: !15)
!3079 = !DILocation(line: 269, column: 14, scope: !3080)
!3080 = distinct !DILexicalBlock(scope: !3063, file: !511, line: 269, column: 7)
!3081 = !DILocation(line: 269, column: 7, scope: !3063)
!3082 = !DILocation(line: 270, column: 11, scope: !3083)
!3083 = distinct !DILexicalBlock(scope: !3084, file: !511, line: 271, column: 5)
!3084 = distinct !DILexicalBlock(scope: !3085, file: !511, line: 270, column: 5)
!3085 = distinct !DILexicalBlock(scope: !3080, file: !511, line: 269, column: 22)
!3086 = !DILocalVariable(name: "tmp", scope: !3036, file: !511, line: 266, type: !3087)
!3087 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14, size: 64)
!3088 = !DILocation(line: 270, column: 24, scope: !3089)
!3089 = distinct !DILexicalBlock(scope: !3084, file: !511, line: 272, column: 5)
!3090 = !DILocation(line: 270, column: 15, scope: !3089)
!3091 = !DILocalVariable(name: "tmp___0", scope: !3036, file: !511, line: 267, type: !16)
!3092 = !DILocation(line: 270, column: 15, scope: !3093)
!3093 = distinct !DILexicalBlock(scope: !3084, file: !511, line: 272, column: 5)
!3094 = !DILocalVariable(name: "tmp___1", scope: !3036, file: !511, line: 268, type: !16)
!3095 = !DILocation(line: 270, column: 38, scope: !3096)
!3096 = distinct !DILexicalBlock(scope: !3084, file: !511, line: 272, column: 5)
!3097 = !DILocation(line: 270, column: 5, scope: !3096)
!3098 = !DILocation(line: 271, column: 5, scope: !3085)
!3099 = !DILocation(line: 274, column: 19, scope: !3100)
!3100 = distinct !DILexicalBlock(scope: !3063, file: !511, line: 274, column: 7)
!3101 = !DILocation(line: 274, column: 7, scope: !3063)
!3102 = !DILocation(line: 276, column: 31, scope: !3103)
!3103 = distinct !DILexicalBlock(scope: !3104, file: !511, line: 275, column: 5)
!3104 = distinct !DILexicalBlock(scope: !3100, file: !511, line: 274, column: 26)
!3105 = !DILocation(line: 276, column: 24, scope: !3103)
!3106 = !DILocation(line: 276, column: 19, scope: !3103)
!3107 = !DILocalVariable(name: "ehdrlen", scope: !3036, file: !511, line: 272, type: !15)
!3108 = !DILocation(line: 279, column: 30, scope: !3103)
!3109 = !DILocation(line: 279, column: 20, scope: !3103)
!3110 = !DILocation(line: 279, column: 37, scope: !3103)
!3111 = !DILocation(line: 280, column: 12, scope: !3103)
!3112 = !DILocation(line: 280, column: 16, scope: !3103)
!3113 = !DILocation(line: 280, column: 21, scope: !3103)
!3114 = !DILocation(line: 281, column: 36, scope: !3115)
!3115 = distinct !DILexicalBlock(scope: !3103, file: !511, line: 281, column: 5)
!3116 = !DILocation(line: 281, column: 58, scope: !3115)
!3117 = !DILocation(line: 281, column: 41, scope: !3115)
!3118 = !DILocation(line: 281, column: 15, scope: !3115)
!3119 = !DILocalVariable(name: "tmp___3", scope: !3036, file: !511, line: 274, type: !23)
!3120 = !DILocation(line: 281, column: 10, scope: !3103)
!3121 = !DILocation(line: 281, column: 14, scope: !3103)
!3122 = !DILocation(line: 282, column: 22, scope: !3103)
!3123 = !DILocation(line: 282, column: 26, scope: !3103)
!3124 = !DILocation(line: 282, column: 10, scope: !3103)
!3125 = !DILocation(line: 282, column: 15, scope: !3103)
!3126 = !DILocation(line: 283, column: 24, scope: !3103)
!3127 = !DILocation(line: 283, column: 39, scope: !3103)
!3128 = !DILocation(line: 283, column: 29, scope: !3103)
!3129 = !DILocation(line: 283, column: 10, scope: !3103)
!3130 = !DILocation(line: 283, column: 17, scope: !3103)
!3131 = !DILocation(line: 284, column: 19, scope: !3132)
!3132 = distinct !DILexicalBlock(scope: !3103, file: !511, line: 284, column: 5)
!3133 = !DILocation(line: 284, column: 23, scope: !3132)
!3134 = !DILocation(line: 284, column: 30, scope: !3132)
!3135 = !DILocation(line: 284, column: 5, scope: !3132)
!3136 = !DILocation(line: 285, column: 26, scope: !3137)
!3137 = distinct !DILexicalBlock(scope: !3103, file: !511, line: 286, column: 5)
!3138 = !DILocation(line: 285, column: 38, scope: !3137)
!3139 = !DILocation(line: 285, column: 31, scope: !3137)
!3140 = !DILocation(line: 285, column: 86, scope: !3137)
!3141 = !DILocation(line: 285, column: 100, scope: !3137)
!3142 = !DILocation(line: 285, column: 93, scope: !3137)
!3143 = !DILocation(line: 285, column: 51, scope: !3137)
!3144 = !DILocation(line: 285, column: 5, scope: !3137)
!3145 = !DILocation(line: 286, column: 25, scope: !3146)
!3146 = distinct !DILexicalBlock(scope: !3103, file: !511, line: 287, column: 5)
!3147 = !DILocation(line: 286, column: 54, scope: !3146)
!3148 = !DILocation(line: 286, column: 36, scope: !3146)
!3149 = !DILocation(line: 286, column: 5, scope: !3146)
!3150 = !DILocation(line: 287, column: 43, scope: !3151)
!3151 = distinct !DILexicalBlock(scope: !3103, file: !511, line: 288, column: 5)
!3152 = !DILocation(line: 287, column: 5, scope: !3151)
!3153 = !DILocation(line: 288, column: 39, scope: !3103)
!3154 = !DILocation(line: 288, column: 27, scope: !3103)
!3155 = !DILocation(line: 288, column: 12, scope: !3103)
!3156 = !DILocation(line: 288, column: 19, scope: !3103)
!3157 = !DILocation(line: 288, column: 25, scope: !3103)
!3158 = !DILocation(line: 289, column: 43, scope: !3159)
!3159 = distinct !DILexicalBlock(scope: !3103, file: !511, line: 289, column: 5)
!3160 = !DILocation(line: 289, column: 15, scope: !3159)
!3161 = !DILocalVariable(name: "tmp___4", scope: !3036, file: !511, line: 275, type: !76)
!3162 = !DILocation(line: 289, column: 11, scope: !3103)
!3163 = !DILocalVariable(name: "len", scope: !3036, file: !511, line: 270, type: !15)
!3164 = !DILocation(line: 289, column: 13, scope: !3165)
!3165 = distinct !DILexicalBlock(scope: !3104, file: !511, line: 289, column: 9)
!3166 = !DILocation(line: 289, column: 9, scope: !3104)
!3167 = !DILocation(line: 290, column: 40, scope: !3168)
!3168 = distinct !DILexicalBlock(scope: !3169, file: !511, line: 291, column: 7)
!3169 = distinct !DILexicalBlock(scope: !3170, file: !511, line: 290, column: 7)
!3170 = distinct !DILexicalBlock(scope: !3165, file: !511, line: 289, column: 20)
!3171 = !DILocation(line: 290, column: 48, scope: !3168)
!3172 = !DILocation(line: 290, column: 100, scope: !3168)
!3173 = !DILocation(line: 291, column: 28, scope: !3168)
!3174 = !DILocation(line: 291, column: 14, scope: !3168)
!3175 = !DILocation(line: 290, column: 7, scope: !3168)
!3176 = !DILocation(line: 291, column: 21, scope: !3177)
!3177 = distinct !DILexicalBlock(scope: !3169, file: !511, line: 293, column: 7)
!3178 = !DILocation(line: 291, column: 28, scope: !3177)
!3179 = !DILocation(line: 291, column: 34, scope: !3177)
!3180 = !DILocation(line: 291, column: 7, scope: !3177)
!3181 = !DILocation(line: 292, column: 24, scope: !3169)
!3182 = !DILocation(line: 292, column: 17, scope: !3169)
!3183 = !DILocation(line: 294, column: 5, scope: !3170)
!3184 = !DILocation(line: 293, column: 21, scope: !3185)
!3185 = distinct !DILexicalBlock(scope: !3186, file: !511, line: 296, column: 7)
!3186 = distinct !DILexicalBlock(scope: !3187, file: !511, line: 295, column: 7)
!3187 = distinct !DILexicalBlock(scope: !3165, file: !511, line: 294, column: 12)
!3188 = !DILocation(line: 293, column: 28, scope: !3185)
!3189 = !DILocation(line: 293, column: 7, scope: !3185)
!3190 = !DILocation(line: 0, scope: !3063)
!3191 = !DILocation(line: 294, column: 43, scope: !3192)
!3192 = distinct !DILexicalBlock(scope: !3193, file: !511, line: 298, column: 5)
!3193 = distinct !DILexicalBlock(scope: !3104, file: !511, line: 297, column: 5)
!3194 = !DILocation(line: 294, column: 15, scope: !3192)
!3195 = !DILocalVariable(name: "tmp___5", scope: !3036, file: !511, line: 276, type: !76)
!3196 = !DILocation(line: 294, column: 11, scope: !3193)
!3197 = !DILocation(line: 294, column: 13, scope: !3198)
!3198 = distinct !DILexicalBlock(scope: !3104, file: !511, line: 294, column: 9)
!3199 = !DILocation(line: 294, column: 9, scope: !3104)
!3200 = !DILocation(line: 295, column: 40, scope: !3201)
!3201 = distinct !DILexicalBlock(scope: !3202, file: !511, line: 296, column: 7)
!3202 = distinct !DILexicalBlock(scope: !3203, file: !511, line: 295, column: 7)
!3203 = distinct !DILexicalBlock(scope: !3198, file: !511, line: 294, column: 20)
!3204 = !DILocation(line: 295, column: 48, scope: !3201)
!3205 = !DILocation(line: 295, column: 100, scope: !3201)
!3206 = !DILocation(line: 296, column: 28, scope: !3201)
!3207 = !DILocation(line: 296, column: 14, scope: !3201)
!3208 = !DILocation(line: 295, column: 7, scope: !3201)
!3209 = !DILocation(line: 296, column: 21, scope: !3210)
!3210 = distinct !DILexicalBlock(scope: !3202, file: !511, line: 298, column: 7)
!3211 = !DILocation(line: 296, column: 28, scope: !3210)
!3212 = !DILocation(line: 296, column: 34, scope: !3210)
!3213 = !DILocation(line: 296, column: 7, scope: !3210)
!3214 = !DILocation(line: 297, column: 24, scope: !3202)
!3215 = !DILocation(line: 297, column: 17, scope: !3202)
!3216 = !DILocation(line: 299, column: 5, scope: !3203)
!3217 = !DILocation(line: 298, column: 21, scope: !3218)
!3218 = distinct !DILexicalBlock(scope: !3219, file: !511, line: 301, column: 7)
!3219 = distinct !DILexicalBlock(scope: !3220, file: !511, line: 300, column: 7)
!3220 = distinct !DILexicalBlock(scope: !3198, file: !511, line: 299, column: 12)
!3221 = !DILocation(line: 298, column: 28, scope: !3218)
!3222 = !DILocation(line: 298, column: 7, scope: !3218)
!3223 = !DILocation(line: 0, scope: !3104)
!3224 = !DILocation(line: 299, column: 43, scope: !3225)
!3225 = distinct !DILexicalBlock(scope: !3226, file: !511, line: 303, column: 5)
!3226 = distinct !DILexicalBlock(scope: !3104, file: !511, line: 302, column: 5)
!3227 = !DILocation(line: 299, column: 15, scope: !3225)
!3228 = !DILocalVariable(name: "tmp___6", scope: !3036, file: !511, line: 277, type: !76)
!3229 = !DILocation(line: 299, column: 11, scope: !3226)
!3230 = !DILocation(line: 299, column: 13, scope: !3231)
!3231 = distinct !DILexicalBlock(scope: !3104, file: !511, line: 299, column: 9)
!3232 = !DILocation(line: 299, column: 9, scope: !3104)
!3233 = !DILocation(line: 300, column: 40, scope: !3234)
!3234 = distinct !DILexicalBlock(scope: !3235, file: !511, line: 301, column: 7)
!3235 = distinct !DILexicalBlock(scope: !3236, file: !511, line: 300, column: 7)
!3236 = distinct !DILexicalBlock(scope: !3231, file: !511, line: 299, column: 20)
!3237 = !DILocation(line: 300, column: 48, scope: !3234)
!3238 = !DILocation(line: 300, column: 100, scope: !3234)
!3239 = !DILocation(line: 301, column: 28, scope: !3234)
!3240 = !DILocation(line: 301, column: 14, scope: !3234)
!3241 = !DILocation(line: 300, column: 7, scope: !3234)
!3242 = !DILocation(line: 301, column: 21, scope: !3243)
!3243 = distinct !DILexicalBlock(scope: !3235, file: !511, line: 303, column: 7)
!3244 = !DILocation(line: 301, column: 28, scope: !3243)
!3245 = !DILocation(line: 301, column: 34, scope: !3243)
!3246 = !DILocation(line: 301, column: 7, scope: !3243)
!3247 = !DILocation(line: 302, column: 24, scope: !3235)
!3248 = !DILocation(line: 302, column: 17, scope: !3235)
!3249 = !DILocation(line: 304, column: 5, scope: !3236)
!3250 = !DILocation(line: 303, column: 21, scope: !3251)
!3251 = distinct !DILexicalBlock(scope: !3252, file: !511, line: 306, column: 7)
!3252 = distinct !DILexicalBlock(scope: !3253, file: !511, line: 305, column: 7)
!3253 = distinct !DILexicalBlock(scope: !3231, file: !511, line: 304, column: 12)
!3254 = !DILocation(line: 303, column: 28, scope: !3251)
!3255 = !DILocation(line: 303, column: 7, scope: !3251)
!3256 = !DILocalVariable(name: "i", scope: !3036, file: !511, line: 271, type: !15)
!3257 = !DILocation(line: 305, column: 5, scope: !3258)
!3258 = distinct !DILexicalBlock(scope: !3259, file: !511, line: 307, column: 5)
!3259 = distinct !DILexicalBlock(scope: !3104, file: !511, line: 306, column: 5)
!3260 = !DILocation(line: 305, column: 15, scope: !3258)
!3261 = !DILocation(line: 305, column: 23, scope: !3262)
!3262 = distinct !DILexicalBlock(scope: !3263, file: !511, line: 305, column: 11)
!3263 = distinct !DILexicalBlock(scope: !3258, file: !511, line: 305, column: 15)
!3264 = !DILocation(line: 305, column: 16, scope: !3262)
!3265 = !DILocation(line: 305, column: 11, scope: !3263)
!3266 = !DILocation(line: 305, column: 9, scope: !3267)
!3267 = distinct !DILexicalBlock(scope: !3262, file: !511, line: 305, column: 31)
!3268 = !DILocation(line: 306, column: 21, scope: !3269)
!3269 = distinct !DILexicalBlock(scope: !3270, file: !511, line: 308, column: 7)
!3270 = distinct !DILexicalBlock(scope: !3263, file: !511, line: 307, column: 7)
!3271 = !DILocation(line: 306, column: 40, scope: !3269)
!3272 = !DILocation(line: 306, column: 35, scope: !3269)
!3273 = !DILocation(line: 306, column: 28, scope: !3269)
!3274 = !DILocation(line: 306, column: 52, scope: !3269)
!3275 = !DILocation(line: 306, column: 65, scope: !3269)
!3276 = !DILocation(line: 306, column: 71, scope: !3269)
!3277 = !DILocation(line: 306, column: 7, scope: !3269)
!3278 = !DILocation(line: 308, column: 17, scope: !3279)
!3279 = distinct !DILexicalBlock(scope: !3263, file: !511, line: 308, column: 11)
!3280 = !DILocation(line: 308, column: 30, scope: !3279)
!3281 = !DILocation(line: 308, column: 36, scope: !3279)
!3282 = !DILocation(line: 308, column: 11, scope: !3279)
!3283 = !DILocation(line: 308, column: 11, scope: !3263)
!3284 = !DILocation(line: 308, column: 48, scope: !3285)
!3285 = distinct !DILexicalBlock(scope: !3286, file: !511, line: 310, column: 9)
!3286 = distinct !DILexicalBlock(scope: !3287, file: !511, line: 309, column: 9)
!3287 = distinct !DILexicalBlock(scope: !3279, file: !511, line: 308, column: 43)
!3288 = !DILocation(line: 308, column: 61, scope: !3285)
!3289 = !DILocation(line: 308, column: 67, scope: !3285)
!3290 = !DILocation(line: 308, column: 19, scope: !3285)
!3291 = !DILocalVariable(name: "tmp___8", scope: !3036, file: !511, line: 279, type: !14)
!3292 = !DILocation(line: 308, column: 21, scope: !3293)
!3293 = distinct !DILexicalBlock(scope: !3287, file: !511, line: 308, column: 13)
!3294 = !DILocation(line: 308, column: 13, scope: !3287)
!3295 = !DILocation(line: 310, column: 50, scope: !3296)
!3296 = distinct !DILexicalBlock(scope: !3297, file: !511, line: 310, column: 11)
!3297 = distinct !DILexicalBlock(scope: !3298, file: !511, line: 309, column: 11)
!3298 = distinct !DILexicalBlock(scope: !3293, file: !511, line: 308, column: 27)
!3299 = !DILocation(line: 310, column: 63, scope: !3296)
!3300 = !DILocation(line: 310, column: 69, scope: !3296)
!3301 = !DILocation(line: 310, column: 21, scope: !3296)
!3302 = !DILocalVariable(name: "tmp___7", scope: !3036, file: !511, line: 278, type: !76)
!3303 = !DILocation(line: 310, column: 33, scope: !3297)
!3304 = !DILocation(line: 310, column: 17, scope: !3297)
!3305 = !DILocation(line: 311, column: 44, scope: !3306)
!3306 = distinct !DILexicalBlock(scope: !3297, file: !511, line: 311, column: 11)
!3307 = !DILocation(line: 311, column: 52, scope: !3306)
!3308 = !DILocation(line: 311, column: 105, scope: !3306)
!3309 = !DILocation(line: 311, column: 118, scope: !3306)
!3310 = !DILocation(line: 311, column: 124, scope: !3306)
!3311 = !DILocation(line: 312, column: 18, scope: !3306)
!3312 = !DILocation(line: 311, column: 11, scope: !3306)
!3313 = !DILocation(line: 312, column: 25, scope: !3314)
!3314 = distinct !DILexicalBlock(scope: !3297, file: !511, line: 314, column: 11)
!3315 = !DILocation(line: 312, column: 45, scope: !3314)
!3316 = !DILocation(line: 312, column: 40, scope: !3314)
!3317 = !DILocation(line: 312, column: 50, scope: !3314)
!3318 = !DILocation(line: 312, column: 32, scope: !3314)
!3319 = !DILocation(line: 312, column: 57, scope: !3314)
!3320 = !DILocation(line: 312, column: 11, scope: !3314)
!3321 = !DILocation(line: 314, column: 21, scope: !3297)
!3322 = !DILocation(line: 316, column: 9, scope: !3298)
!3323 = !DILocation(line: 315, column: 25, scope: !3324)
!3324 = distinct !DILexicalBlock(scope: !3325, file: !511, line: 318, column: 11)
!3325 = distinct !DILexicalBlock(scope: !3326, file: !511, line: 317, column: 11)
!3326 = distinct !DILexicalBlock(scope: !3293, file: !511, line: 316, column: 16)
!3327 = !DILocation(line: 315, column: 45, scope: !3324)
!3328 = !DILocation(line: 315, column: 40, scope: !3324)
!3329 = !DILocation(line: 315, column: 50, scope: !3324)
!3330 = !DILocation(line: 315, column: 32, scope: !3324)
!3331 = !DILocation(line: 315, column: 11, scope: !3324)
!3332 = !DILocation(line: 319, column: 7, scope: !3287)
!3333 = !DILocation(line: 315, column: 23, scope: !3334)
!3334 = distinct !DILexicalBlock(scope: !3335, file: !511, line: 321, column: 9)
!3335 = distinct !DILexicalBlock(scope: !3336, file: !511, line: 320, column: 9)
!3336 = distinct !DILexicalBlock(scope: !3279, file: !511, line: 319, column: 14)
!3337 = !DILocation(line: 315, column: 43, scope: !3334)
!3338 = !DILocation(line: 315, column: 38, scope: !3334)
!3339 = !DILocation(line: 315, column: 48, scope: !3334)
!3340 = !DILocation(line: 315, column: 30, scope: !3334)
!3341 = !DILocation(line: 315, column: 9, scope: !3334)
!3342 = !DILocation(line: 305, column: 9, scope: !3263)
!3343 = distinct !{!3343, !3257, !3344}
!3344 = !DILocation(line: 306, column: 5, scope: !3258)
!3345 = !DILocation(line: 308, column: 5, scope: !3258)
!3346 = !DILocation(line: 317, column: 43, scope: !3347)
!3347 = distinct !DILexicalBlock(scope: !3348, file: !511, line: 312, column: 5)
!3348 = distinct !DILexicalBlock(scope: !3104, file: !511, line: 311, column: 5)
!3349 = !DILocation(line: 317, column: 47, scope: !3347)
!3350 = !DILocation(line: 317, column: 91, scope: !3347)
!3351 = !DILocation(line: 318, column: 12, scope: !3347)
!3352 = !DILocation(line: 317, column: 5, scope: !3347)
!3353 = !DILocation(line: 318, column: 12, scope: !3348)
!3354 = !DILocation(line: 320, column: 19, scope: !3355)
!3355 = distinct !DILexicalBlock(scope: !3348, file: !511, line: 319, column: 5)
!3356 = !DILocation(line: 320, column: 26, scope: !3355)
!3357 = !DILocation(line: 320, column: 52, scope: !3355)
!3358 = !DILocation(line: 320, column: 65, scope: !3355)
!3359 = !DILocation(line: 320, column: 31, scope: !3355)
!3360 = !DILocation(line: 320, column: 5, scope: !3355)
!3361 = !DILocation(line: 321, column: 19, scope: !3362)
!3362 = distinct !DILexicalBlock(scope: !3348, file: !511, line: 322, column: 5)
!3363 = !DILocation(line: 321, column: 26, scope: !3362)
!3364 = !DILocation(line: 321, column: 37, scope: !3362)
!3365 = !DILocation(line: 321, column: 5, scope: !3362)
!3366 = !DILocation(line: 322, column: 51, scope: !3367)
!3367 = distinct !DILexicalBlock(scope: !3348, file: !511, line: 323, column: 5)
!3368 = !DILocation(line: 322, column: 61, scope: !3367)
!3369 = !DILocation(line: 322, column: 15, scope: !3367)
!3370 = !DILocalVariable(name: "tmp___9", scope: !3036, file: !511, line: 280, type: !22)
!3371 = !DILocation(line: 322, column: 16, scope: !3348)
!3372 = !DILocation(line: 322, column: 10, scope: !3348)
!3373 = !DILocation(line: 322, column: 14, scope: !3348)
!3374 = !DILocation(line: 323, column: 19, scope: !3375)
!3375 = distinct !DILexicalBlock(scope: !3348, file: !511, line: 323, column: 5)
!3376 = !DILocation(line: 323, column: 26, scope: !3375)
!3377 = !DILocation(line: 323, column: 37, scope: !3375)
!3378 = !DILocation(line: 323, column: 5, scope: !3375)
!3379 = !DILocation(line: 324, column: 52, scope: !3380)
!3380 = distinct !DILexicalBlock(scope: !3348, file: !511, line: 325, column: 5)
!3381 = !DILocation(line: 324, column: 78, scope: !3380)
!3382 = !DILocation(line: 324, column: 60, scope: !3380)
!3383 = !DILocation(line: 324, column: 16, scope: !3380)
!3384 = !DILocalVariable(name: "tmp___10", scope: !3036, file: !511, line: 281, type: !22)
!3385 = !DILocation(line: 324, column: 14, scope: !3348)
!3386 = !DILocalVariable(name: "hdrcrc", scope: !3036, file: !511, line: 273, type: !83)
!3387 = !DILocation(line: 325, column: 19, scope: !3388)
!3388 = distinct !DILexicalBlock(scope: !3348, file: !511, line: 325, column: 5)
!3389 = !DILocation(line: 325, column: 26, scope: !3388)
!3390 = !DILocation(line: 325, column: 5, scope: !3388)
!3391 = !DILocation(line: 328, column: 3, scope: !3104)
!3392 = !DILocation(line: 328, column: 12, scope: !3393)
!3393 = distinct !DILexicalBlock(scope: !3100, file: !511, line: 328, column: 7)
!3394 = !DILocation(line: 328, column: 20, scope: !3393)
!3395 = !DILocation(line: 328, column: 7, scope: !3100)
!3396 = !DILocation(line: 329, column: 12, scope: !3397)
!3397 = distinct !DILexicalBlock(scope: !3393, file: !511, line: 328, column: 27)
!3398 = !DILocation(line: 329, column: 16, scope: !3397)
!3399 = !DILocation(line: 329, column: 21, scope: !3397)
!3400 = !DILocation(line: 330, column: 3, scope: !3397)
!3401 = !DILocation(line: 332, column: 9, scope: !3402)
!3402 = distinct !DILexicalBlock(scope: !3403, file: !511, line: 332, column: 3)
!3403 = distinct !DILexicalBlock(scope: !3063, file: !511, line: 331, column: 3)
!3404 = !DILocation(line: 332, column: 44, scope: !3402)
!3405 = !DILocation(line: 332, column: 49, scope: !3402)
!3406 = !DILocation(line: 332, column: 3, scope: !3402)
!3407 = !DILocation(line: 333, column: 9, scope: !3408)
!3408 = distinct !DILexicalBlock(scope: !3403, file: !511, line: 334, column: 3)
!3409 = !DILocation(line: 333, column: 3, scope: !3408)
!3410 = !DILocation(line: 335, column: 3, scope: !3063)
!3411 = !DILocation(line: 337, column: 1, scope: !3036)
!3412 = distinct !DISubprogram(name: "writeint", scope: !511, file: !511, line: 233, type: !3413, scopeLine: 235, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !666)
!3413 = !DISubroutineType(types: !3414)
!3414 = !{null, !16, !83, !15}
!3415 = !DILocalVariable(name: "buf___3", arg: 1, scope: !3412, file: !511, line: 233, type: !16)
!3416 = !DILocation(line: 0, scope: !3412)
!3417 = !DILocalVariable(name: "val", arg: 2, scope: !3412, file: !511, line: 233, type: !83)
!3418 = !DILocalVariable(name: "bytes", arg: 3, scope: !3412, file: !511, line: 234, type: !15)
!3419 = !DILocalVariable(name: "shift", scope: !3412, file: !511, line: 236, type: !15)
!3420 = !DILocalVariable(name: "i", scope: !3412, file: !511, line: 237, type: !15)
!3421 = !DILocation(line: 238, column: 3, scope: !3422)
!3422 = distinct !DILexicalBlock(scope: !3423, file: !511, line: 240, column: 3)
!3423 = distinct !DILexicalBlock(scope: !3424, file: !511, line: 239, column: 3)
!3424 = distinct !DILexicalBlock(scope: !3412, file: !511, line: 239, column: 3)
!3425 = !DILocation(line: 0, scope: !3424)
!3426 = !DILocation(line: 238, column: 13, scope: !3422)
!3427 = !DILocation(line: 238, column: 14, scope: !3428)
!3428 = distinct !DILexicalBlock(scope: !3429, file: !511, line: 238, column: 9)
!3429 = distinct !DILexicalBlock(scope: !3422, file: !511, line: 238, column: 13)
!3430 = !DILocation(line: 238, column: 9, scope: !3429)
!3431 = !DILocation(line: 238, column: 7, scope: !3432)
!3432 = distinct !DILexicalBlock(scope: !3428, file: !511, line: 238, column: 24)
!3433 = !DILocation(line: 239, column: 35, scope: !3429)
!3434 = !DILocation(line: 239, column: 45, scope: !3429)
!3435 = !DILocation(line: 239, column: 22, scope: !3429)
!3436 = !DILocation(line: 239, column: 15, scope: !3429)
!3437 = !DILocation(line: 239, column: 20, scope: !3429)
!3438 = !DILocation(line: 240, column: 11, scope: !3429)
!3439 = !DILocation(line: 238, column: 7, scope: !3429)
!3440 = distinct !{!3440, !3421, !3441}
!3441 = !DILocation(line: 239, column: 3, scope: !3422)
!3442 = !DILocation(line: 241, column: 3, scope: !3422)
!3443 = !DILocation(line: 242, column: 3, scope: !3424)
!3444 = distinct !DISubprogram(name: "gbs_open", scope: !511, file: !511, line: 338, type: !3445, scopeLine: 339, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !666)
!3445 = !DISubroutineType(types: !3446)
!3446 = !{!96, !16}
!3447 = !DILocalVariable(name: "name", arg: 1, scope: !3444, file: !511, line: 338, type: !16)
!3448 = !DILocation(line: 0, scope: !3444)
!3449 = !DILocalVariable(name: "st", scope: !3444, file: !511, line: 342, type: !3450)
!3450 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !3451, line: 43, size: 1152, elements: !3452)
!3451 = !DIFile(filename: "/usr/include/bits/stat.h", directory: "")
!3452 = !{!3453, !3457, !3458, !3460, !3462, !3464, !3465, !3467, !3468, !3469, !3470, !3472, !3474, !3479, !3480, !3481, !3482}
!3453 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !3450, file: !3451, line: 44, baseType: !3454, size: 64)
!3454 = !DIDerivedType(tag: DW_TAG_typedef, name: "__dev_t", file: !55, line: 134, baseType: !3455)
!3455 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u_quad_t", file: !55, line: 57, baseType: !3456)
!3456 = !DIBasicType(name: "long long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!3457 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !3450, file: !3451, line: 45, baseType: !57, size: 16, offset: 64)
!3458 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !3450, file: !3451, line: 46, baseType: !3459, size: 64, offset: 128)
!3459 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino_t", file: !55, line: 137, baseType: !22)
!3460 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !3450, file: !3451, line: 47, baseType: !3461, size: 32, offset: 192)
!3461 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mode_t", file: !55, line: 139, baseType: !7)
!3462 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !3450, file: !3451, line: 48, baseType: !3463, size: 32, offset: 224)
!3463 = !DIDerivedType(tag: DW_TAG_typedef, name: "__nlink_t", file: !55, line: 140, baseType: !7)
!3464 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !3450, file: !3451, line: 49, baseType: !224, size: 32, offset: 256)
!3465 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !3450, file: !3451, line: 50, baseType: !3466, size: 32, offset: 288)
!3466 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gid_t", file: !55, line: 136, baseType: !7)
!3467 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !3450, file: !3451, line: 51, baseType: !3454, size: 64, offset: 320)
!3468 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !3450, file: !3451, line: 52, baseType: !57, size: 16, offset: 384)
!3469 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !3450, file: !3451, line: 53, baseType: !54, size: 64, offset: 448)
!3470 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !3450, file: !3451, line: 54, baseType: !3471, size: 64, offset: 512)
!3471 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blksize_t", file: !55, line: 164, baseType: !15)
!3472 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !3450, file: !3451, line: 55, baseType: !3473, size: 64, offset: 576)
!3473 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt_t", file: !55, line: 169, baseType: !15)
!3474 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !3450, file: !3451, line: 56, baseType: !3475, size: 128, offset: 640)
!3475 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !185, line: 120, size: 128, elements: !3476)
!3476 = !{!3477, !3478}
!3477 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !3475, file: !185, line: 121, baseType: !186, size: 64)
!3478 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !3475, file: !185, line: 122, baseType: !15, size: 64, offset: 64)
!3479 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !3450, file: !3451, line: 57, baseType: !3475, size: 128, offset: 768)
!3480 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !3450, file: !3451, line: 58, baseType: !3475, size: 128, offset: 896)
!3481 = !DIDerivedType(tag: DW_TAG_member, name: "__unused4", scope: !3450, file: !3451, line: 59, baseType: !22, size: 64, offset: 1024)
!3482 = !DIDerivedType(tag: DW_TAG_member, name: "__unused5", scope: !3450, file: !3451, line: 60, baseType: !22, size: 64, offset: 1088)
!3483 = !DILocation(line: 342, column: 15, scope: !3444)
!3484 = !DILocalVariable(name: "__cil_tmp43", scope: !3444, file: !511, line: 381, type: !23)
!3485 = !DILocation(line: 381, column: 9, scope: !3444)
!3486 = !DILocalVariable(name: "__cil_tmp44", scope: !3444, file: !511, line: 382, type: !16)
!3487 = !DILocation(line: 382, column: 9, scope: !3444)
!3488 = !DILocalVariable(name: "__cil_tmp45", scope: !3444, file: !511, line: 383, type: !16)
!3489 = !DILocation(line: 383, column: 9, scope: !3444)
!3490 = !DILocalVariable(name: "__cil_tmp46", scope: !3444, file: !511, line: 384, type: !16)
!3491 = !DILocation(line: 384, column: 9, scope: !3444)
!3492 = !DILocalVariable(name: "__cil_tmp47", scope: !3444, file: !511, line: 385, type: !16)
!3493 = !DILocation(line: 385, column: 9, scope: !3444)
!3494 = !DILocalVariable(name: "__cil_tmp48", scope: !3444, file: !511, line: 386, type: !16)
!3495 = !DILocation(line: 386, column: 9, scope: !3444)
!3496 = !DILocalVariable(name: "__cil_tmp49", scope: !3444, file: !511, line: 387, type: !16)
!3497 = !DILocation(line: 387, column: 9, scope: !3444)
!3498 = !DILocalVariable(name: "__cil_tmp50", scope: !3444, file: !511, line: 388, type: !16)
!3499 = !DILocation(line: 388, column: 9, scope: !3444)
!3500 = !DILocation(line: 342, column: 9, scope: !3501)
!3501 = distinct !DILexicalBlock(scope: !3502, file: !511, line: 392, column: 3)
!3502 = distinct !DILexicalBlock(scope: !3503, file: !511, line: 391, column: 3)
!3503 = distinct !DILexicalBlock(scope: !3444, file: !511, line: 390, column: 3)
!3504 = !DILocalVariable(name: "tmp", scope: !3444, file: !511, line: 344, type: !23)
!3505 = !DILocation(line: 342, column: 9, scope: !3502)
!3506 = !DILocalVariable(name: "gbs", scope: !3444, file: !511, line: 343, type: !96)
!3507 = !DILocalVariable(name: "buf2", scope: !3444, file: !511, line: 346, type: !16)
!3508 = !DILocalVariable(name: "have_ehdr", scope: !3444, file: !511, line: 347, type: !15)
!3509 = !DILocation(line: 347, column: 10, scope: !3510)
!3510 = distinct !DILexicalBlock(scope: !3502, file: !511, line: 346, column: 3)
!3511 = !DILocation(line: 347, column: 3, scope: !3510)
!3512 = !DILocation(line: 348, column: 8, scope: !3502)
!3513 = !DILocation(line: 348, column: 24, scope: !3502)
!3514 = !DILocation(line: 349, column: 8, scope: !3502)
!3515 = !DILocation(line: 349, column: 24, scope: !3502)
!3516 = !DILocation(line: 350, column: 8, scope: !3502)
!3517 = !DILocation(line: 350, column: 12, scope: !3502)
!3518 = !DILocation(line: 351, column: 8, scope: !3502)
!3519 = !DILocation(line: 351, column: 16, scope: !3502)
!3520 = !DILocation(line: 352, column: 13, scope: !3521)
!3521 = distinct !DILexicalBlock(scope: !3502, file: !511, line: 352, column: 3)
!3522 = !DILocalVariable(name: "tmp___3", scope: !3444, file: !511, line: 351, type: !14)
!3523 = !DILocation(line: 352, column: 12, scope: !3502)
!3524 = !DILocalVariable(name: "fd___2", scope: !3444, file: !511, line: 340, type: !15)
!3525 = !DILocation(line: 352, column: 14, scope: !3526)
!3526 = distinct !DILexicalBlock(scope: !3503, file: !511, line: 352, column: 7)
!3527 = !DILocation(line: 352, column: 7, scope: !3503)
!3528 = !DILocation(line: 353, column: 15, scope: !3529)
!3529 = distinct !DILexicalBlock(scope: !3530, file: !511, line: 354, column: 5)
!3530 = distinct !DILexicalBlock(scope: !3531, file: !511, line: 353, column: 5)
!3531 = distinct !DILexicalBlock(scope: !3526, file: !511, line: 352, column: 22)
!3532 = !DILocalVariable(name: "tmp___0", scope: !3444, file: !511, line: 348, type: !3087)
!3533 = !DILocation(line: 353, column: 24, scope: !3534)
!3534 = distinct !DILexicalBlock(scope: !3530, file: !511, line: 355, column: 5)
!3535 = !DILocation(line: 353, column: 15, scope: !3534)
!3536 = !DILocalVariable(name: "tmp___1", scope: !3444, file: !511, line: 349, type: !16)
!3537 = !DILocation(line: 353, column: 15, scope: !3538)
!3538 = distinct !DILexicalBlock(scope: !3530, file: !511, line: 355, column: 5)
!3539 = !DILocalVariable(name: "tmp___2", scope: !3444, file: !511, line: 350, type: !16)
!3540 = !DILocation(line: 353, column: 38, scope: !3541)
!3541 = distinct !DILexicalBlock(scope: !3530, file: !511, line: 355, column: 5)
!3542 = !DILocation(line: 353, column: 5, scope: !3541)
!3543 = !DILocation(line: 354, column: 5, scope: !3531)
!3544 = !DILocation(line: 356, column: 9, scope: !3545)
!3545 = distinct !DILexicalBlock(scope: !3546, file: !511, line: 357, column: 3)
!3546 = distinct !DILexicalBlock(scope: !3503, file: !511, line: 356, column: 3)
!3547 = !DILocation(line: 356, column: 3, scope: !3545)
!3548 = !DILocation(line: 357, column: 32, scope: !3549)
!3549 = distinct !DILexicalBlock(scope: !3546, file: !511, line: 358, column: 3)
!3550 = !DILocation(line: 357, column: 20, scope: !3549)
!3551 = !DILocation(line: 357, column: 13, scope: !3549)
!3552 = !DILocalVariable(name: "tmp___4", scope: !3444, file: !511, line: 352, type: !23)
!3553 = !DILocalVariable(name: "buf___3", scope: !3444, file: !511, line: 345, type: !16)
!3554 = !DILocation(line: 357, column: 8, scope: !3546)
!3555 = !DILocation(line: 357, column: 12, scope: !3546)
!3556 = !DILocation(line: 358, column: 8, scope: !3557)
!3557 = distinct !DILexicalBlock(scope: !3546, file: !511, line: 358, column: 3)
!3558 = !DILocation(line: 358, column: 51, scope: !3557)
!3559 = !DILocation(line: 358, column: 39, scope: !3557)
!3560 = !DILocation(line: 358, column: 3, scope: !3557)
!3561 = !DILocation(line: 359, column: 13, scope: !3562)
!3562 = distinct !DILexicalBlock(scope: !3546, file: !511, line: 360, column: 3)
!3563 = !DILocalVariable(name: "tmp___6", scope: !3444, file: !511, line: 354, type: !14)
!3564 = !DILocation(line: 359, column: 15, scope: !3565)
!3565 = distinct !DILexicalBlock(scope: !3503, file: !511, line: 359, column: 7)
!3566 = !DILocation(line: 359, column: 7, scope: !3503)
!3567 = !DILocation(line: 360, column: 15, scope: !3568)
!3568 = distinct !DILexicalBlock(scope: !3569, file: !511, line: 361, column: 5)
!3569 = distinct !DILexicalBlock(scope: !3570, file: !511, line: 360, column: 5)
!3570 = distinct !DILexicalBlock(scope: !3565, file: !511, line: 359, column: 21)
!3571 = !DILocalVariable(name: "tmp___5", scope: !3444, file: !511, line: 353, type: !16)
!3572 = !DILocation(line: 360, column: 38, scope: !3573)
!3573 = distinct !DILexicalBlock(scope: !3569, file: !511, line: 362, column: 5)
!3574 = !DILocation(line: 360, column: 5, scope: !3573)
!3575 = !DILocation(line: 361, column: 5, scope: !3570)
!3576 = !DILocation(line: 363, column: 35, scope: !3503)
!3577 = !DILocation(line: 363, column: 25, scope: !3503)
!3578 = !DILocation(line: 363, column: 18, scope: !3503)
!3579 = !DILocation(line: 363, column: 8, scope: !3503)
!3580 = !DILocation(line: 363, column: 16, scope: !3503)
!3581 = !DILocation(line: 364, column: 12, scope: !3582)
!3582 = distinct !DILexicalBlock(scope: !3503, file: !511, line: 364, column: 7)
!3583 = !DILocation(line: 364, column: 20, scope: !3582)
!3584 = !DILocation(line: 364, column: 7, scope: !3503)
!3585 = !DILocation(line: 365, column: 15, scope: !3586)
!3586 = distinct !DILexicalBlock(scope: !3587, file: !511, line: 366, column: 5)
!3587 = distinct !DILexicalBlock(scope: !3588, file: !511, line: 365, column: 5)
!3588 = distinct !DILexicalBlock(scope: !3582, file: !511, line: 364, column: 27)
!3589 = !DILocalVariable(name: "tmp___7", scope: !3444, file: !511, line: 355, type: !16)
!3590 = !DILocation(line: 365, column: 38, scope: !3591)
!3591 = distinct !DILexicalBlock(scope: !3587, file: !511, line: 367, column: 5)
!3592 = !DILocation(line: 366, column: 29, scope: !3591)
!3593 = !DILocation(line: 366, column: 19, scope: !3591)
!3594 = !DILocation(line: 366, column: 13, scope: !3591)
!3595 = !DILocation(line: 365, column: 5, scope: !3591)
!3596 = !DILocation(line: 366, column: 5, scope: !3588)
!3597 = !DILocation(line: 369, column: 33, scope: !3598)
!3598 = distinct !DILexicalBlock(scope: !3503, file: !511, line: 368, column: 3)
!3599 = !DILocation(line: 369, column: 23, scope: !3598)
!3600 = !DILocation(line: 369, column: 16, scope: !3598)
!3601 = !DILocation(line: 369, column: 8, scope: !3598)
!3602 = !DILocation(line: 369, column: 14, scope: !3598)
!3603 = !DILocation(line: 370, column: 39, scope: !3598)
!3604 = !DILocation(line: 370, column: 29, scope: !3598)
!3605 = !DILocation(line: 370, column: 22, scope: !3598)
!3606 = !DILocation(line: 370, column: 8, scope: !3598)
!3607 = !DILocation(line: 370, column: 20, scope: !3598)
!3608 = !DILocation(line: 371, column: 29, scope: !3609)
!3609 = distinct !DILexicalBlock(scope: !3598, file: !511, line: 371, column: 3)
!3610 = !DILocation(line: 371, column: 13, scope: !3609)
!3611 = !DILocalVariable(name: "tmp___8", scope: !3444, file: !511, line: 356, type: !83)
!3612 = !DILocation(line: 371, column: 15, scope: !3598)
!3613 = !DILocation(line: 371, column: 8, scope: !3598)
!3614 = !DILocation(line: 371, column: 13, scope: !3598)
!3615 = !DILocation(line: 372, column: 29, scope: !3616)
!3616 = distinct !DILexicalBlock(scope: !3598, file: !511, line: 372, column: 3)
!3617 = !DILocation(line: 372, column: 13, scope: !3616)
!3618 = !DILocalVariable(name: "tmp___9", scope: !3444, file: !511, line: 357, type: !83)
!3619 = !DILocation(line: 372, column: 15, scope: !3598)
!3620 = !DILocation(line: 372, column: 8, scope: !3598)
!3621 = !DILocation(line: 372, column: 13, scope: !3598)
!3622 = !DILocation(line: 373, column: 30, scope: !3623)
!3623 = distinct !DILexicalBlock(scope: !3598, file: !511, line: 373, column: 3)
!3624 = !DILocation(line: 373, column: 14, scope: !3623)
!3625 = !DILocalVariable(name: "tmp___10", scope: !3444, file: !511, line: 358, type: !83)
!3626 = !DILocation(line: 373, column: 15, scope: !3598)
!3627 = !DILocation(line: 373, column: 8, scope: !3598)
!3628 = !DILocation(line: 373, column: 13, scope: !3598)
!3629 = !DILocation(line: 374, column: 30, scope: !3630)
!3630 = distinct !DILexicalBlock(scope: !3598, file: !511, line: 374, column: 3)
!3631 = !DILocation(line: 374, column: 14, scope: !3630)
!3632 = !DILocalVariable(name: "tmp___11", scope: !3444, file: !511, line: 359, type: !83)
!3633 = !DILocation(line: 374, column: 16, scope: !3598)
!3634 = !DILocation(line: 374, column: 8, scope: !3598)
!3635 = !DILocation(line: 374, column: 14, scope: !3598)
!3636 = !DILocation(line: 375, column: 34, scope: !3598)
!3637 = !DILocation(line: 375, column: 24, scope: !3598)
!3638 = !DILocation(line: 375, column: 8, scope: !3598)
!3639 = !DILocation(line: 375, column: 12, scope: !3598)
!3640 = !DILocation(line: 376, column: 34, scope: !3598)
!3641 = !DILocation(line: 376, column: 24, scope: !3598)
!3642 = !DILocation(line: 376, column: 8, scope: !3598)
!3643 = !DILocation(line: 376, column: 12, scope: !3598)
!3644 = !DILocation(line: 378, column: 41, scope: !3645)
!3645 = distinct !DILexicalBlock(scope: !3598, file: !511, line: 377, column: 3)
!3646 = !DILocation(line: 378, column: 35, scope: !3645)
!3647 = !DILocation(line: 378, column: 95, scope: !3645)
!3648 = !DILocation(line: 378, column: 3, scope: !3645)
!3649 = !DILocation(line: 379, column: 41, scope: !3650)
!3650 = distinct !DILexicalBlock(scope: !3598, file: !511, line: 381, column: 3)
!3651 = !DILocation(line: 379, column: 36, scope: !3650)
!3652 = !DILocation(line: 379, column: 51, scope: !3650)
!3653 = !DILocation(line: 379, column: 100, scope: !3650)
!3654 = !DILocation(line: 379, column: 3, scope: !3650)
!3655 = !DILocation(line: 380, column: 41, scope: !3656)
!3656 = distinct !DILexicalBlock(scope: !3598, file: !511, line: 382, column: 3)
!3657 = !DILocation(line: 380, column: 36, scope: !3656)
!3658 = !DILocation(line: 380, column: 51, scope: !3656)
!3659 = !DILocation(line: 380, column: 100, scope: !3656)
!3660 = !DILocation(line: 380, column: 3, scope: !3656)
!3661 = !DILocation(line: 381, column: 21, scope: !3598)
!3662 = !DILocation(line: 381, column: 16, scope: !3598)
!3663 = !DILocation(line: 381, column: 8, scope: !3598)
!3664 = !DILocation(line: 381, column: 14, scope: !3598)
!3665 = !DILocation(line: 382, column: 22, scope: !3598)
!3666 = !DILocation(line: 382, column: 17, scope: !3598)
!3667 = !DILocation(line: 382, column: 32, scope: !3598)
!3668 = !DILocation(line: 382, column: 8, scope: !3598)
!3669 = !DILocation(line: 382, column: 15, scope: !3598)
!3670 = !DILocation(line: 383, column: 25, scope: !3598)
!3671 = !DILocation(line: 383, column: 20, scope: !3598)
!3672 = !DILocation(line: 383, column: 35, scope: !3598)
!3673 = !DILocation(line: 383, column: 8, scope: !3598)
!3674 = !DILocation(line: 383, column: 18, scope: !3598)
!3675 = !DILocation(line: 384, column: 23, scope: !3598)
!3676 = !DILocation(line: 384, column: 8, scope: !3598)
!3677 = !DILocation(line: 384, column: 13, scope: !3598)
!3678 = !DILocation(line: 385, column: 31, scope: !3598)
!3679 = !DILocation(line: 385, column: 19, scope: !3598)
!3680 = !DILocation(line: 385, column: 8, scope: !3598)
!3681 = !DILocation(line: 385, column: 17, scope: !3598)
!3682 = !DILocation(line: 387, column: 52, scope: !3683)
!3683 = distinct !DILexicalBlock(scope: !3598, file: !511, line: 386, column: 3)
!3684 = !DILocation(line: 387, column: 58, scope: !3683)
!3685 = !DILocation(line: 387, column: 21, scope: !3683)
!3686 = !DILocation(line: 387, column: 14, scope: !3683)
!3687 = !DILocalVariable(name: "tmp___12", scope: !3444, file: !511, line: 360, type: !23)
!3688 = !DILocation(line: 387, column: 23, scope: !3598)
!3689 = !DILocation(line: 387, column: 8, scope: !3598)
!3690 = !DILocation(line: 387, column: 21, scope: !3598)
!3691 = !DILocation(line: 388, column: 23, scope: !3692)
!3692 = distinct !DILexicalBlock(scope: !3598, file: !511, line: 388, column: 3)
!3693 = !DILocation(line: 388, column: 10, scope: !3692)
!3694 = !DILocation(line: 388, column: 71, scope: !3692)
!3695 = !DILocation(line: 388, column: 77, scope: !3692)
!3696 = !DILocation(line: 388, column: 40, scope: !3692)
!3697 = !DILocation(line: 388, column: 3, scope: !3692)
!3698 = !DILocation(line: 389, column: 52, scope: !3598)
!3699 = !DILocation(line: 389, column: 42, scope: !3598)
!3700 = !DILocation(line: 389, column: 36, scope: !3598)
!3701 = !DILocation(line: 389, column: 78, scope: !3598)
!3702 = !DILocation(line: 389, column: 68, scope: !3598)
!3703 = !DILocation(line: 389, column: 62, scope: !3598)
!3704 = !DILocation(line: 389, column: 85, scope: !3598)
!3705 = !DILocation(line: 389, column: 59, scope: !3598)
!3706 = !DILocation(line: 389, column: 92, scope: !3598)
!3707 = !DILocation(line: 389, column: 18, scope: !3598)
!3708 = !DILocation(line: 389, column: 8, scope: !3598)
!3709 = !DILocation(line: 389, column: 16, scope: !3598)
!3710 = !DILocation(line: 390, column: 20, scope: !3711)
!3711 = distinct !DILexicalBlock(scope: !3503, file: !511, line: 390, column: 7)
!3712 = !DILocation(line: 390, column: 13, scope: !3711)
!3713 = !DILocation(line: 390, column: 52, scope: !3711)
!3714 = !DILocation(line: 390, column: 61, scope: !3711)
!3715 = !DILocation(line: 390, column: 30, scope: !3711)
!3716 = !DILocation(line: 390, column: 28, scope: !3711)
!3717 = !DILocation(line: 390, column: 7, scope: !3503)
!3718 = !DILocation(line: 390, column: 65, scope: !3719)
!3719 = distinct !DILexicalBlock(scope: !3720, file: !511, line: 392, column: 5)
!3720 = distinct !DILexicalBlock(scope: !3721, file: !511, line: 391, column: 5)
!3721 = distinct !DILexicalBlock(scope: !3711, file: !511, line: 390, column: 68)
!3722 = !DILocation(line: 390, column: 58, scope: !3719)
!3723 = !DILocation(line: 390, column: 49, scope: !3719)
!3724 = !DILocation(line: 390, column: 16, scope: !3719)
!3725 = !DILocalVariable(name: "tmp___16", scope: !3444, file: !511, line: 367, type: !14)
!3726 = !DILocation(line: 390, column: 18, scope: !3727)
!3727 = distinct !DILexicalBlock(scope: !3721, file: !511, line: 390, column: 9)
!3728 = !DILocation(line: 390, column: 9, scope: !3721)
!3729 = !DILocation(line: 394, column: 26, scope: !3730)
!3730 = distinct !DILexicalBlock(scope: !3731, file: !511, line: 391, column: 7)
!3731 = distinct !DILexicalBlock(scope: !3727, file: !511, line: 390, column: 24)
!3732 = !DILocation(line: 394, column: 38, scope: !3730)
!3733 = !DILocation(line: 394, column: 31, scope: !3730)
!3734 = !DILocation(line: 394, column: 12, scope: !3730)
!3735 = !DILocation(line: 394, column: 19, scope: !3730)
!3736 = !DILocation(line: 395, column: 31, scope: !3737)
!3737 = distinct !DILexicalBlock(scope: !3730, file: !511, line: 395, column: 7)
!3738 = !DILocation(line: 395, column: 38, scope: !3737)
!3739 = !DILocation(line: 395, column: 18, scope: !3737)
!3740 = !DILocalVariable(name: "tmp___13", scope: !3444, file: !511, line: 364, type: !83)
!3741 = !DILocation(line: 395, column: 26, scope: !3730)
!3742 = !DILocalVariable(name: "ehdrlen", scope: !3444, file: !511, line: 363, type: !83)
!3743 = !DILocation(line: 396, column: 26, scope: !3744)
!3744 = distinct !DILexicalBlock(scope: !3730, file: !511, line: 396, column: 7)
!3745 = !DILocation(line: 396, column: 33, scope: !3744)
!3746 = !DILocation(line: 396, column: 13, scope: !3744)
!3747 = !DILocalVariable(name: "crc", scope: !3444, file: !511, line: 361, type: !83)
!3748 = !DILocation(line: 397, column: 21, scope: !3749)
!3749 = distinct !DILexicalBlock(scope: !3730, file: !511, line: 398, column: 7)
!3750 = !DILocation(line: 397, column: 28, scope: !3749)
!3751 = !DILocation(line: 397, column: 7, scope: !3749)
!3752 = !DILocation(line: 399, column: 54, scope: !3753)
!3753 = distinct !DILexicalBlock(scope: !3730, file: !511, line: 399, column: 7)
!3754 = !DILocation(line: 399, column: 18, scope: !3753)
!3755 = !DILocalVariable(name: "tmp___15", scope: !3444, file: !511, line: 366, type: !22)
!3756 = !DILocation(line: 399, column: 17, scope: !3730)
!3757 = !DILocalVariable(name: "realcrc", scope: !3444, file: !511, line: 362, type: !83)
!3758 = !DILocation(line: 399, column: 19, scope: !3759)
!3759 = distinct !DILexicalBlock(scope: !3731, file: !511, line: 399, column: 11)
!3760 = !DILocation(line: 399, column: 11, scope: !3731)
!3761 = !DILocation(line: 401, column: 7, scope: !3762)
!3762 = distinct !DILexicalBlock(scope: !3759, file: !511, line: 399, column: 27)
!3763 = !DILocation(line: 402, column: 20, scope: !3764)
!3764 = distinct !DILexicalBlock(scope: !3765, file: !511, line: 403, column: 9)
!3765 = distinct !DILexicalBlock(scope: !3766, file: !511, line: 402, column: 9)
!3766 = distinct !DILexicalBlock(scope: !3759, file: !511, line: 401, column: 14)
!3767 = !DILocalVariable(name: "tmp___14", scope: !3444, file: !511, line: 365, type: !16)
!3768 = !DILocation(line: 402, column: 42, scope: !3769)
!3769 = distinct !DILexicalBlock(scope: !3765, file: !511, line: 404, column: 9)
!3770 = !DILocation(line: 402, column: 9, scope: !3769)
!3771 = !DILocation(line: 0, scope: !3503)
!3772 = !DILocation(line: 407, column: 5, scope: !3731)
!3773 = !DILocation(line: 408, column: 3, scope: !3721)
!3774 = !DILocation(line: 406, column: 7, scope: !3775)
!3775 = distinct !DILexicalBlock(scope: !3503, file: !511, line: 406, column: 7)
!3776 = !DILocation(line: 406, column: 7, scope: !3503)
!3777 = !DILocation(line: 407, column: 17, scope: !3778)
!3778 = distinct !DILexicalBlock(scope: !3779, file: !511, line: 407, column: 5)
!3779 = distinct !DILexicalBlock(scope: !3775, file: !511, line: 406, column: 18)
!3780 = !DILocation(line: 408, column: 34, scope: !3781)
!3781 = distinct !DILexicalBlock(scope: !3778, file: !511, line: 408, column: 5)
!3782 = !DILocation(line: 408, column: 21, scope: !3781)
!3783 = !DILocation(line: 408, column: 10, scope: !3781)
!3784 = !DILocation(line: 408, column: 19, scope: !3781)
!3785 = !DILocation(line: 409, column: 29, scope: !3786)
!3786 = distinct !DILexicalBlock(scope: !3778, file: !511, line: 410, column: 5)
!3787 = !DILocation(line: 409, column: 16, scope: !3786)
!3788 = !DILocation(line: 409, column: 10, scope: !3786)
!3789 = !DILocation(line: 409, column: 14, scope: !3786)
!3790 = !DILocation(line: 410, column: 19, scope: !3791)
!3791 = distinct !DILexicalBlock(scope: !3778, file: !511, line: 411, column: 5)
!3792 = !DILocation(line: 410, column: 5, scope: !3791)
!3793 = !DILocation(line: 413, column: 3, scope: !3779)
!3794 = !DILocation(line: 412, column: 43, scope: !3795)
!3795 = distinct !DILexicalBlock(scope: !3796, file: !511, line: 415, column: 5)
!3796 = distinct !DILexicalBlock(scope: !3797, file: !511, line: 414, column: 5)
!3797 = distinct !DILexicalBlock(scope: !3775, file: !511, line: 413, column: 10)
!3798 = !DILocation(line: 412, column: 38, scope: !3795)
!3799 = !DILocation(line: 412, column: 53, scope: !3795)
!3800 = !DILocation(line: 412, column: 102, scope: !3795)
!3801 = !DILocation(line: 412, column: 5, scope: !3795)
!3802 = !DILocation(line: 413, column: 40, scope: !3796)
!3803 = !DILocation(line: 413, column: 48, scope: !3796)
!3804 = !DILocation(line: 413, column: 10, scope: !3796)
!3805 = !DILocation(line: 413, column: 18, scope: !3796)
!3806 = !DILocation(line: 415, column: 59, scope: !3807)
!3807 = distinct !DILexicalBlock(scope: !3808, file: !511, line: 417, column: 3)
!3808 = distinct !DILexicalBlock(scope: !3503, file: !511, line: 416, column: 3)
!3809 = !DILocation(line: 415, column: 14, scope: !3807)
!3810 = !DILocalVariable(name: "tmp___17", scope: !3444, file: !511, line: 368, type: !22)
!3811 = !DILocation(line: 415, column: 17, scope: !3808)
!3812 = !DILocation(line: 415, column: 8, scope: !3808)
!3813 = !DILocation(line: 415, column: 15, scope: !3808)
!3814 = !DILocation(line: 416, column: 7, scope: !3815)
!3815 = distinct !DILexicalBlock(scope: !3503, file: !511, line: 416, column: 7)
!3816 = !DILocation(line: 416, column: 7, scope: !3503)
!3817 = !DILocation(line: 422, column: 10, scope: !3818)
!3818 = distinct !DILexicalBlock(scope: !3819, file: !511, line: 417, column: 5)
!3819 = distinct !DILexicalBlock(scope: !3815, file: !511, line: 416, column: 18)
!3820 = !DILocation(line: 422, column: 18, scope: !3818)
!3821 = !DILocation(line: 423, column: 29, scope: !3818)
!3822 = !DILocation(line: 423, column: 22, scope: !3818)
!3823 = !DILocation(line: 423, column: 15, scope: !3818)
!3824 = !DILocalVariable(name: "entries", scope: !3444, file: !511, line: 372, type: !15)
!3825 = !DILocation(line: 424, column: 26, scope: !3818)
!3826 = !DILocation(line: 424, column: 33, scope: !3818)
!3827 = !DILocation(line: 424, column: 44, scope: !3818)
!3828 = !DILocation(line: 424, column: 39, scope: !3818)
!3829 = !DILocation(line: 424, column: 10, scope: !3818)
!3830 = !DILocation(line: 424, column: 18, scope: !3818)
!3831 = !DILocation(line: 426, column: 29, scope: !3832)
!3832 = distinct !DILexicalBlock(scope: !3818, file: !511, line: 425, column: 5)
!3833 = !DILocation(line: 426, column: 16, scope: !3832)
!3834 = !DILocalVariable(name: "tmp___18", scope: !3444, file: !511, line: 373, type: !83)
!3835 = !DILocation(line: 426, column: 19, scope: !3818)
!3836 = !DILocalVariable(name: "gbs_titleex", scope: !3444, file: !511, line: 369, type: !15)
!3837 = !DILocation(line: 427, column: 29, scope: !3838)
!3838 = distinct !DILexicalBlock(scope: !3818, file: !511, line: 427, column: 5)
!3839 = !DILocation(line: 427, column: 16, scope: !3838)
!3840 = !DILocalVariable(name: "tmp___19", scope: !3444, file: !511, line: 374, type: !83)
!3841 = !DILocation(line: 427, column: 20, scope: !3818)
!3842 = !DILocalVariable(name: "gbs_authorex", scope: !3444, file: !511, line: 370, type: !15)
!3843 = !DILocation(line: 428, column: 29, scope: !3844)
!3844 = distinct !DILexicalBlock(scope: !3818, file: !511, line: 428, column: 5)
!3845 = !DILocation(line: 428, column: 16, scope: !3844)
!3846 = !DILocalVariable(name: "tmp___20", scope: !3444, file: !511, line: 375, type: !83)
!3847 = !DILocation(line: 428, column: 18, scope: !3818)
!3848 = !DILocalVariable(name: "gbs_copyex", scope: !3444, file: !511, line: 371, type: !15)
!3849 = !DILocation(line: 429, column: 21, scope: !3850)
!3850 = distinct !DILexicalBlock(scope: !3819, file: !511, line: 429, column: 9)
!3851 = !DILocation(line: 429, column: 9, scope: !3819)
!3852 = !DILocation(line: 430, column: 25, scope: !3853)
!3853 = distinct !DILexicalBlock(scope: !3850, file: !511, line: 429, column: 32)
!3854 = !DILocation(line: 430, column: 33, scope: !3853)
!3855 = !DILocation(line: 430, column: 12, scope: !3853)
!3856 = !DILocation(line: 430, column: 18, scope: !3853)
!3857 = !DILocation(line: 431, column: 5, scope: !3853)
!3858 = !DILocation(line: 431, column: 22, scope: !3859)
!3859 = distinct !DILexicalBlock(scope: !3819, file: !511, line: 431, column: 9)
!3860 = !DILocation(line: 431, column: 9, scope: !3819)
!3861 = !DILocation(line: 432, column: 26, scope: !3862)
!3862 = distinct !DILexicalBlock(scope: !3859, file: !511, line: 431, column: 33)
!3863 = !DILocation(line: 432, column: 34, scope: !3862)
!3864 = !DILocation(line: 432, column: 12, scope: !3862)
!3865 = !DILocation(line: 432, column: 19, scope: !3862)
!3866 = !DILocation(line: 433, column: 5, scope: !3862)
!3867 = !DILocation(line: 433, column: 20, scope: !3868)
!3868 = distinct !DILexicalBlock(scope: !3819, file: !511, line: 433, column: 9)
!3869 = !DILocation(line: 433, column: 9, scope: !3819)
!3870 = !DILocation(line: 434, column: 29, scope: !3871)
!3871 = distinct !DILexicalBlock(scope: !3868, file: !511, line: 433, column: 31)
!3872 = !DILocation(line: 434, column: 37, scope: !3871)
!3873 = !DILocation(line: 434, column: 12, scope: !3871)
!3874 = !DILocation(line: 434, column: 22, scope: !3871)
!3875 = !DILocation(line: 435, column: 5, scope: !3871)
!3876 = !DILocalVariable(name: "i", scope: !3444, file: !511, line: 341, type: !15)
!3877 = !DILocation(line: 436, column: 5, scope: !3878)
!3878 = distinct !DILexicalBlock(scope: !3879, file: !511, line: 438, column: 5)
!3879 = distinct !DILexicalBlock(scope: !3819, file: !511, line: 437, column: 5)
!3880 = !DILocation(line: 0, scope: !3819)
!3881 = !DILocation(line: 436, column: 15, scope: !3878)
!3882 = !DILocation(line: 436, column: 16, scope: !3883)
!3883 = distinct !DILexicalBlock(scope: !3884, file: !511, line: 436, column: 11)
!3884 = distinct !DILexicalBlock(scope: !3878, file: !511, line: 436, column: 15)
!3885 = !DILocation(line: 436, column: 11, scope: !3884)
!3886 = !DILocation(line: 436, column: 9, scope: !3887)
!3887 = distinct !DILexicalBlock(scope: !3883, file: !511, line: 436, column: 28)
!3888 = !DILocation(line: 437, column: 44, scope: !3889)
!3889 = distinct !DILexicalBlock(scope: !3890, file: !511, line: 439, column: 7)
!3890 = distinct !DILexicalBlock(scope: !3884, file: !511, line: 438, column: 7)
!3891 = !DILocation(line: 437, column: 39, scope: !3889)
!3892 = !DILocation(line: 437, column: 49, scope: !3889)
!3893 = !DILocation(line: 437, column: 31, scope: !3889)
!3894 = !DILocation(line: 437, column: 18, scope: !3889)
!3895 = !DILocalVariable(name: "tmp___21", scope: !3444, file: !511, line: 377, type: !83)
!3896 = !DILocation(line: 437, column: 13, scope: !3890)
!3897 = !DILocalVariable(name: "ofs", scope: !3444, file: !511, line: 376, type: !15)
!3898 = !DILocation(line: 438, column: 63, scope: !3899)
!3899 = distinct !DILexicalBlock(scope: !3890, file: !511, line: 438, column: 7)
!3900 = !DILocation(line: 438, column: 58, scope: !3899)
!3901 = !DILocation(line: 438, column: 51, scope: !3899)
!3902 = !DILocation(line: 438, column: 38, scope: !3899)
!3903 = !DILocation(line: 438, column: 13, scope: !3899)
!3904 = !DILocation(line: 438, column: 26, scope: !3899)
!3905 = !DILocation(line: 438, column: 32, scope: !3899)
!3906 = !DILocation(line: 438, column: 36, scope: !3899)
!3907 = !DILocation(line: 439, column: 15, scope: !3908)
!3908 = distinct !DILexicalBlock(scope: !3884, file: !511, line: 439, column: 11)
!3909 = !DILocation(line: 439, column: 11, scope: !3884)
!3910 = !DILocation(line: 440, column: 15, scope: !3911)
!3911 = distinct !DILexicalBlock(scope: !3908, file: !511, line: 439, column: 26)
!3912 = !DILocation(line: 440, column: 28, scope: !3911)
!3913 = !DILocation(line: 440, column: 34, scope: !3911)
!3914 = !DILocation(line: 440, column: 40, scope: !3911)
!3915 = !DILocation(line: 441, column: 7, scope: !3911)
!3916 = !DILocation(line: 441, column: 47, scope: !3917)
!3917 = distinct !DILexicalBlock(scope: !3908, file: !511, line: 441, column: 14)
!3918 = !DILocation(line: 441, column: 55, scope: !3917)
!3919 = !DILocation(line: 441, column: 15, scope: !3917)
!3920 = !DILocation(line: 441, column: 28, scope: !3917)
!3921 = !DILocation(line: 441, column: 34, scope: !3917)
!3922 = !DILocation(line: 441, column: 40, scope: !3917)
!3923 = !DILocation(line: 436, column: 9, scope: !3884)
!3924 = distinct !{!3924, !3877, !3925}
!3925 = !DILocation(line: 437, column: 5, scope: !3878)
!3926 = !DILocation(line: 439, column: 5, scope: !3878)
!3927 = !DILocation(line: 444, column: 14, scope: !3928)
!3928 = distinct !DILexicalBlock(scope: !3819, file: !511, line: 444, column: 9)
!3929 = !DILocation(line: 444, column: 26, scope: !3928)
!3930 = !DILocation(line: 444, column: 18, scope: !3928)
!3931 = !DILocation(line: 444, column: 9, scope: !3819)
!3932 = !DILocation(line: 445, column: 18, scope: !3933)
!3933 = distinct !DILexicalBlock(scope: !3934, file: !511, line: 446, column: 7)
!3934 = distinct !DILexicalBlock(scope: !3935, file: !511, line: 445, column: 7)
!3935 = distinct !DILexicalBlock(scope: !3928, file: !511, line: 444, column: 34)
!3936 = !DILocalVariable(name: "tmp___22", scope: !3444, file: !511, line: 378, type: !16)
!3937 = !DILocation(line: 445, column: 40, scope: !3938)
!3938 = distinct !DILexicalBlock(scope: !3934, file: !511, line: 447, column: 7)
!3939 = !DILocation(line: 446, column: 20, scope: !3938)
!3940 = !DILocation(line: 446, column: 30, scope: !3938)
!3941 = !DILocation(line: 445, column: 7, scope: !3938)
!3942 = !DILocation(line: 449, column: 5, scope: !3935)
!3943 = !DILocation(line: 450, column: 3, scope: !3819)
!3944 = !DILocation(line: 450, column: 25, scope: !3945)
!3945 = distinct !DILexicalBlock(scope: !3503, file: !511, line: 451, column: 3)
!3946 = !DILocation(line: 450, column: 56, scope: !3945)
!3947 = !DILocation(line: 450, column: 35, scope: !3945)
!3948 = !DILocation(line: 450, column: 33, scope: !3945)
!3949 = !DILocation(line: 450, column: 62, scope: !3945)
!3950 = !DILocation(line: 450, column: 73, scope: !3945)
!3951 = !DILocation(line: 450, column: 8, scope: !3945)
!3952 = !DILocation(line: 450, column: 16, scope: !3945)
!3953 = !DILocation(line: 452, column: 47, scope: !3954)
!3954 = distinct !DILexicalBlock(scope: !3945, file: !511, line: 451, column: 3)
!3955 = !DILocation(line: 452, column: 33, scope: !3954)
!3956 = !DILocation(line: 452, column: 14, scope: !3954)
!3957 = !DILocalVariable(name: "tmp___23", scope: !3444, file: !511, line: 379, type: !23)
!3958 = !DILocation(line: 452, column: 8, scope: !3945)
!3959 = !DILocation(line: 452, column: 12, scope: !3945)
!3960 = !DILocation(line: 453, column: 41, scope: !3961)
!3961 = distinct !DILexicalBlock(scope: !3945, file: !511, line: 453, column: 3)
!3962 = !DILocation(line: 453, column: 59, scope: !3961)
!3963 = !DILocation(line: 453, column: 48, scope: !3961)
!3964 = !DILocation(line: 453, column: 64, scope: !3961)
!3965 = !DILocation(line: 453, column: 45, scope: !3961)
!3966 = !DILocation(line: 454, column: 33, scope: !3961)
!3967 = !DILocation(line: 454, column: 26, scope: !3961)
!3968 = !DILocation(line: 454, column: 10, scope: !3961)
!3969 = !DILocation(line: 453, column: 3, scope: !3961)
!3970 = !DILocation(line: 454, column: 41, scope: !3971)
!3971 = distinct !DILexicalBlock(scope: !3945, file: !511, line: 456, column: 3)
!3972 = !DILocation(line: 454, column: 45, scope: !3971)
!3973 = !DILocation(line: 454, column: 3, scope: !3971)
!3974 = !DILocation(line: 456, column: 3, scope: !3975)
!3975 = distinct !DILexicalBlock(scope: !3976, file: !511, line: 459, column: 3)
!3976 = distinct !DILexicalBlock(scope: !3503, file: !511, line: 458, column: 3)
!3977 = !DILocation(line: 456, column: 13, scope: !3975)
!3978 = !DILocation(line: 456, column: 14, scope: !3979)
!3979 = distinct !DILexicalBlock(scope: !3980, file: !511, line: 456, column: 9)
!3980 = distinct !DILexicalBlock(scope: !3975, file: !511, line: 456, column: 13)
!3981 = !DILocation(line: 456, column: 9, scope: !3980)
!3982 = !DILocation(line: 456, column: 7, scope: !3983)
!3983 = distinct !DILexicalBlock(scope: !3979, file: !511, line: 456, column: 21)
!3984 = !DILocation(line: 457, column: 24, scope: !3980)
!3985 = !DILocation(line: 457, column: 12, scope: !3980)
!3986 = !DILocation(line: 457, column: 34, scope: !3980)
!3987 = !DILocation(line: 457, column: 29, scope: !3980)
!3988 = !DILocalVariable(name: "addr", scope: !3444, file: !511, line: 380, type: !15)
!3989 = !DILocation(line: 458, column: 12, scope: !3980)
!3990 = !DILocation(line: 458, column: 21, scope: !3980)
!3991 = !DILocation(line: 458, column: 16, scope: !3980)
!3992 = !DILocation(line: 458, column: 26, scope: !3980)
!3993 = !DILocation(line: 459, column: 51, scope: !3980)
!3994 = !DILocation(line: 459, column: 35, scope: !3980)
!3995 = !DILocation(line: 459, column: 12, scope: !3980)
!3996 = !DILocation(line: 459, column: 22, scope: !3980)
!3997 = !DILocation(line: 459, column: 26, scope: !3980)
!3998 = !DILocation(line: 459, column: 16, scope: !3980)
!3999 = !DILocation(line: 459, column: 33, scope: !3980)
!4000 = !DILocation(line: 460, column: 51, scope: !3980)
!4001 = !DILocation(line: 460, column: 35, scope: !3980)
!4002 = !DILocation(line: 460, column: 12, scope: !3980)
!4003 = !DILocation(line: 460, column: 22, scope: !3980)
!4004 = !DILocation(line: 460, column: 26, scope: !3980)
!4005 = !DILocation(line: 460, column: 16, scope: !3980)
!4006 = !DILocation(line: 460, column: 33, scope: !3980)
!4007 = !DILocation(line: 456, column: 7, scope: !3980)
!4008 = distinct !{!4008, !3974, !4009}
!4009 = !DILocation(line: 457, column: 3, scope: !3975)
!4010 = !DILocation(line: 459, column: 3, scope: !3975)
!4011 = !DILocation(line: 462, column: 10, scope: !4012)
!4012 = distinct !DILexicalBlock(scope: !3503, file: !511, line: 462, column: 3)
!4013 = !DILocation(line: 462, column: 14, scope: !4012)
!4014 = !DILocation(line: 462, column: 20, scope: !4012)
!4015 = !DILocation(line: 463, column: 10, scope: !4012)
!4016 = !DILocation(line: 463, column: 14, scope: !4012)
!4017 = !DILocation(line: 463, column: 20, scope: !4012)
!4018 = !DILocation(line: 465, column: 9, scope: !4019)
!4019 = distinct !DILexicalBlock(scope: !4012, file: !511, line: 464, column: 3)
!4020 = !DILocation(line: 465, column: 3, scope: !4019)
!4021 = !DILocation(line: 467, column: 3, scope: !3503)
!4022 = !DILocation(line: 469, column: 1, scope: !3444)
!4023 = distinct !DISubprogram(name: "readint", scope: !511, file: !511, line: 244, type: !4024, scopeLine: 245, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !666)
!4024 = !DISubroutineType(types: !4025)
!4025 = !{!83, !16, !15}
!4026 = !DILocalVariable(name: "buf___3", arg: 1, scope: !4023, file: !511, line: 244, type: !16)
!4027 = !DILocation(line: 0, scope: !4023)
!4028 = !DILocalVariable(name: "bytes", arg: 2, scope: !4023, file: !511, line: 244, type: !15)
!4029 = !DILocalVariable(name: "shift", scope: !4023, file: !511, line: 247, type: !15)
!4030 = !DILocalVariable(name: "res", scope: !4023, file: !511, line: 248, type: !83)
!4031 = !DILocalVariable(name: "i", scope: !4023, file: !511, line: 246, type: !15)
!4032 = !DILocation(line: 250, column: 3, scope: !4033)
!4033 = distinct !DILexicalBlock(scope: !4034, file: !511, line: 252, column: 3)
!4034 = distinct !DILexicalBlock(scope: !4035, file: !511, line: 251, column: 3)
!4035 = distinct !DILexicalBlock(scope: !4023, file: !511, line: 250, column: 3)
!4036 = !DILocation(line: 0, scope: !4035)
!4037 = !DILocation(line: 250, column: 13, scope: !4033)
!4038 = !DILocation(line: 250, column: 14, scope: !4039)
!4039 = distinct !DILexicalBlock(scope: !4040, file: !511, line: 250, column: 9)
!4040 = distinct !DILexicalBlock(scope: !4033, file: !511, line: 250, column: 13)
!4041 = !DILocation(line: 250, column: 9, scope: !4040)
!4042 = !DILocation(line: 250, column: 7, scope: !4043)
!4043 = distinct !DILexicalBlock(scope: !4039, file: !511, line: 250, column: 24)
!4044 = !DILocation(line: 251, column: 61, scope: !4040)
!4045 = !DILocation(line: 251, column: 51, scope: !4040)
!4046 = !DILocation(line: 251, column: 28, scope: !4040)
!4047 = !DILocation(line: 251, column: 67, scope: !4040)
!4048 = !DILocation(line: 251, column: 9, scope: !4040)
!4049 = !DILocation(line: 252, column: 11, scope: !4040)
!4050 = !DILocation(line: 250, column: 7, scope: !4040)
!4051 = distinct !{!4051, !4032, !4052}
!4052 = !DILocation(line: 251, column: 3, scope: !4033)
!4053 = !DILocation(line: 253, column: 3, scope: !4033)
!4054 = !DILocation(line: 255, column: 3, scope: !4035)
!4055 = distinct !DISubprogram(name: "gbhw_setcallback", scope: !311, file: !311, line: 543, type: !4056, scopeLine: 546, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !666)
!4056 = !DISubroutineType(types: !4057)
!4057 = !{null, !435, !23}
!4058 = !DILocalVariable(name: "fn", arg: 1, scope: !4055, file: !311, line: 543, type: !435)
!4059 = !DILocation(line: 0, scope: !4055)
!4060 = !DILocalVariable(name: "priv", arg: 2, scope: !4055, file: !311, line: 545, type: !23)
!4061 = !DILocation(line: 545, column: 12, scope: !4062)
!4062 = distinct !DILexicalBlock(scope: !4055, file: !311, line: 549, column: 3)
!4063 = !DILocation(line: 546, column: 16, scope: !4062)
!4064 = !DILocation(line: 547, column: 3, scope: !4062)
!4065 = distinct !DISubprogram(name: "gbhw_setiocallback", scope: !311, file: !311, line: 549, type: !4066, scopeLine: 554, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !666)
!4066 = !DISubroutineType(types: !4067)
!4067 = !{null, !442, !23}
!4068 = !DILocalVariable(name: "fn", arg: 1, scope: !4065, file: !311, line: 549, type: !442)
!4069 = !DILocation(line: 0, scope: !4065)
!4070 = !DILocalVariable(name: "priv", arg: 2, scope: !4065, file: !311, line: 553, type: !23)
!4071 = !DILocation(line: 551, column: 14, scope: !4072)
!4072 = distinct !DILexicalBlock(scope: !4065, file: !311, line: 557, column: 3)
!4073 = !DILocation(line: 552, column: 19, scope: !4072)
!4074 = !DILocation(line: 553, column: 3, scope: !4072)
!4075 = distinct !DISubprogram(name: "gbhw_setbuffer", scope: !311, file: !311, line: 564, type: !4076, scopeLine: 565, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !666)
!4076 = !DISubroutineType(types: !4077)
!4077 = !{null, !151}
!4078 = !DILocalVariable(name: "buffer", arg: 1, scope: !4075, file: !311, line: 564, type: !151)
!4079 = !DILocation(line: 0, scope: !4075)
!4080 = !DILocalVariable(name: "__cil_tmp4", scope: !4075, file: !311, line: 568, type: !16)
!4081 = !DILocation(line: 568, column: 9, scope: !4075)
!4082 = !DILocalVariable(name: "__cil_tmp5", scope: !4075, file: !311, line: 569, type: !16)
!4083 = !DILocation(line: 569, column: 9, scope: !4075)
!4084 = !DILocation(line: 566, column: 12, scope: !4085)
!4085 = distinct !DILexicalBlock(scope: !4075, file: !311, line: 571, column: 3)
!4086 = !DILocation(line: 567, column: 23, scope: !4085)
!4087 = !DILocation(line: 567, column: 33, scope: !4085)
!4088 = !DILocation(line: 567, column: 39, scope: !4085)
!4089 = !DILocation(line: 567, column: 3, scope: !4085)
!4090 = !DILocation(line: 567, column: 13, scope: !4085)
!4091 = !DILocation(line: 567, column: 21, scope: !4085)
!4092 = !DILocation(line: 569, column: 7, scope: !4093)
!4093 = distinct !DILexicalBlock(scope: !4085, file: !311, line: 569, column: 7)
!4094 = !DILocation(line: 569, column: 7, scope: !4085)
!4095 = !DILocation(line: 569, column: 18, scope: !4096)
!4096 = distinct !DILexicalBlock(scope: !4097, file: !311, line: 571, column: 5)
!4097 = distinct !DILexicalBlock(scope: !4098, file: !311, line: 570, column: 5)
!4098 = distinct !DILexicalBlock(scope: !4093, file: !311, line: 569, column: 15)
!4099 = !DILocation(line: 569, column: 10, scope: !4096)
!4100 = !DILocation(line: 569, column: 5, scope: !4096)
!4101 = !DILocation(line: 572, column: 3, scope: !4098)
!4102 = !DILocation(line: 570, column: 63, scope: !4103)
!4103 = distinct !DILexicalBlock(scope: !4104, file: !311, line: 574, column: 3)
!4104 = distinct !DILexicalBlock(scope: !4085, file: !311, line: 573, column: 3)
!4105 = !DILocation(line: 570, column: 73, scope: !4103)
!4106 = !DILocation(line: 570, column: 96, scope: !4103)
!4107 = !DILocation(line: 570, column: 93, scope: !4103)
!4108 = !DILocation(line: 570, column: 83, scope: !4103)
!4109 = !DILocation(line: 570, column: 81, scope: !4103)
!4110 = !DILocation(line: 570, column: 114, scope: !4103)
!4111 = !DILocation(line: 570, column: 120, scope: !4103)
!4112 = !DILocation(line: 570, column: 42, scope: !4103)
!4113 = !DILocation(line: 570, column: 16, scope: !4103)
!4114 = !DILocation(line: 570, column: 9, scope: !4103)
!4115 = !DILocalVariable(name: "tmp", scope: !4075, file: !311, line: 566, type: !23)
!4116 = !DILocation(line: 570, column: 12, scope: !4104)
!4117 = !DILocation(line: 570, column: 10, scope: !4104)
!4118 = !DILocation(line: 571, column: 23, scope: !4119)
!4119 = distinct !DILexicalBlock(scope: !4085, file: !311, line: 571, column: 7)
!4120 = !DILocation(line: 571, column: 7, scope: !4119)
!4121 = !DILocation(line: 571, column: 30, scope: !4119)
!4122 = !DILocation(line: 571, column: 7, scope: !4085)
!4123 = !DILocation(line: 572, column: 15, scope: !4124)
!4124 = distinct !DILexicalBlock(scope: !4125, file: !311, line: 573, column: 5)
!4125 = distinct !DILexicalBlock(scope: !4126, file: !311, line: 572, column: 5)
!4126 = distinct !DILexicalBlock(scope: !4119, file: !311, line: 571, column: 62)
!4127 = !DILocalVariable(name: "tmp___0", scope: !4075, file: !311, line: 567, type: !16)
!4128 = !DILocation(line: 572, column: 38, scope: !4129)
!4129 = distinct !DILexicalBlock(scope: !4125, file: !311, line: 574, column: 5)
!4130 = !DILocation(line: 572, column: 5, scope: !4129)
!4131 = !DILocation(line: 573, column: 5, scope: !4126)
!4132 = !DILocation(line: 575, column: 18, scope: !4133)
!4133 = distinct !DILexicalBlock(scope: !4134, file: !311, line: 576, column: 3)
!4134 = distinct !DILexicalBlock(scope: !4085, file: !311, line: 575, column: 3)
!4135 = !DILocation(line: 575, column: 10, scope: !4133)
!4136 = !DILocation(line: 575, column: 3, scope: !4133)
!4137 = !DILocation(line: 576, column: 39, scope: !4134)
!4138 = !DILocation(line: 576, column: 46, scope: !4134)
!4139 = !DILocation(line: 576, column: 30, scope: !4134)
!4140 = !DILocation(line: 576, column: 18, scope: !4134)
!4141 = !DILocation(line: 576, column: 3, scope: !4134)
!4142 = !DILocation(line: 576, column: 11, scope: !4134)
!4143 = !DILocation(line: 576, column: 16, scope: !4134)
!4144 = !DILocation(line: 577, column: 22, scope: !4134)
!4145 = !DILocation(line: 577, column: 32, scope: !4134)
!4146 = !DILocation(line: 577, column: 55, scope: !4134)
!4147 = !DILocation(line: 577, column: 52, scope: !4134)
!4148 = !DILocation(line: 577, column: 42, scope: !4134)
!4149 = !DILocation(line: 577, column: 40, scope: !4134)
!4150 = !DILocation(line: 577, column: 73, scope: !4134)
!4151 = !DILocation(line: 577, column: 3, scope: !4134)
!4152 = !DILocation(line: 577, column: 11, scope: !4134)
!4153 = !DILocation(line: 577, column: 19, scope: !4134)
!4154 = !DILocation(line: 578, column: 19, scope: !4134)
!4155 = !DILocation(line: 578, column: 27, scope: !4134)
!4156 = !DILocation(line: 578, column: 35, scope: !4134)
!4157 = !DILocation(line: 578, column: 3, scope: !4134)
!4158 = !DILocation(line: 578, column: 11, scope: !4134)
!4159 = !DILocation(line: 578, column: 17, scope: !4134)
!4160 = !DILocation(line: 579, column: 21, scope: !4161)
!4161 = distinct !DILexicalBlock(scope: !4134, file: !311, line: 579, column: 3)
!4162 = !DILocation(line: 579, column: 3, scope: !4161)
!4163 = !DILocation(line: 580, column: 3, scope: !4085)
!4164 = !DILocation(line: 582, column: 1, scope: !4075)
!4165 = distinct !DISubprogram(name: "gbhw_impbuf_reset", scope: !311, file: !311, line: 555, type: !4076, scopeLine: 556, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !666)
!4166 = !DILocalVariable(name: "impbuf___3", arg: 1, scope: !4165, file: !311, line: 555, type: !151)
!4167 = !DILocation(line: 0, scope: !4165)
!4168 = !DILocalVariable(name: "__cil_tmp2", scope: !4165, file: !311, line: 557, type: !16)
!4169 = !DILocation(line: 557, column: 9, scope: !4165)
!4170 = !DILocalVariable(name: "__cil_tmp3", scope: !4165, file: !311, line: 558, type: !16)
!4171 = !DILocation(line: 558, column: 9, scope: !4165)
!4172 = !DILocalVariable(name: "__cil_tmp4", scope: !4165, file: !311, line: 559, type: !16)
!4173 = !DILocation(line: 559, column: 9, scope: !4165)
!4174 = !DILocation(line: 557, column: 10, scope: !4175)
!4175 = distinct !DILexicalBlock(scope: !4176, file: !311, line: 557, column: 7)
!4176 = distinct !DILexicalBlock(scope: !4165, file: !311, line: 561, column: 3)
!4177 = !DILocation(line: 557, column: 23, scope: !4175)
!4178 = !DILocation(line: 557, column: 7, scope: !4176)
!4179 = !DILocation(line: 557, column: 5, scope: !4180)
!4180 = distinct !DILexicalBlock(scope: !4181, file: !311, line: 559, column: 5)
!4181 = distinct !DILexicalBlock(scope: !4182, file: !311, line: 558, column: 5)
!4182 = distinct !DILexicalBlock(scope: !4175, file: !311, line: 557, column: 32)
!4183 = !DILocation(line: 558, column: 34, scope: !4184)
!4184 = distinct !DILexicalBlock(scope: !4176, file: !311, line: 562, column: 3)
!4185 = !DILocation(line: 558, column: 67, scope: !4184)
!4186 = !DILocation(line: 558, column: 64, scope: !4184)
!4187 = !DILocation(line: 558, column: 49, scope: !4184)
!4188 = !DILocation(line: 558, column: 47, scope: !4184)
!4189 = !DILocation(line: 558, column: 85, scope: !4184)
!4190 = !DILocation(line: 558, column: 92, scope: !4184)
!4191 = !DILocation(line: 558, column: 15, scope: !4184)
!4192 = !DILocation(line: 558, column: 22, scope: !4184)
!4193 = !DILocation(line: 559, column: 15, scope: !4184)
!4194 = !DILocation(line: 559, column: 21, scope: !4184)
!4195 = !DILocation(line: 560, column: 15, scope: !4184)
!4196 = !DILocation(line: 560, column: 21, scope: !4184)
!4197 = !DILocation(line: 561, column: 30, scope: !4198)
!4198 = distinct !DILexicalBlock(scope: !4184, file: !311, line: 561, column: 3)
!4199 = !DILocation(line: 561, column: 10, scope: !4198)
!4200 = !DILocation(line: 561, column: 60, scope: !4198)
!4201 = !DILocation(line: 561, column: 39, scope: !4198)
!4202 = !DILocation(line: 561, column: 3, scope: !4198)
!4203 = !DILocation(line: 562, column: 3, scope: !4176)
!4204 = distinct !DISubprogram(name: "gbhw_setrate", scope: !311, file: !311, line: 582, type: !1747, scopeLine: 583, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !666)
!4205 = !DILocalVariable(name: "rate___1", arg: 1, scope: !4204, file: !311, line: 582, type: !15)
!4206 = !DILocation(line: 0, scope: !4204)
!4207 = !DILocation(line: 584, column: 33, scope: !4208)
!4208 = distinct !DILexicalBlock(scope: !4204, file: !311, line: 586, column: 3)
!4209 = !DILocation(line: 584, column: 16, scope: !4208)
!4210 = !DILocation(line: 585, column: 3, scope: !4208)
!4211 = distinct !DISubprogram(name: "rom_put", scope: !311, file: !311, line: 130, type: !484, scopeLine: 131, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !666)
!4212 = !DILocalVariable(name: "addr", arg: 1, scope: !4211, file: !311, line: 130, type: !83)
!4213 = !DILocation(line: 0, scope: !4211)
!4214 = !DILocalVariable(name: "val", arg: 2, scope: !4211, file: !311, line: 130, type: !87)
!4215 = !DILocalVariable(name: "__cil_tmp3", scope: !4211, file: !311, line: 132, type: !16)
!4216 = !DILocation(line: 132, column: 9, scope: !4211)
!4217 = !DILocation(line: 132, column: 12, scope: !4218)
!4218 = distinct !DILexicalBlock(scope: !4219, file: !311, line: 132, column: 7)
!4219 = distinct !DILexicalBlock(scope: !4211, file: !311, line: 134, column: 3)
!4220 = !DILocation(line: 132, column: 7, scope: !4219)
!4221 = !DILocation(line: 132, column: 14, scope: !4222)
!4222 = distinct !DILexicalBlock(scope: !4223, file: !311, line: 132, column: 9)
!4223 = distinct !DILexicalBlock(scope: !4218, file: !311, line: 132, column: 22)
!4224 = !DILocation(line: 132, column: 9, scope: !4223)
!4225 = !DILocation(line: 133, column: 24, scope: !4226)
!4226 = distinct !DILexicalBlock(scope: !4222, file: !311, line: 132, column: 25)
!4227 = !DILocation(line: 133, column: 34, scope: !4226)
!4228 = !DILocation(line: 133, column: 13, scope: !4226)
!4229 = !DILocation(line: 134, column: 25, scope: !4226)
!4230 = !DILocation(line: 134, column: 38, scope: !4226)
!4231 = !DILocation(line: 134, column: 48, scope: !4226)
!4232 = !DILocation(line: 134, column: 35, scope: !4226)
!4233 = !DILocation(line: 134, column: 17, scope: !4226)
!4234 = !DILocation(line: 134, column: 15, scope: !4226)
!4235 = !DILocation(line: 135, column: 11, scope: !4236)
!4236 = distinct !DILexicalBlock(scope: !4226, file: !311, line: 135, column: 11)
!4237 = !DILocation(line: 135, column: 21, scope: !4236)
!4238 = !DILocation(line: 135, column: 19, scope: !4236)
!4239 = !DILocation(line: 135, column: 11, scope: !4226)
!4240 = !DILocation(line: 136, column: 42, scope: !4241)
!4241 = distinct !DILexicalBlock(scope: !4242, file: !311, line: 137, column: 9)
!4242 = distinct !DILexicalBlock(scope: !4243, file: !311, line: 136, column: 9)
!4243 = distinct !DILexicalBlock(scope: !4236, file: !311, line: 135, column: 31)
!4244 = !DILocation(line: 137, column: 17, scope: !4241)
!4245 = !DILocation(line: 137, column: 26, scope: !4241)
!4246 = !DILocation(line: 136, column: 9, scope: !4241)
!4247 = !DILocation(line: 137, column: 19, scope: !4242)
!4248 = !DILocation(line: 137, column: 17, scope: !4242)
!4249 = !DILocation(line: 139, column: 7, scope: !4243)
!4250 = !DILocation(line: 140, column: 5, scope: !4226)
!4251 = !DILocation(line: 141, column: 3, scope: !4223)
!4252 = !DILocation(line: 140, column: 3, scope: !4219)
!4253 = distinct !DISubprogram(name: "rom_get", scope: !311, file: !311, line: 90, type: !491, scopeLine: 91, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !666)
!4254 = !DILocalVariable(name: "addr", arg: 1, scope: !4253, file: !311, line: 90, type: !83)
!4255 = !DILocation(line: 0, scope: !4253)
!4256 = !DILocation(line: 93, column: 24, scope: !4257)
!4257 = distinct !DILexicalBlock(scope: !4253, file: !311, line: 94, column: 3)
!4258 = !DILocation(line: 93, column: 36, scope: !4257)
!4259 = !DILocation(line: 93, column: 28, scope: !4257)
!4260 = !DILocation(line: 93, column: 22, scope: !4257)
!4261 = !DILocation(line: 93, column: 11, scope: !4257)
!4262 = !DILocation(line: 93, column: 3, scope: !4257)
!4263 = distinct !DISubprogram(name: "rombank_get", scope: !311, file: !311, line: 96, type: !491, scopeLine: 97, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !666)
!4264 = !DILocalVariable(name: "addr", arg: 1, scope: !4263, file: !311, line: 96, type: !83)
!4265 = !DILocation(line: 0, scope: !4263)
!4266 = !DILocation(line: 99, column: 24, scope: !4267)
!4267 = distinct !DILexicalBlock(scope: !4263, file: !311, line: 100, column: 3)
!4268 = !DILocation(line: 99, column: 44, scope: !4267)
!4269 = !DILocation(line: 99, column: 31, scope: !4267)
!4270 = !DILocation(line: 99, column: 65, scope: !4267)
!4271 = !DILocation(line: 99, column: 63, scope: !4267)
!4272 = !DILocation(line: 99, column: 54, scope: !4267)
!4273 = !DILocation(line: 99, column: 28, scope: !4267)
!4274 = !DILocation(line: 99, column: 22, scope: !4267)
!4275 = !DILocation(line: 99, column: 11, scope: !4267)
!4276 = !DILocation(line: 99, column: 3, scope: !4267)
!4277 = distinct !DISubprogram(name: "extram_put", scope: !311, file: !311, line: 305, type: !484, scopeLine: 306, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !666)
!4278 = !DILocalVariable(name: "addr", arg: 1, scope: !4277, file: !311, line: 305, type: !83)
!4279 = !DILocation(line: 0, scope: !4277)
!4280 = !DILocalVariable(name: "val", arg: 2, scope: !4277, file: !311, line: 305, type: !87)
!4281 = !DILocation(line: 307, column: 15, scope: !4282)
!4282 = distinct !DILexicalBlock(scope: !4277, file: !311, line: 309, column: 3)
!4283 = !DILocation(line: 307, column: 3, scope: !4282)
!4284 = !DILocation(line: 307, column: 24, scope: !4282)
!4285 = !DILocation(line: 308, column: 3, scope: !4282)
!4286 = distinct !DISubprogram(name: "extram_get", scope: !311, file: !311, line: 124, type: !491, scopeLine: 125, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !666)
!4287 = !DILocalVariable(name: "addr", arg: 1, scope: !4286, file: !311, line: 124, type: !83)
!4288 = !DILocation(line: 0, scope: !4286)
!4289 = !DILocation(line: 127, column: 34, scope: !4290)
!4290 = distinct !DILexicalBlock(scope: !4286, file: !311, line: 128, column: 3)
!4291 = !DILocation(line: 127, column: 22, scope: !4290)
!4292 = !DILocation(line: 127, column: 11, scope: !4290)
!4293 = !DILocation(line: 127, column: 3, scope: !4290)
!4294 = distinct !DISubprogram(name: "intram_put", scope: !311, file: !311, line: 300, type: !484, scopeLine: 301, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !666)
!4295 = !DILocalVariable(name: "addr", arg: 1, scope: !4294, file: !311, line: 300, type: !83)
!4296 = !DILocation(line: 0, scope: !4294)
!4297 = !DILocalVariable(name: "val", arg: 2, scope: !4294, file: !311, line: 300, type: !87)
!4298 = !DILocation(line: 302, column: 15, scope: !4299)
!4299 = distinct !DILexicalBlock(scope: !4294, file: !311, line: 304, column: 3)
!4300 = !DILocation(line: 302, column: 3, scope: !4299)
!4301 = !DILocation(line: 302, column: 24, scope: !4299)
!4302 = !DILocation(line: 303, column: 3, scope: !4299)
!4303 = distinct !DISubprogram(name: "intram_get", scope: !311, file: !311, line: 118, type: !491, scopeLine: 119, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !666)
!4304 = !DILocalVariable(name: "addr", arg: 1, scope: !4303, file: !311, line: 118, type: !83)
!4305 = !DILocation(line: 0, scope: !4303)
!4306 = !DILocation(line: 121, column: 34, scope: !4307)
!4307 = distinct !DILexicalBlock(scope: !4303, file: !311, line: 122, column: 3)
!4308 = !DILocation(line: 121, column: 22, scope: !4307)
!4309 = !DILocation(line: 121, column: 11, scope: !4307)
!4310 = !DILocation(line: 121, column: 3, scope: !4307)
!4311 = distinct !DISubprogram(name: "io_put", scope: !311, file: !311, line: 142, type: !484, scopeLine: 143, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !666)
!4312 = !DILocalVariable(name: "addr", arg: 1, scope: !4311, file: !311, line: 142, type: !83)
!4313 = !DILocation(line: 0, scope: !4311)
!4314 = !DILocalVariable(name: "val", arg: 2, scope: !4311, file: !311, line: 142, type: !87)
!4315 = !DILocalVariable(name: "__cil_tmp15", scope: !4311, file: !311, line: 156, type: !16)
!4316 = !DILocation(line: 156, column: 9, scope: !4311)
!4317 = !DILocation(line: 144, column: 5, scope: !4318)
!4318 = distinct !DILexicalBlock(scope: !4319, file: !311, line: 160, column: 3)
!4319 = distinct !DILexicalBlock(scope: !4320, file: !311, line: 159, column: 3)
!4320 = distinct !DILexicalBlock(scope: !4311, file: !311, line: 158, column: 3)
!4321 = !DILocation(line: 144, column: 17, scope: !4318)
!4322 = !DILocation(line: 144, column: 40, scope: !4318)
!4323 = !DILocation(line: 144, column: 3, scope: !4318)
!4324 = !DILocation(line: 146, column: 23, scope: !4319)
!4325 = !DILocation(line: 146, column: 33, scope: !4319)
!4326 = !DILocation(line: 146, column: 9, scope: !4319)
!4327 = !DILocalVariable(name: "chn", scope: !4311, file: !311, line: 144, type: !15)
!4328 = !DILocation(line: 147, column: 12, scope: !4329)
!4329 = distinct !DILexicalBlock(scope: !4320, file: !311, line: 147, column: 7)
!4330 = !DILocation(line: 147, column: 7, scope: !4320)
!4331 = !DILocation(line: 147, column: 14, scope: !4332)
!4332 = distinct !DILexicalBlock(scope: !4333, file: !311, line: 147, column: 9)
!4333 = distinct !DILexicalBlock(scope: !4329, file: !311, line: 147, column: 23)
!4334 = !DILocation(line: 147, column: 9, scope: !4333)
!4335 = !DILocation(line: 148, column: 18, scope: !4336)
!4336 = distinct !DILexicalBlock(scope: !4332, file: !311, line: 147, column: 25)
!4337 = !DILocation(line: 148, column: 7, scope: !4336)
!4338 = !DILocation(line: 148, column: 26, scope: !4336)
!4339 = !DILocation(line: 149, column: 7, scope: !4336)
!4340 = !DILocation(line: 151, column: 3, scope: !4333)
!4341 = !DILocation(line: 151, column: 15, scope: !4320)
!4342 = !DILocation(line: 151, column: 3, scope: !4320)
!4343 = !DILocation(line: 151, column: 23, scope: !4320)
!4344 = !DILocation(line: 152, column: 3, scope: !4345)
!4345 = distinct !DILexicalBlock(scope: !4346, file: !311, line: 153, column: 3)
!4346 = distinct !DILexicalBlock(scope: !4320, file: !311, line: 152, column: 3)
!4347 = !DILocation(line: 152, column: 13, scope: !4345)
!4348 = !DILocation(line: 152, column: 5, scope: !4349)
!4349 = distinct !DILexicalBlock(scope: !4345, file: !311, line: 152, column: 13)
!4350 = !DILocation(line: 155, column: 3, scope: !4345)
!4351 = !DILocation(line: 155, column: 12, scope: !4352)
!4352 = distinct !DILexicalBlock(scope: !4353, file: !311, line: 155, column: 7)
!4353 = distinct !DILexicalBlock(scope: !4320, file: !311, line: 158, column: 3)
!4354 = !DILocation(line: 155, column: 7, scope: !4353)
!4355 = !DILocation(line: 155, column: 5, scope: !4356)
!4356 = distinct !DILexicalBlock(scope: !4352, file: !311, line: 155, column: 23)
!4357 = !DILocation(line: 155, column: 12, scope: !4358)
!4358 = distinct !DILexicalBlock(scope: !4353, file: !311, line: 155, column: 7)
!4359 = !DILocation(line: 155, column: 5, scope: !4360)
!4360 = distinct !DILexicalBlock(scope: !4358, file: !311, line: 155, column: 23)
!4361 = !DILocation(line: 160, column: 12, scope: !4362)
!4362 = distinct !DILexicalBlock(scope: !4353, file: !311, line: 160, column: 7)
!4363 = !DILocation(line: 160, column: 7, scope: !4353)
!4364 = !DILocation(line: 160, column: 5, scope: !4365)
!4365 = distinct !DILexicalBlock(scope: !4362, file: !311, line: 160, column: 23)
!4366 = !DILocation(line: 168, column: 12, scope: !4367)
!4367 = distinct !DILexicalBlock(scope: !4353, file: !311, line: 168, column: 7)
!4368 = !DILocation(line: 168, column: 7, scope: !4353)
!4369 = !DILocation(line: 168, column: 5, scope: !4370)
!4370 = distinct !DILexicalBlock(scope: !4367, file: !311, line: 168, column: 23)
!4371 = !DILocation(line: 168, column: 12, scope: !4372)
!4372 = distinct !DILexicalBlock(scope: !4353, file: !311, line: 168, column: 7)
!4373 = !DILocation(line: 168, column: 5, scope: !4374)
!4374 = distinct !DILexicalBlock(scope: !4372, file: !311, line: 168, column: 23)
!4375 = !DILocation(line: 168, column: 12, scope: !4376)
!4376 = distinct !DILexicalBlock(scope: !4353, file: !311, line: 168, column: 7)
!4377 = !DILocation(line: 168, column: 5, scope: !4378)
!4378 = distinct !DILexicalBlock(scope: !4376, file: !311, line: 168, column: 23)
!4379 = !DILocation(line: 181, column: 12, scope: !4380)
!4380 = distinct !DILexicalBlock(scope: !4353, file: !311, line: 181, column: 7)
!4381 = !DILocation(line: 181, column: 7, scope: !4353)
!4382 = !DILocation(line: 181, column: 5, scope: !4383)
!4383 = distinct !DILexicalBlock(scope: !4380, file: !311, line: 181, column: 23)
!4384 = !DILocation(line: 181, column: 12, scope: !4385)
!4385 = distinct !DILexicalBlock(scope: !4353, file: !311, line: 181, column: 7)
!4386 = !DILocation(line: 181, column: 5, scope: !4387)
!4387 = distinct !DILexicalBlock(scope: !4385, file: !311, line: 181, column: 23)
!4388 = !DILocation(line: 181, column: 12, scope: !4389)
!4389 = distinct !DILexicalBlock(scope: !4353, file: !311, line: 181, column: 7)
!4390 = !DILocation(line: 181, column: 5, scope: !4391)
!4391 = distinct !DILexicalBlock(scope: !4389, file: !311, line: 181, column: 23)
!4392 = !DILocation(line: 197, column: 12, scope: !4393)
!4393 = distinct !DILexicalBlock(scope: !4353, file: !311, line: 197, column: 7)
!4394 = !DILocation(line: 197, column: 7, scope: !4353)
!4395 = !DILocation(line: 197, column: 5, scope: !4396)
!4396 = distinct !DILexicalBlock(scope: !4393, file: !311, line: 197, column: 23)
!4397 = !DILocation(line: 197, column: 12, scope: !4398)
!4398 = distinct !DILexicalBlock(scope: !4353, file: !311, line: 197, column: 7)
!4399 = !DILocation(line: 197, column: 5, scope: !4400)
!4400 = distinct !DILexicalBlock(scope: !4398, file: !311, line: 197, column: 23)
!4401 = !DILocation(line: 197, column: 12, scope: !4402)
!4402 = distinct !DILexicalBlock(scope: !4353, file: !311, line: 197, column: 7)
!4403 = !DILocation(line: 197, column: 5, scope: !4404)
!4404 = distinct !DILexicalBlock(scope: !4402, file: !311, line: 197, column: 23)
!4405 = !DILocation(line: 197, column: 12, scope: !4406)
!4406 = distinct !DILexicalBlock(scope: !4353, file: !311, line: 197, column: 7)
!4407 = !DILocation(line: 197, column: 5, scope: !4408)
!4408 = distinct !DILexicalBlock(scope: !4406, file: !311, line: 197, column: 23)
!4409 = !DILocation(line: 197, column: 12, scope: !4410)
!4410 = distinct !DILexicalBlock(scope: !4353, file: !311, line: 197, column: 7)
!4411 = !DILocation(line: 197, column: 5, scope: !4412)
!4412 = distinct !DILexicalBlock(scope: !4410, file: !311, line: 197, column: 23)
!4413 = !DILocation(line: 197, column: 12, scope: !4414)
!4414 = distinct !DILexicalBlock(scope: !4353, file: !311, line: 197, column: 7)
!4415 = !DILocation(line: 197, column: 5, scope: !4416)
!4416 = distinct !DILexicalBlock(scope: !4414, file: !311, line: 197, column: 23)
!4417 = !DILocation(line: 213, column: 12, scope: !4418)
!4418 = distinct !DILexicalBlock(scope: !4353, file: !311, line: 213, column: 7)
!4419 = !DILocation(line: 213, column: 7, scope: !4353)
!4420 = !DILocation(line: 213, column: 5, scope: !4421)
!4421 = distinct !DILexicalBlock(scope: !4418, file: !311, line: 213, column: 23)
!4422 = !DILocation(line: 215, column: 12, scope: !4423)
!4423 = distinct !DILexicalBlock(scope: !4353, file: !311, line: 215, column: 7)
!4424 = !DILocation(line: 215, column: 7, scope: !4353)
!4425 = !DILocation(line: 215, column: 5, scope: !4426)
!4426 = distinct !DILexicalBlock(scope: !4423, file: !311, line: 215, column: 23)
!4427 = !DILocation(line: 218, column: 12, scope: !4428)
!4428 = distinct !DILexicalBlock(scope: !4353, file: !311, line: 218, column: 7)
!4429 = !DILocation(line: 218, column: 7, scope: !4353)
!4430 = !DILocation(line: 218, column: 5, scope: !4431)
!4431 = distinct !DILexicalBlock(scope: !4428, file: !311, line: 218, column: 23)
!4432 = !DILocation(line: 221, column: 12, scope: !4433)
!4433 = distinct !DILexicalBlock(scope: !4353, file: !311, line: 221, column: 7)
!4434 = !DILocation(line: 221, column: 7, scope: !4353)
!4435 = !DILocation(line: 221, column: 5, scope: !4436)
!4436 = distinct !DILexicalBlock(scope: !4433, file: !311, line: 221, column: 23)
!4437 = !DILocation(line: 227, column: 12, scope: !4438)
!4438 = distinct !DILexicalBlock(scope: !4353, file: !311, line: 227, column: 7)
!4439 = !DILocation(line: 227, column: 7, scope: !4353)
!4440 = !DILocation(line: 227, column: 5, scope: !4441)
!4441 = distinct !DILexicalBlock(scope: !4438, file: !311, line: 227, column: 23)
!4442 = !DILocation(line: 230, column: 12, scope: !4443)
!4443 = distinct !DILexicalBlock(scope: !4353, file: !311, line: 230, column: 7)
!4444 = !DILocation(line: 230, column: 7, scope: !4353)
!4445 = !DILocation(line: 230, column: 5, scope: !4446)
!4446 = distinct !DILexicalBlock(scope: !4443, file: !311, line: 230, column: 23)
!4447 = !DILocation(line: 230, column: 12, scope: !4448)
!4448 = distinct !DILexicalBlock(scope: !4353, file: !311, line: 230, column: 7)
!4449 = !DILocation(line: 230, column: 5, scope: !4450)
!4450 = distinct !DILexicalBlock(scope: !4448, file: !311, line: 230, column: 23)
!4451 = !DILocation(line: 252, column: 12, scope: !4452)
!4452 = distinct !DILexicalBlock(scope: !4353, file: !311, line: 252, column: 7)
!4453 = !DILocation(line: 252, column: 7, scope: !4353)
!4454 = !DILocation(line: 252, column: 5, scope: !4455)
!4455 = distinct !DILexicalBlock(scope: !4452, file: !311, line: 252, column: 23)
!4456 = !DILocation(line: 262, column: 12, scope: !4457)
!4457 = distinct !DILexicalBlock(scope: !4353, file: !311, line: 262, column: 7)
!4458 = !DILocation(line: 262, column: 7, scope: !4353)
!4459 = !DILocation(line: 262, column: 5, scope: !4460)
!4460 = distinct !DILexicalBlock(scope: !4457, file: !311, line: 262, column: 23)
!4461 = !DILocation(line: 292, column: 12, scope: !4462)
!4462 = distinct !DILexicalBlock(scope: !4353, file: !311, line: 292, column: 7)
!4463 = !DILocation(line: 292, column: 7, scope: !4353)
!4464 = !DILocation(line: 292, column: 5, scope: !4465)
!4465 = distinct !DILexicalBlock(scope: !4462, file: !311, line: 292, column: 23)
!4466 = !DILocation(line: 292, column: 12, scope: !4467)
!4467 = distinct !DILexicalBlock(scope: !4353, file: !311, line: 292, column: 7)
!4468 = !DILocation(line: 292, column: 5, scope: !4469)
!4469 = distinct !DILexicalBlock(scope: !4467, file: !311, line: 292, column: 23)
!4470 = !DILocation(line: 292, column: 12, scope: !4471)
!4471 = distinct !DILexicalBlock(scope: !4353, file: !311, line: 292, column: 7)
!4472 = !DILocation(line: 292, column: 5, scope: !4473)
!4473 = distinct !DILexicalBlock(scope: !4471, file: !311, line: 292, column: 23)
!4474 = !DILocation(line: 292, column: 12, scope: !4475)
!4475 = distinct !DILexicalBlock(scope: !4353, file: !311, line: 292, column: 7)
!4476 = !DILocation(line: 292, column: 5, scope: !4477)
!4477 = distinct !DILexicalBlock(scope: !4475, file: !311, line: 292, column: 23)
!4478 = !DILocation(line: 292, column: 12, scope: !4479)
!4479 = distinct !DILexicalBlock(scope: !4353, file: !311, line: 292, column: 7)
!4480 = !DILocation(line: 292, column: 5, scope: !4481)
!4481 = distinct !DILexicalBlock(scope: !4479, file: !311, line: 292, column: 23)
!4482 = !DILocation(line: 292, column: 12, scope: !4483)
!4483 = distinct !DILexicalBlock(scope: !4353, file: !311, line: 292, column: 7)
!4484 = !DILocation(line: 292, column: 5, scope: !4485)
!4485 = distinct !DILexicalBlock(scope: !4483, file: !311, line: 292, column: 23)
!4486 = !DILocation(line: 292, column: 12, scope: !4487)
!4487 = distinct !DILexicalBlock(scope: !4353, file: !311, line: 292, column: 7)
!4488 = !DILocation(line: 292, column: 5, scope: !4489)
!4489 = distinct !DILexicalBlock(scope: !4487, file: !311, line: 292, column: 23)
!4490 = !DILocation(line: 292, column: 12, scope: !4491)
!4491 = distinct !DILexicalBlock(scope: !4353, file: !311, line: 292, column: 7)
!4492 = !DILocation(line: 292, column: 5, scope: !4493)
!4493 = distinct !DILexicalBlock(scope: !4491, file: !311, line: 292, column: 23)
!4494 = !DILocation(line: 292, column: 12, scope: !4495)
!4495 = distinct !DILexicalBlock(scope: !4353, file: !311, line: 292, column: 7)
!4496 = !DILocation(line: 292, column: 5, scope: !4497)
!4497 = distinct !DILexicalBlock(scope: !4495, file: !311, line: 292, column: 23)
!4498 = !DILocation(line: 292, column: 12, scope: !4499)
!4499 = distinct !DILexicalBlock(scope: !4353, file: !311, line: 292, column: 7)
!4500 = !DILocation(line: 292, column: 5, scope: !4501)
!4501 = distinct !DILexicalBlock(scope: !4499, file: !311, line: 292, column: 23)
!4502 = !DILocation(line: 292, column: 12, scope: !4503)
!4503 = distinct !DILexicalBlock(scope: !4353, file: !311, line: 292, column: 7)
!4504 = !DILocation(line: 292, column: 5, scope: !4505)
!4505 = distinct !DILexicalBlock(scope: !4503, file: !311, line: 292, column: 23)
!4506 = !DILocation(line: 292, column: 12, scope: !4507)
!4507 = distinct !DILexicalBlock(scope: !4353, file: !311, line: 292, column: 7)
!4508 = !DILocation(line: 292, column: 5, scope: !4509)
!4509 = distinct !DILexicalBlock(scope: !4507, file: !311, line: 292, column: 23)
!4510 = !DILocation(line: 292, column: 12, scope: !4511)
!4511 = distinct !DILexicalBlock(scope: !4353, file: !311, line: 292, column: 7)
!4512 = !DILocation(line: 292, column: 5, scope: !4513)
!4513 = distinct !DILexicalBlock(scope: !4511, file: !311, line: 292, column: 23)
!4514 = !DILocation(line: 292, column: 12, scope: !4515)
!4515 = distinct !DILexicalBlock(scope: !4353, file: !311, line: 292, column: 7)
!4516 = !DILocation(line: 292, column: 5, scope: !4517)
!4517 = distinct !DILexicalBlock(scope: !4515, file: !311, line: 292, column: 23)
!4518 = !DILocation(line: 292, column: 12, scope: !4519)
!4519 = distinct !DILexicalBlock(scope: !4353, file: !311, line: 292, column: 7)
!4520 = !DILocation(line: 292, column: 5, scope: !4521)
!4521 = distinct !DILexicalBlock(scope: !4519, file: !311, line: 292, column: 23)
!4522 = !DILocation(line: 292, column: 12, scope: !4523)
!4523 = distinct !DILexicalBlock(scope: !4353, file: !311, line: 292, column: 7)
!4524 = !DILocation(line: 292, column: 5, scope: !4525)
!4525 = distinct !DILexicalBlock(scope: !4523, file: !311, line: 292, column: 23)
!4526 = !DILocation(line: 292, column: 12, scope: !4527)
!4527 = distinct !DILexicalBlock(scope: !4353, file: !311, line: 292, column: 7)
!4528 = !DILocation(line: 292, column: 5, scope: !4529)
!4529 = distinct !DILexicalBlock(scope: !4527, file: !311, line: 292, column: 23)
!4530 = !DILocation(line: 292, column: 12, scope: !4531)
!4531 = distinct !DILexicalBlock(scope: !4353, file: !311, line: 292, column: 7)
!4532 = !DILocation(line: 292, column: 5, scope: !4533)
!4533 = distinct !DILexicalBlock(scope: !4531, file: !311, line: 292, column: 23)
!4534 = !DILocation(line: 292, column: 12, scope: !4535)
!4535 = distinct !DILexicalBlock(scope: !4353, file: !311, line: 292, column: 7)
!4536 = !DILocation(line: 292, column: 5, scope: !4537)
!4537 = distinct !DILexicalBlock(scope: !4535, file: !311, line: 292, column: 23)
!4538 = !DILocation(line: 292, column: 12, scope: !4539)
!4539 = distinct !DILexicalBlock(scope: !4353, file: !311, line: 292, column: 7)
!4540 = !DILocation(line: 292, column: 5, scope: !4541)
!4541 = distinct !DILexicalBlock(scope: !4539, file: !311, line: 292, column: 23)
!4542 = !DILocation(line: 292, column: 12, scope: !4543)
!4543 = distinct !DILexicalBlock(scope: !4353, file: !311, line: 292, column: 7)
!4544 = !DILocation(line: 292, column: 5, scope: !4545)
!4545 = distinct !DILexicalBlock(scope: !4543, file: !311, line: 292, column: 23)
!4546 = !DILocation(line: 292, column: 12, scope: !4547)
!4547 = distinct !DILexicalBlock(scope: !4353, file: !311, line: 292, column: 7)
!4548 = !DILocation(line: 292, column: 5, scope: !4549)
!4549 = distinct !DILexicalBlock(scope: !4547, file: !311, line: 292, column: 23)
!4550 = !DILocation(line: 292, column: 12, scope: !4551)
!4551 = distinct !DILexicalBlock(scope: !4353, file: !311, line: 292, column: 7)
!4552 = !DILocation(line: 292, column: 5, scope: !4553)
!4553 = distinct !DILexicalBlock(scope: !4551, file: !311, line: 292, column: 23)
!4554 = !DILocation(line: 292, column: 12, scope: !4555)
!4555 = distinct !DILexicalBlock(scope: !4353, file: !311, line: 292, column: 7)
!4556 = !DILocation(line: 292, column: 5, scope: !4557)
!4557 = distinct !DILexicalBlock(scope: !4555, file: !311, line: 292, column: 23)
!4558 = !DILocation(line: 292, column: 12, scope: !4559)
!4559 = distinct !DILexicalBlock(scope: !4353, file: !311, line: 292, column: 7)
!4560 = !DILocation(line: 292, column: 5, scope: !4561)
!4561 = distinct !DILexicalBlock(scope: !4559, file: !311, line: 292, column: 23)
!4562 = !DILocation(line: 292, column: 12, scope: !4563)
!4563 = distinct !DILexicalBlock(scope: !4353, file: !311, line: 292, column: 7)
!4564 = !DILocation(line: 292, column: 5, scope: !4565)
!4565 = distinct !DILexicalBlock(scope: !4563, file: !311, line: 292, column: 23)
!4566 = !DILocation(line: 292, column: 12, scope: !4567)
!4567 = distinct !DILexicalBlock(scope: !4353, file: !311, line: 292, column: 7)
!4568 = !DILocation(line: 292, column: 5, scope: !4569)
!4569 = distinct !DILexicalBlock(scope: !4567, file: !311, line: 292, column: 23)
!4570 = !DILocation(line: 292, column: 12, scope: !4571)
!4571 = distinct !DILexicalBlock(scope: !4353, file: !311, line: 292, column: 7)
!4572 = !DILocation(line: 292, column: 5, scope: !4573)
!4573 = distinct !DILexicalBlock(scope: !4571, file: !311, line: 292, column: 23)
!4574 = !DILocation(line: 294, column: 3, scope: !4353)
!4575 = !DILocation(line: 156, column: 34, scope: !4353)
!4576 = !DILocation(line: 156, column: 28, scope: !4353)
!4577 = !DILocation(line: 156, column: 26, scope: !4353)
!4578 = !DILocation(line: 156, column: 63, scope: !4353)
!4579 = !DILocation(line: 156, column: 57, scope: !4353)
!4580 = !DILocation(line: 156, column: 73, scope: !4353)
!4581 = !DILocation(line: 156, column: 78, scope: !4353)
!4582 = !DILocation(line: 156, column: 83, scope: !4353)
!4583 = !DILocation(line: 156, column: 51, scope: !4353)
!4584 = !DILocation(line: 156, column: 45, scope: !4353)
!4585 = !DILocation(line: 156, column: 13, scope: !4353)
!4586 = !DILocation(line: 156, column: 11, scope: !4353)
!4587 = !DILocation(line: 157, column: 14, scope: !4588)
!4588 = distinct !DILexicalBlock(scope: !4353, file: !311, line: 157, column: 7)
!4589 = !DILocation(line: 157, column: 8, scope: !4588)
!4590 = !DILocation(line: 157, column: 24, scope: !4588)
!4591 = !DILocation(line: 157, column: 31, scope: !4588)
!4592 = !DILocation(line: 157, column: 7, scope: !4353)
!4593 = !DILocation(line: 157, column: 13, scope: !4594)
!4594 = distinct !DILexicalBlock(scope: !4588, file: !311, line: 157, column: 39)
!4595 = !DILocation(line: 158, column: 3, scope: !4594)
!4596 = !DILocation(line: 159, column: 3, scope: !4353)
!4597 = !DILocation(line: 161, column: 34, scope: !4353)
!4598 = !DILocation(line: 161, column: 44, scope: !4353)
!4599 = !DILocation(line: 161, column: 50, scope: !4353)
!4600 = !DILocation(line: 161, column: 25, scope: !4353)
!4601 = !DILocation(line: 161, column: 23, scope: !4353)
!4602 = !DILocation(line: 161, column: 37, scope: !4353)
!4603 = !DILocation(line: 161, column: 24, scope: !4353)
!4604 = !DILocation(line: 162, column: 35, scope: !4353)
!4605 = !DILocation(line: 162, column: 45, scope: !4353)
!4606 = !DILocation(line: 162, column: 51, scope: !4353)
!4607 = !DILocation(line: 162, column: 26, scope: !4353)
!4608 = !DILocation(line: 162, column: 24, scope: !4353)
!4609 = !DILocation(line: 163, column: 36, scope: !4353)
!4610 = !DILocation(line: 163, column: 46, scope: !4353)
!4611 = !DILocation(line: 163, column: 28, scope: !4353)
!4612 = !DILocation(line: 163, column: 26, scope: !4353)
!4613 = !DILocation(line: 165, column: 3, scope: !4353)
!4614 = !DILocation(line: 170, column: 22, scope: !4353)
!4615 = !DILocation(line: 170, column: 32, scope: !4353)
!4616 = !DILocation(line: 170, column: 14, scope: !4353)
!4617 = !DILocalVariable(name: "duty_ctr", scope: !4311, file: !311, line: 145, type: !15)
!4618 = !DILocation(line: 171, column: 17, scope: !4353)
!4619 = !DILocation(line: 171, column: 27, scope: !4353)
!4620 = !DILocation(line: 171, column: 9, scope: !4353)
!4621 = !DILocalVariable(name: "len", scope: !4311, file: !311, line: 146, type: !15)
!4622 = !DILocation(line: 173, column: 34, scope: !4353)
!4623 = !DILocation(line: 173, column: 27, scope: !4353)
!4624 = !DILocation(line: 173, column: 3, scope: !4353)
!4625 = !DILocation(line: 173, column: 16, scope: !4353)
!4626 = !DILocation(line: 173, column: 25, scope: !4353)
!4627 = !DILocation(line: 174, column: 27, scope: !4353)
!4628 = !DILocation(line: 174, column: 40, scope: !4353)
!4629 = !DILocation(line: 174, column: 49, scope: !4353)
!4630 = !DILocation(line: 174, column: 62, scope: !4353)
!4631 = !DILocation(line: 174, column: 47, scope: !4353)
!4632 = !DILocation(line: 174, column: 72, scope: !4353)
!4633 = !DILocation(line: 174, column: 3, scope: !4353)
!4634 = !DILocation(line: 174, column: 16, scope: !4353)
!4635 = !DILocation(line: 174, column: 24, scope: !4353)
!4636 = !DILocation(line: 175, column: 27, scope: !4353)
!4637 = !DILocation(line: 175, column: 34, scope: !4353)
!4638 = !DILocation(line: 175, column: 3, scope: !4353)
!4639 = !DILocation(line: 175, column: 16, scope: !4353)
!4640 = !DILocation(line: 175, column: 20, scope: !4353)
!4641 = !DILocation(line: 177, column: 3, scope: !4353)
!4642 = !DILocation(line: 183, column: 17, scope: !4353)
!4643 = !DILocation(line: 183, column: 27, scope: !4353)
!4644 = !DILocation(line: 183, column: 9, scope: !4353)
!4645 = !DILocalVariable(name: "vol", scope: !4311, file: !311, line: 147, type: !15)
!4646 = !DILocation(line: 184, column: 21, scope: !4353)
!4647 = !DILocation(line: 184, column: 31, scope: !4353)
!4648 = !DILocation(line: 184, column: 37, scope: !4353)
!4649 = !DILocation(line: 184, column: 12, scope: !4353)
!4650 = !DILocalVariable(name: "envdir", scope: !4311, file: !311, line: 148, type: !15)
!4651 = !DILocation(line: 185, column: 20, scope: !4353)
!4652 = !DILocation(line: 185, column: 30, scope: !4353)
!4653 = !DILocation(line: 185, column: 12, scope: !4353)
!4654 = !DILocalVariable(name: "envspd", scope: !4311, file: !311, line: 149, type: !15)
!4655 = !DILocation(line: 187, column: 3, scope: !4353)
!4656 = !DILocation(line: 187, column: 16, scope: !4353)
!4657 = !DILocation(line: 187, column: 23, scope: !4353)
!4658 = !DILocation(line: 188, column: 3, scope: !4353)
!4659 = !DILocation(line: 188, column: 16, scope: !4353)
!4660 = !DILocation(line: 188, column: 24, scope: !4353)
!4661 = !DILocation(line: 189, column: 16, scope: !4353)
!4662 = !DILocalVariable(name: "tmp", scope: !4311, file: !311, line: 150, type: !15)
!4663 = !DILocation(line: 189, column: 3, scope: !4353)
!4664 = !DILocation(line: 189, column: 23, scope: !4353)
!4665 = !DILocation(line: 189, column: 24, scope: !4353)
!4666 = !DILocation(line: 191, column: 3, scope: !4353)
!4667 = !DILocation(line: 199, column: 36, scope: !4353)
!4668 = !DILocation(line: 199, column: 31, scope: !4353)
!4669 = !DILocation(line: 199, column: 20, scope: !4353)
!4670 = !DILocation(line: 199, column: 13, scope: !4353)
!4671 = !DILocalVariable(name: "div___2", scope: !4311, file: !311, line: 151, type: !15)
!4672 = !DILocation(line: 201, column: 38, scope: !4353)
!4673 = !DILocation(line: 201, column: 33, scope: !4353)
!4674 = !DILocation(line: 201, column: 22, scope: !4353)
!4675 = !DILocation(line: 201, column: 15, scope: !4353)
!4676 = !DILocation(line: 201, column: 45, scope: !4353)
!4677 = !DILocation(line: 201, column: 51, scope: !4353)
!4678 = !DILocation(line: 201, column: 11, scope: !4353)
!4679 = !DILocation(line: 202, column: 31, scope: !4353)
!4680 = !DILocation(line: 202, column: 3, scope: !4353)
!4681 = !DILocation(line: 202, column: 16, scope: !4353)
!4682 = !DILocation(line: 202, column: 23, scope: !4353)
!4683 = !DILocation(line: 203, column: 27, scope: !4353)
!4684 = !DILocation(line: 203, column: 40, scope: !4353)
!4685 = !DILocation(line: 203, column: 49, scope: !4353)
!4686 = !DILocation(line: 203, column: 62, scope: !4353)
!4687 = !DILocation(line: 203, column: 47, scope: !4353)
!4688 = !DILocation(line: 203, column: 72, scope: !4353)
!4689 = !DILocation(line: 203, column: 3, scope: !4353)
!4690 = !DILocation(line: 203, column: 16, scope: !4353)
!4691 = !DILocation(line: 203, column: 24, scope: !4353)
!4692 = !DILocation(line: 205, column: 12, scope: !4693)
!4693 = distinct !DILexicalBlock(scope: !4353, file: !311, line: 205, column: 7)
!4694 = !DILocation(line: 205, column: 7, scope: !4353)
!4695 = !DILocation(line: 207, column: 5, scope: !4696)
!4696 = distinct !DILexicalBlock(scope: !4693, file: !311, line: 205, column: 23)
!4697 = !DILocation(line: 205, column: 12, scope: !4698)
!4698 = distinct !DILexicalBlock(scope: !4693, file: !311, line: 205, column: 7)
!4699 = !DILocation(line: 205, column: 7, scope: !4693)
!4700 = !DILocation(line: 207, column: 5, scope: !4701)
!4701 = distinct !DILexicalBlock(scope: !4698, file: !311, line: 205, column: 23)
!4702 = !DILocation(line: 205, column: 12, scope: !4703)
!4703 = distinct !DILexicalBlock(scope: !4698, file: !311, line: 205, column: 7)
!4704 = !DILocation(line: 205, column: 7, scope: !4698)
!4705 = !DILocation(line: 207, column: 5, scope: !4706)
!4706 = distinct !DILexicalBlock(scope: !4703, file: !311, line: 205, column: 23)
!4707 = !DILocation(line: 209, column: 60, scope: !4353)
!4708 = !DILocation(line: 209, column: 55, scope: !4353)
!4709 = !DILocation(line: 209, column: 44, scope: !4353)
!4710 = !DILocation(line: 209, column: 38, scope: !4353)
!4711 = !DILocation(line: 209, column: 67, scope: !4353)
!4712 = !DILocation(line: 209, column: 73, scope: !4353)
!4713 = !DILocation(line: 209, column: 29, scope: !4353)
!4714 = !DILocation(line: 209, column: 3, scope: !4353)
!4715 = !DILocation(line: 209, column: 16, scope: !4353)
!4716 = !DILocation(line: 209, column: 27, scope: !4353)
!4717 = !DILocation(line: 212, column: 3, scope: !4353)
!4718 = !DILocation(line: 214, column: 3, scope: !4353)
!4719 = !DILocation(line: 216, column: 38, scope: !4353)
!4720 = !DILocation(line: 216, column: 32, scope: !4353)
!4721 = !DILocation(line: 216, column: 49, scope: !4353)
!4722 = !DILocation(line: 216, column: 56, scope: !4353)
!4723 = !DILocation(line: 216, column: 23, scope: !4353)
!4724 = !DILocation(line: 216, column: 21, scope: !4353)
!4725 = !DILocation(line: 217, column: 3, scope: !4353)
!4726 = !DILocation(line: 219, column: 35, scope: !4353)
!4727 = !DILocation(line: 219, column: 33, scope: !4353)
!4728 = !DILocation(line: 219, column: 46, scope: !4353)
!4729 = !DILocation(line: 219, column: 20, scope: !4353)
!4730 = !DILocation(line: 219, column: 18, scope: !4353)
!4731 = !DILocation(line: 220, column: 3, scope: !4353)
!4732 = !DILocation(line: 223, column: 28, scope: !4353)
!4733 = !DILocation(line: 223, column: 22, scope: !4353)
!4734 = !DILocation(line: 223, column: 39, scope: !4353)
!4735 = !DILocation(line: 223, column: 45, scope: !4353)
!4736 = !DILocation(line: 223, column: 13, scope: !4353)
!4737 = !DILocalVariable(name: "vol___0", scope: !4311, file: !311, line: 152, type: !15)
!4738 = !DILocation(line: 224, column: 21, scope: !4353)
!4739 = !DILocation(line: 225, column: 3, scope: !4353)
!4740 = !DILocation(line: 228, column: 3, scope: !4353)
!4741 = !DILocation(line: 232, column: 20, scope: !4353)
!4742 = !DILocation(line: 232, column: 13, scope: !4353)
!4743 = !DILocalVariable(name: "div___3", scope: !4311, file: !311, line: 153, type: !15)
!4744 = !DILocation(line: 233, column: 19, scope: !4353)
!4745 = !DILocalVariable(name: "shift", scope: !4311, file: !311, line: 154, type: !15)
!4746 = !DILocation(line: 234, column: 22, scope: !4353)
!4747 = !DILocalVariable(name: "rate___1", scope: !4311, file: !311, line: 155, type: !15)
!4748 = !DILocation(line: 235, column: 22, scope: !4353)
!4749 = !DILocation(line: 236, column: 33, scope: !4353)
!4750 = !DILocation(line: 236, column: 23, scope: !4353)
!4751 = !DILocation(line: 236, column: 21, scope: !4353)
!4752 = !DILocation(line: 237, column: 15, scope: !4753)
!4753 = distinct !DILexicalBlock(scope: !4353, file: !311, line: 237, column: 7)
!4754 = !DILocation(line: 237, column: 7, scope: !4353)
!4755 = !DILocation(line: 238, column: 10, scope: !4756)
!4756 = distinct !DILexicalBlock(scope: !4753, file: !311, line: 237, column: 21)
!4757 = !DILocation(line: 239, column: 10, scope: !4756)
!4758 = !DILocation(line: 240, column: 3, scope: !4756)
!4759 = !DILocation(line: 241, column: 10, scope: !4760)
!4760 = distinct !DILexicalBlock(scope: !4753, file: !311, line: 240, column: 10)
!4761 = !DILocation(line: 242, column: 10, scope: !4760)
!4762 = !DILocation(line: 244, column: 8, scope: !4353)
!4763 = !DILocation(line: 245, column: 7, scope: !4764)
!4764 = distinct !DILexicalBlock(scope: !4353, file: !311, line: 245, column: 7)
!4765 = !DILocation(line: 245, column: 7, scope: !4353)
!4766 = !DILocation(line: 245, column: 23, scope: !4767)
!4767 = distinct !DILexicalBlock(scope: !4764, file: !311, line: 245, column: 17)
!4768 = !DILocation(line: 246, column: 3, scope: !4767)
!4769 = !DILocation(line: 246, column: 23, scope: !4770)
!4770 = distinct !DILexicalBlock(scope: !4764, file: !311, line: 246, column: 10)
!4771 = !DILocation(line: 247, column: 12, scope: !4772)
!4772 = distinct !DILexicalBlock(scope: !4353, file: !311, line: 247, column: 7)
!4773 = !DILocation(line: 247, column: 7, scope: !4353)
!4774 = !DILocation(line: 247, column: 5, scope: !4775)
!4775 = distinct !DILexicalBlock(scope: !4772, file: !311, line: 247, column: 23)
!4776 = !DILocation(line: 250, column: 44, scope: !4353)
!4777 = !DILocation(line: 250, column: 38, scope: !4353)
!4778 = !DILocation(line: 250, column: 55, scope: !4353)
!4779 = !DILocation(line: 250, column: 61, scope: !4353)
!4780 = !DILocation(line: 250, column: 29, scope: !4353)
!4781 = !DILocation(line: 250, column: 3, scope: !4353)
!4782 = !DILocation(line: 250, column: 16, scope: !4353)
!4783 = !DILocation(line: 250, column: 27, scope: !4353)
!4784 = !DILocation(line: 251, column: 3, scope: !4353)
!4785 = !DILocation(line: 253, column: 34, scope: !4353)
!4786 = !DILocation(line: 253, column: 44, scope: !4353)
!4787 = !DILocation(line: 253, column: 50, scope: !4353)
!4788 = !DILocation(line: 253, column: 25, scope: !4353)
!4789 = !DILocation(line: 253, column: 23, scope: !4353)
!4790 = !DILocation(line: 254, column: 35, scope: !4353)
!4791 = !DILocation(line: 254, column: 45, scope: !4353)
!4792 = !DILocation(line: 254, column: 50, scope: !4353)
!4793 = !DILocation(line: 254, column: 26, scope: !4353)
!4794 = !DILocation(line: 254, column: 24, scope: !4353)
!4795 = !DILocation(line: 255, column: 34, scope: !4353)
!4796 = !DILocation(line: 255, column: 44, scope: !4353)
!4797 = !DILocation(line: 255, column: 50, scope: !4353)
!4798 = !DILocation(line: 255, column: 25, scope: !4353)
!4799 = !DILocation(line: 255, column: 23, scope: !4353)
!4800 = !DILocation(line: 256, column: 35, scope: !4353)
!4801 = !DILocation(line: 256, column: 45, scope: !4353)
!4802 = !DILocation(line: 256, column: 50, scope: !4353)
!4803 = !DILocation(line: 256, column: 26, scope: !4353)
!4804 = !DILocation(line: 256, column: 24, scope: !4353)
!4805 = !DILocation(line: 257, column: 34, scope: !4353)
!4806 = !DILocation(line: 257, column: 44, scope: !4353)
!4807 = !DILocation(line: 257, column: 50, scope: !4353)
!4808 = !DILocation(line: 257, column: 25, scope: !4353)
!4809 = !DILocation(line: 257, column: 23, scope: !4353)
!4810 = !DILocation(line: 258, column: 35, scope: !4353)
!4811 = !DILocation(line: 258, column: 45, scope: !4353)
!4812 = !DILocation(line: 258, column: 50, scope: !4353)
!4813 = !DILocation(line: 258, column: 26, scope: !4353)
!4814 = !DILocation(line: 258, column: 24, scope: !4353)
!4815 = !DILocation(line: 259, column: 34, scope: !4353)
!4816 = !DILocation(line: 259, column: 44, scope: !4353)
!4817 = !DILocation(line: 259, column: 51, scope: !4353)
!4818 = !DILocation(line: 259, column: 25, scope: !4353)
!4819 = !DILocation(line: 259, column: 23, scope: !4353)
!4820 = !DILocation(line: 260, column: 35, scope: !4353)
!4821 = !DILocation(line: 260, column: 45, scope: !4353)
!4822 = !DILocation(line: 260, column: 50, scope: !4353)
!4823 = !DILocation(line: 260, column: 26, scope: !4353)
!4824 = !DILocation(line: 260, column: 24, scope: !4353)
!4825 = !DILocation(line: 261, column: 3, scope: !4353)
!4826 = !DILocation(line: 263, column: 14, scope: !4353)
!4827 = !DILocation(line: 264, column: 3, scope: !4353)
!4828 = !DILocation(line: 293, column: 3, scope: !4353)
!4829 = !DILocation(line: 295, column: 36, scope: !4830)
!4830 = distinct !DILexicalBlock(scope: !4831, file: !311, line: 296, column: 3)
!4831 = distinct !DILexicalBlock(scope: !4353, file: !311, line: 295, column: 3)
!4832 = !DILocation(line: 296, column: 17, scope: !4830)
!4833 = !DILocation(line: 295, column: 3, scope: !4830)
!4834 = !DILocation(line: 296, column: 3, scope: !4353)
!4835 = !DILocation(line: 298, column: 3, scope: !4320)
!4836 = !DILocation(line: 300, column: 1, scope: !4311)
!4837 = distinct !DISubprogram(name: "io_get", scope: !311, file: !311, line: 102, type: !491, scopeLine: 103, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !666)
!4838 = !DILocalVariable(name: "addr", arg: 1, scope: !4837, file: !311, line: 102, type: !83)
!4839 = !DILocation(line: 0, scope: !4837)
!4840 = !DILocalVariable(name: "__cil_tmp2", scope: !4837, file: !311, line: 104, type: !16)
!4841 = !DILocation(line: 104, column: 9, scope: !4837)
!4842 = !DILocation(line: 104, column: 12, scope: !4843)
!4843 = distinct !DILexicalBlock(scope: !4844, file: !311, line: 104, column: 7)
!4844 = distinct !DILexicalBlock(scope: !4837, file: !311, line: 106, column: 3)
!4845 = !DILocation(line: 104, column: 7, scope: !4844)
!4846 = !DILocation(line: 104, column: 14, scope: !4847)
!4847 = distinct !DILexicalBlock(scope: !4848, file: !311, line: 104, column: 9)
!4848 = distinct !DILexicalBlock(scope: !4843, file: !311, line: 104, column: 23)
!4849 = !DILocation(line: 104, column: 9, scope: !4848)
!4850 = !DILocation(line: 105, column: 37, scope: !4851)
!4851 = distinct !DILexicalBlock(scope: !4847, file: !311, line: 104, column: 25)
!4852 = !DILocation(line: 105, column: 26, scope: !4851)
!4853 = !DILocation(line: 105, column: 15, scope: !4851)
!4854 = !DILocation(line: 105, column: 7, scope: !4851)
!4855 = !DILocation(line: 107, column: 3, scope: !4848)
!4856 = !DILocation(line: 107, column: 12, scope: !4857)
!4857 = distinct !DILexicalBlock(scope: !4844, file: !311, line: 107, column: 7)
!4858 = !DILocation(line: 107, column: 7, scope: !4844)
!4859 = !DILocation(line: 107, column: 14, scope: !4860)
!4860 = distinct !DILexicalBlock(scope: !4861, file: !311, line: 107, column: 9)
!4861 = distinct !DILexicalBlock(scope: !4857, file: !311, line: 107, column: 23)
!4862 = !DILocation(line: 107, column: 9, scope: !4861)
!4863 = !DILocation(line: 109, column: 38, scope: !4864)
!4864 = distinct !DILexicalBlock(scope: !4860, file: !311, line: 107, column: 25)
!4865 = !DILocation(line: 109, column: 26, scope: !4864)
!4866 = !DILocation(line: 109, column: 15, scope: !4864)
!4867 = !DILocation(line: 109, column: 7, scope: !4864)
!4868 = !DILocation(line: 111, column: 3, scope: !4861)
!4869 = !DILocation(line: 111, column: 12, scope: !4870)
!4870 = distinct !DILexicalBlock(scope: !4844, file: !311, line: 111, column: 7)
!4871 = !DILocation(line: 111, column: 7, scope: !4844)
!4872 = !DILocation(line: 111, column: 5, scope: !4873)
!4873 = distinct !DILexicalBlock(scope: !4870, file: !311, line: 111, column: 23)
!4874 = !DILocation(line: 112, column: 12, scope: !4875)
!4875 = distinct !DILexicalBlock(scope: !4844, file: !311, line: 112, column: 7)
!4876 = !DILocation(line: 112, column: 7, scope: !4844)
!4877 = !DILocation(line: 112, column: 24, scope: !4878)
!4878 = distinct !DILexicalBlock(scope: !4875, file: !311, line: 112, column: 23)
!4879 = !DILocation(line: 112, column: 13, scope: !4878)
!4880 = !DILocation(line: 112, column: 5, scope: !4878)
!4881 = !DILocation(line: 113, column: 36, scope: !4882)
!4882 = distinct !DILexicalBlock(scope: !4883, file: !311, line: 115, column: 3)
!4883 = distinct !DILexicalBlock(scope: !4844, file: !311, line: 114, column: 3)
!4884 = !DILocation(line: 113, column: 3, scope: !4882)
!4885 = !DILocation(line: 114, column: 3, scope: !4886)
!4886 = distinct !DILexicalBlock(scope: !4887, file: !311, line: 118, column: 3)
!4887 = distinct !DILexicalBlock(scope: !4844, file: !311, line: 117, column: 3)
!4888 = !DILocation(line: 114, column: 13, scope: !4886)
!4889 = !DILocation(line: 114, column: 5, scope: !4890)
!4890 = distinct !DILexicalBlock(scope: !4886, file: !311, line: 114, column: 13)
!4891 = !DILocation(line: 117, column: 3, scope: !4886)
!4892 = !DILocation(line: 115, column: 3, scope: !4844)
!4893 = !DILocation(line: 0, scope: !4844)
!4894 = !DILocation(line: 117, column: 1, scope: !4837)
!4895 = distinct !DISubprogram(name: "gb_sound", scope: !311, file: !311, line: 445, type: !1747, scopeLine: 446, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !666)
!4896 = !DILocalVariable(name: "cycles", arg: 1, scope: !4895, file: !311, line: 445, type: !15)
!4897 = !DILocation(line: 0, scope: !4895)
!4898 = !DILocalVariable(name: "__cil_tmp16", scope: !4895, file: !311, line: 461, type: !16)
!4899 = !DILocation(line: 461, column: 9, scope: !4895)
!4900 = !DILocalVariable(name: "__cil_tmp17", scope: !4895, file: !311, line: 462, type: !16)
!4901 = !DILocation(line: 462, column: 9, scope: !4895)
!4902 = !DILocalVariable(name: "__cil_tmp18", scope: !4895, file: !311, line: 463, type: !16)
!4903 = !DILocation(line: 463, column: 9, scope: !4895)
!4904 = !DILocalVariable(name: "l_lvl", scope: !4895, file: !311, line: 449, type: !15)
!4905 = !DILocalVariable(name: "r_lvl", scope: !4895, file: !311, line: 450, type: !15)
!4906 = !DILocation(line: 451, column: 26, scope: !4907)
!4907 = distinct !DILexicalBlock(scope: !4908, file: !311, line: 451, column: 7)
!4908 = distinct !DILexicalBlock(scope: !4895, file: !311, line: 465, column: 3)
!4909 = !DILocation(line: 451, column: 10, scope: !4907)
!4910 = !DILocation(line: 451, column: 33, scope: !4907)
!4911 = !DILocation(line: 451, column: 7, scope: !4908)
!4912 = !DILocation(line: 451, column: 5, scope: !4913)
!4913 = distinct !DILexicalBlock(scope: !4914, file: !311, line: 453, column: 5)
!4914 = distinct !DILexicalBlock(scope: !4915, file: !311, line: 452, column: 5)
!4915 = distinct !DILexicalBlock(scope: !4907, file: !311, line: 451, column: 66)
!4916 = !DILocalVariable(name: "j", scope: !4895, file: !311, line: 448, type: !15)
!4917 = !DILocation(line: 453, column: 3, scope: !4918)
!4918 = distinct !DILexicalBlock(scope: !4919, file: !311, line: 455, column: 3)
!4919 = distinct !DILexicalBlock(scope: !4908, file: !311, line: 454, column: 3)
!4920 = !DILocation(line: 0, scope: !4908)
!4921 = !DILocation(line: 453, column: 13, scope: !4918)
!4922 = !DILocation(line: 453, column: 14, scope: !4923)
!4923 = distinct !DILexicalBlock(scope: !4924, file: !311, line: 453, column: 9)
!4924 = distinct !DILexicalBlock(scope: !4918, file: !311, line: 453, column: 13)
!4925 = !DILocation(line: 453, column: 9, scope: !4924)
!4926 = !DILocation(line: 453, column: 7, scope: !4927)
!4927 = distinct !DILexicalBlock(scope: !4923, file: !311, line: 453, column: 25)
!4928 = !DILocation(line: 454, column: 14, scope: !4924)
!4929 = !DILocation(line: 455, column: 6, scope: !4924)
!4930 = !DILocation(line: 455, column: 14, scope: !4924)
!4931 = !DILocation(line: 455, column: 22, scope: !4924)
!4932 = !DILocation(line: 456, column: 21, scope: !4933)
!4933 = distinct !DILexicalBlock(scope: !4924, file: !311, line: 456, column: 9)
!4934 = !DILocation(line: 456, column: 29, scope: !4933)
!4935 = !DILocation(line: 456, column: 36, scope: !4933)
!4936 = !DILocation(line: 456, column: 49, scope: !4933)
!4937 = !DILocation(line: 456, column: 77, scope: !4933)
!4938 = !DILocation(line: 456, column: 85, scope: !4933)
!4939 = !DILocation(line: 456, column: 109, scope: !4933)
!4940 = !DILocation(line: 456, column: 106, scope: !4933)
!4941 = !DILocation(line: 456, column: 126, scope: !4933)
!4942 = !DILocation(line: 456, column: 95, scope: !4933)
!4943 = !DILocation(line: 456, column: 93, scope: !4933)
!4944 = !DILocation(line: 456, column: 62, scope: !4933)
!4945 = !DILocation(line: 456, column: 46, scope: !4933)
!4946 = !DILocation(line: 456, column: 9, scope: !4924)
!4947 = !DILocation(line: 457, column: 7, scope: !4948)
!4948 = distinct !DILexicalBlock(scope: !4949, file: !311, line: 458, column: 7)
!4949 = distinct !DILexicalBlock(scope: !4950, file: !311, line: 457, column: 7)
!4950 = distinct !DILexicalBlock(scope: !4933, file: !311, line: 456, column: 133)
!4951 = !DILocation(line: 460, column: 5, scope: !4950)
!4952 = !DILocation(line: 459, column: 20, scope: !4953)
!4953 = distinct !DILexicalBlock(scope: !4924, file: !311, line: 459, column: 9)
!4954 = !DILocation(line: 459, column: 9, scope: !4953)
!4955 = !DILocation(line: 459, column: 9, scope: !4924)
!4956 = !DILocation(line: 460, column: 28, scope: !4957)
!4957 = distinct !DILexicalBlock(scope: !4953, file: !311, line: 459, column: 28)
!4958 = !DILocation(line: 461, column: 22, scope: !4959)
!4959 = distinct !DILexicalBlock(scope: !4957, file: !311, line: 461, column: 11)
!4960 = !DILocation(line: 461, column: 30, scope: !4959)
!4961 = !DILocation(line: 461, column: 11, scope: !4957)
!4962 = !DILocation(line: 462, column: 15, scope: !4963)
!4963 = distinct !DILexicalBlock(scope: !4959, file: !311, line: 461, column: 37)
!4964 = !DILocalVariable(name: "tmp", scope: !4895, file: !311, line: 452, type: !15)
!4965 = !DILocation(line: 462, column: 16, scope: !4963)
!4966 = !DILocalVariable(name: "pos", scope: !4895, file: !311, line: 451, type: !15)
!4967 = !DILocation(line: 463, column: 26, scope: !4963)
!4968 = !DILocation(line: 463, column: 32, scope: !4963)
!4969 = !DILocalVariable(name: "index___0", scope: !4895, file: !311, line: 454, type: !15)
!4970 = !DILocation(line: 463, column: 18, scope: !4963)
!4971 = !DILocation(line: 463, column: 24, scope: !4963)
!4972 = !DILocation(line: 463, column: 30, scope: !4963)
!4973 = !DILocalVariable(name: "shift", scope: !4895, file: !311, line: 455, type: !15)
!4974 = !DILocation(line: 463, column: 45, scope: !4963)
!4975 = !DILocation(line: 463, column: 58, scope: !4963)
!4976 = !DILocation(line: 463, column: 68, scope: !4963)
!4977 = !DILocation(line: 463, column: 15, scope: !4963)
!4978 = !DILocalVariable(name: "val", scope: !4895, file: !311, line: 453, type: !15)
!4979 = !DILocation(line: 464, column: 32, scope: !4963)
!4980 = !DILocalVariable(name: "old_l___3", scope: !4895, file: !311, line: 456, type: !15)
!4981 = !DILocation(line: 465, column: 32, scope: !4963)
!4982 = !DILocalVariable(name: "old_r___3", scope: !4895, file: !311, line: 457, type: !15)
!4983 = !DILocation(line: 467, column: 41, scope: !4963)
!4984 = !DILocation(line: 467, column: 48, scope: !4963)
!4985 = !DILocation(line: 467, column: 28, scope: !4963)
!4986 = !DILocation(line: 468, column: 24, scope: !4987)
!4987 = distinct !DILexicalBlock(scope: !4963, file: !311, line: 468, column: 13)
!4988 = !DILocation(line: 468, column: 13, scope: !4987)
!4989 = !DILocation(line: 468, column: 13, scope: !4963)
!4990 = !DILocation(line: 469, column: 30, scope: !4991)
!4991 = distinct !DILexicalBlock(scope: !4987, file: !311, line: 468, column: 32)
!4992 = !DILocation(line: 469, column: 37, scope: !4991)
!4993 = !DILocation(line: 469, column: 15, scope: !4991)
!4994 = !DILocation(line: 470, column: 9, scope: !4991)
!4995 = !DILocation(line: 0, scope: !4987)
!4996 = !DILocation(line: 471, column: 13, scope: !4963)
!4997 = !DILocation(line: 472, column: 24, scope: !4998)
!4998 = distinct !DILexicalBlock(scope: !4963, file: !311, line: 472, column: 13)
!4999 = !DILocation(line: 472, column: 13, scope: !4998)
!5000 = !DILocation(line: 472, column: 13, scope: !4963)
!5001 = !DILocation(line: 472, column: 28, scope: !5002)
!5002 = distinct !DILexicalBlock(scope: !5003, file: !311, line: 472, column: 15)
!5003 = distinct !DILexicalBlock(scope: !4998, file: !311, line: 472, column: 32)
!5004 = !DILocation(line: 472, column: 17, scope: !5002)
!5005 = !DILocation(line: 472, column: 15, scope: !5003)
!5006 = !DILocation(line: 473, column: 28, scope: !5007)
!5007 = distinct !DILexicalBlock(scope: !5008, file: !311, line: 473, column: 17)
!5008 = distinct !DILexicalBlock(scope: !5002, file: !311, line: 472, column: 34)
!5009 = !DILocation(line: 473, column: 17, scope: !5007)
!5010 = !DILocation(line: 473, column: 17, scope: !5008)
!5011 = !DILocation(line: 474, column: 32, scope: !5012)
!5012 = distinct !DILexicalBlock(scope: !5007, file: !311, line: 473, column: 38)
!5013 = !DILocation(line: 475, column: 13, scope: !5012)
!5014 = !DILocation(line: 475, column: 28, scope: !5015)
!5015 = distinct !DILexicalBlock(scope: !5008, file: !311, line: 475, column: 17)
!5016 = !DILocation(line: 475, column: 17, scope: !5015)
!5017 = !DILocation(line: 475, column: 17, scope: !5008)
!5018 = !DILocation(line: 476, column: 32, scope: !5019)
!5019 = distinct !DILexicalBlock(scope: !5015, file: !311, line: 475, column: 39)
!5020 = !DILocation(line: 477, column: 13, scope: !5019)
!5021 = !DILocation(line: 478, column: 11, scope: !5008)
!5022 = !DILocation(line: 479, column: 9, scope: !5003)
!5023 = !DILocation(line: 478, column: 29, scope: !5024)
!5024 = distinct !DILexicalBlock(scope: !4963, file: !311, line: 480, column: 9)
!5025 = !DILocation(line: 478, column: 35, scope: !5024)
!5026 = !DILocalVariable(name: "l_diff", scope: !4895, file: !311, line: 458, type: !15)
!5027 = !DILocation(line: 479, column: 29, scope: !5024)
!5028 = !DILocation(line: 479, column: 35, scope: !5024)
!5029 = !DILocalVariable(name: "r_diff", scope: !4895, file: !311, line: 459, type: !15)
!5030 = !DILocation(line: 480, column: 9, scope: !5031)
!5031 = distinct !DILexicalBlock(scope: !5024, file: !311, line: 480, column: 9)
!5032 = !DILocation(line: 483, column: 7, scope: !4963)
!5033 = !DILocation(line: 484, column: 5, scope: !4957)
!5034 = !DILocation(line: 484, column: 9, scope: !5035)
!5035 = distinct !DILexicalBlock(scope: !4924, file: !311, line: 484, column: 9)
!5036 = !DILocation(line: 484, column: 18, scope: !5035)
!5037 = !DILocation(line: 484, column: 9, scope: !4924)
!5038 = !DILocation(line: 485, column: 16, scope: !5039)
!5039 = distinct !DILexicalBlock(scope: !5035, file: !311, line: 484, column: 40)
!5040 = !DILocalVariable(name: "i", scope: !4895, file: !311, line: 447, type: !15)
!5041 = !DILocation(line: 487, column: 7, scope: !5042)
!5042 = distinct !DILexicalBlock(scope: !5043, file: !311, line: 489, column: 7)
!5043 = distinct !DILexicalBlock(scope: !5039, file: !311, line: 488, column: 7)
!5044 = !DILocation(line: 0, scope: !5039)
!5045 = !DILocation(line: 487, column: 17, scope: !5042)
!5046 = !DILocation(line: 487, column: 18, scope: !5047)
!5047 = distinct !DILexicalBlock(scope: !5048, file: !311, line: 487, column: 13)
!5048 = distinct !DILexicalBlock(scope: !5042, file: !311, line: 487, column: 17)
!5049 = !DILocation(line: 487, column: 13, scope: !5048)
!5050 = !DILocation(line: 487, column: 11, scope: !5051)
!5051 = distinct !DILexicalBlock(scope: !5047, file: !311, line: 487, column: 25)
!5052 = !DILocation(line: 487, column: 13, scope: !5053)
!5053 = distinct !DILexicalBlock(scope: !5048, file: !311, line: 487, column: 13)
!5054 = !DILocation(line: 487, column: 24, scope: !5053)
!5055 = !DILocation(line: 488, column: 21, scope: !5056)
!5056 = distinct !DILexicalBlock(scope: !5053, file: !311, line: 487, column: 32)
!5057 = !DILocation(line: 488, column: 32, scope: !5056)
!5058 = !DILocalVariable(name: "val___0", scope: !4895, file: !311, line: 460, type: !15)
!5059 = !DILocation(line: 489, column: 15, scope: !5060)
!5060 = distinct !DILexicalBlock(scope: !5056, file: !311, line: 489, column: 15)
!5061 = !DILocation(line: 489, column: 26, scope: !5060)
!5062 = !DILocation(line: 489, column: 36, scope: !5060)
!5063 = !DILocation(line: 489, column: 47, scope: !5060)
!5064 = !DILocation(line: 489, column: 34, scope: !5060)
!5065 = !DILocation(line: 489, column: 15, scope: !5056)
!5066 = !DILocation(line: 490, column: 23, scope: !5067)
!5067 = distinct !DILexicalBlock(scope: !5060, file: !311, line: 489, column: 56)
!5068 = !DILocation(line: 491, column: 11, scope: !5067)
!5069 = !DILocation(line: 0, scope: !5056)
!5070 = !DILocation(line: 492, column: 17, scope: !5071)
!5071 = distinct !DILexicalBlock(scope: !5056, file: !311, line: 492, column: 15)
!5072 = !DILocation(line: 492, column: 28, scope: !5071)
!5073 = !DILocation(line: 492, column: 15, scope: !5056)
!5074 = !DILocation(line: 493, column: 17, scope: !5075)
!5075 = distinct !DILexicalBlock(scope: !5076, file: !311, line: 493, column: 17)
!5076 = distinct !DILexicalBlock(scope: !5071, file: !311, line: 492, column: 34)
!5077 = !DILocation(line: 493, column: 28, scope: !5075)
!5078 = !DILocation(line: 493, column: 17, scope: !5076)
!5079 = !DILocation(line: 494, column: 15, scope: !5080)
!5080 = distinct !DILexicalBlock(scope: !5075, file: !311, line: 493, column: 38)
!5081 = !DILocation(line: 494, column: 26, scope: !5080)
!5082 = !DILocation(line: 494, column: 32, scope: !5080)
!5083 = !DILocation(line: 495, column: 13, scope: !5080)
!5084 = !DILocation(line: 495, column: 17, scope: !5085)
!5085 = distinct !DILexicalBlock(scope: !5076, file: !311, line: 495, column: 17)
!5086 = !DILocation(line: 495, column: 28, scope: !5085)
!5087 = !DILocation(line: 495, column: 17, scope: !5076)
!5088 = !DILocation(line: 496, column: 15, scope: !5089)
!5089 = distinct !DILexicalBlock(scope: !5085, file: !311, line: 495, column: 39)
!5090 = !DILocation(line: 496, column: 26, scope: !5089)
!5091 = !DILocation(line: 496, column: 32, scope: !5089)
!5092 = !DILocation(line: 497, column: 13, scope: !5089)
!5093 = !DILocation(line: 498, column: 11, scope: !5076)
!5094 = !DILocation(line: 498, column: 12, scope: !5056)
!5095 = !DILocation(line: 498, column: 23, scope: !5056)
!5096 = !DILocation(line: 498, column: 32, scope: !5056)
!5097 = !DILocation(line: 499, column: 15, scope: !5098)
!5098 = distinct !DILexicalBlock(scope: !5056, file: !311, line: 499, column: 15)
!5099 = !DILocation(line: 499, column: 26, scope: !5098)
!5100 = !DILocation(line: 499, column: 34, scope: !5098)
!5101 = !DILocation(line: 499, column: 15, scope: !5056)
!5102 = !DILocation(line: 500, column: 34, scope: !5103)
!5103 = distinct !DILexicalBlock(scope: !5098, file: !311, line: 499, column: 41)
!5104 = !DILocation(line: 500, column: 45, scope: !5103)
!5105 = !DILocation(line: 500, column: 13, scope: !5103)
!5106 = !DILocation(line: 500, column: 24, scope: !5103)
!5107 = !DILocation(line: 500, column: 32, scope: !5103)
!5108 = !DILocation(line: 501, column: 11, scope: !5103)
!5109 = !DILocation(line: 502, column: 9, scope: !5056)
!5110 = !DILocation(line: 487, column: 11, scope: !5048)
!5111 = distinct !{!5111, !5041, !5112}
!5112 = !DILocation(line: 488, column: 7, scope: !5042)
!5113 = !DILocation(line: 490, column: 7, scope: !5042)
!5114 = !DILocation(line: 503, column: 7, scope: !5115)
!5115 = distinct !DILexicalBlock(scope: !5116, file: !311, line: 505, column: 7)
!5116 = distinct !DILexicalBlock(scope: !5039, file: !311, line: 504, column: 7)
!5117 = !DILocation(line: 503, column: 17, scope: !5115)
!5118 = !DILocation(line: 503, column: 18, scope: !5119)
!5119 = distinct !DILexicalBlock(scope: !5120, file: !311, line: 503, column: 13)
!5120 = distinct !DILexicalBlock(scope: !5115, file: !311, line: 503, column: 17)
!5121 = !DILocation(line: 503, column: 13, scope: !5120)
!5122 = !DILocation(line: 503, column: 11, scope: !5123)
!5123 = distinct !DILexicalBlock(scope: !5119, file: !311, line: 503, column: 25)
!5124 = !DILocation(line: 504, column: 18, scope: !5120)
!5125 = !DILocation(line: 504, column: 29, scope: !5120)
!5126 = !DILocation(line: 504, column: 15, scope: !5120)
!5127 = !DILocation(line: 505, column: 18, scope: !5120)
!5128 = !DILocation(line: 505, column: 29, scope: !5120)
!5129 = !DILocation(line: 505, column: 15, scope: !5120)
!5130 = !DILocation(line: 503, column: 11, scope: !5120)
!5131 = distinct !{!5131, !5114, !5132}
!5132 = !DILocation(line: 504, column: 7, scope: !5115)
!5133 = !DILocation(line: 506, column: 7, scope: !5115)
!5134 = !DILocation(line: 508, column: 22, scope: !5135)
!5135 = distinct !DILexicalBlock(scope: !5039, file: !311, line: 508, column: 11)
!5136 = !DILocation(line: 508, column: 11, scope: !5135)
!5137 = !DILocation(line: 508, column: 11, scope: !5039)
!5138 = !DILocation(line: 512, column: 26, scope: !5139)
!5139 = distinct !DILexicalBlock(scope: !5140, file: !311, line: 512, column: 13)
!5140 = distinct !DILexicalBlock(scope: !5135, file: !311, line: 508, column: 30)
!5141 = !DILocation(line: 512, column: 15, scope: !5139)
!5142 = !DILocation(line: 512, column: 13, scope: !5140)
!5143 = !DILocation(line: 513, column: 26, scope: !5144)
!5144 = distinct !DILexicalBlock(scope: !5145, file: !311, line: 513, column: 15)
!5145 = distinct !DILexicalBlock(scope: !5139, file: !311, line: 512, column: 32)
!5146 = !DILocation(line: 513, column: 15, scope: !5144)
!5147 = !DILocation(line: 513, column: 15, scope: !5145)
!5148 = !DILocation(line: 514, column: 32, scope: !5149)
!5149 = distinct !DILexicalBlock(scope: !5144, file: !311, line: 513, column: 36)
!5150 = !DILocation(line: 514, column: 30, scope: !5149)
!5151 = !DILocation(line: 515, column: 11, scope: !5149)
!5152 = !DILocation(line: 515, column: 26, scope: !5153)
!5153 = distinct !DILexicalBlock(scope: !5145, file: !311, line: 515, column: 15)
!5154 = !DILocation(line: 515, column: 15, scope: !5153)
!5155 = !DILocation(line: 515, column: 15, scope: !5145)
!5156 = !DILocation(line: 516, column: 32, scope: !5157)
!5157 = distinct !DILexicalBlock(scope: !5153, file: !311, line: 515, column: 37)
!5158 = !DILocation(line: 516, column: 30, scope: !5157)
!5159 = !DILocation(line: 517, column: 11, scope: !5157)
!5160 = !DILocation(line: 518, column: 9, scope: !5145)
!5161 = !DILocation(line: 518, column: 30, scope: !5140)
!5162 = !DILocation(line: 519, column: 24, scope: !5163)
!5163 = distinct !DILexicalBlock(scope: !5140, file: !311, line: 519, column: 13)
!5164 = !DILocation(line: 519, column: 32, scope: !5163)
!5165 = !DILocation(line: 519, column: 13, scope: !5140)
!5166 = !DILocation(line: 520, column: 43, scope: !5167)
!5167 = distinct !DILexicalBlock(scope: !5163, file: !311, line: 519, column: 39)
!5168 = !DILocation(line: 520, column: 30, scope: !5167)
!5169 = !DILocation(line: 521, column: 19, scope: !5167)
!5170 = !DILocation(line: 521, column: 24, scope: !5167)
!5171 = !DILocation(line: 521, column: 50, scope: !5167)
!5172 = !DILocation(line: 521, column: 57, scope: !5167)
!5173 = !DILocation(line: 521, column: 55, scope: !5167)
!5174 = !DILocation(line: 521, column: 63, scope: !5167)
!5175 = !DILocation(line: 521, column: 73, scope: !5167)
!5176 = !DILocation(line: 521, column: 80, scope: !5167)
!5177 = !DILocation(line: 521, column: 78, scope: !5167)
!5178 = !DILocation(line: 521, column: 86, scope: !5167)
!5179 = !DILocation(line: 521, column: 69, scope: !5167)
!5180 = !DILocation(line: 521, column: 30, scope: !5167)
!5181 = !DILocation(line: 521, column: 16, scope: !5167)
!5182 = !DILocation(line: 522, column: 32, scope: !5167)
!5183 = !DILocation(line: 522, column: 50, scope: !5167)
!5184 = !DILocation(line: 522, column: 55, scope: !5167)
!5185 = !DILocation(line: 522, column: 61, scope: !5167)
!5186 = !DILocation(line: 522, column: 41, scope: !5167)
!5187 = !DILocation(line: 522, column: 39, scope: !5167)
!5188 = !DILocation(line: 522, column: 19, scope: !5167)
!5189 = !DILocation(line: 523, column: 9, scope: !5167)
!5190 = !DILocation(line: 524, column: 7, scope: !5140)
!5191 = !DILocation(line: 525, column: 27, scope: !5039)
!5192 = !DILocation(line: 525, column: 13, scope: !5039)
!5193 = !DILocation(line: 526, column: 27, scope: !5039)
!5194 = !DILocation(line: 526, column: 13, scope: !5039)
!5195 = !DILocation(line: 528, column: 20, scope: !5196)
!5196 = distinct !DILexicalBlock(scope: !5039, file: !311, line: 528, column: 11)
!5197 = !DILocation(line: 528, column: 17, scope: !5196)
!5198 = !DILocation(line: 528, column: 11, scope: !5039)
!5199 = !DILocation(line: 529, column: 33, scope: !5200)
!5200 = distinct !DILexicalBlock(scope: !5201, file: !311, line: 530, column: 9)
!5201 = distinct !DILexicalBlock(scope: !5202, file: !311, line: 529, column: 9)
!5202 = distinct !DILexicalBlock(scope: !5196, file: !311, line: 528, column: 27)
!5203 = !DILocation(line: 529, column: 31, scope: !5200)
!5204 = !DILocation(line: 529, column: 48, scope: !5200)
!5205 = !DILocation(line: 529, column: 46, scope: !5200)
!5206 = !DILocation(line: 529, column: 9, scope: !5200)
!5207 = !DILocation(line: 530, column: 15, scope: !5201)
!5208 = !DILocation(line: 531, column: 15, scope: !5201)
!5209 = !DILocation(line: 533, column: 7, scope: !5202)
!5210 = !DILocation(line: 528, column: 20, scope: !5211)
!5211 = distinct !DILexicalBlock(scope: !5196, file: !311, line: 528, column: 11)
!5212 = !DILocation(line: 528, column: 17, scope: !5211)
!5213 = !DILocation(line: 528, column: 11, scope: !5196)
!5214 = !DILocation(line: 529, column: 33, scope: !5215)
!5215 = distinct !DILexicalBlock(scope: !5216, file: !311, line: 530, column: 9)
!5216 = distinct !DILexicalBlock(scope: !5217, file: !311, line: 529, column: 9)
!5217 = distinct !DILexicalBlock(scope: !5211, file: !311, line: 528, column: 27)
!5218 = !DILocation(line: 529, column: 31, scope: !5215)
!5219 = !DILocation(line: 529, column: 48, scope: !5215)
!5220 = !DILocation(line: 529, column: 46, scope: !5215)
!5221 = !DILocation(line: 529, column: 9, scope: !5215)
!5222 = !DILocation(line: 530, column: 15, scope: !5216)
!5223 = !DILocation(line: 531, column: 15, scope: !5216)
!5224 = !DILocation(line: 533, column: 7, scope: !5217)
!5225 = !DILocation(line: 534, column: 17, scope: !5039)
!5226 = !DILocation(line: 535, column: 11, scope: !5227)
!5227 = distinct !DILexicalBlock(scope: !5039, file: !311, line: 535, column: 11)
!5228 = !DILocation(line: 535, column: 21, scope: !5227)
!5229 = !DILocation(line: 535, column: 11, scope: !5039)
!5230 = !DILocation(line: 536, column: 19, scope: !5231)
!5231 = distinct !DILexicalBlock(scope: !5232, file: !311, line: 536, column: 9)
!5232 = distinct !DILexicalBlock(scope: !5227, file: !311, line: 535, column: 45)
!5233 = !DILocation(line: 537, column: 9, scope: !5234)
!5234 = distinct !DILexicalBlock(scope: !5231, file: !311, line: 537, column: 9)
!5235 = !DILocation(line: 540, column: 7, scope: !5232)
!5236 = !DILocation(line: 541, column: 5, scope: !5039)
!5237 = !DILocation(line: 453, column: 7, scope: !4924)
!5238 = distinct !{!5238, !4917, !5239}
!5239 = !DILocation(line: 454, column: 3, scope: !4918)
!5240 = !DILocation(line: 456, column: 3, scope: !4918)
!5241 = !DILocation(line: 541, column: 3, scope: !4908)
!5242 = distinct !DISubprogram(name: "gbhw_pause", scope: !311, file: !311, line: 696, type: !1747, scopeLine: 697, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !666)
!5243 = !DILocalVariable(name: "new_pause", arg: 1, scope: !5242, file: !311, line: 696, type: !15)
!5244 = !DILocation(line: 0, scope: !5242)
!5245 = !DILocation(line: 698, column: 36, scope: !5246)
!5246 = distinct !DILexicalBlock(scope: !5242, file: !311, line: 700, column: 3)
!5247 = !DILocation(line: 698, column: 18, scope: !5246)
!5248 = !DILocation(line: 698, column: 16, scope: !5246)
!5249 = !DILocation(line: 699, column: 3, scope: !5246)
!5250 = distinct !DISubprogram(name: "devdsp_open", scope: !317, file: !317, line: 26, type: !283, scopeLine: 28, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !666)
!5251 = !DILocalVariable(name: "endian___1", arg: 1, scope: !5250, file: !317, line: 26, type: !5)
!5252 = !DILocation(line: 0, scope: !5250)
!5253 = !DILocalVariable(name: "rate___1", arg: 2, scope: !5250, file: !317, line: 27, type: !15)
!5254 = !DILocalVariable(name: "c___3", scope: !5250, file: !317, line: 29, type: !14)
!5255 = !DILocation(line: 29, column: 7, scope: !5250)
!5256 = !DILocalVariable(name: "__cil_tmp32", scope: !5250, file: !317, line: 58, type: !16)
!5257 = !DILocation(line: 58, column: 9, scope: !5250)
!5258 = !DILocalVariable(name: "__cil_tmp33", scope: !5250, file: !317, line: 59, type: !16)
!5259 = !DILocation(line: 59, column: 9, scope: !5250)
!5260 = !DILocalVariable(name: "__cil_tmp34", scope: !5250, file: !317, line: 60, type: !16)
!5261 = !DILocation(line: 60, column: 9, scope: !5250)
!5262 = !DILocalVariable(name: "__cil_tmp35", scope: !5250, file: !317, line: 61, type: !16)
!5263 = !DILocation(line: 61, column: 9, scope: !5250)
!5264 = !DILocalVariable(name: "__cil_tmp36", scope: !5250, file: !317, line: 62, type: !16)
!5265 = !DILocation(line: 62, column: 9, scope: !5250)
!5266 = !DILocalVariable(name: "__cil_tmp37", scope: !5250, file: !317, line: 63, type: !16)
!5267 = !DILocation(line: 63, column: 9, scope: !5250)
!5268 = !DILocalVariable(name: "__cil_tmp38", scope: !5250, file: !317, line: 64, type: !16)
!5269 = !DILocation(line: 64, column: 9, scope: !5250)
!5270 = !DILocalVariable(name: "__cil_tmp39", scope: !5250, file: !317, line: 65, type: !16)
!5271 = !DILocation(line: 65, column: 9, scope: !5250)
!5272 = !DILocalVariable(name: "__cil_tmp40", scope: !5250, file: !317, line: 66, type: !16)
!5273 = !DILocation(line: 66, column: 9, scope: !5250)
!5274 = !DILocation(line: 31, column: 12, scope: !5275)
!5275 = distinct !DILexicalBlock(scope: !5276, file: !317, line: 70, column: 3)
!5276 = distinct !DILexicalBlock(scope: !5277, file: !317, line: 69, column: 3)
!5277 = distinct !DILexicalBlock(scope: !5250, file: !317, line: 68, column: 3)
!5278 = !DILocation(line: 31, column: 10, scope: !5275)
!5279 = !DILocation(line: 31, column: 7, scope: !5280)
!5280 = distinct !DILexicalBlock(scope: !5277, file: !317, line: 31, column: 7)
!5281 = !DILocation(line: 31, column: 14, scope: !5280)
!5282 = !DILocation(line: 31, column: 7, scope: !5277)
!5283 = !DILocation(line: 32, column: 11, scope: !5284)
!5284 = distinct !DILexicalBlock(scope: !5285, file: !317, line: 33, column: 5)
!5285 = distinct !DILexicalBlock(scope: !5286, file: !317, line: 32, column: 5)
!5286 = distinct !DILexicalBlock(scope: !5280, file: !317, line: 31, column: 21)
!5287 = !DILocalVariable(name: "tmp", scope: !5250, file: !317, line: 31, type: !3087)
!5288 = !DILocation(line: 32, column: 24, scope: !5289)
!5289 = distinct !DILexicalBlock(scope: !5285, file: !317, line: 34, column: 5)
!5290 = !DILocation(line: 32, column: 15, scope: !5289)
!5291 = !DILocalVariable(name: "tmp___0", scope: !5250, file: !317, line: 32, type: !16)
!5292 = !DILocation(line: 32, column: 15, scope: !5293)
!5293 = distinct !DILexicalBlock(scope: !5285, file: !317, line: 34, column: 5)
!5294 = !DILocalVariable(name: "tmp___1", scope: !5250, file: !317, line: 33, type: !16)
!5295 = !DILocation(line: 32, column: 38, scope: !5296)
!5296 = distinct !DILexicalBlock(scope: !5285, file: !317, line: 34, column: 5)
!5297 = !DILocation(line: 32, column: 5, scope: !5296)
!5298 = !DILocation(line: 33, column: 5, scope: !5286)
!5299 = !DILocation(line: 35, column: 17, scope: !5300)
!5300 = distinct !DILexicalBlock(scope: !5301, file: !317, line: 36, column: 3)
!5301 = distinct !DILexicalBlock(scope: !5277, file: !317, line: 35, column: 3)
!5302 = !DILocation(line: 35, column: 11, scope: !5300)
!5303 = !DILocalVariable(name: "flags", scope: !5250, file: !317, line: 30, type: !14)
!5304 = !DILocation(line: 35, column: 13, scope: !5305)
!5305 = distinct !DILexicalBlock(scope: !5277, file: !317, line: 35, column: 7)
!5306 = !DILocation(line: 35, column: 7, scope: !5277)
!5307 = !DILocation(line: 36, column: 15, scope: !5308)
!5308 = distinct !DILexicalBlock(scope: !5309, file: !317, line: 37, column: 5)
!5309 = distinct !DILexicalBlock(scope: !5310, file: !317, line: 36, column: 5)
!5310 = distinct !DILexicalBlock(scope: !5305, file: !317, line: 35, column: 20)
!5311 = !DILocalVariable(name: "tmp___2", scope: !5250, file: !317, line: 34, type: !3087)
!5312 = !DILocation(line: 36, column: 24, scope: !5313)
!5313 = distinct !DILexicalBlock(scope: !5309, file: !317, line: 38, column: 5)
!5314 = !DILocation(line: 36, column: 15, scope: !5313)
!5315 = !DILocalVariable(name: "tmp___3", scope: !5250, file: !317, line: 35, type: !16)
!5316 = !DILocation(line: 36, column: 15, scope: !5317)
!5317 = distinct !DILexicalBlock(scope: !5309, file: !317, line: 38, column: 5)
!5318 = !DILocalVariable(name: "tmp___4", scope: !5250, file: !317, line: 36, type: !16)
!5319 = !DILocation(line: 36, column: 38, scope: !5320)
!5320 = distinct !DILexicalBlock(scope: !5309, file: !317, line: 38, column: 5)
!5321 = !DILocation(line: 36, column: 5, scope: !5320)
!5322 = !DILocation(line: 40, column: 3, scope: !5310)
!5323 = !DILocation(line: 37, column: 21, scope: !5324)
!5324 = distinct !DILexicalBlock(scope: !5325, file: !317, line: 42, column: 5)
!5325 = distinct !DILexicalBlock(scope: !5326, file: !317, line: 41, column: 5)
!5326 = distinct !DILexicalBlock(scope: !5305, file: !317, line: 40, column: 10)
!5327 = !DILocation(line: 37, column: 38, scope: !5324)
!5328 = !DILocation(line: 37, column: 15, scope: !5324)
!5329 = !DILocalVariable(name: "tmp___8", scope: !5250, file: !317, line: 40, type: !14)
!5330 = !DILocation(line: 37, column: 17, scope: !5331)
!5331 = distinct !DILexicalBlock(scope: !5326, file: !317, line: 37, column: 9)
!5332 = !DILocation(line: 37, column: 9, scope: !5326)
!5333 = !DILocation(line: 38, column: 17, scope: !5334)
!5334 = distinct !DILexicalBlock(scope: !5335, file: !317, line: 39, column: 7)
!5335 = distinct !DILexicalBlock(scope: !5336, file: !317, line: 38, column: 7)
!5336 = distinct !DILexicalBlock(scope: !5331, file: !317, line: 37, column: 24)
!5337 = !DILocalVariable(name: "tmp___5", scope: !5250, file: !317, line: 37, type: !3087)
!5338 = !DILocation(line: 38, column: 26, scope: !5339)
!5339 = distinct !DILexicalBlock(scope: !5335, file: !317, line: 40, column: 7)
!5340 = !DILocation(line: 38, column: 17, scope: !5339)
!5341 = !DILocalVariable(name: "tmp___6", scope: !5250, file: !317, line: 38, type: !16)
!5342 = !DILocation(line: 38, column: 17, scope: !5343)
!5343 = distinct !DILexicalBlock(scope: !5335, file: !317, line: 40, column: 7)
!5344 = !DILocalVariable(name: "tmp___7", scope: !5250, file: !317, line: 39, type: !16)
!5345 = !DILocation(line: 38, column: 40, scope: !5346)
!5346 = distinct !DILexicalBlock(scope: !5335, file: !317, line: 40, column: 7)
!5347 = !DILocation(line: 38, column: 7, scope: !5346)
!5348 = !DILocation(line: 42, column: 5, scope: !5336)
!5349 = !DILocation(line: 42, column: 33, scope: !5350)
!5350 = distinct !DILexicalBlock(scope: !5351, file: !317, line: 42, column: 7)
!5351 = distinct !DILexicalBlock(scope: !5277, file: !317, line: 44, column: 3)
!5352 = !DILocation(line: 42, column: 7, scope: !5351)
!5353 = !DILocation(line: 42, column: 5, scope: !5354)
!5354 = distinct !DILexicalBlock(scope: !5350, file: !317, line: 42, column: 40)
!5355 = !DILocation(line: 43, column: 33, scope: !5356)
!5356 = distinct !DILexicalBlock(scope: !5351, file: !317, line: 43, column: 7)
!5357 = !DILocation(line: 43, column: 7, scope: !5351)
!5358 = !DILocation(line: 43, column: 5, scope: !5359)
!5359 = distinct !DILexicalBlock(scope: !5356, file: !317, line: 43, column: 40)
!5360 = !DILocation(line: 44, column: 33, scope: !5361)
!5361 = distinct !DILexicalBlock(scope: !5351, file: !317, line: 44, column: 7)
!5362 = !DILocation(line: 44, column: 7, scope: !5351)
!5363 = !DILocation(line: 44, column: 5, scope: !5364)
!5364 = distinct !DILexicalBlock(scope: !5361, file: !317, line: 44, column: 40)
!5365 = !DILocation(line: 41, column: 3, scope: !5351)
!5366 = !DILocation(line: 42, column: 9, scope: !5351)
!5367 = !DILocation(line: 42, column: 3, scope: !5351)
!5368 = !DILocation(line: 43, column: 9, scope: !5351)
!5369 = !DILocation(line: 43, column: 3, scope: !5351)
!5370 = !DILocation(line: 44, column: 9, scope: !5351)
!5371 = !DILocation(line: 44, column: 3, scope: !5351)
!5372 = !DILocation(line: 46, column: 20, scope: !5373)
!5373 = distinct !DILexicalBlock(scope: !5374, file: !317, line: 48, column: 3)
!5374 = distinct !DILexicalBlock(scope: !5277, file: !317, line: 47, column: 3)
!5375 = !DILocation(line: 46, column: 14, scope: !5373)
!5376 = !DILocalVariable(name: "tmp___12", scope: !5250, file: !317, line: 44, type: !14)
!5377 = !DILocation(line: 46, column: 16, scope: !5378)
!5378 = distinct !DILexicalBlock(scope: !5277, file: !317, line: 46, column: 7)
!5379 = !DILocation(line: 46, column: 7, scope: !5277)
!5380 = !DILocation(line: 47, column: 15, scope: !5381)
!5381 = distinct !DILexicalBlock(scope: !5382, file: !317, line: 48, column: 5)
!5382 = distinct !DILexicalBlock(scope: !5383, file: !317, line: 47, column: 5)
!5383 = distinct !DILexicalBlock(scope: !5378, file: !317, line: 46, column: 23)
!5384 = !DILocalVariable(name: "tmp___9", scope: !5250, file: !317, line: 41, type: !3087)
!5385 = !DILocation(line: 47, column: 25, scope: !5386)
!5386 = distinct !DILexicalBlock(scope: !5382, file: !317, line: 49, column: 5)
!5387 = !DILocation(line: 47, column: 16, scope: !5386)
!5388 = !DILocalVariable(name: "tmp___10", scope: !5250, file: !317, line: 42, type: !16)
!5389 = !DILocation(line: 47, column: 16, scope: !5390)
!5390 = distinct !DILexicalBlock(scope: !5382, file: !317, line: 49, column: 5)
!5391 = !DILocalVariable(name: "tmp___11", scope: !5250, file: !317, line: 43, type: !16)
!5392 = !DILocation(line: 47, column: 38, scope: !5393)
!5393 = distinct !DILexicalBlock(scope: !5382, file: !317, line: 49, column: 5)
!5394 = !DILocation(line: 48, column: 13, scope: !5393)
!5395 = !DILocation(line: 47, column: 5, scope: !5393)
!5396 = !DILocation(line: 48, column: 5, scope: !5383)
!5397 = !DILocation(line: 50, column: 11, scope: !5398)
!5398 = distinct !DILexicalBlock(scope: !5277, file: !317, line: 50, column: 3)
!5399 = !DILocation(line: 50, column: 9, scope: !5398)
!5400 = !DILocation(line: 51, column: 20, scope: !5401)
!5401 = distinct !DILexicalBlock(scope: !5398, file: !317, line: 51, column: 3)
!5402 = !DILocation(line: 51, column: 14, scope: !5401)
!5403 = !DILocalVariable(name: "tmp___16", scope: !5250, file: !317, line: 48, type: !14)
!5404 = !DILocation(line: 51, column: 16, scope: !5405)
!5405 = distinct !DILexicalBlock(scope: !5277, file: !317, line: 51, column: 7)
!5406 = !DILocation(line: 51, column: 7, scope: !5277)
!5407 = !DILocation(line: 52, column: 16, scope: !5408)
!5408 = distinct !DILexicalBlock(scope: !5409, file: !317, line: 53, column: 5)
!5409 = distinct !DILexicalBlock(scope: !5410, file: !317, line: 52, column: 5)
!5410 = distinct !DILexicalBlock(scope: !5405, file: !317, line: 51, column: 23)
!5411 = !DILocalVariable(name: "tmp___13", scope: !5250, file: !317, line: 45, type: !3087)
!5412 = !DILocation(line: 52, column: 25, scope: !5413)
!5413 = distinct !DILexicalBlock(scope: !5409, file: !317, line: 54, column: 5)
!5414 = !DILocation(line: 52, column: 16, scope: !5413)
!5415 = !DILocalVariable(name: "tmp___14", scope: !5250, file: !317, line: 46, type: !16)
!5416 = !DILocation(line: 52, column: 16, scope: !5417)
!5417 = distinct !DILexicalBlock(scope: !5409, file: !317, line: 54, column: 5)
!5418 = !DILocalVariable(name: "tmp___15", scope: !5250, file: !317, line: 47, type: !16)
!5419 = !DILocation(line: 52, column: 38, scope: !5420)
!5420 = distinct !DILexicalBlock(scope: !5409, file: !317, line: 54, column: 5)
!5421 = !DILocation(line: 52, column: 5, scope: !5420)
!5422 = !DILocation(line: 53, column: 5, scope: !5410)
!5423 = !DILocation(line: 55, column: 14, scope: !5424)
!5424 = distinct !DILexicalBlock(scope: !5277, file: !317, line: 55, column: 7)
!5425 = !DILocation(line: 55, column: 7, scope: !5424)
!5426 = !DILocation(line: 55, column: 20, scope: !5424)
!5427 = !DILocation(line: 55, column: 7, scope: !5277)
!5428 = !DILocation(line: 56, column: 16, scope: !5429)
!5429 = distinct !DILexicalBlock(scope: !5430, file: !317, line: 57, column: 5)
!5430 = distinct !DILexicalBlock(scope: !5431, file: !317, line: 56, column: 5)
!5431 = distinct !DILexicalBlock(scope: !5424, file: !317, line: 55, column: 33)
!5432 = !DILocalVariable(name: "tmp___17", scope: !5250, file: !317, line: 49, type: !16)
!5433 = !DILocation(line: 56, column: 38, scope: !5434)
!5434 = distinct !DILexicalBlock(scope: !5430, file: !317, line: 58, column: 5)
!5435 = !DILocation(line: 57, column: 23, scope: !5434)
!5436 = !DILocation(line: 56, column: 5, scope: !5434)
!5437 = !DILocation(line: 57, column: 23, scope: !5430)
!5438 = !DILocation(line: 57, column: 16, scope: !5430)
!5439 = !DILocation(line: 59, column: 3, scope: !5431)
!5440 = !DILocation(line: 59, column: 9, scope: !5441)
!5441 = distinct !DILexicalBlock(scope: !5277, file: !317, line: 60, column: 3)
!5442 = !DILocation(line: 60, column: 20, scope: !5443)
!5443 = distinct !DILexicalBlock(scope: !5441, file: !317, line: 60, column: 3)
!5444 = !DILocation(line: 60, column: 14, scope: !5443)
!5445 = !DILocalVariable(name: "tmp___21", scope: !5250, file: !317, line: 53, type: !14)
!5446 = !DILocation(line: 60, column: 16, scope: !5447)
!5447 = distinct !DILexicalBlock(scope: !5277, file: !317, line: 60, column: 7)
!5448 = !DILocation(line: 60, column: 7, scope: !5277)
!5449 = !DILocation(line: 61, column: 16, scope: !5450)
!5450 = distinct !DILexicalBlock(scope: !5451, file: !317, line: 62, column: 5)
!5451 = distinct !DILexicalBlock(scope: !5452, file: !317, line: 61, column: 5)
!5452 = distinct !DILexicalBlock(scope: !5447, file: !317, line: 60, column: 23)
!5453 = !DILocalVariable(name: "tmp___18", scope: !5250, file: !317, line: 50, type: !3087)
!5454 = !DILocation(line: 61, column: 25, scope: !5455)
!5455 = distinct !DILexicalBlock(scope: !5451, file: !317, line: 63, column: 5)
!5456 = !DILocation(line: 61, column: 16, scope: !5455)
!5457 = !DILocalVariable(name: "tmp___19", scope: !5250, file: !317, line: 51, type: !16)
!5458 = !DILocation(line: 61, column: 16, scope: !5459)
!5459 = distinct !DILexicalBlock(scope: !5451, file: !317, line: 63, column: 5)
!5460 = !DILocalVariable(name: "tmp___20", scope: !5250, file: !317, line: 52, type: !16)
!5461 = !DILocation(line: 61, column: 38, scope: !5462)
!5462 = distinct !DILexicalBlock(scope: !5451, file: !317, line: 63, column: 5)
!5463 = !DILocation(line: 62, column: 13, scope: !5462)
!5464 = !DILocation(line: 61, column: 5, scope: !5462)
!5465 = !DILocation(line: 62, column: 5, scope: !5452)
!5466 = !DILocation(line: 64, column: 9, scope: !5467)
!5467 = distinct !DILexicalBlock(scope: !5277, file: !317, line: 64, column: 3)
!5468 = !DILocation(line: 65, column: 20, scope: !5469)
!5469 = distinct !DILexicalBlock(scope: !5467, file: !317, line: 65, column: 3)
!5470 = !DILocation(line: 65, column: 14, scope: !5469)
!5471 = !DILocalVariable(name: "tmp___25", scope: !5250, file: !317, line: 57, type: !14)
!5472 = !DILocation(line: 65, column: 16, scope: !5473)
!5473 = distinct !DILexicalBlock(scope: !5277, file: !317, line: 65, column: 7)
!5474 = !DILocation(line: 65, column: 7, scope: !5277)
!5475 = !DILocation(line: 66, column: 16, scope: !5476)
!5476 = distinct !DILexicalBlock(scope: !5477, file: !317, line: 67, column: 5)
!5477 = distinct !DILexicalBlock(scope: !5478, file: !317, line: 66, column: 5)
!5478 = distinct !DILexicalBlock(scope: !5473, file: !317, line: 65, column: 23)
!5479 = !DILocalVariable(name: "tmp___22", scope: !5250, file: !317, line: 54, type: !3087)
!5480 = !DILocation(line: 66, column: 25, scope: !5481)
!5481 = distinct !DILexicalBlock(scope: !5477, file: !317, line: 68, column: 5)
!5482 = !DILocation(line: 66, column: 16, scope: !5481)
!5483 = !DILocalVariable(name: "tmp___23", scope: !5250, file: !317, line: 55, type: !16)
!5484 = !DILocation(line: 66, column: 16, scope: !5485)
!5485 = distinct !DILexicalBlock(scope: !5477, file: !317, line: 68, column: 5)
!5486 = !DILocalVariable(name: "tmp___24", scope: !5250, file: !317, line: 56, type: !16)
!5487 = !DILocation(line: 66, column: 38, scope: !5488)
!5488 = distinct !DILexicalBlock(scope: !5477, file: !317, line: 68, column: 5)
!5489 = !DILocation(line: 67, column: 13, scope: !5488)
!5490 = !DILocation(line: 66, column: 5, scope: !5488)
!5491 = !DILocation(line: 70, column: 3, scope: !5478)
!5492 = !DILocation(line: 68, column: 3, scope: !5277)
!5493 = !DILocation(line: 0, scope: !5277)
!5494 = !DILocation(line: 70, column: 1, scope: !5250)
!5495 = distinct !DISubprogram(name: "devdsp_write", scope: !317, file: !317, line: 71, type: !292, scopeLine: 73, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !666)
!5496 = !DILocalVariable(name: "buf___3", arg: 1, scope: !5495, file: !317, line: 71, type: !94)
!5497 = !DILocation(line: 0, scope: !5495)
!5498 = !DILocalVariable(name: "count", arg: 2, scope: !5495, file: !317, line: 72, type: !76)
!5499 = !DILocation(line: 73, column: 15, scope: !5500)
!5500 = distinct !DILexicalBlock(scope: !5501, file: !317, line: 78, column: 3)
!5501 = distinct !DILexicalBlock(scope: !5502, file: !317, line: 77, column: 3)
!5502 = distinct !DILexicalBlock(scope: !5495, file: !317, line: 76, column: 3)
!5503 = !DILocation(line: 73, column: 9, scope: !5500)
!5504 = !DILocalVariable(name: "tmp", scope: !5495, file: !317, line: 74, type: !279)
!5505 = !DILocation(line: 73, column: 3, scope: !5502)
!5506 = distinct !DISubprogram(name: "devdsp_close", scope: !317, file: !317, line: 76, type: !272, scopeLine: 77, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !666)
!5507 = !DILocation(line: 78, column: 9, scope: !5508)
!5508 = distinct !DILexicalBlock(scope: !5509, file: !317, line: 82, column: 3)
!5509 = distinct !DILexicalBlock(scope: !5510, file: !317, line: 81, column: 3)
!5510 = distinct !DILexicalBlock(scope: !5506, file: !317, line: 80, column: 3)
!5511 = !DILocation(line: 78, column: 3, scope: !5508)
!5512 = !DILocation(line: 79, column: 3, scope: !5510)
!5513 = distinct !DISubprogram(name: "stdout_open", scope: !320, file: !320, line: 18, type: !283, scopeLine: 20, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !666)
!5514 = !DILocalVariable(name: "endian___1", arg: 1, scope: !5513, file: !320, line: 18, type: !5)
!5515 = !DILocation(line: 0, scope: !5513)
!5516 = !DILocalVariable(name: "rate___1", arg: 2, scope: !5513, file: !320, line: 19, type: !15)
!5517 = !DILocation(line: 25, column: 8, scope: !5518)
!5518 = distinct !DILexicalBlock(scope: !5519, file: !320, line: 25, column: 3)
!5519 = distinct !DILexicalBlock(scope: !5520, file: !320, line: 24, column: 3)
!5520 = distinct !DILexicalBlock(scope: !5513, file: !320, line: 23, column: 3)
!5521 = !DILocation(line: 25, column: 6, scope: !5518)
!5522 = !DILocation(line: 26, column: 7, scope: !5523)
!5523 = distinct !DILexicalBlock(scope: !5520, file: !320, line: 26, column: 7)
!5524 = !DILocation(line: 26, column: 10, scope: !5523)
!5525 = !DILocation(line: 26, column: 7, scope: !5520)
!5526 = !DILocation(line: 26, column: 5, scope: !5527)
!5527 = distinct !DILexicalBlock(scope: !5523, file: !320, line: 26, column: 17)
!5528 = !DILocation(line: 27, column: 3, scope: !5529)
!5529 = distinct !DILexicalBlock(scope: !5530, file: !320, line: 29, column: 3)
!5530 = distinct !DILexicalBlock(scope: !5520, file: !320, line: 28, column: 3)
!5531 = !DILocation(line: 29, column: 3, scope: !5520)
!5532 = !DILocation(line: 0, scope: !5520)
!5533 = !DILocation(line: 31, column: 1, scope: !5513)
!5534 = distinct !DISubprogram(name: "stdout_write", scope: !320, file: !320, line: 32, type: !292, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !666)
!5535 = !DILocalVariable(name: "buf___3", arg: 1, scope: !5534, file: !320, line: 32, type: !94)
!5536 = !DILocation(line: 0, scope: !5534)
!5537 = !DILocalVariable(name: "count", arg: 2, scope: !5534, file: !320, line: 33, type: !76)
!5538 = !DILocation(line: 34, column: 15, scope: !5539)
!5539 = distinct !DILexicalBlock(scope: !5540, file: !320, line: 39, column: 3)
!5540 = distinct !DILexicalBlock(scope: !5541, file: !320, line: 38, column: 3)
!5541 = distinct !DILexicalBlock(scope: !5534, file: !320, line: 37, column: 3)
!5542 = !DILocation(line: 34, column: 9, scope: !5539)
!5543 = !DILocalVariable(name: "tmp", scope: !5534, file: !320, line: 35, type: !279)
!5544 = !DILocation(line: 34, column: 3, scope: !5541)
!5545 = distinct !DISubprogram(name: "stdout_close", scope: !320, file: !320, line: 37, type: !272, scopeLine: 38, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !666)
!5546 = !DILocation(line: 39, column: 9, scope: !5547)
!5547 = distinct !DILexicalBlock(scope: !5548, file: !320, line: 43, column: 3)
!5548 = distinct !DILexicalBlock(scope: !5549, file: !320, line: 42, column: 3)
!5549 = distinct !DILexicalBlock(scope: !5545, file: !320, line: 41, column: 3)
!5550 = !DILocation(line: 39, column: 3, scope: !5547)
!5551 = !DILocation(line: 40, column: 3, scope: !5549)
!5552 = distinct !DISubprogram(name: "shuffle_long", scope: !5553, file: !5553, line: 19, type: !5554, scopeLine: 20, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !666)
!5553 = !DIFile(filename: "/home/wslee/benchmarks/sound/gbsplay-0.0.91/util.c", directory: "")
!5554 = !DISubroutineType(types: !5555)
!5555 = !{null, !21, !15}
!5556 = !DILocalVariable(name: "array", arg: 1, scope: !5552, file: !5553, line: 19, type: !21)
!5557 = !DILocation(line: 0, scope: !5552)
!5558 = !DILocalVariable(name: "elements", arg: 2, scope: !5552, file: !5553, line: 19, type: !15)
!5559 = !DILocation(line: 24, column: 16, scope: !5560)
!5560 = distinct !DILexicalBlock(scope: !5552, file: !5553, line: 25, column: 3)
!5561 = !DILocalVariable(name: "i", scope: !5552, file: !5553, line: 21, type: !15)
!5562 = !DILocation(line: 24, column: 3, scope: !5563)
!5563 = distinct !DILexicalBlock(scope: !5564, file: !5553, line: 26, column: 3)
!5564 = distinct !DILexicalBlock(scope: !5560, file: !5553, line: 25, column: 3)
!5565 = !DILocation(line: 0, scope: !5560)
!5566 = !DILocation(line: 24, column: 13, scope: !5563)
!5567 = !DILocation(line: 24, column: 14, scope: !5568)
!5568 = distinct !DILexicalBlock(scope: !5569, file: !5553, line: 24, column: 9)
!5569 = distinct !DILexicalBlock(scope: !5563, file: !5553, line: 24, column: 13)
!5570 = !DILocation(line: 24, column: 9, scope: !5569)
!5571 = !DILocation(line: 24, column: 7, scope: !5572)
!5572 = distinct !DILexicalBlock(scope: !5568, file: !5553, line: 24, column: 21)
!5573 = !DILocation(line: 25, column: 9, scope: !5574)
!5574 = distinct !DILexicalBlock(scope: !5575, file: !5553, line: 27, column: 5)
!5575 = distinct !DILexicalBlock(scope: !5569, file: !5553, line: 26, column: 5)
!5576 = !DILocalVariable(name: "j", scope: !5552, file: !5553, line: 22, type: !15)
!5577 = !DILocation(line: 26, column: 20, scope: !5575)
!5578 = !DILocation(line: 26, column: 12, scope: !5575)
!5579 = !DILocalVariable(name: "temp", scope: !5552, file: !5553, line: 23, type: !15)
!5580 = !DILocation(line: 27, column: 28, scope: !5575)
!5581 = !DILocation(line: 27, column: 20, scope: !5575)
!5582 = !DILocation(line: 27, column: 13, scope: !5575)
!5583 = !DILocation(line: 27, column: 18, scope: !5575)
!5584 = !DILocation(line: 28, column: 13, scope: !5575)
!5585 = !DILocation(line: 28, column: 18, scope: !5575)
!5586 = !DILocation(line: 24, column: 7, scope: !5575)
!5587 = distinct !{!5587, !5562, !5588}
!5588 = !DILocation(line: 26, column: 3, scope: !5563)
!5589 = !DILocation(line: 28, column: 3, scope: !5563)
!5590 = !DILocation(line: 30, column: 3, scope: !5560)
!5591 = distinct !DISubprogram(name: "endian_str", scope: !451, file: !451, line: 329, type: !5592, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !666)
!5592 = !DISubroutineType(types: !5593)
!5593 = !{!16, !15}
!5594 = !DILocalVariable(name: "endian___1", arg: 1, scope: !5591, file: !451, line: 329, type: !15)
!5595 = !DILocation(line: 0, scope: !5591)
!5596 = !DILocalVariable(name: "__cil_tmp2", scope: !5591, file: !451, line: 331, type: !16)
!5597 = !DILocation(line: 331, column: 9, scope: !5591)
!5598 = !DILocalVariable(name: "__cil_tmp3", scope: !5591, file: !451, line: 332, type: !16)
!5599 = !DILocation(line: 332, column: 9, scope: !5591)
!5600 = !DILocalVariable(name: "__cil_tmp4", scope: !5591, file: !451, line: 333, type: !16)
!5601 = !DILocation(line: 333, column: 9, scope: !5591)
!5602 = !DILocalVariable(name: "__cil_tmp5", scope: !5591, file: !451, line: 334, type: !16)
!5603 = !DILocation(line: 334, column: 9, scope: !5591)
!5604 = !DILocation(line: 332, column: 18, scope: !5605)
!5605 = distinct !DILexicalBlock(scope: !5606, file: !451, line: 332, column: 7)
!5606 = distinct !DILexicalBlock(scope: !5607, file: !451, line: 337, column: 3)
!5607 = distinct !DILexicalBlock(scope: !5591, file: !451, line: 336, column: 3)
!5608 = !DILocation(line: 332, column: 7, scope: !5606)
!5609 = !DILocation(line: 332, column: 5, scope: !5610)
!5610 = distinct !DILexicalBlock(scope: !5605, file: !451, line: 332, column: 25)
!5611 = !DILocation(line: 333, column: 18, scope: !5612)
!5612 = distinct !DILexicalBlock(scope: !5606, file: !451, line: 333, column: 7)
!5613 = !DILocation(line: 333, column: 7, scope: !5606)
!5614 = !DILocation(line: 333, column: 5, scope: !5615)
!5615 = distinct !DILexicalBlock(scope: !5612, file: !451, line: 333, column: 25)
!5616 = !DILocation(line: 334, column: 18, scope: !5617)
!5617 = distinct !DILexicalBlock(scope: !5606, file: !451, line: 334, column: 7)
!5618 = !DILocation(line: 334, column: 7, scope: !5606)
!5619 = !DILocation(line: 334, column: 5, scope: !5620)
!5620 = distinct !DILexicalBlock(scope: !5617, file: !451, line: 334, column: 25)
!5621 = !DILocation(line: 335, column: 3, scope: !5606)
!5622 = !DILocation(line: 332, column: 3, scope: !5606)
!5623 = !DILocation(line: 333, column: 3, scope: !5606)
!5624 = !DILocation(line: 334, column: 3, scope: !5606)
!5625 = !DILocation(line: 0, scope: !5606)
!5626 = !DILocation(line: 339, column: 1, scope: !5591)
!5627 = distinct !DISubprogram(name: "exit_handler", scope: !451, file: !451, line: 574, type: !197, scopeLine: 575, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !666)
!5628 = !DILocalVariable(name: "signum", arg: 1, scope: !5627, file: !451, line: 574, type: !14)
!5629 = !DILocation(line: 0, scope: !5627)
!5630 = !DILocalVariable(name: "__cil_tmp3", scope: !5627, file: !451, line: 577, type: !16)
!5631 = !DILocation(line: 577, column: 9, scope: !5627)
!5632 = !DILocation(line: 576, column: 9, scope: !5633)
!5633 = distinct !DILexicalBlock(scope: !5634, file: !451, line: 581, column: 3)
!5634 = distinct !DILexicalBlock(scope: !5635, file: !451, line: 580, column: 3)
!5635 = distinct !DILexicalBlock(scope: !5627, file: !451, line: 579, column: 3)
!5636 = !DILocalVariable(name: "tmp", scope: !5627, file: !451, line: 576, type: !16)
!5637 = !DILocation(line: 576, column: 3, scope: !5638)
!5638 = distinct !DILexicalBlock(scope: !5634, file: !451, line: 578, column: 3)
!5639 = !DILocation(line: 577, column: 3, scope: !5640)
!5640 = distinct !DILexicalBlock(scope: !5634, file: !451, line: 578, column: 3)
!5641 = !DILocation(line: 578, column: 3, scope: !5642)
!5642 = distinct !DILexicalBlock(scope: !5634, file: !451, line: 579, column: 3)
!5643 = !DILocation(line: 582, column: 1, scope: !5627)
!5644 = distinct !DISubprogram(name: "stop_handler", scope: !451, file: !451, line: 581, type: !197, scopeLine: 582, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !666)
!5645 = !DILocalVariable(name: "signum", arg: 1, scope: !5644, file: !451, line: 581, type: !14)
!5646 = !DILocation(line: 0, scope: !5644)
!5647 = !DILocation(line: 583, column: 3, scope: !5648)
!5648 = distinct !DILexicalBlock(scope: !5649, file: !451, line: 587, column: 3)
!5649 = distinct !DILexicalBlock(scope: !5650, file: !451, line: 586, column: 3)
!5650 = distinct !DILexicalBlock(scope: !5644, file: !451, line: 585, column: 3)
!5651 = !DILocation(line: 584, column: 3, scope: !5650)
!5652 = distinct !DISubprogram(name: "cont_handler", scope: !451, file: !451, line: 586, type: !197, scopeLine: 587, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !666)
!5653 = !DILocalVariable(name: "signum", arg: 1, scope: !5652, file: !451, line: 586, type: !14)
!5654 = !DILocation(line: 0, scope: !5652)
!5655 = !DILocalVariable(name: "ts", scope: !5652, file: !451, line: 588, type: !166)
!5656 = !DILocation(line: 588, column: 18, scope: !5652)
!5657 = !DILocation(line: 590, column: 3, scope: !5658)
!5658 = distinct !DILexicalBlock(scope: !5659, file: !451, line: 592, column: 3)
!5659 = distinct !DILexicalBlock(scope: !5660, file: !451, line: 591, column: 3)
!5660 = distinct !DILexicalBlock(scope: !5652, file: !451, line: 590, column: 3)
!5661 = !DILocation(line: 591, column: 9, scope: !5659)
!5662 = !DILocation(line: 592, column: 6, scope: !5659)
!5663 = !DILocation(line: 592, column: 14, scope: !5659)
!5664 = !DILocation(line: 593, column: 3, scope: !5665)
!5665 = distinct !DILexicalBlock(scope: !5659, file: !451, line: 593, column: 3)
!5666 = !DILocation(line: 594, column: 3, scope: !5667)
!5667 = distinct !DILexicalBlock(scope: !5659, file: !451, line: 595, column: 3)
!5668 = !DILocation(line: 596, column: 10, scope: !5659)
!5669 = !DILocation(line: 597, column: 3, scope: !5660)
!5670 = distinct !DISubprogram(name: "main", scope: !451, file: !451, line: 640, type: !5671, scopeLine: 641, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !666)
!5671 = !DISubroutineType(types: !5672)
!5672 = !{!14, !14, !20}
!5673 = !DILocalVariable(name: "argc", arg: 1, scope: !5670, file: !451, line: 640, type: !14)
!5674 = !DILocation(line: 640, column: 14, scope: !5670)
!5675 = !DILocalVariable(name: "argv", arg: 2, scope: !5670, file: !451, line: 640, type: !20)
!5676 = !DILocation(line: 640, column: 28, scope: !5670)
!5677 = !DILocalVariable(name: "ts", scope: !5670, file: !451, line: 644, type: !166)
!5678 = !DILocation(line: 644, column: 18, scope: !5670)
!5679 = !DILocalVariable(name: "sa", scope: !5670, file: !451, line: 645, type: !189)
!5680 = !DILocation(line: 645, column: 20, scope: !5670)
!5681 = !DILocalVariable(name: "__cil_tmp12", scope: !5670, file: !451, line: 651, type: !16)
!5682 = !DILocation(line: 651, column: 9, scope: !5670)
!5683 = !DILocalVariable(name: "__cil_tmp13", scope: !5670, file: !451, line: 652, type: !16)
!5684 = !DILocation(line: 652, column: 9, scope: !5670)
!5685 = !DILocalVariable(name: "__cil_tmp14", scope: !5670, file: !451, line: 653, type: !16)
!5686 = !DILocation(line: 653, column: 9, scope: !5670)
!5687 = !DILocalVariable(name: "__cil_tmp15", scope: !5670, file: !451, line: 654, type: !16)
!5688 = !DILocation(line: 654, column: 9, scope: !5670)
!5689 = !DILocation(line: 647, column: 3, scope: !5690)
!5690 = distinct !DILexicalBlock(scope: !5691, file: !451, line: 658, column: 3)
!5691 = distinct !DILexicalBlock(scope: !5692, file: !451, line: 657, column: 3)
!5692 = distinct !DILexicalBlock(scope: !5670, file: !451, line: 656, column: 3)
!5693 = !DILocation(line: 650, column: 9, scope: !5694)
!5694 = distinct !DILexicalBlock(scope: !5691, file: !451, line: 649, column: 3)
!5695 = !DILocalVariable(name: "tmp", scope: !5670, file: !451, line: 646, type: !184)
!5696 = !DILocation(line: 0, scope: !5670)
!5697 = !DILocation(line: 650, column: 13, scope: !5698)
!5698 = distinct !DILexicalBlock(scope: !5691, file: !451, line: 652, column: 3)
!5699 = !DILocalVariable(name: "tmp___0", scope: !5670, file: !451, line: 647, type: !222)
!5700 = !DILocation(line: 650, column: 40, scope: !5691)
!5701 = !DILocation(line: 650, column: 38, scope: !5691)
!5702 = !DILocation(line: 650, column: 15, scope: !5691)
!5703 = !DILocation(line: 651, column: 24, scope: !5704)
!5704 = distinct !DILexicalBlock(scope: !5691, file: !451, line: 651, column: 3)
!5705 = !DILocation(line: 651, column: 9, scope: !5704)
!5706 = !DILocation(line: 651, column: 3, scope: !5704)
!5707 = !DILocation(line: 653, column: 13, scope: !5708)
!5708 = distinct !DILexicalBlock(scope: !5691, file: !451, line: 653, column: 3)
!5709 = !DILocalVariable(name: "usercfg", scope: !5670, file: !451, line: 643, type: !16)
!5710 = !DILocation(line: 654, column: 3, scope: !5711)
!5711 = distinct !DILexicalBlock(scope: !5691, file: !451, line: 655, column: 3)
!5712 = !DILocation(line: 655, column: 3, scope: !5713)
!5713 = distinct !DILexicalBlock(scope: !5691, file: !451, line: 656, column: 3)
!5714 = !DILocation(line: 656, column: 3, scope: !5715)
!5715 = distinct !DILexicalBlock(scope: !5691, file: !451, line: 657, column: 3)
!5716 = !DILocation(line: 657, column: 3, scope: !5717)
!5717 = distinct !DILexicalBlock(scope: !5691, file: !451, line: 658, column: 3)
!5718 = !DILocation(line: 658, column: 3, scope: !5719)
!5719 = distinct !DILexicalBlock(scope: !5691, file: !451, line: 659, column: 3)
!5720 = !DILocation(line: 660, column: 7, scope: !5721)
!5721 = distinct !DILexicalBlock(scope: !5692, file: !451, line: 660, column: 7)
!5722 = !DILocation(line: 660, column: 12, scope: !5721)
!5723 = !DILocation(line: 660, column: 7, scope: !5692)
!5724 = !DILocation(line: 661, column: 5, scope: !5725)
!5725 = distinct !DILexicalBlock(scope: !5726, file: !451, line: 662, column: 5)
!5726 = distinct !DILexicalBlock(scope: !5727, file: !451, line: 661, column: 5)
!5727 = distinct !DILexicalBlock(scope: !5721, file: !451, line: 660, column: 17)
!5728 = !DILocation(line: 664, column: 3, scope: !5727)
!5729 = !DILocation(line: 664, column: 3, scope: !5730)
!5730 = distinct !DILexicalBlock(scope: !5731, file: !451, line: 666, column: 3)
!5731 = distinct !DILexicalBlock(scope: !5692, file: !451, line: 665, column: 3)
!5732 = !DILocation(line: 665, column: 3, scope: !5733)
!5733 = distinct !DILexicalBlock(scope: !5731, file: !451, line: 666, column: 3)
!5734 = !DILocation(line: 667, column: 15, scope: !5735)
!5735 = distinct !DILexicalBlock(scope: !5731, file: !451, line: 667, column: 3)
!5736 = !DILocation(line: 667, column: 27, scope: !5735)
!5737 = !DILocation(line: 667, column: 35, scope: !5735)
!5738 = !DILocation(line: 667, column: 13, scope: !5735)
!5739 = !DILocalVariable(name: "tmp___2", scope: !5670, file: !451, line: 649, type: !15)
!5740 = !DILocation(line: 667, column: 15, scope: !5741)
!5741 = distinct !DILexicalBlock(scope: !5692, file: !451, line: 667, column: 7)
!5742 = !DILocation(line: 667, column: 7, scope: !5692)
!5743 = !DILocation(line: 668, column: 15, scope: !5744)
!5744 = distinct !DILexicalBlock(scope: !5745, file: !451, line: 669, column: 5)
!5745 = distinct !DILexicalBlock(scope: !5746, file: !451, line: 668, column: 5)
!5746 = distinct !DILexicalBlock(scope: !5741, file: !451, line: 667, column: 22)
!5747 = !DILocalVariable(name: "tmp___1", scope: !5670, file: !451, line: 648, type: !16)
!5748 = !DILocation(line: 668, column: 38, scope: !5749)
!5749 = distinct !DILexicalBlock(scope: !5745, file: !451, line: 670, column: 5)
!5750 = !DILocation(line: 669, column: 13, scope: !5749)
!5751 = !DILocation(line: 668, column: 5, scope: !5749)
!5752 = !DILocation(line: 670, column: 5, scope: !5753)
!5753 = distinct !DILexicalBlock(scope: !5745, file: !451, line: 671, column: 5)
!5754 = !DILocation(line: 673, column: 3, scope: !5755)
!5755 = distinct !DILexicalBlock(scope: !5756, file: !451, line: 675, column: 3)
!5756 = distinct !DILexicalBlock(scope: !5692, file: !451, line: 674, column: 3)
!5757 = !DILocation(line: 674, column: 3, scope: !5758)
!5758 = distinct !DILexicalBlock(scope: !5756, file: !451, line: 675, column: 3)
!5759 = !DILocation(line: 675, column: 16, scope: !5760)
!5760 = distinct !DILexicalBlock(scope: !5756, file: !451, line: 676, column: 3)
!5761 = !DILocation(line: 675, column: 3, scope: !5760)
!5762 = !DILocation(line: 677, column: 7, scope: !5763)
!5763 = distinct !DILexicalBlock(scope: !5692, file: !451, line: 677, column: 7)
!5764 = !DILocation(line: 677, column: 12, scope: !5763)
!5765 = !DILocation(line: 677, column: 7, scope: !5692)
!5766 = !DILocation(line: 678, column: 47, scope: !5767)
!5767 = distinct !DILexicalBlock(scope: !5768, file: !451, line: 679, column: 5)
!5768 = distinct !DILexicalBlock(scope: !5769, file: !451, line: 678, column: 5)
!5769 = distinct !DILexicalBlock(scope: !5763, file: !451, line: 677, column: 18)
!5770 = !DILocation(line: 678, column: 52, scope: !5767)
!5771 = !DILocation(line: 678, column: 45, scope: !5767)
!5772 = !DILocation(line: 678, column: 5, scope: !5767)
!5773 = !DILocation(line: 679, column: 19, scope: !5768)
!5774 = !DILocation(line: 681, column: 3, scope: !5769)
!5775 = !DILocation(line: 682, column: 7, scope: !5776)
!5776 = distinct !DILexicalBlock(scope: !5692, file: !451, line: 682, column: 7)
!5777 = !DILocation(line: 682, column: 12, scope: !5776)
!5778 = !DILocation(line: 682, column: 7, scope: !5692)
!5779 = !DILocation(line: 683, column: 47, scope: !5780)
!5780 = distinct !DILexicalBlock(scope: !5781, file: !451, line: 684, column: 5)
!5781 = distinct !DILexicalBlock(scope: !5782, file: !451, line: 683, column: 5)
!5782 = distinct !DILexicalBlock(scope: !5776, file: !451, line: 682, column: 18)
!5783 = !DILocation(line: 683, column: 52, scope: !5780)
!5784 = !DILocation(line: 683, column: 45, scope: !5780)
!5785 = !DILocation(line: 683, column: 5, scope: !5780)
!5786 = !DILocation(line: 684, column: 18, scope: !5781)
!5787 = !DILocation(line: 686, column: 3, scope: !5782)
!5788 = !DILocation(line: 687, column: 20, scope: !5789)
!5789 = distinct !DILexicalBlock(scope: !5790, file: !451, line: 688, column: 3)
!5790 = distinct !DILexicalBlock(scope: !5692, file: !451, line: 687, column: 3)
!5791 = !DILocation(line: 687, column: 25, scope: !5789)
!5792 = !DILocation(line: 687, column: 18, scope: !5789)
!5793 = !DILocation(line: 687, column: 9, scope: !5789)
!5794 = !DILocalVariable(name: "gbs", scope: !5670, file: !451, line: 642, type: !96)
!5795 = !DILocation(line: 688, column: 7, scope: !5796)
!5796 = distinct !DILexicalBlock(scope: !5692, file: !451, line: 688, column: 7)
!5797 = !DILocation(line: 688, column: 27, scope: !5796)
!5798 = !DILocation(line: 688, column: 7, scope: !5692)
!5799 = !DILocation(line: 689, column: 5, scope: !5800)
!5800 = distinct !DILexicalBlock(scope: !5801, file: !451, line: 690, column: 5)
!5801 = distinct !DILexicalBlock(scope: !5802, file: !451, line: 689, column: 5)
!5802 = distinct !DILexicalBlock(scope: !5796, file: !451, line: 688, column: 59)
!5803 = !DILocation(line: 693, column: 7, scope: !5804)
!5804 = distinct !DILexicalBlock(scope: !5692, file: !451, line: 693, column: 7)
!5805 = !DILocation(line: 693, column: 21, scope: !5804)
!5806 = !DILocation(line: 693, column: 7, scope: !5692)
!5807 = !DILocation(line: 694, column: 19, scope: !5808)
!5808 = distinct !DILexicalBlock(scope: !5804, file: !451, line: 693, column: 28)
!5809 = !DILocation(line: 695, column: 3, scope: !5808)
!5810 = !DILocation(line: 695, column: 7, scope: !5811)
!5811 = distinct !DILexicalBlock(scope: !5804, file: !451, line: 695, column: 7)
!5812 = !DILocation(line: 695, column: 29, scope: !5811)
!5813 = !DILocation(line: 695, column: 21, scope: !5811)
!5814 = !DILocation(line: 695, column: 7, scope: !5804)
!5815 = !DILocation(line: 696, column: 26, scope: !5816)
!5816 = distinct !DILexicalBlock(scope: !5811, file: !451, line: 695, column: 36)
!5817 = !DILocation(line: 696, column: 32, scope: !5816)
!5818 = !DILocation(line: 696, column: 19, scope: !5816)
!5819 = !DILocation(line: 697, column: 3, scope: !5816)
!5820 = !DILocation(line: 698, column: 7, scope: !5821)
!5821 = distinct !DILexicalBlock(scope: !5692, file: !451, line: 698, column: 7)
!5822 = !DILocation(line: 698, column: 20, scope: !5821)
!5823 = !DILocation(line: 698, column: 7, scope: !5692)
!5824 = !DILocation(line: 699, column: 18, scope: !5825)
!5825 = distinct !DILexicalBlock(scope: !5821, file: !451, line: 698, column: 26)
!5826 = !DILocation(line: 700, column: 3, scope: !5825)
!5827 = !DILocation(line: 700, column: 7, scope: !5828)
!5828 = distinct !DILexicalBlock(scope: !5821, file: !451, line: 700, column: 7)
!5829 = !DILocation(line: 700, column: 28, scope: !5828)
!5830 = !DILocation(line: 700, column: 20, scope: !5828)
!5831 = !DILocation(line: 700, column: 7, scope: !5821)
!5832 = !DILocation(line: 701, column: 18, scope: !5833)
!5833 = distinct !DILexicalBlock(scope: !5828, file: !451, line: 700, column: 35)
!5834 = !DILocation(line: 702, column: 3, scope: !5833)
!5835 = !DILocation(line: 704, column: 18, scope: !5836)
!5836 = distinct !DILexicalBlock(scope: !5692, file: !451, line: 703, column: 3)
!5837 = !DILocation(line: 704, column: 8, scope: !5836)
!5838 = !DILocation(line: 704, column: 16, scope: !5836)
!5839 = !DILocation(line: 705, column: 26, scope: !5836)
!5840 = !DILocation(line: 705, column: 8, scope: !5836)
!5841 = !DILocation(line: 705, column: 24, scope: !5836)
!5842 = !DILocation(line: 706, column: 26, scope: !5836)
!5843 = !DILocation(line: 706, column: 8, scope: !5836)
!5844 = !DILocation(line: 706, column: 24, scope: !5836)
!5845 = !DILocation(line: 707, column: 14, scope: !5836)
!5846 = !DILocation(line: 707, column: 8, scope: !5836)
!5847 = !DILocation(line: 707, column: 12, scope: !5836)
!5848 = !DILocation(line: 708, column: 18, scope: !5836)
!5849 = !DILocation(line: 708, column: 8, scope: !5836)
!5850 = !DILocation(line: 708, column: 16, scope: !5836)
!5851 = !DILocation(line: 709, column: 3, scope: !5852)
!5852 = distinct !DILexicalBlock(scope: !5836, file: !451, line: 709, column: 3)
!5853 = !DILocation(line: 710, column: 3, scope: !5854)
!5854 = distinct !DILexicalBlock(scope: !5836, file: !451, line: 711, column: 3)
!5855 = !DILocation(line: 711, column: 3, scope: !5856)
!5856 = distinct !DILexicalBlock(scope: !5836, file: !451, line: 712, column: 3)
!5857 = !DILocation(line: 712, column: 22, scope: !5858)
!5858 = distinct !DILexicalBlock(scope: !5836, file: !451, line: 713, column: 3)
!5859 = !DILocation(line: 712, column: 3, scope: !5858)
!5860 = !DILocation(line: 713, column: 7, scope: !5861)
!5861 = distinct !DILexicalBlock(scope: !5692, file: !451, line: 713, column: 7)
!5862 = !DILocation(line: 713, column: 7, scope: !5692)
!5863 = !DILocation(line: 714, column: 7, scope: !5864)
!5864 = distinct !DILexicalBlock(scope: !5865, file: !451, line: 715, column: 5)
!5865 = distinct !DILexicalBlock(scope: !5866, file: !451, line: 714, column: 5)
!5866 = distinct !DILexicalBlock(scope: !5861, file: !451, line: 713, column: 19)
!5867 = !DILocation(line: 714, column: 30, scope: !5864)
!5868 = !DILocation(line: 714, column: 19, scope: !5864)
!5869 = !DILocation(line: 714, column: 5, scope: !5864)
!5870 = !DILocation(line: 717, column: 3, scope: !5866)
!5871 = !DILocation(line: 715, column: 3, scope: !5872)
!5872 = distinct !DILexicalBlock(scope: !5873, file: !451, line: 719, column: 3)
!5873 = distinct !DILexicalBlock(scope: !5692, file: !451, line: 718, column: 3)
!5874 = !DILocation(line: 716, column: 3, scope: !5875)
!5875 = distinct !DILexicalBlock(scope: !5873, file: !451, line: 717, column: 3)
!5876 = !DILocation(line: 717, column: 9, scope: !5873)
!5877 = !DILocation(line: 718, column: 6, scope: !5873)
!5878 = !DILocation(line: 718, column: 14, scope: !5873)
!5879 = !DILocation(line: 719, column: 3, scope: !5880)
!5880 = distinct !DILexicalBlock(scope: !5873, file: !451, line: 719, column: 3)
!5881 = !DILocation(line: 721, column: 10, scope: !5882)
!5882 = distinct !DILexicalBlock(scope: !5873, file: !451, line: 721, column: 3)
!5883 = !DILocation(line: 721, column: 3, scope: !5882)
!5884 = !DILocation(line: 722, column: 6, scope: !5873)
!5885 = !DILocation(line: 722, column: 26, scope: !5873)
!5886 = !DILocation(line: 722, column: 37, scope: !5873)
!5887 = !DILocation(line: 723, column: 3, scope: !5888)
!5888 = distinct !DILexicalBlock(scope: !5873, file: !451, line: 723, column: 3)
!5889 = !DILocation(line: 724, column: 3, scope: !5890)
!5890 = distinct !DILexicalBlock(scope: !5873, file: !451, line: 725, column: 3)
!5891 = !DILocation(line: 725, column: 3, scope: !5892)
!5892 = distinct !DILexicalBlock(scope: !5873, file: !451, line: 726, column: 3)
!5893 = !DILocation(line: 726, column: 6, scope: !5873)
!5894 = !DILocation(line: 726, column: 26, scope: !5873)
!5895 = !DILocation(line: 726, column: 37, scope: !5873)
!5896 = !DILocation(line: 727, column: 3, scope: !5897)
!5897 = distinct !DILexicalBlock(scope: !5873, file: !451, line: 727, column: 3)
!5898 = !DILocation(line: 728, column: 6, scope: !5873)
!5899 = !DILocation(line: 728, column: 26, scope: !5873)
!5900 = !DILocation(line: 728, column: 37, scope: !5873)
!5901 = !DILocation(line: 729, column: 3, scope: !5902)
!5902 = distinct !DILexicalBlock(scope: !5873, file: !451, line: 729, column: 3)
!5903 = !DILocation(line: 731, column: 3, scope: !5904)
!5904 = distinct !DILexicalBlock(scope: !5873, file: !451, line: 731, column: 3)
!5905 = !DILocation(line: 732, column: 3, scope: !5906)
!5906 = distinct !DILexicalBlock(scope: !5907, file: !451, line: 735, column: 3)
!5907 = distinct !DILexicalBlock(scope: !5692, file: !451, line: 734, column: 3)
!5908 = !DILocation(line: 732, column: 13, scope: !5906)
!5909 = !DILocation(line: 732, column: 14, scope: !5910)
!5910 = distinct !DILexicalBlock(scope: !5911, file: !451, line: 732, column: 9)
!5911 = distinct !DILexicalBlock(scope: !5906, file: !451, line: 732, column: 13)
!5912 = !DILocation(line: 732, column: 9, scope: !5911)
!5913 = !DILocation(line: 732, column: 7, scope: !5914)
!5914 = distinct !DILexicalBlock(scope: !5910, file: !451, line: 732, column: 21)
!5915 = !DILocation(line: 733, column: 29, scope: !5916)
!5916 = distinct !DILexicalBlock(scope: !5917, file: !451, line: 735, column: 5)
!5917 = distinct !DILexicalBlock(scope: !5911, file: !451, line: 734, column: 5)
!5918 = !DILocation(line: 733, column: 15, scope: !5916)
!5919 = !DILocalVariable(name: "tmp___3", scope: !5670, file: !451, line: 650, type: !15)
!5920 = !DILocation(line: 733, column: 11, scope: !5921)
!5921 = distinct !DILexicalBlock(scope: !5911, file: !451, line: 733, column: 9)
!5922 = !DILocation(line: 733, column: 9, scope: !5911)
!5923 = !DILocation(line: 734, column: 12, scope: !5924)
!5924 = distinct !DILexicalBlock(scope: !5921, file: !451, line: 733, column: 20)
!5925 = !DILocation(line: 735, column: 7, scope: !5924)
!5926 = !DILocation(line: 738, column: 9, scope: !5927)
!5927 = distinct !DILexicalBlock(scope: !5911, file: !451, line: 738, column: 9)
!5928 = !DILocation(line: 738, column: 9, scope: !5911)
!5929 = !DILocation(line: 738, column: 7, scope: !5930)
!5930 = distinct !DILexicalBlock(scope: !5931, file: !451, line: 740, column: 7)
!5931 = distinct !DILexicalBlock(scope: !5932, file: !451, line: 739, column: 7)
!5932 = distinct !DILexicalBlock(scope: !5927, file: !451, line: 738, column: 17)
!5933 = !DILocation(line: 741, column: 5, scope: !5932)
!5934 = !DILocation(line: 739, column: 9, scope: !5935)
!5935 = distinct !DILexicalBlock(scope: !5911, file: !451, line: 739, column: 9)
!5936 = !DILocation(line: 739, column: 19, scope: !5935)
!5937 = !DILocation(line: 739, column: 9, scope: !5911)
!5938 = !DILocation(line: 739, column: 7, scope: !5939)
!5939 = distinct !DILexicalBlock(scope: !5940, file: !451, line: 741, column: 7)
!5940 = distinct !DILexicalBlock(scope: !5941, file: !451, line: 740, column: 7)
!5941 = distinct !DILexicalBlock(scope: !5935, file: !451, line: 739, column: 25)
!5942 = !DILocation(line: 742, column: 5, scope: !5941)
!5943 = !DILocation(line: 740, column: 5, scope: !5944)
!5944 = distinct !DILexicalBlock(scope: !5945, file: !451, line: 744, column: 5)
!5945 = distinct !DILexicalBlock(scope: !5911, file: !451, line: 743, column: 5)
!5946 = distinct !{!5946, !5905, !5947}
!5947 = !DILocation(line: 743, column: 3, scope: !5906)
!5948 = !DILocation(line: 745, column: 3, scope: !5906)
!5949 = !DILocation(line: 742, column: 3, scope: !5950)
!5950 = distinct !DILexicalBlock(scope: !5951, file: !451, line: 749, column: 3)
!5951 = distinct !DILexicalBlock(scope: !5692, file: !451, line: 748, column: 3)
!5952 = !DILocation(line: 744, column: 5, scope: !5953)
!5953 = distinct !DILexicalBlock(scope: !5951, file: !451, line: 744, column: 3)
!5954 = !DILocation(line: 744, column: 3, scope: !5953)
!5955 = !DILocation(line: 746, column: 3, scope: !5692)
!5956 = distinct !DISubprogram(name: "i18n_init", scope: !1414, file: !1414, line: 58, type: !272, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !666)
!5957 = !DILocalVariable(name: "__cil_tmp8", scope: !5956, file: !1414, line: 67, type: !16)
!5958 = !DILocation(line: 67, column: 9, scope: !5956)
!5959 = !DILocalVariable(name: "__cil_tmp9", scope: !5956, file: !1414, line: 68, type: !16)
!5960 = !DILocation(line: 68, column: 9, scope: !5956)
!5961 = !DILocalVariable(name: "__cil_tmp10", scope: !5956, file: !1414, line: 69, type: !16)
!5962 = !DILocation(line: 69, column: 9, scope: !5956)
!5963 = !DILocalVariable(name: "__cil_tmp11", scope: !5956, file: !1414, line: 70, type: !16)
!5964 = !DILocation(line: 70, column: 9, scope: !5956)
!5965 = !DILocalVariable(name: "__cil_tmp12", scope: !5956, file: !1414, line: 71, type: !16)
!5966 = !DILocation(line: 71, column: 9, scope: !5956)
!5967 = !DILocalVariable(name: "__cil_tmp13", scope: !5956, file: !1414, line: 72, type: !16)
!5968 = !DILocation(line: 72, column: 9, scope: !5956)
!5969 = !DILocalVariable(name: "__cil_tmp14", scope: !5956, file: !1414, line: 73, type: !16)
!5970 = !DILocation(line: 73, column: 9, scope: !5956)
!5971 = !DILocation(line: 60, column: 9, scope: !5972)
!5972 = distinct !DILexicalBlock(scope: !5973, file: !1414, line: 77, column: 3)
!5973 = distinct !DILexicalBlock(scope: !5974, file: !1414, line: 76, column: 3)
!5974 = distinct !DILexicalBlock(scope: !5956, file: !1414, line: 75, column: 3)
!5975 = !DILocalVariable(name: "tmp", scope: !5956, file: !1414, line: 60, type: !16)
!5976 = !DILocation(line: 0, scope: !5956)
!5977 = !DILocation(line: 60, column: 7, scope: !5978)
!5978 = distinct !DILexicalBlock(scope: !5974, file: !1414, line: 60, column: 7)
!5979 = !DILocation(line: 60, column: 27, scope: !5978)
!5980 = !DILocation(line: 60, column: 7, scope: !5974)
!5981 = !DILocation(line: 61, column: 38, scope: !5982)
!5982 = distinct !DILexicalBlock(scope: !5983, file: !1414, line: 62, column: 5)
!5983 = distinct !DILexicalBlock(scope: !5984, file: !1414, line: 61, column: 5)
!5984 = distinct !DILexicalBlock(scope: !5978, file: !1414, line: 60, column: 59)
!5985 = !DILocation(line: 61, column: 5, scope: !5982)
!5986 = !DILocation(line: 64, column: 3, scope: !5984)
!5987 = !DILocation(line: 63, column: 13, scope: !5988)
!5988 = distinct !DILexicalBlock(scope: !5989, file: !1414, line: 66, column: 3)
!5989 = distinct !DILexicalBlock(scope: !5974, file: !1414, line: 65, column: 3)
!5990 = !DILocalVariable(name: "tmp___2", scope: !5956, file: !1414, line: 63, type: !16)
!5991 = !DILocation(line: 63, column: 7, scope: !5992)
!5992 = distinct !DILexicalBlock(scope: !5974, file: !1414, line: 63, column: 7)
!5993 = !DILocation(line: 63, column: 31, scope: !5992)
!5994 = !DILocation(line: 63, column: 7, scope: !5974)
!5995 = !DILocation(line: 64, column: 15, scope: !5996)
!5996 = distinct !DILexicalBlock(scope: !5997, file: !1414, line: 65, column: 5)
!5997 = distinct !DILexicalBlock(scope: !5998, file: !1414, line: 64, column: 5)
!5998 = distinct !DILexicalBlock(scope: !5992, file: !1414, line: 63, column: 63)
!5999 = !DILocalVariable(name: "tmp___0", scope: !5956, file: !1414, line: 61, type: !3087)
!6000 = !DILocation(line: 64, column: 24, scope: !6001)
!6001 = distinct !DILexicalBlock(scope: !5997, file: !1414, line: 66, column: 5)
!6002 = !DILocation(line: 64, column: 15, scope: !6001)
!6003 = !DILocalVariable(name: "tmp___1", scope: !5956, file: !1414, line: 62, type: !16)
!6004 = !DILocation(line: 64, column: 38, scope: !6005)
!6005 = distinct !DILexicalBlock(scope: !5997, file: !1414, line: 66, column: 5)
!6006 = !DILocation(line: 64, column: 5, scope: !6005)
!6007 = !DILocation(line: 68, column: 3, scope: !5998)
!6008 = !DILocation(line: 66, column: 13, scope: !6009)
!6009 = distinct !DILexicalBlock(scope: !6010, file: !1414, line: 70, column: 3)
!6010 = distinct !DILexicalBlock(scope: !5974, file: !1414, line: 69, column: 3)
!6011 = !DILocalVariable(name: "tmp___5", scope: !5956, file: !1414, line: 66, type: !16)
!6012 = !DILocation(line: 66, column: 7, scope: !6013)
!6013 = distinct !DILexicalBlock(scope: !5974, file: !1414, line: 66, column: 7)
!6014 = !DILocation(line: 66, column: 31, scope: !6013)
!6015 = !DILocation(line: 66, column: 7, scope: !5974)
!6016 = !DILocation(line: 67, column: 15, scope: !6017)
!6017 = distinct !DILexicalBlock(scope: !6018, file: !1414, line: 68, column: 5)
!6018 = distinct !DILexicalBlock(scope: !6019, file: !1414, line: 67, column: 5)
!6019 = distinct !DILexicalBlock(scope: !6013, file: !1414, line: 66, column: 63)
!6020 = !DILocalVariable(name: "tmp___3", scope: !5956, file: !1414, line: 64, type: !3087)
!6021 = !DILocation(line: 67, column: 24, scope: !6022)
!6022 = distinct !DILexicalBlock(scope: !6018, file: !1414, line: 69, column: 5)
!6023 = !DILocation(line: 67, column: 15, scope: !6022)
!6024 = !DILocalVariable(name: "tmp___4", scope: !5956, file: !1414, line: 65, type: !16)
!6025 = !DILocation(line: 67, column: 38, scope: !6026)
!6026 = distinct !DILexicalBlock(scope: !6018, file: !1414, line: 69, column: 5)
!6027 = !DILocation(line: 67, column: 5, scope: !6026)
!6028 = !DILocation(line: 71, column: 3, scope: !6019)
!6029 = !DILocation(line: 69, column: 3, scope: !5974)
!6030 = distinct !DISubprogram(name: "parseopts___0", scope: !451, file: !451, line: 381, type: !6031, scopeLine: 382, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !666)
!6031 = !DISubroutineType(types: !6032)
!6032 = !{null, !3087, !6033}
!6033 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !20, size: 64)
!6034 = !DILocalVariable(name: "argc", arg: 1, scope: !6030, file: !451, line: 381, type: !3087)
!6035 = !DILocation(line: 0, scope: !6030)
!6036 = !DILocalVariable(name: "argv", arg: 2, scope: !6030, file: !451, line: 381, type: !6033)
!6037 = !DILocalVariable(name: "__cil_tmp9", scope: !6030, file: !451, line: 389, type: !16)
!6038 = !DILocation(line: 389, column: 9, scope: !6030)
!6039 = !DILocalVariable(name: "__cil_tmp10", scope: !6030, file: !451, line: 390, type: !16)
!6040 = !DILocation(line: 390, column: 9, scope: !6030)
!6041 = !DILocalVariable(name: "__cil_tmp11", scope: !6030, file: !451, line: 391, type: !16)
!6042 = !DILocation(line: 391, column: 9, scope: !6030)
!6043 = !DILocalVariable(name: "__cil_tmp12", scope: !6030, file: !451, line: 392, type: !16)
!6044 = !DILocation(line: 392, column: 9, scope: !6030)
!6045 = !DILocalVariable(name: "__cil_tmp13", scope: !6030, file: !451, line: 393, type: !16)
!6046 = !DILocation(line: 393, column: 9, scope: !6030)
!6047 = !DILocalVariable(name: "__cil_tmp14", scope: !6030, file: !451, line: 394, type: !16)
!6048 = !DILocation(line: 394, column: 9, scope: !6030)
!6049 = !DILocalVariable(name: "__cil_tmp15", scope: !6030, file: !451, line: 395, type: !16)
!6050 = !DILocation(line: 395, column: 9, scope: !6030)
!6051 = !DILocalVariable(name: "__cil_tmp16", scope: !6030, file: !451, line: 396, type: !16)
!6052 = !DILocation(line: 396, column: 9, scope: !6030)
!6053 = !DILocalVariable(name: "__cil_tmp17", scope: !6030, file: !451, line: 397, type: !16)
!6054 = !DILocation(line: 397, column: 9, scope: !6030)
!6055 = !DILocalVariable(name: "__cil_tmp18", scope: !6030, file: !451, line: 398, type: !16)
!6056 = !DILocation(line: 398, column: 9, scope: !6030)
!6057 = !DILocalVariable(name: "__cil_tmp19", scope: !6030, file: !451, line: 399, type: !16)
!6058 = !DILocation(line: 399, column: 9, scope: !6030)
!6059 = !DILocation(line: 384, column: 25, scope: !6060)
!6060 = distinct !DILexicalBlock(scope: !6030, file: !451, line: 401, column: 3)
!6061 = !DILocation(line: 384, column: 18, scope: !6060)
!6062 = !DILocation(line: 384, column: 16, scope: !6060)
!6063 = !DILocation(line: 384, column: 14, scope: !6060)
!6064 = !DILocation(line: 385, column: 3, scope: !6065)
!6065 = distinct !DILexicalBlock(scope: !6066, file: !451, line: 386, column: 3)
!6066 = distinct !DILexicalBlock(scope: !6060, file: !451, line: 385, column: 3)
!6067 = !DILocation(line: 385, column: 13, scope: !6065)
!6068 = !DILocation(line: 385, column: 22, scope: !6069)
!6069 = distinct !DILexicalBlock(scope: !6070, file: !451, line: 389, column: 5)
!6070 = distinct !DILexicalBlock(scope: !6071, file: !451, line: 388, column: 5)
!6071 = distinct !DILexicalBlock(scope: !6065, file: !451, line: 385, column: 13)
!6072 = !DILocation(line: 385, column: 46, scope: !6069)
!6073 = !DILocation(line: 385, column: 15, scope: !6069)
!6074 = !DILocalVariable(name: "tmp___3", scope: !6030, file: !451, line: 388, type: !14)
!6075 = !DILocation(line: 385, column: 11, scope: !6070)
!6076 = !DILocalVariable(name: "res", scope: !6030, file: !451, line: 383, type: !15)
!6077 = !DILocation(line: 385, column: 16, scope: !6078)
!6078 = distinct !DILexicalBlock(scope: !6071, file: !451, line: 385, column: 9)
!6079 = !DILocation(line: 385, column: 9, scope: !6071)
!6080 = !DILocation(line: 385, column: 7, scope: !6081)
!6081 = distinct !DILexicalBlock(scope: !6078, file: !451, line: 385, column: 25)
!6082 = !DILocation(line: 393, column: 13, scope: !6083)
!6083 = distinct !DILexicalBlock(scope: !6084, file: !451, line: 393, column: 9)
!6084 = distinct !DILexicalBlock(scope: !6071, file: !451, line: 387, column: 5)
!6085 = !DILocation(line: 393, column: 9, scope: !6084)
!6086 = !DILocation(line: 393, column: 7, scope: !6087)
!6087 = distinct !DILexicalBlock(scope: !6083, file: !451, line: 393, column: 21)
!6088 = !DILocation(line: 393, column: 13, scope: !6089)
!6089 = distinct !DILexicalBlock(scope: !6084, file: !451, line: 393, column: 9)
!6090 = !DILocation(line: 393, column: 7, scope: !6091)
!6091 = distinct !DILexicalBlock(scope: !6089, file: !451, line: 393, column: 21)
!6092 = !DILocation(line: 393, column: 13, scope: !6093)
!6093 = distinct !DILexicalBlock(scope: !6084, file: !451, line: 393, column: 9)
!6094 = !DILocation(line: 393, column: 7, scope: !6095)
!6095 = distinct !DILexicalBlock(scope: !6093, file: !451, line: 393, column: 21)
!6096 = !DILocation(line: 393, column: 13, scope: !6097)
!6097 = distinct !DILexicalBlock(scope: !6084, file: !451, line: 393, column: 9)
!6098 = !DILocation(line: 393, column: 7, scope: !6099)
!6099 = distinct !DILexicalBlock(scope: !6097, file: !451, line: 393, column: 21)
!6100 = !DILocation(line: 396, column: 13, scope: !6101)
!6101 = distinct !DILexicalBlock(scope: !6084, file: !451, line: 396, column: 9)
!6102 = !DILocation(line: 396, column: 9, scope: !6084)
!6103 = !DILocation(line: 396, column: 7, scope: !6104)
!6104 = distinct !DILexicalBlock(scope: !6101, file: !451, line: 396, column: 21)
!6105 = !DILocation(line: 408, column: 13, scope: !6106)
!6106 = distinct !DILexicalBlock(scope: !6084, file: !451, line: 408, column: 9)
!6107 = !DILocation(line: 408, column: 9, scope: !6084)
!6108 = !DILocation(line: 408, column: 7, scope: !6109)
!6109 = distinct !DILexicalBlock(scope: !6106, file: !451, line: 408, column: 22)
!6110 = !DILocation(line: 411, column: 13, scope: !6111)
!6111 = distinct !DILexicalBlock(scope: !6084, file: !451, line: 411, column: 9)
!6112 = !DILocation(line: 411, column: 9, scope: !6084)
!6113 = !DILocation(line: 411, column: 7, scope: !6114)
!6114 = distinct !DILexicalBlock(scope: !6111, file: !451, line: 411, column: 22)
!6115 = !DILocation(line: 414, column: 13, scope: !6116)
!6116 = distinct !DILexicalBlock(scope: !6084, file: !451, line: 414, column: 9)
!6117 = !DILocation(line: 414, column: 9, scope: !6084)
!6118 = !DILocation(line: 414, column: 7, scope: !6119)
!6119 = distinct !DILexicalBlock(scope: !6116, file: !451, line: 414, column: 22)
!6120 = !DILocation(line: 417, column: 13, scope: !6121)
!6121 = distinct !DILexicalBlock(scope: !6084, file: !451, line: 417, column: 9)
!6122 = !DILocation(line: 417, column: 9, scope: !6084)
!6123 = !DILocation(line: 417, column: 7, scope: !6124)
!6124 = distinct !DILexicalBlock(scope: !6121, file: !451, line: 417, column: 22)
!6125 = !DILocation(line: 420, column: 13, scope: !6126)
!6126 = distinct !DILexicalBlock(scope: !6084, file: !451, line: 420, column: 9)
!6127 = !DILocation(line: 420, column: 9, scope: !6084)
!6128 = !DILocation(line: 420, column: 7, scope: !6129)
!6129 = distinct !DILexicalBlock(scope: !6126, file: !451, line: 420, column: 22)
!6130 = !DILocation(line: 423, column: 13, scope: !6131)
!6131 = distinct !DILexicalBlock(scope: !6084, file: !451, line: 423, column: 9)
!6132 = !DILocation(line: 423, column: 9, scope: !6084)
!6133 = !DILocation(line: 423, column: 7, scope: !6134)
!6134 = distinct !DILexicalBlock(scope: !6131, file: !451, line: 423, column: 22)
!6135 = !DILocation(line: 426, column: 13, scope: !6136)
!6136 = distinct !DILexicalBlock(scope: !6084, file: !451, line: 426, column: 9)
!6137 = !DILocation(line: 426, column: 9, scope: !6084)
!6138 = !DILocation(line: 426, column: 7, scope: !6139)
!6139 = distinct !DILexicalBlock(scope: !6136, file: !451, line: 426, column: 22)
!6140 = !DILocation(line: 429, column: 13, scope: !6141)
!6141 = distinct !DILexicalBlock(scope: !6084, file: !451, line: 429, column: 9)
!6142 = !DILocation(line: 429, column: 9, scope: !6084)
!6143 = !DILocation(line: 429, column: 7, scope: !6144)
!6144 = distinct !DILexicalBlock(scope: !6141, file: !451, line: 429, column: 21)
!6145 = !DILocation(line: 432, column: 13, scope: !6146)
!6146 = distinct !DILexicalBlock(scope: !6084, file: !451, line: 432, column: 9)
!6147 = !DILocation(line: 432, column: 9, scope: !6084)
!6148 = !DILocation(line: 432, column: 7, scope: !6149)
!6149 = distinct !DILexicalBlock(scope: !6146, file: !451, line: 432, column: 22)
!6150 = !DILocation(line: 435, column: 13, scope: !6151)
!6151 = distinct !DILexicalBlock(scope: !6084, file: !451, line: 435, column: 9)
!6152 = !DILocation(line: 435, column: 9, scope: !6084)
!6153 = !DILocation(line: 435, column: 7, scope: !6154)
!6154 = distinct !DILexicalBlock(scope: !6151, file: !451, line: 435, column: 21)
!6155 = !DILocation(line: 438, column: 13, scope: !6156)
!6156 = distinct !DILexicalBlock(scope: !6084, file: !451, line: 438, column: 9)
!6157 = !DILocation(line: 438, column: 9, scope: !6084)
!6158 = !DILocation(line: 438, column: 7, scope: !6159)
!6159 = distinct !DILexicalBlock(scope: !6156, file: !451, line: 438, column: 22)
!6160 = !DILocation(line: 441, column: 13, scope: !6161)
!6161 = distinct !DILexicalBlock(scope: !6084, file: !451, line: 441, column: 9)
!6162 = !DILocation(line: 441, column: 9, scope: !6084)
!6163 = !DILocation(line: 441, column: 7, scope: !6164)
!6164 = distinct !DILexicalBlock(scope: !6161, file: !451, line: 441, column: 21)
!6165 = !DILocation(line: 444, column: 13, scope: !6166)
!6166 = distinct !DILexicalBlock(scope: !6084, file: !451, line: 444, column: 9)
!6167 = !DILocation(line: 444, column: 9, scope: !6084)
!6168 = !DILocation(line: 444, column: 7, scope: !6169)
!6169 = distinct !DILexicalBlock(scope: !6166, file: !451, line: 444, column: 22)
!6170 = !DILocation(line: 447, column: 13, scope: !6171)
!6171 = distinct !DILexicalBlock(scope: !6084, file: !451, line: 447, column: 9)
!6172 = !DILocation(line: 447, column: 9, scope: !6084)
!6173 = !DILocation(line: 447, column: 7, scope: !6174)
!6174 = distinct !DILexicalBlock(scope: !6171, file: !451, line: 447, column: 21)
!6175 = !DILocation(line: 387, column: 5, scope: !6084)
!6176 = !DILocation(line: 388, column: 5, scope: !6177)
!6177 = distinct !DILexicalBlock(scope: !6178, file: !451, line: 390, column: 5)
!6178 = distinct !DILexicalBlock(scope: !6084, file: !451, line: 389, column: 5)
!6179 = !DILocation(line: 389, column: 5, scope: !6084)
!6180 = !DILocation(line: 394, column: 17, scope: !6084)
!6181 = !DILocation(line: 394, column: 5, scope: !6084)
!6182 = !DILocation(line: 394, column: 24, scope: !6084)
!6183 = !DILocation(line: 394, column: 29, scope: !6084)
!6184 = !DILocation(line: 395, column: 5, scope: !6084)
!6185 = !DILocation(line: 397, column: 42, scope: !6186)
!6186 = distinct !DILexicalBlock(scope: !6187, file: !451, line: 398, column: 5)
!6187 = distinct !DILexicalBlock(scope: !6084, file: !451, line: 397, column: 5)
!6188 = !DILocation(line: 397, column: 15, scope: !6186)
!6189 = !DILocalVariable(name: "tmp___2", scope: !6030, file: !451, line: 387, type: !14)
!6190 = !DILocation(line: 397, column: 17, scope: !6191)
!6191 = distinct !DILexicalBlock(scope: !6084, file: !451, line: 397, column: 9)
!6192 = !DILocation(line: 397, column: 9, scope: !6084)
!6193 = !DILocation(line: 398, column: 14, scope: !6194)
!6194 = distinct !DILexicalBlock(scope: !6191, file: !451, line: 397, column: 23)
!6195 = !DILocation(line: 399, column: 5, scope: !6194)
!6196 = !DILocation(line: 399, column: 44, scope: !6197)
!6197 = distinct !DILexicalBlock(scope: !6198, file: !451, line: 401, column: 7)
!6198 = distinct !DILexicalBlock(scope: !6199, file: !451, line: 400, column: 7)
!6199 = distinct !DILexicalBlock(scope: !6191, file: !451, line: 399, column: 12)
!6200 = !DILocation(line: 399, column: 17, scope: !6197)
!6201 = !DILocalVariable(name: "tmp___1", scope: !6030, file: !451, line: 386, type: !14)
!6202 = !DILocation(line: 399, column: 19, scope: !6203)
!6203 = distinct !DILexicalBlock(scope: !6199, file: !451, line: 399, column: 11)
!6204 = !DILocation(line: 399, column: 11, scope: !6199)
!6205 = !DILocation(line: 400, column: 16, scope: !6206)
!6206 = distinct !DILexicalBlock(scope: !6203, file: !451, line: 399, column: 25)
!6207 = !DILocation(line: 401, column: 7, scope: !6206)
!6208 = !DILocation(line: 401, column: 46, scope: !6209)
!6209 = distinct !DILexicalBlock(scope: !6210, file: !451, line: 403, column: 9)
!6210 = distinct !DILexicalBlock(scope: !6211, file: !451, line: 402, column: 9)
!6211 = distinct !DILexicalBlock(scope: !6203, file: !451, line: 401, column: 14)
!6212 = !DILocation(line: 401, column: 19, scope: !6209)
!6213 = !DILocalVariable(name: "tmp___0", scope: !6030, file: !451, line: 385, type: !14)
!6214 = !DILocation(line: 401, column: 21, scope: !6215)
!6215 = distinct !DILexicalBlock(scope: !6211, file: !451, line: 401, column: 13)
!6216 = !DILocation(line: 401, column: 13, scope: !6211)
!6217 = !DILocation(line: 402, column: 18, scope: !6218)
!6218 = distinct !DILexicalBlock(scope: !6215, file: !451, line: 401, column: 27)
!6219 = !DILocation(line: 403, column: 9, scope: !6218)
!6220 = !DILocation(line: 404, column: 17, scope: !6221)
!6221 = distinct !DILexicalBlock(scope: !6222, file: !451, line: 405, column: 11)
!6222 = distinct !DILexicalBlock(scope: !6223, file: !451, line: 404, column: 11)
!6223 = distinct !DILexicalBlock(scope: !6215, file: !451, line: 403, column: 16)
!6224 = !DILocalVariable(name: "tmp", scope: !6030, file: !451, line: 384, type: !16)
!6225 = !DILocation(line: 404, column: 56, scope: !6226)
!6226 = distinct !DILexicalBlock(scope: !6222, file: !451, line: 406, column: 11)
!6227 = !DILocation(line: 404, column: 11, scope: !6226)
!6228 = !DILocation(line: 405, column: 11, scope: !6229)
!6229 = distinct !DILexicalBlock(scope: !6222, file: !451, line: 406, column: 11)
!6230 = !DILocation(line: 407, column: 5, scope: !6084)
!6231 = !DILocation(line: 409, column: 45, scope: !6232)
!6232 = distinct !DILexicalBlock(scope: !6233, file: !451, line: 410, column: 5)
!6233 = distinct !DILexicalBlock(scope: !6084, file: !451, line: 409, column: 5)
!6234 = !DILocation(line: 409, column: 5, scope: !6232)
!6235 = !DILocation(line: 410, column: 5, scope: !6084)
!6236 = !DILocation(line: 412, column: 45, scope: !6237)
!6237 = distinct !DILexicalBlock(scope: !6238, file: !451, line: 413, column: 5)
!6238 = distinct !DILexicalBlock(scope: !6084, file: !451, line: 412, column: 5)
!6239 = !DILocation(line: 412, column: 5, scope: !6237)
!6240 = !DILocation(line: 413, column: 5, scope: !6084)
!6241 = !DILocation(line: 415, column: 5, scope: !6242)
!6242 = distinct !DILexicalBlock(scope: !6243, file: !451, line: 416, column: 5)
!6243 = distinct !DILexicalBlock(scope: !6084, file: !451, line: 415, column: 5)
!6244 = !DILocation(line: 416, column: 5, scope: !6084)
!6245 = !DILocation(line: 418, column: 14, scope: !6084)
!6246 = !DILocation(line: 419, column: 5, scope: !6084)
!6247 = !DILocation(line: 421, column: 18, scope: !6084)
!6248 = !DILocation(line: 421, column: 16, scope: !6084)
!6249 = !DILocation(line: 422, column: 5, scope: !6084)
!6250 = !DILocation(line: 424, column: 15, scope: !6084)
!6251 = !DILocation(line: 425, column: 5, scope: !6084)
!6252 = !DILocation(line: 427, column: 45, scope: !6253)
!6253 = distinct !DILexicalBlock(scope: !6254, file: !451, line: 428, column: 5)
!6254 = distinct !DILexicalBlock(scope: !6084, file: !451, line: 427, column: 5)
!6255 = !DILocation(line: 427, column: 5, scope: !6253)
!6256 = !DILocation(line: 428, column: 5, scope: !6084)
!6257 = !DILocation(line: 430, column: 45, scope: !6258)
!6258 = distinct !DILexicalBlock(scope: !6259, file: !451, line: 431, column: 5)
!6259 = distinct !DILexicalBlock(scope: !6084, file: !451, line: 430, column: 5)
!6260 = !DILocation(line: 430, column: 5, scope: !6258)
!6261 = !DILocation(line: 431, column: 5, scope: !6084)
!6262 = !DILocation(line: 433, column: 45, scope: !6263)
!6263 = distinct !DILexicalBlock(scope: !6264, file: !451, line: 434, column: 5)
!6264 = distinct !DILexicalBlock(scope: !6084, file: !451, line: 433, column: 5)
!6265 = !DILocation(line: 433, column: 5, scope: !6263)
!6266 = !DILocation(line: 434, column: 5, scope: !6084)
!6267 = !DILocation(line: 436, column: 45, scope: !6268)
!6268 = distinct !DILexicalBlock(scope: !6269, file: !451, line: 437, column: 5)
!6269 = distinct !DILexicalBlock(scope: !6084, file: !451, line: 436, column: 5)
!6270 = !DILocation(line: 436, column: 5, scope: !6268)
!6271 = !DILocation(line: 437, column: 5, scope: !6084)
!6272 = !DILocation(line: 439, column: 15, scope: !6084)
!6273 = !DILocation(line: 440, column: 5, scope: !6084)
!6274 = !DILocation(line: 442, column: 5, scope: !6275)
!6275 = distinct !DILexicalBlock(scope: !6276, file: !451, line: 443, column: 5)
!6276 = distinct !DILexicalBlock(scope: !6084, file: !451, line: 442, column: 5)
!6277 = !DILocation(line: 443, column: 5, scope: !6084)
!6278 = !DILocation(line: 445, column: 14, scope: !6084)
!6279 = !DILocation(line: 446, column: 5, scope: !6084)
!6280 = !DILocation(line: 448, column: 14, scope: !6084)
!6281 = !DILocation(line: 449, column: 5, scope: !6084)
!6282 = distinct !{!6282, !6064, !6283}
!6283 = !DILocation(line: 452, column: 3, scope: !6065)
!6284 = !DILocation(line: 454, column: 3, scope: !6065)
!6285 = !DILocation(line: 452, column: 12, scope: !6060)
!6286 = !DILocation(line: 452, column: 9, scope: !6060)
!6287 = !DILocation(line: 453, column: 12, scope: !6060)
!6288 = !DILocation(line: 453, column: 9, scope: !6060)
!6289 = !DILocation(line: 454, column: 3, scope: !6060)
!6290 = distinct !DISubprogram(name: "select_plugin", scope: !451, file: !451, line: 612, type: !272, scopeLine: 613, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !666)
!6291 = !DILocalVariable(name: "__cil_tmp4", scope: !6290, file: !451, line: 617, type: !16)
!6292 = !DILocation(line: 617, column: 9, scope: !6290)
!6293 = !DILocalVariable(name: "__cil_tmp5", scope: !6290, file: !451, line: 618, type: !16)
!6294 = !DILocation(line: 618, column: 9, scope: !6290)
!6295 = !DILocation(line: 616, column: 32, scope: !6296)
!6296 = distinct !DILexicalBlock(scope: !6297, file: !451, line: 622, column: 3)
!6297 = distinct !DILexicalBlock(scope: !6298, file: !451, line: 621, column: 3)
!6298 = distinct !DILexicalBlock(scope: !6290, file: !451, line: 620, column: 3)
!6299 = !DILocation(line: 616, column: 9, scope: !6296)
!6300 = !DILocalVariable(name: "tmp", scope: !6290, file: !451, line: 615, type: !14)
!6301 = !DILocation(line: 0, scope: !6290)
!6302 = !DILocation(line: 616, column: 11, scope: !6303)
!6303 = distinct !DILexicalBlock(scope: !6298, file: !451, line: 616, column: 7)
!6304 = !DILocation(line: 616, column: 7, scope: !6298)
!6305 = !DILocation(line: 617, column: 5, scope: !6306)
!6306 = distinct !DILexicalBlock(scope: !6307, file: !451, line: 618, column: 5)
!6307 = distinct !DILexicalBlock(scope: !6308, file: !451, line: 617, column: 5)
!6308 = distinct !DILexicalBlock(scope: !6303, file: !451, line: 616, column: 17)
!6309 = !DILocation(line: 618, column: 5, scope: !6310)
!6310 = distinct !DILexicalBlock(scope: !6307, file: !451, line: 619, column: 5)
!6311 = !DILocation(line: 621, column: 52, scope: !6312)
!6312 = distinct !DILexicalBlock(scope: !6313, file: !451, line: 623, column: 3)
!6313 = distinct !DILexicalBlock(scope: !6298, file: !451, line: 622, column: 3)
!6314 = !DILocation(line: 621, column: 13, scope: !6312)
!6315 = !DILocalVariable(name: "plugout", scope: !6290, file: !451, line: 614, type: !658)
!6316 = !DILocation(line: 622, column: 7, scope: !6317)
!6317 = distinct !DILexicalBlock(scope: !6298, file: !451, line: 622, column: 7)
!6318 = !DILocation(line: 622, column: 31, scope: !6317)
!6319 = !DILocation(line: 622, column: 7, scope: !6298)
!6320 = !DILocation(line: 623, column: 15, scope: !6321)
!6321 = distinct !DILexicalBlock(scope: !6322, file: !451, line: 624, column: 5)
!6322 = distinct !DILexicalBlock(scope: !6323, file: !451, line: 623, column: 5)
!6323 = distinct !DILexicalBlock(scope: !6317, file: !451, line: 622, column: 63)
!6324 = !DILocalVariable(name: "tmp___0", scope: !6290, file: !451, line: 616, type: !16)
!6325 = !DILocation(line: 623, column: 38, scope: !6326)
!6326 = distinct !DILexicalBlock(scope: !6322, file: !451, line: 625, column: 5)
!6327 = !DILocation(line: 624, column: 13, scope: !6326)
!6328 = !DILocation(line: 623, column: 5, scope: !6326)
!6329 = !DILocation(line: 625, column: 5, scope: !6330)
!6330 = distinct !DILexicalBlock(scope: !6322, file: !451, line: 626, column: 5)
!6331 = !DILocation(line: 629, column: 82, scope: !6298)
!6332 = !DILocation(line: 628, column: 14, scope: !6298)
!6333 = !DILocation(line: 629, column: 83, scope: !6298)
!6334 = !DILocation(line: 629, column: 14, scope: !6298)
!6335 = !DILocation(line: 631, column: 81, scope: !6298)
!6336 = !DILocation(line: 630, column: 12, scope: !6298)
!6337 = !DILocation(line: 632, column: 89, scope: !6298)
!6338 = !DILocation(line: 631, column: 15, scope: !6298)
!6339 = !DILocation(line: 632, column: 77, scope: !6298)
!6340 = !DILocation(line: 632, column: 15, scope: !6298)
!6341 = !DILocation(line: 633, column: 40, scope: !6298)
!6342 = !DILocation(line: 633, column: 21, scope: !6298)
!6343 = !DILocation(line: 635, column: 16, scope: !6344)
!6344 = distinct !DILexicalBlock(scope: !6298, file: !451, line: 635, column: 7)
!6345 = !DILocation(line: 635, column: 22, scope: !6344)
!6346 = !DILocation(line: 635, column: 7, scope: !6298)
!6347 = !DILocation(line: 636, column: 15, scope: !6348)
!6348 = distinct !DILexicalBlock(scope: !6344, file: !451, line: 635, column: 28)
!6349 = !DILocation(line: 637, column: 3, scope: !6348)
!6350 = !DILocation(line: 638, column: 3, scope: !6298)
!6351 = distinct !DISubprogram(name: "usage___0", scope: !451, file: !451, line: 339, type: !1747, scopeLine: 340, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !666)
!6352 = !DILocalVariable(name: "exitcode", arg: 1, scope: !6351, file: !451, line: 339, type: !15)
!6353 = !DILocation(line: 0, scope: !6351)
!6354 = !DILocalVariable(name: "__cil_tmp6", scope: !6351, file: !451, line: 345, type: !16)
!6355 = !DILocation(line: 345, column: 9, scope: !6351)
!6356 = !DILocation(line: 341, column: 7, scope: !6357)
!6357 = distinct !DILexicalBlock(scope: !6358, file: !451, line: 341, column: 7)
!6358 = distinct !DILexicalBlock(scope: !6351, file: !451, line: 347, column: 3)
!6359 = !DILocation(line: 341, column: 7, scope: !6358)
!6360 = !DILocation(line: 341, column: 11, scope: !6361)
!6361 = distinct !DILexicalBlock(scope: !6357, file: !451, line: 341, column: 17)
!6362 = !DILocalVariable(name: "tmp", scope: !6351, file: !451, line: 342, type: !48)
!6363 = !DILocation(line: 342, column: 3, scope: !6361)
!6364 = !DILocation(line: 341, column: 11, scope: !6365)
!6365 = distinct !DILexicalBlock(scope: !6357, file: !451, line: 342, column: 10)
!6366 = !DILocation(line: 0, scope: !6357)
!6367 = !DILocalVariable(name: "out", scope: !6351, file: !451, line: 341, type: !24)
!6368 = !DILocation(line: 342, column: 31, scope: !6369)
!6369 = distinct !DILexicalBlock(scope: !6370, file: !451, line: 342, column: 3)
!6370 = distinct !DILexicalBlock(scope: !6358, file: !451, line: 343, column: 3)
!6371 = !DILocation(line: 342, column: 24, scope: !6369)
!6372 = !DILocation(line: 342, column: 13, scope: !6369)
!6373 = !DILocalVariable(name: "tmp___0", scope: !6351, file: !451, line: 343, type: !16)
!6374 = !DILocation(line: 342, column: 13, scope: !6375)
!6375 = distinct !DILexicalBlock(scope: !6370, file: !451, line: 344, column: 3)
!6376 = !DILocalVariable(name: "tmp___1", scope: !6351, file: !451, line: 344, type: !16)
!6377 = !DILocation(line: 343, column: 11, scope: !6378)
!6378 = distinct !DILexicalBlock(scope: !6370, file: !451, line: 344, column: 3)
!6379 = !DILocation(line: 343, column: 32, scope: !6378)
!6380 = !DILocation(line: 343, column: 41, scope: !6378)
!6381 = !DILocation(line: 343, column: 54, scope: !6378)
!6382 = !DILocation(line: 343, column: 66, scope: !6378)
!6383 = !DILocation(line: 343, column: 72, scope: !6378)
!6384 = !DILocation(line: 344, column: 11, scope: !6378)
!6385 = !DILocation(line: 344, column: 28, scope: !6378)
!6386 = !DILocation(line: 342, column: 3, scope: !6378)
!6387 = !DILocation(line: 372, column: 8, scope: !6388)
!6388 = distinct !DILexicalBlock(scope: !6370, file: !451, line: 346, column: 3)
!6389 = !DILocation(line: 372, column: 3, scope: !6388)
!6390 = !DILocation(line: 376, column: 1, scope: !6351)
!6391 = distinct !DISubprogram(name: "precalc_notes", scope: !451, file: !451, line: 126, type: !272, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !666)
!6392 = !DILocalVariable(name: "i", scope: !6391, file: !451, line: 128, type: !15)
!6393 = !DILocation(line: 0, scope: !6391)
!6394 = !DILocation(line: 129, column: 3, scope: !6395)
!6395 = distinct !DILexicalBlock(scope: !6396, file: !451, line: 131, column: 3)
!6396 = distinct !DILexicalBlock(scope: !6397, file: !451, line: 130, column: 3)
!6397 = distinct !DILexicalBlock(scope: !6391, file: !451, line: 132, column: 3)
!6398 = !DILocation(line: 0, scope: !6397)
!6399 = !DILocation(line: 129, column: 13, scope: !6395)
!6400 = !DILocation(line: 129, column: 14, scope: !6401)
!6401 = distinct !DILexicalBlock(scope: !6402, file: !451, line: 129, column: 9)
!6402 = distinct !DILexicalBlock(scope: !6395, file: !451, line: 129, column: 13)
!6403 = !DILocation(line: 129, column: 9, scope: !6402)
!6404 = !DILocation(line: 129, column: 7, scope: !6405)
!6405 = distinct !DILexicalBlock(scope: !6401, file: !451, line: 129, column: 23)
!6406 = !DILocation(line: 130, column: 25, scope: !6402)
!6407 = !DILocation(line: 130, column: 20, scope: !6402)
!6408 = !DILocalVariable(name: "s", scope: !6391, file: !451, line: 129, type: !16)
!6409 = !DILocation(line: 131, column: 11, scope: !6402)
!6410 = !DILocalVariable(name: "n", scope: !6391, file: !451, line: 130, type: !15)
!6411 = !DILocation(line: 133, column: 32, scope: !6402)
!6412 = !DILocation(line: 133, column: 28, scope: !6402)
!6413 = !DILocation(line: 133, column: 16, scope: !6402)
!6414 = !DILocation(line: 133, column: 9, scope: !6402)
!6415 = !DILocation(line: 133, column: 14, scope: !6402)
!6416 = !DILocation(line: 134, column: 21, scope: !6402)
!6417 = !DILocation(line: 134, column: 32, scope: !6402)
!6418 = !DILocation(line: 134, column: 27, scope: !6402)
!6419 = !DILocation(line: 134, column: 10, scope: !6402)
!6420 = !DILocation(line: 134, column: 7, scope: !6402)
!6421 = !DILocation(line: 135, column: 33, scope: !6402)
!6422 = !DILocation(line: 135, column: 28, scope: !6402)
!6423 = !DILocation(line: 135, column: 16, scope: !6402)
!6424 = !DILocation(line: 135, column: 9, scope: !6402)
!6425 = !DILocation(line: 135, column: 14, scope: !6402)
!6426 = !DILocation(line: 136, column: 11, scope: !6427)
!6427 = distinct !DILexicalBlock(scope: !6402, file: !451, line: 136, column: 9)
!6428 = !DILocation(line: 136, column: 9, scope: !6402)
!6429 = !DILocation(line: 137, column: 11, scope: !6430)
!6430 = distinct !DILexicalBlock(scope: !6427, file: !451, line: 136, column: 17)
!6431 = !DILocation(line: 137, column: 16, scope: !6430)
!6432 = !DILocation(line: 138, column: 5, scope: !6430)
!6433 = !DILocation(line: 139, column: 11, scope: !6434)
!6434 = distinct !DILexicalBlock(scope: !6427, file: !451, line: 138, column: 12)
!6435 = !DILocation(line: 139, column: 16, scope: !6434)
!6436 = !DILocation(line: 129, column: 7, scope: !6402)
!6437 = distinct !{!6437, !6394, !6438}
!6438 = !DILocation(line: 130, column: 3, scope: !6395)
!6439 = !DILocation(line: 132, column: 3, scope: !6395)
!6440 = !DILocation(line: 142, column: 3, scope: !6397)
!6441 = distinct !DISubprogram(name: "precalc_vols", scope: !451, file: !451, line: 157, type: !272, scopeLine: 158, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !666)
!6442 = !DILocalVariable(name: "k", scope: !6441, file: !451, line: 160, type: !15)
!6443 = !DILocation(line: 0, scope: !6441)
!6444 = !DILocation(line: 160, column: 3, scope: !6445)
!6445 = distinct !DILexicalBlock(scope: !6446, file: !451, line: 162, column: 3)
!6446 = distinct !DILexicalBlock(scope: !6447, file: !451, line: 161, column: 3)
!6447 = distinct !DILexicalBlock(scope: !6441, file: !451, line: 164, column: 3)
!6448 = !DILocation(line: 0, scope: !6447)
!6449 = !DILocation(line: 160, column: 13, scope: !6445)
!6450 = !DILocation(line: 160, column: 14, scope: !6451)
!6451 = distinct !DILexicalBlock(scope: !6452, file: !451, line: 160, column: 9)
!6452 = distinct !DILexicalBlock(scope: !6445, file: !451, line: 160, column: 13)
!6453 = !DILocation(line: 160, column: 9, scope: !6452)
!6454 = !DILocation(line: 160, column: 7, scope: !6455)
!6455 = distinct !DILexicalBlock(scope: !6451, file: !451, line: 160, column: 22)
!6456 = !DILocation(line: 162, column: 24, scope: !6452)
!6457 = !DILocation(line: 162, column: 19, scope: !6452)
!6458 = !DILocalVariable(name: "s", scope: !6441, file: !451, line: 162, type: !16)
!6459 = !DILocalVariable(name: "i", scope: !6441, file: !451, line: 159, type: !15)
!6460 = !DILocalVariable(name: "j", scope: !6441, file: !451, line: 161, type: !15)
!6461 = !DILocation(line: 164, column: 5, scope: !6462)
!6462 = distinct !DILexicalBlock(scope: !6463, file: !451, line: 166, column: 5)
!6463 = distinct !DILexicalBlock(scope: !6452, file: !451, line: 165, column: 5)
!6464 = !DILocation(line: 0, scope: !6452)
!6465 = !DILocation(line: 164, column: 15, scope: !6462)
!6466 = !DILocation(line: 164, column: 16, scope: !6467)
!6467 = distinct !DILexicalBlock(scope: !6468, file: !451, line: 164, column: 11)
!6468 = distinct !DILexicalBlock(scope: !6462, file: !451, line: 164, column: 15)
!6469 = !DILocation(line: 164, column: 11, scope: !6468)
!6470 = !DILocation(line: 164, column: 9, scope: !6471)
!6471 = distinct !DILexicalBlock(scope: !6467, file: !451, line: 164, column: 23)
!6472 = !DILocation(line: 165, column: 13, scope: !6473)
!6473 = distinct !DILexicalBlock(scope: !6468, file: !451, line: 165, column: 11)
!6474 = !DILocation(line: 165, column: 11, scope: !6468)
!6475 = !DILocation(line: 166, column: 27, scope: !6476)
!6476 = distinct !DILexicalBlock(scope: !6473, file: !451, line: 165, column: 20)
!6477 = !DILocation(line: 166, column: 13, scope: !6476)
!6478 = !DILocation(line: 166, column: 18, scope: !6476)
!6479 = !DILocation(line: 167, column: 11, scope: !6476)
!6480 = !DILocation(line: 168, column: 7, scope: !6476)
!6481 = !DILocation(line: 169, column: 27, scope: !6482)
!6482 = distinct !DILexicalBlock(scope: !6473, file: !451, line: 168, column: 14)
!6483 = !DILocation(line: 169, column: 13, scope: !6482)
!6484 = !DILocation(line: 169, column: 18, scope: !6482)
!6485 = !DILocation(line: 0, scope: !6473)
!6486 = !DILocation(line: 164, column: 9, scope: !6468)
!6487 = distinct !{!6487, !6461, !6488}
!6488 = !DILocation(line: 165, column: 5, scope: !6462)
!6489 = !DILocation(line: 167, column: 5, scope: !6462)
!6490 = !DILocation(line: 160, column: 7, scope: !6452)
!6491 = distinct !{!6491, !6444, !6492}
!6492 = !DILocation(line: 161, column: 3, scope: !6445)
!6493 = !DILocation(line: 163, column: 3, scope: !6445)
!6494 = !DILocation(line: 174, column: 3, scope: !6447)
!6495 = distinct !DISubprogram(name: "iocallback___1", scope: !451, file: !451, line: 186, type: !443, scopeLine: 188, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !666)
!6496 = !DILocalVariable(name: "cycles", arg: 1, scope: !6495, file: !451, line: 186, type: !15)
!6497 = !DILocation(line: 0, scope: !6495)
!6498 = !DILocalVariable(name: "addr", arg: 2, scope: !6495, file: !451, line: 186, type: !83)
!6499 = !DILocalVariable(name: "val", arg: 3, scope: !6495, file: !451, line: 187, type: !87)
!6500 = !DILocalVariable(name: "priv", arg: 4, scope: !6495, file: !451, line: 187, type: !23)
!6501 = !DILocation(line: 188, column: 7, scope: !6502)
!6502 = distinct !DILexicalBlock(scope: !6503, file: !451, line: 188, column: 7)
!6503 = distinct !DILexicalBlock(scope: !6495, file: !451, line: 191, column: 3)
!6504 = !DILocation(line: 188, column: 7, scope: !6503)
!6505 = !DILocation(line: 189, column: 7, scope: !6506)
!6506 = distinct !DILexicalBlock(scope: !6507, file: !451, line: 190, column: 5)
!6507 = distinct !DILexicalBlock(scope: !6508, file: !451, line: 189, column: 5)
!6508 = distinct !DILexicalBlock(scope: !6502, file: !451, line: 188, column: 17)
!6509 = !DILocation(line: 189, column: 5, scope: !6506)
!6510 = !DILocation(line: 192, column: 3, scope: !6508)
!6511 = !DILocation(line: 190, column: 3, scope: !6503)
!6512 = distinct !DISubprogram(name: "callback___1", scope: !451, file: !451, line: 192, type: !436, scopeLine: 194, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !666)
!6513 = !DILocalVariable(name: "buf___3", arg: 1, scope: !6512, file: !451, line: 192, type: !151)
!6514 = !DILocation(line: 0, scope: !6512)
!6515 = !DILocalVariable(name: "priv", arg: 2, scope: !6512, file: !451, line: 193, type: !23)
!6516 = !DILocation(line: 194, column: 9, scope: !6517)
!6517 = distinct !DILexicalBlock(scope: !6518, file: !451, line: 200, column: 3)
!6518 = distinct !DILexicalBlock(scope: !6519, file: !451, line: 199, column: 3)
!6519 = distinct !DILexicalBlock(scope: !6512, file: !451, line: 198, column: 3)
!6520 = !DILocalVariable(name: "tmp", scope: !6512, file: !451, line: 195, type: !15)
!6521 = !DILocation(line: 194, column: 7, scope: !6522)
!6522 = distinct !DILexicalBlock(scope: !6519, file: !451, line: 194, column: 7)
!6523 = !DILocation(line: 194, column: 7, scope: !6519)
!6524 = !DILocation(line: 194, column: 24, scope: !6525)
!6525 = distinct !DILexicalBlock(scope: !6526, file: !451, line: 194, column: 9)
!6526 = distinct !DILexicalBlock(scope: !6522, file: !451, line: 194, column: 12)
!6527 = !DILocation(line: 194, column: 31, scope: !6525)
!6528 = !DILocation(line: 194, column: 9, scope: !6526)
!6529 = !DILocation(line: 196, column: 7, scope: !6530)
!6530 = distinct !DILexicalBlock(scope: !6531, file: !451, line: 196, column: 7)
!6531 = distinct !DILexicalBlock(scope: !6532, file: !451, line: 195, column: 7)
!6532 = distinct !DILexicalBlock(scope: !6525, file: !451, line: 194, column: 38)
!6533 = !DILocation(line: 199, column: 5, scope: !6532)
!6534 = !DILocation(line: 194, column: 7, scope: !6535)
!6535 = distinct !DILexicalBlock(scope: !6525, file: !451, line: 199, column: 12)
!6536 = !DILocation(line: 196, column: 3, scope: !6526)
!6537 = !DILocation(line: 196, column: 10, scope: !6522)
!6538 = !DILocation(line: 194, column: 15, scope: !6539)
!6539 = distinct !DILexicalBlock(scope: !6540, file: !451, line: 199, column: 5)
!6540 = distinct !DILexicalBlock(scope: !6541, file: !451, line: 198, column: 5)
!6541 = distinct !DILexicalBlock(scope: !6522, file: !451, line: 196, column: 10)
!6542 = !DILocalVariable(name: "tmp___0", scope: !6512, file: !451, line: 196, type: !15)
!6543 = !DILocation(line: 194, column: 9, scope: !6544)
!6544 = distinct !DILexicalBlock(scope: !6541, file: !451, line: 194, column: 9)
!6545 = !DILocation(line: 194, column: 9, scope: !6541)
!6546 = !DILocation(line: 194, column: 26, scope: !6547)
!6547 = distinct !DILexicalBlock(scope: !6548, file: !451, line: 194, column: 11)
!6548 = distinct !DILexicalBlock(scope: !6544, file: !451, line: 194, column: 18)
!6549 = !DILocation(line: 194, column: 33, scope: !6547)
!6550 = !DILocation(line: 194, column: 11, scope: !6548)
!6551 = !DILocation(line: 196, column: 9, scope: !6552)
!6552 = distinct !DILexicalBlock(scope: !6553, file: !451, line: 196, column: 9)
!6553 = distinct !DILexicalBlock(scope: !6554, file: !451, line: 195, column: 9)
!6554 = distinct !DILexicalBlock(scope: !6547, file: !451, line: 194, column: 40)
!6555 = !DILocation(line: 199, column: 7, scope: !6554)
!6556 = !DILocation(line: 200, column: 5, scope: !6548)
!6557 = !DILocation(line: 198, column: 5, scope: !6558)
!6558 = distinct !DILexicalBlock(scope: !6559, file: !451, line: 203, column: 3)
!6559 = distinct !DILexicalBlock(scope: !6519, file: !451, line: 202, column: 3)
!6560 = !DILocation(line: 198, column: 43, scope: !6558)
!6561 = !DILocation(line: 198, column: 18, scope: !6558)
!6562 = !DILocation(line: 198, column: 85, scope: !6558)
!6563 = !DILocation(line: 198, column: 89, scope: !6558)
!6564 = !DILocation(line: 198, column: 95, scope: !6558)
!6565 = !DILocation(line: 198, column: 49, scope: !6558)
!6566 = !DILocation(line: 198, column: 3, scope: !6558)
!6567 = !DILocation(line: 199, column: 12, scope: !6559)
!6568 = !DILocation(line: 199, column: 16, scope: !6559)
!6569 = !DILocation(line: 200, column: 3, scope: !6519)
!6570 = distinct !DISubprogram(name: "setup_playmode", scope: !451, file: !451, line: 276, type: !3022, scopeLine: 277, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !666)
!6571 = !DILocalVariable(name: "gbs", arg: 1, scope: !6570, file: !451, line: 276, type: !96)
!6572 = !DILocation(line: 0, scope: !6570)
!6573 = !DILocation(line: 281, column: 7, scope: !6574)
!6574 = distinct !DILexicalBlock(scope: !6575, file: !451, line: 281, column: 7)
!6575 = distinct !DILexicalBlock(scope: !6576, file: !451, line: 281, column: 3)
!6576 = distinct !DILexicalBlock(scope: !6570, file: !451, line: 280, column: 3)
!6577 = !DILocation(line: 281, column: 16, scope: !6574)
!6578 = !DILocation(line: 281, column: 7, scope: !6575)
!6579 = !DILocation(line: 281, column: 5, scope: !6580)
!6580 = distinct !DILexicalBlock(scope: !6574, file: !451, line: 281, column: 23)
!6581 = !DILocation(line: 286, column: 7, scope: !6582)
!6582 = distinct !DILexicalBlock(scope: !6575, file: !451, line: 286, column: 7)
!6583 = !DILocation(line: 286, column: 16, scope: !6582)
!6584 = !DILocation(line: 286, column: 7, scope: !6575)
!6585 = !DILocation(line: 286, column: 5, scope: !6586)
!6586 = distinct !DILexicalBlock(scope: !6582, file: !451, line: 286, column: 23)
!6587 = !DILocation(line: 301, column: 7, scope: !6588)
!6588 = distinct !DILexicalBlock(scope: !6575, file: !451, line: 301, column: 7)
!6589 = !DILocation(line: 301, column: 16, scope: !6588)
!6590 = !DILocation(line: 301, column: 7, scope: !6575)
!6591 = !DILocation(line: 301, column: 5, scope: !6592)
!6592 = distinct !DILexicalBlock(scope: !6588, file: !451, line: 301, column: 23)
!6593 = !DILocation(line: 279, column: 3, scope: !6575)
!6594 = !DILocation(line: 282, column: 12, scope: !6595)
!6595 = distinct !DILexicalBlock(scope: !6575, file: !451, line: 282, column: 7)
!6596 = !DILocation(line: 282, column: 20, scope: !6595)
!6597 = !DILocation(line: 282, column: 7, scope: !6575)
!6598 = !DILocation(line: 283, column: 20, scope: !6599)
!6599 = distinct !DILexicalBlock(scope: !6600, file: !451, line: 284, column: 5)
!6600 = distinct !DILexicalBlock(scope: !6601, file: !451, line: 283, column: 5)
!6601 = distinct !DILexicalBlock(scope: !6595, file: !451, line: 282, column: 28)
!6602 = !DILocation(line: 283, column: 10, scope: !6599)
!6603 = !DILocation(line: 283, column: 18, scope: !6599)
!6604 = !DILocation(line: 286, column: 3, scope: !6601)
!6605 = !DILocation(line: 282, column: 24, scope: !6595)
!6606 = !DILocation(line: 287, column: 42, scope: !6607)
!6607 = distinct !DILexicalBlock(scope: !6608, file: !451, line: 289, column: 3)
!6608 = distinct !DILexicalBlock(scope: !6575, file: !451, line: 288, column: 3)
!6609 = !DILocation(line: 287, column: 22, scope: !6607)
!6610 = !DILocation(line: 287, column: 20, scope: !6607)
!6611 = !DILocation(line: 288, column: 24, scope: !6608)
!6612 = !DILocation(line: 289, column: 12, scope: !6613)
!6613 = distinct !DILexicalBlock(scope: !6575, file: !451, line: 289, column: 7)
!6614 = !DILocation(line: 289, column: 20, scope: !6613)
!6615 = !DILocation(line: 289, column: 7, scope: !6575)
!6616 = !DILocation(line: 290, column: 22, scope: !6617)
!6617 = distinct !DILexicalBlock(scope: !6613, file: !451, line: 289, column: 28)
!6618 = !DILocation(line: 290, column: 39, scope: !6617)
!6619 = !DILocation(line: 290, column: 20, scope: !6617)
!6620 = !DILocation(line: 290, column: 10, scope: !6617)
!6621 = !DILocation(line: 290, column: 18, scope: !6617)
!6622 = !DILocation(line: 291, column: 3, scope: !6617)
!6623 = !DILocation(line: 295, column: 5, scope: !6624)
!6624 = distinct !DILexicalBlock(scope: !6625, file: !451, line: 293, column: 5)
!6625 = distinct !DILexicalBlock(scope: !6626, file: !451, line: 292, column: 5)
!6626 = distinct !DILexicalBlock(scope: !6613, file: !451, line: 291, column: 10)
!6627 = !DILocation(line: 295, column: 15, scope: !6624)
!6628 = !DILocation(line: 295, column: 16, scope: !6629)
!6629 = distinct !DILexicalBlock(scope: !6630, file: !451, line: 295, column: 11)
!6630 = distinct !DILexicalBlock(scope: !6624, file: !451, line: 295, column: 15)
!6631 = !DILocation(line: 295, column: 33, scope: !6629)
!6632 = !DILocation(line: 295, column: 14, scope: !6629)
!6633 = !DILocation(line: 295, column: 46, scope: !6629)
!6634 = !DILocation(line: 295, column: 38, scope: !6629)
!6635 = !DILocation(line: 295, column: 11, scope: !6630)
!6636 = !DILocation(line: 295, column: 9, scope: !6637)
!6637 = distinct !DILexicalBlock(scope: !6629, file: !451, line: 295, column: 56)
!6638 = !DILocation(line: 296, column: 19, scope: !6639)
!6639 = distinct !DILexicalBlock(scope: !6630, file: !451, line: 297, column: 7)
!6640 = !DILocation(line: 297, column: 46, scope: !6641)
!6641 = distinct !DILexicalBlock(scope: !6639, file: !451, line: 297, column: 7)
!6642 = !DILocation(line: 297, column: 26, scope: !6641)
!6643 = !DILocation(line: 297, column: 24, scope: !6641)
!6644 = distinct !{!6644, !6623, !6645}
!6645 = !DILocation(line: 300, column: 5, scope: !6624)
!6646 = !DILocation(line: 302, column: 5, scope: !6624)
!6647 = !DILocation(line: 289, column: 24, scope: !6613)
!6648 = !DILocation(line: 302, column: 12, scope: !6649)
!6649 = distinct !DILexicalBlock(scope: !6575, file: !451, line: 302, column: 7)
!6650 = !DILocation(line: 302, column: 20, scope: !6649)
!6651 = !DILocation(line: 302, column: 7, scope: !6575)
!6652 = !DILocation(line: 303, column: 25, scope: !6653)
!6653 = distinct !DILexicalBlock(scope: !6649, file: !451, line: 302, column: 28)
!6654 = !DILocation(line: 303, column: 37, scope: !6653)
!6655 = !DILocation(line: 303, column: 10, scope: !6653)
!6656 = !DILocation(line: 303, column: 18, scope: !6653)
!6657 = !DILocation(line: 304, column: 3, scope: !6653)
!6658 = !DILocation(line: 305, column: 3, scope: !6575)
!6659 = !DILocation(line: 307, column: 3, scope: !6576)
!6660 = distinct !DISubprogram(name: "nextsubsong_cb", scope: !451, file: !451, line: 309, type: !148, scopeLine: 310, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !666)
!6661 = !DILocalVariable(name: "gbs", arg: 1, scope: !6660, file: !451, line: 309, type: !96)
!6662 = !DILocation(line: 0, scope: !6660)
!6663 = !DILocalVariable(name: "priv", arg: 2, scope: !6660, file: !451, line: 309, type: !23)
!6664 = !DILocation(line: 311, column: 9, scope: !6665)
!6665 = distinct !DILexicalBlock(scope: !6666, file: !451, line: 316, column: 3)
!6666 = distinct !DILexicalBlock(scope: !6667, file: !451, line: 315, column: 3)
!6667 = distinct !DILexicalBlock(scope: !6660, file: !451, line: 314, column: 3)
!6668 = !DILocalVariable(name: "tmp", scope: !6660, file: !451, line: 312, type: !15)
!6669 = !DILocalVariable(name: "subsong", scope: !6660, file: !451, line: 311, type: !15)
!6670 = !DILocation(line: 313, column: 12, scope: !6671)
!6671 = distinct !DILexicalBlock(scope: !6667, file: !451, line: 313, column: 7)
!6672 = !DILocation(line: 313, column: 23, scope: !6671)
!6673 = !DILocation(line: 313, column: 20, scope: !6671)
!6674 = !DILocation(line: 313, column: 7, scope: !6667)
!6675 = !DILocation(line: 313, column: 5, scope: !6676)
!6676 = distinct !DILexicalBlock(scope: !6671, file: !451, line: 313, column: 37)
!6677 = !DILocation(line: 313, column: 23, scope: !6678)
!6678 = distinct !DILexicalBlock(scope: !6671, file: !451, line: 313, column: 7)
!6679 = !DILocation(line: 313, column: 15, scope: !6678)
!6680 = !DILocation(line: 313, column: 7, scope: !6671)
!6681 = !DILocation(line: 313, column: 30, scope: !6678)
!6682 = !DILocation(line: 315, column: 9, scope: !6683)
!6683 = distinct !DILexicalBlock(scope: !6684, file: !451, line: 315, column: 9)
!6684 = distinct !DILexicalBlock(scope: !6678, file: !451, line: 313, column: 30)
!6685 = !DILocation(line: 315, column: 9, scope: !6684)
!6686 = !DILocation(line: 316, column: 17, scope: !6687)
!6687 = distinct !DILexicalBlock(scope: !6688, file: !451, line: 316, column: 7)
!6688 = distinct !DILexicalBlock(scope: !6683, file: !451, line: 315, column: 19)
!6689 = !DILocation(line: 317, column: 7, scope: !6690)
!6690 = distinct !DILexicalBlock(scope: !6687, file: !451, line: 317, column: 7)
!6691 = !DILocation(line: 320, column: 5, scope: !6688)
!6692 = !DILocation(line: 319, column: 7, scope: !6693)
!6693 = distinct !DILexicalBlock(scope: !6683, file: !451, line: 320, column: 12)
!6694 = !DILocation(line: 321, column: 3, scope: !6684)
!6695 = !DILocation(line: 0, scope: !6667)
!6696 = !DILocation(line: 323, column: 3, scope: !6697)
!6697 = distinct !DILexicalBlock(scope: !6698, file: !451, line: 323, column: 3)
!6698 = distinct !DILexicalBlock(scope: !6667, file: !451, line: 322, column: 3)
!6699 = !DILocation(line: 324, column: 7, scope: !6700)
!6700 = distinct !DILexicalBlock(scope: !6667, file: !451, line: 324, column: 7)
!6701 = !DILocation(line: 324, column: 7, scope: !6667)
!6702 = !DILocation(line: 325, column: 7, scope: !6703)
!6703 = distinct !DILexicalBlock(scope: !6704, file: !451, line: 326, column: 5)
!6704 = distinct !DILexicalBlock(scope: !6705, file: !451, line: 325, column: 5)
!6705 = distinct !DILexicalBlock(scope: !6700, file: !451, line: 324, column: 19)
!6706 = !DILocation(line: 325, column: 19, scope: !6703)
!6707 = !DILocation(line: 325, column: 5, scope: !6703)
!6708 = !DILocation(line: 328, column: 3, scope: !6705)
!6709 = !DILocation(line: 326, column: 3, scope: !6667)
!6710 = !DILocation(line: 328, column: 1, scope: !6660)
!6711 = distinct !DISubprogram(name: "printinfo", scope: !451, file: !451, line: 599, type: !3022, scopeLine: 600, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !666)
!6712 = !DILocalVariable(name: "gbs", arg: 1, scope: !6711, file: !451, line: 599, type: !96)
!6713 = !DILocation(line: 0, scope: !6711)
!6714 = !DILocalVariable(name: "__cil_tmp3", scope: !6711, file: !451, line: 602, type: !16)
!6715 = !DILocation(line: 602, column: 9, scope: !6711)
!6716 = !DILocalVariable(name: "__cil_tmp4", scope: !6711, file: !451, line: 603, type: !16)
!6717 = !DILocation(line: 603, column: 9, scope: !6711)
!6718 = !DILocation(line: 601, column: 7, scope: !6719)
!6719 = distinct !DILexicalBlock(scope: !6720, file: !451, line: 601, column: 7)
!6720 = distinct !DILexicalBlock(scope: !6711, file: !451, line: 605, column: 3)
!6721 = !DILocation(line: 601, column: 17, scope: !6719)
!6722 = !DILocation(line: 601, column: 7, scope: !6720)
!6723 = !DILocation(line: 602, column: 5, scope: !6724)
!6724 = distinct !DILexicalBlock(scope: !6725, file: !451, line: 603, column: 5)
!6725 = distinct !DILexicalBlock(scope: !6726, file: !451, line: 602, column: 5)
!6726 = distinct !DILexicalBlock(scope: !6719, file: !451, line: 601, column: 23)
!6727 = !DILocation(line: 603, column: 11, scope: !6728)
!6728 = distinct !DILexicalBlock(scope: !6725, file: !451, line: 604, column: 5)
!6729 = !DILocalVariable(name: "tmp", scope: !6711, file: !451, line: 601, type: !16)
!6730 = !DILocation(line: 603, column: 5, scope: !6731)
!6731 = distinct !DILexicalBlock(scope: !6725, file: !451, line: 605, column: 5)
!6732 = !DILocation(line: 606, column: 3, scope: !6726)
!6733 = !DILocation(line: 606, column: 7, scope: !6734)
!6734 = distinct !DILexicalBlock(scope: !6720, file: !451, line: 606, column: 7)
!6735 = !DILocation(line: 606, column: 17, scope: !6734)
!6736 = !DILocation(line: 606, column: 7, scope: !6720)
!6737 = !DILocation(line: 607, column: 5, scope: !6738)
!6738 = distinct !DILexicalBlock(scope: !6739, file: !451, line: 608, column: 5)
!6739 = distinct !DILexicalBlock(scope: !6740, file: !451, line: 607, column: 5)
!6740 = distinct !DILexicalBlock(scope: !6734, file: !451, line: 606, column: 23)
!6741 = !DILocation(line: 610, column: 3, scope: !6740)
!6742 = !DILocation(line: 609, column: 10, scope: !6720)
!6743 = !DILocation(line: 610, column: 3, scope: !6720)
!6744 = distinct !DISubprogram(name: "printstatus", scope: !451, file: !451, line: 532, type: !3022, scopeLine: 533, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !666)
!6745 = !DILocalVariable(name: "gbs", arg: 1, scope: !6744, file: !451, line: 532, type: !96)
!6746 = !DILocation(line: 0, scope: !6744)
!6747 = !DILocalVariable(name: "__cil_tmp24", scope: !6744, file: !451, line: 556, type: !16)
!6748 = !DILocation(line: 556, column: 9, scope: !6744)
!6749 = !DILocalVariable(name: "__cil_tmp25", scope: !6744, file: !451, line: 557, type: !16)
!6750 = !DILocation(line: 557, column: 9, scope: !6744)
!6751 = !DILocalVariable(name: "__cil_tmp26", scope: !6744, file: !451, line: 558, type: !16)
!6752 = !DILocation(line: 558, column: 9, scope: !6744)
!6753 = !DILocalVariable(name: "__cil_tmp27", scope: !6744, file: !451, line: 559, type: !16)
!6754 = !DILocation(line: 559, column: 9, scope: !6744)
!6755 = !DILocation(line: 534, column: 27, scope: !6756)
!6756 = distinct !DILexicalBlock(scope: !6744, file: !451, line: 561, column: 3)
!6757 = !DILocation(line: 534, column: 33, scope: !6756)
!6758 = !DILocalVariable(name: "time___0", scope: !6744, file: !451, line: 534, type: !15)
!6759 = !DILocation(line: 535, column: 20, scope: !6756)
!6760 = !DILocalVariable(name: "timem", scope: !6744, file: !451, line: 535, type: !15)
!6761 = !DILocation(line: 536, column: 20, scope: !6756)
!6762 = !DILocalVariable(name: "times", scope: !6744, file: !451, line: 536, type: !15)
!6763 = !DILocation(line: 538, column: 23, scope: !6756)
!6764 = !DILocation(line: 538, column: 43, scope: !6756)
!6765 = !DILocation(line: 538, column: 36, scope: !6756)
!6766 = !DILocation(line: 538, column: 53, scope: !6756)
!6767 = !DILocation(line: 538, column: 57, scope: !6756)
!6768 = !DILocation(line: 538, column: 9, scope: !6756)
!6769 = !DILocalVariable(name: "len", scope: !6744, file: !451, line: 538, type: !15)
!6770 = !DILocation(line: 541, column: 11, scope: !6771)
!6771 = distinct !DILexicalBlock(scope: !6756, file: !451, line: 541, column: 7)
!6772 = !DILocation(line: 541, column: 7, scope: !6756)
!6773 = !DILocation(line: 542, column: 11, scope: !6774)
!6774 = distinct !DILexicalBlock(scope: !6771, file: !451, line: 541, column: 18)
!6775 = !DILocation(line: 543, column: 3, scope: !6774)
!6776 = !DILocation(line: 0, scope: !6756)
!6777 = !DILocation(line: 544, column: 14, scope: !6756)
!6778 = !DILocalVariable(name: "lenm", scope: !6744, file: !451, line: 539, type: !15)
!6779 = !DILocation(line: 545, column: 14, scope: !6756)
!6780 = !DILocalVariable(name: "lens", scope: !6744, file: !451, line: 540, type: !15)
!6781 = !DILocation(line: 547, column: 21, scope: !6756)
!6782 = !DILocation(line: 547, column: 41, scope: !6756)
!6783 = !DILocation(line: 547, column: 34, scope: !6756)
!6784 = !DILocation(line: 547, column: 51, scope: !6756)
!6785 = !DILocalVariable(name: "songtitle", scope: !6744, file: !451, line: 537, type: !16)
!6786 = !DILocation(line: 548, column: 9, scope: !6787)
!6787 = distinct !DILexicalBlock(scope: !6756, file: !451, line: 548, column: 7)
!6788 = !DILocation(line: 548, column: 7, scope: !6756)
!6789 = !DILocation(line: 549, column: 17, scope: !6790)
!6790 = distinct !DILexicalBlock(scope: !6791, file: !451, line: 550, column: 5)
!6791 = distinct !DILexicalBlock(scope: !6792, file: !451, line: 549, column: 5)
!6792 = distinct !DILexicalBlock(scope: !6787, file: !451, line: 548, column: 20)
!6793 = !DILocation(line: 552, column: 3, scope: !6792)
!6794 = !DILocation(line: 552, column: 15, scope: !6795)
!6795 = distinct !DILexicalBlock(scope: !6796, file: !451, line: 554, column: 3)
!6796 = distinct !DILexicalBlock(scope: !6756, file: !451, line: 553, column: 3)
!6797 = !DILocation(line: 552, column: 23, scope: !6795)
!6798 = !DILocation(line: 552, column: 34, scope: !6795)
!6799 = !DILocation(line: 551, column: 3, scope: !6795)
!6800 = !DILocation(line: 556, column: 7, scope: !6801)
!6801 = distinct !DILexicalBlock(scope: !6756, file: !451, line: 556, column: 7)
!6802 = !DILocation(line: 556, column: 17, scope: !6801)
!6803 = !DILocation(line: 556, column: 7, scope: !6756)
!6804 = !DILocation(line: 557, column: 40, scope: !6805)
!6805 = distinct !DILexicalBlock(scope: !6806, file: !451, line: 558, column: 5)
!6806 = distinct !DILexicalBlock(scope: !6807, file: !451, line: 557, column: 5)
!6807 = distinct !DILexicalBlock(scope: !6801, file: !451, line: 556, column: 23)
!6808 = !DILocation(line: 557, column: 29, scope: !6805)
!6809 = !DILocation(line: 557, column: 45, scope: !6805)
!6810 = !DILocation(line: 557, column: 21, scope: !6805)
!6811 = !DILocation(line: 557, column: 11, scope: !6805)
!6812 = !DILocalVariable(name: "tmp", scope: !6744, file: !451, line: 541, type: !16)
!6813 = !DILocation(line: 557, column: 44, scope: !6814)
!6814 = distinct !DILexicalBlock(scope: !6806, file: !451, line: 559, column: 5)
!6815 = !DILocation(line: 557, column: 33, scope: !6814)
!6816 = !DILocation(line: 557, column: 49, scope: !6814)
!6817 = !DILocation(line: 557, column: 25, scope: !6814)
!6818 = !DILocation(line: 557, column: 15, scope: !6814)
!6819 = !DILocalVariable(name: "tmp___0", scope: !6744, file: !451, line: 542, type: !16)
!6820 = !DILocation(line: 557, column: 15, scope: !6821)
!6821 = distinct !DILexicalBlock(scope: !6806, file: !451, line: 559, column: 5)
!6822 = !DILocalVariable(name: "tmp___1", scope: !6744, file: !451, line: 543, type: !16)
!6823 = !DILocation(line: 557, column: 15, scope: !6824)
!6824 = distinct !DILexicalBlock(scope: !6806, file: !451, line: 559, column: 5)
!6825 = !DILocalVariable(name: "tmp___2", scope: !6744, file: !451, line: 544, type: !15)
!6826 = !DILocation(line: 557, column: 15, scope: !6827)
!6827 = distinct !DILexicalBlock(scope: !6806, file: !451, line: 559, column: 5)
!6828 = !DILocalVariable(name: "tmp___3", scope: !6744, file: !451, line: 545, type: !16)
!6829 = !DILocation(line: 557, column: 15, scope: !6830)
!6830 = distinct !DILexicalBlock(scope: !6806, file: !451, line: 559, column: 5)
!6831 = !DILocalVariable(name: "tmp___4", scope: !6744, file: !451, line: 546, type: !16)
!6832 = !DILocation(line: 557, column: 15, scope: !6833)
!6833 = distinct !DILexicalBlock(scope: !6806, file: !451, line: 559, column: 5)
!6834 = !DILocalVariable(name: "tmp___5", scope: !6744, file: !451, line: 547, type: !15)
!6835 = !DILocation(line: 557, column: 15, scope: !6836)
!6836 = distinct !DILexicalBlock(scope: !6806, file: !451, line: 559, column: 5)
!6837 = !DILocalVariable(name: "tmp___6", scope: !6744, file: !451, line: 548, type: !16)
!6838 = !DILocation(line: 557, column: 15, scope: !6839)
!6839 = distinct !DILexicalBlock(scope: !6806, file: !451, line: 559, column: 5)
!6840 = !DILocalVariable(name: "tmp___7", scope: !6744, file: !451, line: 549, type: !16)
!6841 = !DILocation(line: 557, column: 15, scope: !6842)
!6842 = distinct !DILexicalBlock(scope: !6806, file: !451, line: 559, column: 5)
!6843 = !DILocalVariable(name: "tmp___8", scope: !6744, file: !451, line: 550, type: !15)
!6844 = !DILocation(line: 557, column: 15, scope: !6845)
!6845 = distinct !DILexicalBlock(scope: !6806, file: !451, line: 559, column: 5)
!6846 = !DILocalVariable(name: "tmp___9", scope: !6744, file: !451, line: 551, type: !16)
!6847 = !DILocation(line: 557, column: 16, scope: !6848)
!6848 = distinct !DILexicalBlock(scope: !6806, file: !451, line: 559, column: 5)
!6849 = !DILocalVariable(name: "tmp___10", scope: !6744, file: !451, line: 552, type: !16)
!6850 = !DILocation(line: 557, column: 16, scope: !6851)
!6851 = distinct !DILexicalBlock(scope: !6806, file: !451, line: 559, column: 5)
!6852 = !DILocalVariable(name: "tmp___11", scope: !6744, file: !451, line: 553, type: !15)
!6853 = !DILocation(line: 557, column: 16, scope: !6854)
!6854 = distinct !DILexicalBlock(scope: !6806, file: !451, line: 559, column: 5)
!6855 = !DILocalVariable(name: "tmp___12", scope: !6744, file: !451, line: 554, type: !16)
!6856 = !DILocation(line: 557, column: 16, scope: !6857)
!6857 = distinct !DILexicalBlock(scope: !6806, file: !451, line: 559, column: 5)
!6858 = !DILocalVariable(name: "tmp___13", scope: !6744, file: !451, line: 555, type: !16)
!6859 = !DILocation(line: 557, column: 5, scope: !6860)
!6860 = distinct !DILexicalBlock(scope: !6806, file: !451, line: 559, column: 5)
!6861 = !DILocation(line: 562, column: 3, scope: !6807)
!6862 = !DILocation(line: 565, column: 5, scope: !6863)
!6863 = distinct !DILexicalBlock(scope: !6864, file: !451, line: 564, column: 5)
!6864 = distinct !DILexicalBlock(scope: !6865, file: !451, line: 563, column: 5)
!6865 = distinct !DILexicalBlock(scope: !6801, file: !451, line: 562, column: 10)
!6866 = !DILocation(line: 567, column: 10, scope: !6867)
!6867 = distinct !DILexicalBlock(scope: !6868, file: !451, line: 570, column: 3)
!6868 = distinct !DILexicalBlock(scope: !6756, file: !451, line: 569, column: 3)
!6869 = !DILocation(line: 567, column: 3, scope: !6867)
!6870 = !DILocation(line: 568, column: 3, scope: !6756)
!6871 = distinct !DISubprogram(name: "handleuserinput", scope: !451, file: !451, line: 456, type: !3022, scopeLine: 457, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !666)
!6872 = !DILocalVariable(name: "gbs", arg: 1, scope: !6871, file: !451, line: 456, type: !96)
!6873 = !DILocation(line: 0, scope: !6871)
!6874 = !DILocalVariable(name: "c___3", scope: !6871, file: !451, line: 458, type: !17)
!6875 = !DILocation(line: 458, column: 8, scope: !6871)
!6876 = !DILocation(line: 460, column: 13, scope: !6877)
!6877 = distinct !DILexicalBlock(scope: !6878, file: !451, line: 464, column: 3)
!6878 = distinct !DILexicalBlock(scope: !6879, file: !451, line: 463, column: 3)
!6879 = distinct !DILexicalBlock(scope: !6871, file: !451, line: 462, column: 3)
!6880 = !DILocalVariable(name: "tmp___0", scope: !6871, file: !451, line: 460, type: !279)
!6881 = !DILocation(line: 460, column: 15, scope: !6882)
!6882 = distinct !DILexicalBlock(scope: !6879, file: !451, line: 460, column: 7)
!6883 = !DILocation(line: 460, column: 7, scope: !6879)
!6884 = !DILocation(line: 462, column: 15, scope: !6885)
!6885 = distinct !DILexicalBlock(scope: !6886, file: !451, line: 462, column: 9)
!6886 = distinct !DILexicalBlock(scope: !6887, file: !451, line: 461, column: 5)
!6887 = distinct !DILexicalBlock(scope: !6882, file: !451, line: 460, column: 22)
!6888 = !DILocation(line: 462, column: 9, scope: !6885)
!6889 = !DILocation(line: 462, column: 21, scope: !6885)
!6890 = !DILocation(line: 462, column: 9, scope: !6886)
!6891 = !DILocation(line: 462, column: 7, scope: !6892)
!6892 = distinct !DILexicalBlock(scope: !6885, file: !451, line: 462, column: 29)
!6893 = !DILocation(line: 471, column: 15, scope: !6894)
!6894 = distinct !DILexicalBlock(scope: !6886, file: !451, line: 471, column: 9)
!6895 = !DILocation(line: 471, column: 9, scope: !6894)
!6896 = !DILocation(line: 471, column: 21, scope: !6894)
!6897 = !DILocation(line: 471, column: 9, scope: !6886)
!6898 = !DILocation(line: 471, column: 7, scope: !6899)
!6899 = distinct !DILexicalBlock(scope: !6894, file: !451, line: 471, column: 29)
!6900 = !DILocation(line: 479, column: 15, scope: !6901)
!6901 = distinct !DILexicalBlock(scope: !6886, file: !451, line: 479, column: 9)
!6902 = !DILocation(line: 479, column: 9, scope: !6901)
!6903 = !DILocation(line: 479, column: 21, scope: !6901)
!6904 = !DILocation(line: 479, column: 9, scope: !6886)
!6905 = !DILocation(line: 479, column: 7, scope: !6906)
!6906 = distinct !DILexicalBlock(scope: !6901, file: !451, line: 479, column: 28)
!6907 = !DILocation(line: 479, column: 15, scope: !6908)
!6908 = distinct !DILexicalBlock(scope: !6886, file: !451, line: 479, column: 9)
!6909 = !DILocation(line: 479, column: 9, scope: !6908)
!6910 = !DILocation(line: 479, column: 21, scope: !6908)
!6911 = !DILocation(line: 479, column: 7, scope: !6912)
!6912 = distinct !DILexicalBlock(scope: !6908, file: !451, line: 479, column: 29)
!6913 = !DILocation(line: 482, column: 15, scope: !6914)
!6914 = distinct !DILexicalBlock(scope: !6886, file: !451, line: 482, column: 9)
!6915 = !DILocation(line: 482, column: 9, scope: !6914)
!6916 = !DILocation(line: 482, column: 21, scope: !6914)
!6917 = !DILocation(line: 482, column: 9, scope: !6886)
!6918 = !DILocation(line: 482, column: 7, scope: !6919)
!6919 = distinct !DILexicalBlock(scope: !6914, file: !451, line: 482, column: 28)
!6920 = !DILocation(line: 489, column: 15, scope: !6921)
!6921 = distinct !DILexicalBlock(scope: !6886, file: !451, line: 489, column: 9)
!6922 = !DILocation(line: 489, column: 9, scope: !6921)
!6923 = !DILocation(line: 489, column: 21, scope: !6921)
!6924 = !DILocation(line: 489, column: 9, scope: !6886)
!6925 = !DILocation(line: 489, column: 7, scope: !6926)
!6926 = distinct !DILexicalBlock(scope: !6921, file: !451, line: 489, column: 28)
!6927 = !DILocation(line: 489, column: 15, scope: !6928)
!6928 = distinct !DILexicalBlock(scope: !6886, file: !451, line: 489, column: 9)
!6929 = !DILocation(line: 489, column: 9, scope: !6928)
!6930 = !DILocation(line: 489, column: 21, scope: !6928)
!6931 = !DILocation(line: 489, column: 7, scope: !6932)
!6932 = distinct !DILexicalBlock(scope: !6928, file: !451, line: 489, column: 28)
!6933 = !DILocation(line: 489, column: 15, scope: !6934)
!6934 = distinct !DILexicalBlock(scope: !6886, file: !451, line: 489, column: 9)
!6935 = !DILocation(line: 489, column: 9, scope: !6934)
!6936 = !DILocation(line: 489, column: 21, scope: !6934)
!6937 = !DILocation(line: 489, column: 7, scope: !6938)
!6938 = distinct !DILexicalBlock(scope: !6934, file: !451, line: 489, column: 28)
!6939 = !DILocation(line: 489, column: 15, scope: !6940)
!6940 = distinct !DILexicalBlock(scope: !6886, file: !451, line: 489, column: 9)
!6941 = !DILocation(line: 489, column: 9, scope: !6940)
!6942 = !DILocation(line: 489, column: 21, scope: !6940)
!6943 = !DILocation(line: 489, column: 7, scope: !6944)
!6944 = distinct !DILexicalBlock(scope: !6940, file: !451, line: 489, column: 28)
!6945 = !DILocation(line: 461, column: 5, scope: !6886)
!6946 = !DILocation(line: 463, column: 11, scope: !6947)
!6947 = distinct !DILexicalBlock(scope: !6948, file: !451, line: 464, column: 5)
!6948 = distinct !DILexicalBlock(scope: !6886, file: !451, line: 463, column: 5)
!6949 = !DILocalVariable(name: "tmp", scope: !6871, file: !451, line: 459, type: !14)
!6950 = !DILocation(line: 463, column: 20, scope: !6948)
!6951 = !DILocation(line: 463, column: 10, scope: !6948)
!6952 = !DILocation(line: 463, column: 18, scope: !6948)
!6953 = !DILocation(line: 464, column: 5, scope: !6954)
!6954 = distinct !DILexicalBlock(scope: !6955, file: !451, line: 466, column: 5)
!6955 = distinct !DILexicalBlock(scope: !6886, file: !451, line: 465, column: 5)
!6956 = !DILocation(line: 464, column: 15, scope: !6954)
!6957 = !DILocation(line: 464, column: 19, scope: !6958)
!6958 = distinct !DILexicalBlock(scope: !6959, file: !451, line: 464, column: 11)
!6959 = distinct !DILexicalBlock(scope: !6954, file: !451, line: 464, column: 15)
!6960 = !DILocation(line: 464, column: 27, scope: !6958)
!6961 = !DILocation(line: 464, column: 11, scope: !6959)
!6962 = !DILocation(line: 464, column: 9, scope: !6963)
!6963 = distinct !DILexicalBlock(scope: !6958, file: !451, line: 464, column: 34)
!6964 = !DILocation(line: 465, column: 28, scope: !6959)
!6965 = !DILocation(line: 465, column: 12, scope: !6959)
!6966 = !DILocation(line: 465, column: 20, scope: !6959)
!6967 = distinct !{!6967, !6953, !6968}
!6968 = !DILocation(line: 466, column: 5, scope: !6954)
!6969 = !DILocation(line: 468, column: 5, scope: !6954)
!6970 = !DILocation(line: 467, column: 24, scope: !6971)
!6971 = distinct !DILexicalBlock(scope: !6972, file: !451, line: 472, column: 5)
!6972 = distinct !DILexicalBlock(scope: !6886, file: !451, line: 471, column: 5)
!6973 = !DILocation(line: 467, column: 5, scope: !6971)
!6974 = !DILocation(line: 468, column: 9, scope: !6975)
!6975 = distinct !DILexicalBlock(scope: !6886, file: !451, line: 468, column: 9)
!6976 = !DILocation(line: 468, column: 9, scope: !6886)
!6977 = !DILocation(line: 469, column: 9, scope: !6978)
!6978 = distinct !DILexicalBlock(scope: !6979, file: !451, line: 470, column: 7)
!6979 = distinct !DILexicalBlock(scope: !6980, file: !451, line: 469, column: 7)
!6980 = distinct !DILexicalBlock(scope: !6975, file: !451, line: 468, column: 21)
!6981 = !DILocation(line: 469, column: 32, scope: !6978)
!6982 = !DILocation(line: 469, column: 21, scope: !6978)
!6983 = !DILocation(line: 469, column: 7, scope: !6978)
!6984 = !DILocation(line: 472, column: 5, scope: !6980)
!6985 = !DILocation(line: 470, column: 5, scope: !6886)
!6986 = !DILocation(line: 472, column: 20, scope: !6987)
!6987 = distinct !DILexicalBlock(scope: !6988, file: !451, line: 473, column: 5)
!6988 = distinct !DILexicalBlock(scope: !6886, file: !451, line: 472, column: 5)
!6989 = !DILocation(line: 472, column: 10, scope: !6987)
!6990 = !DILocation(line: 472, column: 18, scope: !6987)
!6991 = !DILocation(line: 473, column: 26, scope: !6988)
!6992 = !DILocation(line: 473, column: 10, scope: !6988)
!6993 = !DILocation(line: 473, column: 18, scope: !6988)
!6994 = !DILocation(line: 474, column: 24, scope: !6995)
!6995 = distinct !DILexicalBlock(scope: !6988, file: !451, line: 474, column: 5)
!6996 = !DILocation(line: 474, column: 5, scope: !6995)
!6997 = !DILocation(line: 475, column: 9, scope: !6998)
!6998 = distinct !DILexicalBlock(scope: !6886, file: !451, line: 475, column: 9)
!6999 = !DILocation(line: 475, column: 9, scope: !6886)
!7000 = !DILocation(line: 476, column: 9, scope: !7001)
!7001 = distinct !DILexicalBlock(scope: !7002, file: !451, line: 477, column: 7)
!7002 = distinct !DILexicalBlock(scope: !7003, file: !451, line: 476, column: 7)
!7003 = distinct !DILexicalBlock(scope: !6998, file: !451, line: 475, column: 21)
!7004 = !DILocation(line: 476, column: 32, scope: !7001)
!7005 = !DILocation(line: 476, column: 21, scope: !7001)
!7006 = !DILocation(line: 476, column: 7, scope: !7001)
!7007 = !DILocation(line: 479, column: 5, scope: !7003)
!7008 = !DILocation(line: 477, column: 5, scope: !6886)
!7009 = !DILocation(line: 480, column: 10, scope: !6886)
!7010 = !DILocation(line: 481, column: 5, scope: !6886)
!7011 = !DILocation(line: 483, column: 28, scope: !7012)
!7012 = distinct !DILexicalBlock(scope: !6886, file: !451, line: 483, column: 5)
!7013 = !DILocation(line: 483, column: 26, scope: !7012)
!7014 = !DILocation(line: 483, column: 18, scope: !7012)
!7015 = !DILocation(line: 483, column: 16, scope: !7012)
!7016 = !DILocation(line: 484, column: 16, scope: !7017)
!7017 = distinct !DILexicalBlock(scope: !7012, file: !451, line: 484, column: 5)
!7018 = !DILocation(line: 484, column: 5, scope: !7017)
!7019 = !DILocation(line: 485, column: 5, scope: !6886)
!7020 = !DILocation(line: 490, column: 19, scope: !6886)
!7021 = !DILocation(line: 490, column: 13, scope: !6886)
!7022 = !DILocation(line: 490, column: 25, scope: !6886)
!7023 = !DILocation(line: 490, column: 5, scope: !6886)
!7024 = !DILocation(line: 490, column: 31, scope: !6886)
!7025 = !DILocation(line: 490, column: 36, scope: !6886)
!7026 = !DILocation(line: 491, column: 5, scope: !6886)
!7027 = !DILocation(line: 494, column: 3, scope: !6887)
!7028 = !DILocation(line: 494, column: 3, scope: !6879)
!7029 = distinct !DISubprogram(name: "plugout_list_plugins", scope: !655, file: !655, line: 54, type: !272, scopeLine: 55, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !666)
!7030 = !DILocalVariable(name: "__cil_tmp4", scope: !7029, file: !655, line: 59, type: !16)
!7031 = !DILocation(line: 59, column: 9, scope: !7029)
!7032 = !DILocalVariable(name: "__cil_tmp5", scope: !7029, file: !655, line: 60, type: !16)
!7033 = !DILocation(line: 60, column: 9, scope: !7029)
!7034 = !DILocalVariable(name: "__cil_tmp6", scope: !7029, file: !655, line: 61, type: !16)
!7035 = !DILocation(line: 61, column: 9, scope: !7029)
!7036 = !DILocalVariable(name: "__cil_tmp7", scope: !7029, file: !655, line: 62, type: !16)
!7037 = !DILocation(line: 62, column: 9, scope: !7029)
!7038 = !DILocation(line: 58, column: 9, scope: !7039)
!7039 = distinct !DILexicalBlock(scope: !7040, file: !655, line: 66, column: 3)
!7040 = distinct !DILexicalBlock(scope: !7041, file: !655, line: 65, column: 3)
!7041 = distinct !DILexicalBlock(scope: !7029, file: !655, line: 64, column: 3)
!7042 = !DILocalVariable(name: "tmp", scope: !7029, file: !655, line: 57, type: !16)
!7043 = !DILocation(line: 0, scope: !7029)
!7044 = !DILocation(line: 58, column: 3, scope: !7045)
!7045 = distinct !DILexicalBlock(scope: !7040, file: !655, line: 60, column: 3)
!7046 = !DILocation(line: 60, column: 23, scope: !7047)
!7047 = distinct !DILexicalBlock(scope: !7041, file: !655, line: 60, column: 7)
!7048 = !DILocation(line: 60, column: 7, scope: !7047)
!7049 = !DILocation(line: 60, column: 35, scope: !7047)
!7050 = !DILocation(line: 60, column: 7, scope: !7041)
!7051 = !DILocation(line: 61, column: 15, scope: !7052)
!7052 = distinct !DILexicalBlock(scope: !7053, file: !655, line: 62, column: 5)
!7053 = distinct !DILexicalBlock(scope: !7054, file: !655, line: 61, column: 5)
!7054 = distinct !DILexicalBlock(scope: !7047, file: !655, line: 60, column: 67)
!7055 = !DILocalVariable(name: "tmp___0", scope: !7029, file: !655, line: 58, type: !16)
!7056 = !DILocation(line: 61, column: 5, scope: !7057)
!7057 = distinct !DILexicalBlock(scope: !7053, file: !655, line: 63, column: 5)
!7058 = !DILocation(line: 62, column: 5, scope: !7054)
!7059 = !DILocalVariable(name: "idx", scope: !7029, file: !655, line: 56, type: !15)
!7060 = !DILocation(line: 65, column: 3, scope: !7061)
!7061 = distinct !DILexicalBlock(scope: !7062, file: !655, line: 67, column: 3)
!7062 = distinct !DILexicalBlock(scope: !7041, file: !655, line: 66, column: 3)
!7063 = !DILocation(line: 0, scope: !7041)
!7064 = !DILocation(line: 65, column: 13, scope: !7061)
!7065 = !DILocation(line: 65, column: 28, scope: !7066)
!7066 = distinct !DILexicalBlock(scope: !7067, file: !655, line: 65, column: 9)
!7067 = distinct !DILexicalBlock(scope: !7061, file: !655, line: 65, column: 13)
!7068 = !DILocation(line: 65, column: 12, scope: !7066)
!7069 = !DILocation(line: 65, column: 42, scope: !7066)
!7070 = !DILocation(line: 65, column: 9, scope: !7067)
!7071 = !DILocation(line: 65, column: 7, scope: !7072)
!7072 = distinct !DILexicalBlock(scope: !7066, file: !655, line: 65, column: 75)
!7073 = !DILocation(line: 66, column: 60, scope: !7074)
!7074 = distinct !DILexicalBlock(scope: !7075, file: !655, line: 68, column: 5)
!7075 = distinct !DILexicalBlock(scope: !7067, file: !655, line: 67, column: 5)
!7076 = !DILocation(line: 66, column: 76, scope: !7074)
!7077 = !DILocation(line: 66, column: 83, scope: !7074)
!7078 = !DILocation(line: 66, column: 99, scope: !7074)
!7079 = !DILocation(line: 66, column: 5, scope: !7074)
!7080 = !DILocation(line: 65, column: 9, scope: !7075)
!7081 = distinct !{!7081, !7060, !7082}
!7082 = !DILocation(line: 67, column: 3, scope: !7061)
!7083 = !DILocation(line: 69, column: 3, scope: !7061)
!7084 = !DILocation(line: 68, column: 3, scope: !7085)
!7085 = distinct !DILexicalBlock(scope: !7086, file: !655, line: 73, column: 3)
!7086 = distinct !DILexicalBlock(scope: !7041, file: !655, line: 72, column: 3)
!7087 = !DILocation(line: 69, column: 3, scope: !7041)
!7088 = !DILocation(line: 71, column: 1, scope: !7029)
!7089 = distinct !DISubprogram(name: "plugout_select_by_name", scope: !655, file: !655, line: 71, type: !7090, scopeLine: 72, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !666)
!7090 = !DISubroutineType(types: !7091)
!7091 = !{!658, !18}
!7092 = !DILocalVariable(name: "name", arg: 1, scope: !7089, file: !655, line: 71, type: !18)
!7093 = !DILocation(line: 0, scope: !7089)
!7094 = !DILocalVariable(name: "idx", scope: !7089, file: !655, line: 73, type: !15)
!7095 = !DILocation(line: 75, column: 3, scope: !7096)
!7096 = distinct !DILexicalBlock(scope: !7097, file: !655, line: 77, column: 3)
!7097 = distinct !DILexicalBlock(scope: !7098, file: !655, line: 76, column: 3)
!7098 = distinct !DILexicalBlock(scope: !7089, file: !655, line: 76, column: 3)
!7099 = !DILocation(line: 0, scope: !7098)
!7100 = !DILocation(line: 75, column: 13, scope: !7096)
!7101 = !DILocation(line: 75, column: 25, scope: !7102)
!7102 = distinct !DILexicalBlock(scope: !7103, file: !655, line: 75, column: 9)
!7103 = distinct !DILexicalBlock(scope: !7096, file: !655, line: 75, column: 13)
!7104 = !DILocation(line: 75, column: 9, scope: !7102)
!7105 = !DILocation(line: 75, column: 39, scope: !7102)
!7106 = !DILocation(line: 75, column: 9, scope: !7103)
!7107 = !DILocation(line: 75, column: 37, scope: !7108)
!7108 = distinct !DILexicalBlock(scope: !7109, file: !655, line: 77, column: 7)
!7109 = distinct !DILexicalBlock(scope: !7110, file: !655, line: 76, column: 7)
!7110 = distinct !DILexicalBlock(scope: !7102, file: !655, line: 75, column: 71)
!7111 = !DILocation(line: 75, column: 53, scope: !7108)
!7112 = !DILocation(line: 75, column: 13, scope: !7108)
!7113 = !DILocalVariable(name: "tmp", scope: !7089, file: !655, line: 74, type: !14)
!7114 = !DILocation(line: 75, column: 18, scope: !7115)
!7115 = distinct !DILexicalBlock(scope: !7110, file: !655, line: 75, column: 11)
!7116 = !DILocation(line: 75, column: 11, scope: !7110)
!7117 = !DILocation(line: 75, column: 9, scope: !7118)
!7118 = distinct !DILexicalBlock(scope: !7115, file: !655, line: 75, column: 25)
!7119 = !DILocation(line: 77, column: 5, scope: !7110)
!7120 = !DILocation(line: 75, column: 7, scope: !7121)
!7121 = distinct !DILexicalBlock(scope: !7102, file: !655, line: 77, column: 12)
!7122 = distinct !{!7122, !7095, !7123}
!7123 = !DILocation(line: 76, column: 3, scope: !7096)
!7124 = !DILocation(line: 78, column: 3, scope: !7096)
!7125 = !DILocation(line: 78, column: 11, scope: !7098)
!7126 = !DILocation(line: 78, column: 3, scope: !7098)
!7127 = distinct !DISubprogram(name: "usage", scope: !462, file: !462, line: 21, type: !1747, scopeLine: 22, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !666)
!7128 = !DILocalVariable(name: "exitcode", arg: 1, scope: !7127, file: !462, line: 21, type: !15)
!7129 = !DILocation(line: 0, scope: !7127)
!7130 = !DILocalVariable(name: "__cil_tmp5", scope: !7127, file: !462, line: 26, type: !16)
!7131 = !DILocation(line: 26, column: 9, scope: !7127)
!7132 = !DILocation(line: 23, column: 7, scope: !7133)
!7133 = distinct !DILexicalBlock(scope: !7134, file: !462, line: 23, column: 7)
!7134 = distinct !DILexicalBlock(scope: !7127, file: !462, line: 28, column: 3)
!7135 = !DILocation(line: 23, column: 7, scope: !7134)
!7136 = !DILocation(line: 23, column: 11, scope: !7137)
!7137 = distinct !DILexicalBlock(scope: !7133, file: !462, line: 23, column: 17)
!7138 = !DILocalVariable(name: "tmp", scope: !7127, file: !462, line: 24, type: !48)
!7139 = !DILocation(line: 24, column: 3, scope: !7137)
!7140 = !DILocation(line: 23, column: 11, scope: !7141)
!7141 = distinct !DILexicalBlock(scope: !7133, file: !462, line: 24, column: 10)
!7142 = !DILocation(line: 0, scope: !7133)
!7143 = !DILocalVariable(name: "out", scope: !7127, file: !462, line: 23, type: !24)
!7144 = !DILocation(line: 24, column: 13, scope: !7145)
!7145 = distinct !DILexicalBlock(scope: !7146, file: !462, line: 24, column: 3)
!7146 = distinct !DILexicalBlock(scope: !7134, file: !462, line: 25, column: 3)
!7147 = !DILocalVariable(name: "tmp___0", scope: !7127, file: !462, line: 25, type: !16)
!7148 = !DILocation(line: 25, column: 11, scope: !7149)
!7149 = distinct !DILexicalBlock(scope: !7146, file: !462, line: 26, column: 3)
!7150 = !DILocation(line: 24, column: 3, scope: !7149)
!7151 = !DILocation(line: 31, column: 8, scope: !7152)
!7152 = distinct !DILexicalBlock(scope: !7146, file: !462, line: 27, column: 3)
!7153 = !DILocation(line: 31, column: 3, scope: !7152)
!7154 = !DILocation(line: 35, column: 1, scope: !7127)
!7155 = distinct !DISubprogram(name: "version", scope: !462, file: !462, line: 34, type: !272, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !666)
!7156 = !DILocalVariable(name: "__cil_tmp1", scope: !7155, file: !462, line: 36, type: !16)
!7157 = !DILocation(line: 36, column: 9, scope: !7155)
!7158 = !DILocation(line: 36, column: 3, scope: !7159)
!7159 = distinct !DILexicalBlock(scope: !7160, file: !462, line: 40, column: 3)
!7160 = distinct !DILexicalBlock(scope: !7161, file: !462, line: 39, column: 3)
!7161 = distinct !DILexicalBlock(scope: !7155, file: !462, line: 38, column: 3)
!7162 = !DILocation(line: 37, column: 3, scope: !7163)
!7163 = distinct !DILexicalBlock(scope: !7160, file: !462, line: 38, column: 3)
!7164 = !DILocation(line: 41, column: 1, scope: !7155)
!7165 = distinct !DISubprogram(name: "parseopts", scope: !462, file: !462, line: 40, type: !6031, scopeLine: 41, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !666)
!7166 = !DILocalVariable(name: "argc", arg: 1, scope: !7165, file: !462, line: 40, type: !3087)
!7167 = !DILocation(line: 0, scope: !7165)
!7168 = !DILocalVariable(name: "argv", arg: 2, scope: !7165, file: !462, line: 40, type: !6033)
!7169 = !DILocalVariable(name: "__cil_tmp5", scope: !7165, file: !462, line: 44, type: !16)
!7170 = !DILocation(line: 44, column: 9, scope: !7165)
!7171 = !DILocation(line: 43, column: 21, scope: !7172)
!7172 = distinct !DILexicalBlock(scope: !7165, file: !462, line: 46, column: 3)
!7173 = !DILocation(line: 43, column: 14, scope: !7172)
!7174 = !DILocation(line: 43, column: 12, scope: !7172)
!7175 = !DILocation(line: 43, column: 10, scope: !7172)
!7176 = !DILocation(line: 44, column: 3, scope: !7177)
!7177 = distinct !DILexicalBlock(scope: !7178, file: !462, line: 45, column: 3)
!7178 = distinct !DILexicalBlock(scope: !7172, file: !462, line: 44, column: 3)
!7179 = !DILocation(line: 44, column: 13, scope: !7177)
!7180 = !DILocation(line: 44, column: 18, scope: !7181)
!7181 = distinct !DILexicalBlock(scope: !7182, file: !462, line: 48, column: 5)
!7182 = distinct !DILexicalBlock(scope: !7183, file: !462, line: 47, column: 5)
!7183 = distinct !DILexicalBlock(scope: !7177, file: !462, line: 44, column: 13)
!7184 = !DILocation(line: 44, column: 42, scope: !7181)
!7185 = !DILocation(line: 44, column: 11, scope: !7181)
!7186 = !DILocalVariable(name: "tmp", scope: !7165, file: !462, line: 43, type: !14)
!7187 = !DILocation(line: 44, column: 11, scope: !7182)
!7188 = !DILocalVariable(name: "res", scope: !7165, file: !462, line: 42, type: !15)
!7189 = !DILocation(line: 44, column: 16, scope: !7190)
!7190 = distinct !DILexicalBlock(scope: !7183, file: !462, line: 44, column: 9)
!7191 = !DILocation(line: 44, column: 9, scope: !7183)
!7192 = !DILocation(line: 44, column: 7, scope: !7193)
!7193 = distinct !DILexicalBlock(scope: !7190, file: !462, line: 44, column: 25)
!7194 = !DILocation(line: 49, column: 13, scope: !7195)
!7195 = distinct !DILexicalBlock(scope: !7196, file: !462, line: 49, column: 9)
!7196 = distinct !DILexicalBlock(scope: !7183, file: !462, line: 46, column: 5)
!7197 = !DILocation(line: 49, column: 9, scope: !7196)
!7198 = !DILocation(line: 49, column: 7, scope: !7199)
!7199 = distinct !DILexicalBlock(scope: !7195, file: !462, line: 49, column: 22)
!7200 = !DILocation(line: 52, column: 13, scope: !7201)
!7201 = distinct !DILexicalBlock(scope: !7196, file: !462, line: 52, column: 9)
!7202 = !DILocation(line: 52, column: 9, scope: !7196)
!7203 = !DILocation(line: 52, column: 7, scope: !7204)
!7204 = distinct !DILexicalBlock(scope: !7201, file: !462, line: 52, column: 21)
!7205 = !DILocation(line: 46, column: 5, scope: !7196)
!7206 = !DILocation(line: 47, column: 5, scope: !7207)
!7207 = distinct !DILexicalBlock(scope: !7208, file: !462, line: 49, column: 5)
!7208 = distinct !DILexicalBlock(scope: !7196, file: !462, line: 48, column: 5)
!7209 = !DILocation(line: 48, column: 5, scope: !7196)
!7210 = !DILocation(line: 50, column: 5, scope: !7211)
!7211 = distinct !DILexicalBlock(scope: !7212, file: !462, line: 51, column: 5)
!7212 = distinct !DILexicalBlock(scope: !7196, file: !462, line: 50, column: 5)
!7213 = !DILocation(line: 51, column: 5, scope: !7196)
!7214 = !DILocation(line: 53, column: 5, scope: !7215)
!7215 = distinct !DILexicalBlock(scope: !7216, file: !462, line: 54, column: 5)
!7216 = distinct !DILexicalBlock(scope: !7196, file: !462, line: 53, column: 5)
!7217 = !DILocation(line: 54, column: 5, scope: !7196)
!7218 = distinct !{!7218, !7176, !7219}
!7219 = !DILocation(line: 57, column: 3, scope: !7177)
!7220 = !DILocation(line: 59, column: 3, scope: !7177)
!7221 = !DILocation(line: 57, column: 12, scope: !7172)
!7222 = !DILocation(line: 57, column: 9, scope: !7172)
!7223 = !DILocation(line: 58, column: 12, scope: !7172)
!7224 = !DILocation(line: 58, column: 9, scope: !7172)
!7225 = !DILocation(line: 59, column: 3, scope: !7172)
!7226 = distinct !DISubprogram(name: "midi_close_track", scope: !297, file: !297, line: 161, type: !7227, scopeLine: 162, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !666)
!7227 = !DISubroutineType(types: !7228)
!7228 = !{!14}
!7229 = !DILocalVariable(name: "event", scope: !7226, file: !297, line: 163, type: !7230)
!7230 = !DICompositeType(tag: DW_TAG_array_type, baseType: !87, size: 24, elements: !7231)
!7231 = !{!7232}
!7232 = !DISubrange(count: 3)
!7233 = !DILocation(line: 163, column: 11, scope: !7226)
!7234 = !DILocalVariable(name: "__cil_tmp5", scope: !7226, file: !297, line: 167, type: !23)
!7235 = !DILocation(line: 167, column: 9, scope: !7226)
!7236 = !DILocation(line: 166, column: 3, scope: !7237)
!7237 = distinct !DILexicalBlock(scope: !7238, file: !297, line: 170, column: 3)
!7238 = distinct !DILexicalBlock(scope: !7226, file: !297, line: 169, column: 3)
!7239 = !DILocation(line: 166, column: 12, scope: !7237)
!7240 = !DILocation(line: 167, column: 3, scope: !7237)
!7241 = !DILocation(line: 167, column: 12, scope: !7237)
!7242 = !DILocation(line: 168, column: 3, scope: !7237)
!7243 = !DILocation(line: 168, column: 12, scope: !7237)
!7244 = !DILocation(line: 170, column: 26, scope: !7245)
!7245 = distinct !DILexicalBlock(scope: !7237, file: !297, line: 169, column: 3)
!7246 = !DILocation(line: 170, column: 58, scope: !7245)
!7247 = !DILocation(line: 170, column: 9, scope: !7245)
!7248 = !DILocalVariable(name: "tmp", scope: !7226, file: !297, line: 164, type: !14)
!7249 = !DILocation(line: 0, scope: !7226)
!7250 = !DILocation(line: 170, column: 7, scope: !7251)
!7251 = distinct !DILexicalBlock(scope: !7238, file: !297, line: 170, column: 7)
!7252 = !DILocation(line: 170, column: 7, scope: !7238)
!7253 = !DILocation(line: 171, column: 5, scope: !7254)
!7254 = distinct !DILexicalBlock(scope: !7251, file: !297, line: 170, column: 12)
!7255 = !DILocation(line: 173, column: 19, scope: !7256)
!7256 = distinct !DILexicalBlock(scope: !7257, file: !297, line: 174, column: 3)
!7257 = distinct !DILexicalBlock(scope: !7238, file: !297, line: 173, column: 3)
!7258 = !DILocation(line: 173, column: 25, scope: !7256)
!7259 = !DILocation(line: 173, column: 13, scope: !7256)
!7260 = !DILocalVariable(name: "tmp___0", scope: !7226, file: !297, line: 165, type: !14)
!7261 = !DILocation(line: 173, column: 15, scope: !7262)
!7262 = distinct !DILexicalBlock(scope: !7238, file: !297, line: 173, column: 7)
!7263 = !DILocation(line: 173, column: 7, scope: !7238)
!7264 = !DILocation(line: 174, column: 5, scope: !7265)
!7265 = distinct !DILexicalBlock(scope: !7262, file: !297, line: 173, column: 22)
!7266 = !DILocation(line: 176, column: 39, scope: !7267)
!7267 = distinct !DILexicalBlock(scope: !7268, file: !297, line: 177, column: 3)
!7268 = distinct !DILexicalBlock(scope: !7238, file: !297, line: 176, column: 3)
!7269 = !DILocation(line: 176, column: 28, scope: !7267)
!7270 = !DILocation(line: 176, column: 13, scope: !7267)
!7271 = !DILocalVariable(name: "tmp___1", scope: !7226, file: !297, line: 166, type: !14)
!7272 = !DILocation(line: 176, column: 7, scope: !7273)
!7273 = distinct !DILexicalBlock(scope: !7238, file: !297, line: 176, column: 7)
!7274 = !DILocation(line: 176, column: 7, scope: !7238)
!7275 = !DILocation(line: 177, column: 5, scope: !7276)
!7276 = distinct !DILexicalBlock(scope: !7273, file: !297, line: 176, column: 16)
!7277 = !DILocation(line: 179, column: 10, scope: !7278)
!7278 = distinct !DILexicalBlock(scope: !7279, file: !297, line: 180, column: 3)
!7279 = distinct !DILexicalBlock(scope: !7238, file: !297, line: 179, column: 3)
!7280 = !DILocation(line: 179, column: 3, scope: !7278)
!7281 = !DILocation(line: 180, column: 8, scope: !7279)
!7282 = !DILocation(line: 181, column: 3, scope: !7238)
!7283 = !DILocation(line: 184, column: 8, scope: !7238)
!7284 = !DILocation(line: 185, column: 3, scope: !7238)
!7285 = !DILocation(line: 0, scope: !7238)
!7286 = !DILocation(line: 187, column: 1, scope: !7226)
!7287 = distinct !DISubprogram(name: "midi_open_track", scope: !297, file: !297, line: 101, type: !286, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !666)
!7288 = !DILocalVariable(name: "subsong", arg: 1, scope: !7287, file: !297, line: 101, type: !14)
!7289 = !DILocation(line: 0, scope: !7287)
!7290 = !DILocalVariable(name: "__cil_tmp12", scope: !7287, file: !297, line: 113, type: !16)
!7291 = !DILocation(line: 113, column: 9, scope: !7287)
!7292 = !DILocalVariable(name: "__cil_tmp13", scope: !7287, file: !297, line: 114, type: !16)
!7293 = !DILocation(line: 114, column: 9, scope: !7287)
!7294 = !DILocalVariable(name: "__cil_tmp14", scope: !7287, file: !297, line: 115, type: !16)
!7295 = !DILocation(line: 115, column: 9, scope: !7287)
!7296 = !DILocalVariable(name: "__cil_tmp15", scope: !7287, file: !297, line: 116, type: !16)
!7297 = !DILocation(line: 116, column: 9, scope: !7287)
!7298 = !DILocation(line: 104, column: 9, scope: !7299)
!7299 = distinct !DILexicalBlock(scope: !7300, file: !297, line: 120, column: 3)
!7300 = distinct !DILexicalBlock(scope: !7301, file: !297, line: 119, column: 3)
!7301 = distinct !DILexicalBlock(scope: !7287, file: !297, line: 118, column: 3)
!7302 = !DILocalVariable(name: "tmp", scope: !7287, file: !297, line: 104, type: !23)
!7303 = !DILocalVariable(name: "filename___3", scope: !7287, file: !297, line: 103, type: !16)
!7304 = !DILocation(line: 104, column: 7, scope: !7305)
!7305 = distinct !DILexicalBlock(scope: !7301, file: !297, line: 104, column: 7)
!7306 = !DILocation(line: 104, column: 36, scope: !7305)
!7307 = !DILocation(line: 104, column: 7, scope: !7301)
!7308 = !DILocation(line: 105, column: 5, scope: !7309)
!7309 = distinct !DILexicalBlock(scope: !7305, file: !297, line: 104, column: 68)
!7310 = !DILocation(line: 108, column: 30, scope: !7311)
!7311 = distinct !DILexicalBlock(scope: !7312, file: !297, line: 108, column: 3)
!7312 = distinct !DILexicalBlock(scope: !7301, file: !297, line: 107, column: 3)
!7313 = !DILocation(line: 107, column: 13, scope: !7311)
!7314 = !DILocalVariable(name: "tmp___0", scope: !7287, file: !297, line: 105, type: !14)
!7315 = !DILocation(line: 107, column: 15, scope: !7316)
!7316 = distinct !DILexicalBlock(scope: !7301, file: !297, line: 107, column: 7)
!7317 = !DILocation(line: 107, column: 7, scope: !7301)
!7318 = !DILocation(line: 108, column: 5, scope: !7319)
!7319 = distinct !DILexicalBlock(scope: !7316, file: !297, line: 107, column: 22)
!7320 = !DILocation(line: 110, column: 10, scope: !7321)
!7321 = distinct !DILexicalBlock(scope: !7322, file: !297, line: 111, column: 3)
!7322 = distinct !DILexicalBlock(scope: !7301, file: !297, line: 110, column: 3)
!7323 = !DILocation(line: 110, column: 8, scope: !7321)
!7324 = !DILocation(line: 111, column: 9, scope: !7325)
!7325 = distinct !DILexicalBlock(scope: !7301, file: !297, line: 111, column: 7)
!7326 = !DILocation(line: 111, column: 7, scope: !7301)
!7327 = !DILocation(line: 112, column: 5, scope: !7328)
!7328 = distinct !DILexicalBlock(scope: !7329, file: !297, line: 113, column: 5)
!7329 = distinct !DILexicalBlock(scope: !7330, file: !297, line: 112, column: 5)
!7330 = distinct !DILexicalBlock(scope: !7325, file: !297, line: 111, column: 15)
!7331 = !DILocation(line: 113, column: 5, scope: !7330)
!7332 = !DILocation(line: 116, column: 3, scope: !7333)
!7333 = distinct !DILexicalBlock(scope: !7334, file: !297, line: 116, column: 3)
!7334 = distinct !DILexicalBlock(scope: !7301, file: !297, line: 115, column: 3)
!7335 = !DILocation(line: 120, column: 45, scope: !7336)
!7336 = distinct !DILexicalBlock(scope: !7334, file: !297, line: 118, column: 3)
!7337 = !DILocation(line: 119, column: 13, scope: !7336)
!7338 = !DILocalVariable(name: "tmp___1", scope: !7287, file: !297, line: 106, type: !76)
!7339 = !DILocation(line: 119, column: 15, scope: !7340)
!7340 = distinct !DILexicalBlock(scope: !7301, file: !297, line: 119, column: 7)
!7341 = !DILocation(line: 119, column: 7, scope: !7301)
!7342 = !DILocation(line: 120, column: 5, scope: !7343)
!7343 = distinct !DILexicalBlock(scope: !7340, file: !297, line: 119, column: 22)
!7344 = !DILocation(line: 123, column: 13, scope: !7345)
!7345 = distinct !DILexicalBlock(scope: !7346, file: !297, line: 123, column: 3)
!7346 = distinct !DILexicalBlock(scope: !7301, file: !297, line: 122, column: 3)
!7347 = !DILocalVariable(name: "tmp___2", scope: !7287, file: !297, line: 107, type: !14)
!7348 = !DILocation(line: 123, column: 7, scope: !7349)
!7349 = distinct !DILexicalBlock(scope: !7301, file: !297, line: 123, column: 7)
!7350 = !DILocation(line: 123, column: 7, scope: !7301)
!7351 = !DILocation(line: 124, column: 5, scope: !7352)
!7352 = distinct !DILexicalBlock(scope: !7349, file: !297, line: 123, column: 16)
!7353 = !DILocation(line: 127, column: 13, scope: !7354)
!7354 = distinct !DILexicalBlock(scope: !7355, file: !297, line: 127, column: 3)
!7355 = distinct !DILexicalBlock(scope: !7301, file: !297, line: 126, column: 3)
!7356 = !DILocalVariable(name: "tmp___3", scope: !7287, file: !297, line: 108, type: !14)
!7357 = !DILocation(line: 127, column: 7, scope: !7358)
!7358 = distinct !DILexicalBlock(scope: !7301, file: !297, line: 127, column: 7)
!7359 = !DILocation(line: 127, column: 7, scope: !7301)
!7360 = !DILocation(line: 128, column: 5, scope: !7361)
!7361 = distinct !DILexicalBlock(scope: !7358, file: !297, line: 127, column: 16)
!7362 = !DILocation(line: 131, column: 13, scope: !7363)
!7363 = distinct !DILexicalBlock(scope: !7364, file: !297, line: 131, column: 3)
!7364 = distinct !DILexicalBlock(scope: !7301, file: !297, line: 130, column: 3)
!7365 = !DILocalVariable(name: "tmp___4", scope: !7287, file: !297, line: 109, type: !14)
!7366 = !DILocation(line: 131, column: 7, scope: !7367)
!7367 = distinct !DILexicalBlock(scope: !7301, file: !297, line: 131, column: 7)
!7368 = !DILocation(line: 131, column: 7, scope: !7301)
!7369 = !DILocation(line: 132, column: 5, scope: !7370)
!7370 = distinct !DILexicalBlock(scope: !7367, file: !297, line: 131, column: 16)
!7371 = !DILocation(line: 136, column: 13, scope: !7372)
!7372 = distinct !DILexicalBlock(scope: !7373, file: !297, line: 135, column: 3)
!7373 = distinct !DILexicalBlock(scope: !7301, file: !297, line: 134, column: 3)
!7374 = !DILocalVariable(name: "tmp___5", scope: !7287, file: !297, line: 110, type: !14)
!7375 = !DILocation(line: 136, column: 7, scope: !7376)
!7376 = distinct !DILexicalBlock(scope: !7301, file: !297, line: 136, column: 7)
!7377 = !DILocation(line: 136, column: 7, scope: !7301)
!7378 = !DILocation(line: 137, column: 5, scope: !7379)
!7379 = distinct !DILexicalBlock(scope: !7376, file: !297, line: 136, column: 16)
!7380 = !DILocation(line: 141, column: 45, scope: !7381)
!7381 = distinct !DILexicalBlock(scope: !7382, file: !297, line: 140, column: 3)
!7382 = distinct !DILexicalBlock(scope: !7301, file: !297, line: 139, column: 3)
!7383 = !DILocation(line: 140, column: 13, scope: !7381)
!7384 = !DILocalVariable(name: "tmp___6", scope: !7287, file: !297, line: 111, type: !76)
!7385 = !DILocation(line: 140, column: 15, scope: !7386)
!7386 = distinct !DILexicalBlock(scope: !7301, file: !297, line: 140, column: 7)
!7387 = !DILocation(line: 140, column: 7, scope: !7301)
!7388 = !DILocation(line: 141, column: 5, scope: !7389)
!7389 = distinct !DILexicalBlock(scope: !7386, file: !297, line: 140, column: 22)
!7390 = !DILocation(line: 144, column: 16, scope: !7391)
!7391 = distinct !DILexicalBlock(scope: !7301, file: !297, line: 143, column: 3)
!7392 = !DILocation(line: 145, column: 31, scope: !7393)
!7393 = distinct !DILexicalBlock(scope: !7391, file: !297, line: 145, column: 3)
!7394 = !DILocation(line: 145, column: 25, scope: !7393)
!7395 = !DILocation(line: 145, column: 23, scope: !7393)
!7396 = !DILocation(line: 146, column: 7, scope: !7397)
!7397 = distinct !DILexicalBlock(scope: !7301, file: !297, line: 146, column: 7)
!7398 = !DILocation(line: 146, column: 27, scope: !7397)
!7399 = !DILocation(line: 146, column: 7, scope: !7301)
!7400 = !DILocation(line: 147, column: 5, scope: !7401)
!7401 = distinct !DILexicalBlock(scope: !7397, file: !297, line: 146, column: 35)
!7402 = !DILocation(line: 149, column: 13, scope: !7403)
!7403 = distinct !DILexicalBlock(scope: !7404, file: !297, line: 150, column: 3)
!7404 = distinct !DILexicalBlock(scope: !7301, file: !297, line: 149, column: 3)
!7405 = !DILocalVariable(name: "tmp___7", scope: !7287, file: !297, line: 112, type: !14)
!7406 = !DILocation(line: 149, column: 7, scope: !7407)
!7407 = distinct !DILexicalBlock(scope: !7301, file: !297, line: 149, column: 7)
!7408 = !DILocation(line: 149, column: 7, scope: !7301)
!7409 = !DILocation(line: 150, column: 5, scope: !7410)
!7410 = distinct !DILexicalBlock(scope: !7407, file: !297, line: 149, column: 16)
!7411 = !DILocation(line: 152, column: 3, scope: !7301)
!7412 = !DILocation(line: 155, column: 10, scope: !7413)
!7413 = distinct !DILexicalBlock(scope: !7414, file: !297, line: 155, column: 3)
!7414 = distinct !DILexicalBlock(scope: !7301, file: !297, line: 154, column: 3)
!7415 = !DILocation(line: 155, column: 3, scope: !7413)
!7416 = !DILocation(line: 156, column: 8, scope: !7414)
!7417 = !DILocation(line: 157, column: 3, scope: !7414)
!7418 = !DILocation(line: 158, column: 3, scope: !7301)
!7419 = !DILocation(line: 0, scope: !7301)
!7420 = !DILocation(line: 160, column: 1, scope: !7287)
!7421 = distinct !DISubprogram(name: "midi_write_event", scope: !297, file: !297, line: 87, type: !7422, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !666)
!7422 = !DISubroutineType(types: !7423)
!7423 = !{!14, !15, !277, !7}
!7424 = !DILocalVariable(name: "cycles", arg: 1, scope: !7421, file: !297, line: 87, type: !15)
!7425 = !DILocation(line: 0, scope: !7421)
!7426 = !DILocalVariable(name: "s", arg: 2, scope: !7421, file: !297, line: 87, type: !277)
!7427 = !DILocalVariable(name: "n", arg: 3, scope: !7421, file: !297, line: 87, type: !7)
!7428 = !DILocation(line: 89, column: 54, scope: !7429)
!7429 = distinct !DILexicalBlock(scope: !7430, file: !297, line: 94, column: 3)
!7430 = distinct !DILexicalBlock(scope: !7431, file: !297, line: 93, column: 3)
!7431 = distinct !DILexicalBlock(scope: !7421, file: !297, line: 92, column: 3)
!7432 = !DILocation(line: 89, column: 52, scope: !7429)
!7433 = !DILocation(line: 89, column: 67, scope: !7429)
!7434 = !DILocation(line: 89, column: 9, scope: !7429)
!7435 = !DILocalVariable(name: "tmp", scope: !7421, file: !297, line: 89, type: !14)
!7436 = !DILocation(line: 89, column: 7, scope: !7437)
!7437 = distinct !DILexicalBlock(scope: !7431, file: !297, line: 89, column: 7)
!7438 = !DILocation(line: 89, column: 7, scope: !7431)
!7439 = !DILocation(line: 90, column: 5, scope: !7440)
!7440 = distinct !DILexicalBlock(scope: !7437, file: !297, line: 89, column: 12)
!7441 = !DILocation(line: 92, column: 96, scope: !7442)
!7442 = distinct !DILexicalBlock(scope: !7443, file: !297, line: 93, column: 3)
!7443 = distinct !DILexicalBlock(scope: !7431, file: !297, line: 92, column: 3)
!7444 = !DILocation(line: 92, column: 13, scope: !7442)
!7445 = !DILocalVariable(name: "tmp___0", scope: !7421, file: !297, line: 90, type: !76)
!7446 = !DILocation(line: 92, column: 15, scope: !7447)
!7447 = distinct !DILexicalBlock(scope: !7431, file: !297, line: 92, column: 7)
!7448 = !DILocation(line: 92, column: 7, scope: !7431)
!7449 = !DILocation(line: 93, column: 5, scope: !7450)
!7450 = distinct !DILexicalBlock(scope: !7447, file: !297, line: 92, column: 21)
!7451 = !DILocation(line: 95, column: 19, scope: !7431)
!7452 = !DILocation(line: 95, column: 16, scope: !7431)
!7453 = !DILocation(line: 97, column: 15, scope: !7431)
!7454 = !DILocation(line: 98, column: 3, scope: !7431)
!7455 = !DILocation(line: 0, scope: !7431)
!7456 = !DILocation(line: 100, column: 1, scope: !7421)
!7457 = distinct !DISubprogram(name: "midi_write_u32", scope: !297, file: !297, line: 42, type: !7458, scopeLine: 43, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !666)
!7458 = !DISubroutineType(types: !7459)
!7459 = !{!14, !83}
!7460 = !DILocalVariable(name: "x", arg: 1, scope: !7457, file: !297, line: 42, type: !83)
!7461 = !DILocation(line: 0, scope: !7457)
!7462 = !DILocalVariable(name: "s", scope: !7457, file: !297, line: 44, type: !7463)
!7463 = !DICompositeType(tag: DW_TAG_array_type, baseType: !87, size: 32, elements: !397)
!7464 = !DILocation(line: 44, column: 11, scope: !7457)
!7465 = !DILocalVariable(name: "__cil_tmp4", scope: !7457, file: !297, line: 46, type: !23)
!7466 = !DILocation(line: 46, column: 9, scope: !7457)
!7467 = !DILocation(line: 46, column: 23, scope: !7468)
!7468 = distinct !DILexicalBlock(scope: !7469, file: !297, line: 49, column: 3)
!7469 = distinct !DILexicalBlock(scope: !7457, file: !297, line: 48, column: 3)
!7470 = !DILocation(line: 46, column: 10, scope: !7468)
!7471 = !DILocation(line: 46, column: 3, scope: !7468)
!7472 = !DILocation(line: 46, column: 8, scope: !7468)
!7473 = !DILocation(line: 47, column: 23, scope: !7468)
!7474 = !DILocation(line: 47, column: 10, scope: !7468)
!7475 = !DILocation(line: 47, column: 3, scope: !7468)
!7476 = !DILocation(line: 47, column: 8, scope: !7468)
!7477 = !DILocation(line: 48, column: 23, scope: !7468)
!7478 = !DILocation(line: 48, column: 10, scope: !7468)
!7479 = !DILocation(line: 48, column: 3, scope: !7468)
!7480 = !DILocation(line: 48, column: 8, scope: !7468)
!7481 = !DILocation(line: 49, column: 10, scope: !7468)
!7482 = !DILocation(line: 49, column: 3, scope: !7468)
!7483 = !DILocation(line: 49, column: 8, scope: !7468)
!7484 = !DILocation(line: 51, column: 49, scope: !7485)
!7485 = distinct !DILexicalBlock(scope: !7468, file: !297, line: 50, column: 3)
!7486 = !DILocation(line: 51, column: 103, scope: !7485)
!7487 = !DILocation(line: 51, column: 9, scope: !7485)
!7488 = !DILocalVariable(name: "tmp", scope: !7457, file: !297, line: 45, type: !76)
!7489 = !DILocation(line: 51, column: 11, scope: !7490)
!7490 = distinct !DILexicalBlock(scope: !7469, file: !297, line: 51, column: 7)
!7491 = !DILocation(line: 51, column: 7, scope: !7469)
!7492 = !DILocation(line: 52, column: 5, scope: !7493)
!7493 = distinct !DILexicalBlock(scope: !7490, file: !297, line: 51, column: 18)
!7494 = !DILocation(line: 53, column: 3, scope: !7469)
!7495 = !DILocation(line: 0, scope: !7469)
!7496 = !DILocation(line: 55, column: 1, scope: !7457)
!7497 = distinct !DISubprogram(name: "midi_write_varlen", scope: !297, file: !297, line: 68, type: !7498, scopeLine: 69, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !666)
!7498 = !DISubroutineType(types: !7499)
!7499 = !{!14, !22}
!7500 = !DILocalVariable(name: "x", arg: 1, scope: !7497, file: !297, line: 68, type: !22)
!7501 = !DILocation(line: 0, scope: !7497)
!7502 = !DILocalVariable(name: "s", scope: !7497, file: !297, line: 70, type: !87)
!7503 = !DILocation(line: 70, column: 11, scope: !7497)
!7504 = !DILocation(line: 70, column: 3, scope: !7505)
!7505 = distinct !DILexicalBlock(scope: !7506, file: !297, line: 75, column: 3)
!7506 = distinct !DILexicalBlock(scope: !7507, file: !297, line: 74, column: 3)
!7507 = distinct !DILexicalBlock(scope: !7497, file: !297, line: 73, column: 3)
!7508 = !DILocation(line: 70, column: 13, scope: !7505)
!7509 = !DILocation(line: 73, column: 22, scope: !7510)
!7510 = distinct !DILexicalBlock(scope: !7505, file: !297, line: 70, column: 13)
!7511 = !DILocation(line: 73, column: 9, scope: !7510)
!7512 = !DILocation(line: 73, column: 7, scope: !7510)
!7513 = !DILocation(line: 74, column: 7, scope: !7510)
!7514 = !DILocation(line: 75, column: 9, scope: !7515)
!7515 = distinct !DILexicalBlock(scope: !7510, file: !297, line: 75, column: 9)
!7516 = !DILocation(line: 75, column: 9, scope: !7510)
!7517 = !DILocation(line: 76, column: 28, scope: !7518)
!7518 = distinct !DILexicalBlock(scope: !7515, file: !297, line: 75, column: 12)
!7519 = !DILocation(line: 76, column: 22, scope: !7518)
!7520 = !DILocation(line: 76, column: 30, scope: !7518)
!7521 = !DILocation(line: 76, column: 11, scope: !7518)
!7522 = !DILocation(line: 76, column: 9, scope: !7518)
!7523 = !DILocation(line: 77, column: 5, scope: !7518)
!7524 = !DILocation(line: 78, column: 107, scope: !7525)
!7525 = distinct !DILexicalBlock(scope: !7526, file: !297, line: 79, column: 5)
!7526 = distinct !DILexicalBlock(scope: !7510, file: !297, line: 78, column: 5)
!7527 = !DILocation(line: 78, column: 11, scope: !7525)
!7528 = !DILocalVariable(name: "tmp", scope: !7497, file: !297, line: 71, type: !76)
!7529 = !DILocation(line: 78, column: 13, scope: !7530)
!7530 = distinct !DILexicalBlock(scope: !7510, file: !297, line: 78, column: 9)
!7531 = !DILocation(line: 78, column: 9, scope: !7510)
!7532 = !DILocation(line: 79, column: 7, scope: !7533)
!7533 = distinct !DILexicalBlock(scope: !7530, file: !297, line: 78, column: 20)
!7534 = !DILocation(line: 81, column: 18, scope: !7510)
!7535 = !DILocation(line: 70, column: 11, scope: !7536)
!7536 = distinct !DILexicalBlock(scope: !7510, file: !297, line: 70, column: 9)
!7537 = !DILocation(line: 70, column: 9, scope: !7510)
!7538 = !DILocation(line: 70, column: 7, scope: !7539)
!7539 = distinct !DILexicalBlock(scope: !7536, file: !297, line: 70, column: 14)
!7540 = distinct !{!7540, !7504, !7541}
!7541 = !DILocation(line: 72, column: 3, scope: !7505)
!7542 = !DILocation(line: 74, column: 3, scope: !7505)
!7543 = !DILocation(line: 84, column: 3, scope: !7507)
!7544 = !DILocation(line: 0, scope: !7507)
!7545 = !DILocation(line: 86, column: 1, scope: !7497)
!7546 = distinct !DISubprogram(name: "midi_write_u16", scope: !297, file: !297, line: 56, type: !7547, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !666)
!7547 = !DISubroutineType(types: !7548)
!7548 = !{!14, !86}
!7549 = !DILocalVariable(name: "x", arg: 1, scope: !7546, file: !297, line: 56, type: !86)
!7550 = !DILocation(line: 0, scope: !7546)
!7551 = !DILocalVariable(name: "s", scope: !7546, file: !297, line: 58, type: !7552)
!7552 = !DICompositeType(tag: DW_TAG_array_type, baseType: !87, size: 16, elements: !7553)
!7553 = !{!7554}
!7554 = !DISubrange(count: 2)
!7555 = !DILocation(line: 58, column: 11, scope: !7546)
!7556 = !DILocalVariable(name: "__cil_tmp4", scope: !7546, file: !297, line: 60, type: !23)
!7557 = !DILocation(line: 60, column: 9, scope: !7546)
!7558 = !DILocation(line: 60, column: 21, scope: !7559)
!7559 = distinct !DILexicalBlock(scope: !7560, file: !297, line: 63, column: 3)
!7560 = distinct !DILexicalBlock(scope: !7546, file: !297, line: 62, column: 3)
!7561 = !DILocation(line: 60, column: 29, scope: !7559)
!7562 = !DILocation(line: 60, column: 10, scope: !7559)
!7563 = !DILocation(line: 60, column: 3, scope: !7559)
!7564 = !DILocation(line: 60, column: 8, scope: !7559)
!7565 = !DILocation(line: 61, column: 10, scope: !7559)
!7566 = !DILocation(line: 61, column: 3, scope: !7559)
!7567 = !DILocation(line: 61, column: 8, scope: !7559)
!7568 = !DILocation(line: 63, column: 49, scope: !7569)
!7569 = distinct !DILexicalBlock(scope: !7559, file: !297, line: 62, column: 3)
!7570 = !DILocation(line: 63, column: 103, scope: !7569)
!7571 = !DILocation(line: 63, column: 9, scope: !7569)
!7572 = !DILocalVariable(name: "tmp", scope: !7546, file: !297, line: 59, type: !76)
!7573 = !DILocation(line: 63, column: 11, scope: !7574)
!7574 = distinct !DILexicalBlock(scope: !7560, file: !297, line: 63, column: 7)
!7575 = !DILocation(line: 63, column: 7, scope: !7560)
!7576 = !DILocation(line: 64, column: 5, scope: !7577)
!7577 = distinct !DILexicalBlock(scope: !7574, file: !297, line: 63, column: 18)
!7578 = !DILocation(line: 65, column: 3, scope: !7560)
!7579 = !DILocation(line: 0, scope: !7560)
!7580 = !DILocation(line: 67, column: 1, scope: !7546)
!7581 = distinct !DISubprogram(name: "note_off", scope: !297, file: !297, line: 215, type: !7582, scopeLine: 216, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !666)
!7582 = !DISubroutineType(types: !7583)
!7583 = !{!14, !15, !14, !14}
!7584 = !DILocalVariable(name: "cycles", arg: 1, scope: !7581, file: !297, line: 215, type: !15)
!7585 = !DILocation(line: 0, scope: !7581)
!7586 = !DILocalVariable(name: "channel", arg: 2, scope: !7581, file: !297, line: 215, type: !14)
!7587 = !DILocalVariable(name: "note___1", arg: 3, scope: !7581, file: !297, line: 215, type: !14)
!7588 = !DILocalVariable(name: "event", scope: !7581, file: !297, line: 217, type: !7230)
!7589 = !DILocation(line: 217, column: 11, scope: !7581)
!7590 = !DILocalVariable(name: "__cil_tmp6", scope: !7581, file: !297, line: 219, type: !23)
!7591 = !DILocation(line: 219, column: 9, scope: !7581)
!7592 = !DILocation(line: 220, column: 3, scope: !7593)
!7593 = distinct !DILexicalBlock(scope: !7594, file: !297, line: 222, column: 3)
!7594 = distinct !DILexicalBlock(scope: !7581, file: !297, line: 221, column: 3)
!7595 = !DILocation(line: 220, column: 12, scope: !7593)
!7596 = !DILocation(line: 221, column: 14, scope: !7593)
!7597 = !DILocation(line: 221, column: 3, scope: !7593)
!7598 = !DILocation(line: 221, column: 12, scope: !7593)
!7599 = !DILocation(line: 222, column: 3, scope: !7593)
!7600 = !DILocation(line: 222, column: 12, scope: !7593)
!7601 = !DILocation(line: 224, column: 53, scope: !7602)
!7602 = distinct !DILexicalBlock(scope: !7593, file: !297, line: 223, column: 3)
!7603 = !DILocation(line: 224, column: 9, scope: !7602)
!7604 = !DILocalVariable(name: "tmp", scope: !7581, file: !297, line: 218, type: !14)
!7605 = !DILocation(line: 224, column: 7, scope: !7606)
!7606 = distinct !DILexicalBlock(scope: !7594, file: !297, line: 224, column: 7)
!7607 = !DILocation(line: 224, column: 7, scope: !7594)
!7608 = !DILocation(line: 225, column: 5, scope: !7609)
!7609 = distinct !DILexicalBlock(scope: !7606, file: !297, line: 224, column: 12)
!7610 = !DILocation(line: 227, column: 3, scope: !7594)
!7611 = !DILocation(line: 0, scope: !7594)
!7612 = !DILocation(line: 229, column: 1, scope: !7581)
!7613 = distinct !DISubprogram(name: "note_on", scope: !297, file: !297, line: 200, type: !7614, scopeLine: 201, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !666)
!7614 = !DISubroutineType(types: !7615)
!7615 = !{!14, !15, !14, !14, !14}
!7616 = !DILocalVariable(name: "cycles", arg: 1, scope: !7613, file: !297, line: 200, type: !15)
!7617 = !DILocation(line: 0, scope: !7613)
!7618 = !DILocalVariable(name: "channel", arg: 2, scope: !7613, file: !297, line: 200, type: !14)
!7619 = !DILocalVariable(name: "note___1", arg: 3, scope: !7613, file: !297, line: 200, type: !14)
!7620 = !DILocalVariable(name: "velocity", arg: 4, scope: !7613, file: !297, line: 200, type: !14)
!7621 = !DILocalVariable(name: "event", scope: !7613, file: !297, line: 202, type: !7230)
!7622 = !DILocation(line: 202, column: 11, scope: !7613)
!7623 = !DILocalVariable(name: "__cil_tmp7", scope: !7613, file: !297, line: 204, type: !23)
!7624 = !DILocation(line: 204, column: 9, scope: !7613)
!7625 = !DILocation(line: 205, column: 3, scope: !7626)
!7626 = distinct !DILexicalBlock(scope: !7627, file: !297, line: 207, column: 3)
!7627 = distinct !DILexicalBlock(scope: !7613, file: !297, line: 206, column: 3)
!7628 = !DILocation(line: 205, column: 12, scope: !7626)
!7629 = !DILocation(line: 206, column: 14, scope: !7626)
!7630 = !DILocation(line: 206, column: 3, scope: !7626)
!7631 = !DILocation(line: 206, column: 12, scope: !7626)
!7632 = !DILocation(line: 207, column: 14, scope: !7626)
!7633 = !DILocation(line: 207, column: 3, scope: !7626)
!7634 = !DILocation(line: 207, column: 12, scope: !7626)
!7635 = !DILocation(line: 209, column: 53, scope: !7636)
!7636 = distinct !DILexicalBlock(scope: !7626, file: !297, line: 208, column: 3)
!7637 = !DILocation(line: 209, column: 9, scope: !7636)
!7638 = !DILocalVariable(name: "tmp", scope: !7613, file: !297, line: 203, type: !14)
!7639 = !DILocation(line: 209, column: 7, scope: !7640)
!7640 = distinct !DILexicalBlock(scope: !7627, file: !297, line: 209, column: 7)
!7641 = !DILocation(line: 209, column: 7, scope: !7627)
!7642 = !DILocation(line: 210, column: 5, scope: !7643)
!7643 = distinct !DILexicalBlock(scope: !7640, file: !297, line: 209, column: 12)
!7644 = !DILocation(line: 212, column: 3, scope: !7627)
!7645 = !DILocation(line: 0, scope: !7627)
!7646 = !DILocation(line: 214, column: 1, scope: !7613)
!7647 = distinct !DISubprogram(name: "none_put", scope: !365, file: !365, line: 48, type: !484, scopeLine: 49, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !666)
!7648 = !DILocalVariable(name: "addr", arg: 1, scope: !7647, file: !365, line: 48, type: !83)
!7649 = !DILocation(line: 0, scope: !7647)
!7650 = !DILocalVariable(name: "val", arg: 2, scope: !7647, file: !365, line: 48, type: !87)
!7651 = !DILocation(line: 50, column: 3, scope: !7652)
!7652 = distinct !DILexicalBlock(scope: !7647, file: !365, line: 52, column: 3)
!7653 = distinct !DISubprogram(name: "none_get", scope: !365, file: !365, line: 43, type: !491, scopeLine: 44, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !666)
!7654 = !DILocalVariable(name: "addr", arg: 1, scope: !7653, file: !365, line: 43, type: !83)
!7655 = !DILocation(line: 0, scope: !7653)
!7656 = !DILocation(line: 45, column: 3, scope: !7657)
!7657 = distinct !DILexicalBlock(scope: !7653, file: !365, line: 47, column: 3)
!7658 = distinct !DISubprogram(name: "mem_put", scope: !365, file: !365, line: 576, type: !7659, scopeLine: 577, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !666)
!7659 = !DISubroutineType(types: !7660)
!7660 = !{null, !83, !83}
!7661 = !DILocalVariable(name: "addr", arg: 1, scope: !7658, file: !365, line: 576, type: !83)
!7662 = !DILocation(line: 0, scope: !7658)
!7663 = !DILocalVariable(name: "val", arg: 2, scope: !7658, file: !365, line: 576, type: !83)
!7664 = !DILocation(line: 578, column: 23, scope: !7665)
!7665 = distinct !DILexicalBlock(scope: !7666, file: !365, line: 581, column: 3)
!7666 = distinct !DILexicalBlock(scope: !7658, file: !365, line: 580, column: 3)
!7667 = !DILocation(line: 578, column: 8, scope: !7665)
!7668 = !DILocalVariable(name: "fn", scope: !7658, file: !365, line: 578, type: !483)
!7669 = !DILocation(line: 579, column: 15, scope: !7670)
!7670 = distinct !DILexicalBlock(scope: !7665, file: !365, line: 579, column: 3)
!7671 = !DILocation(line: 579, column: 3, scope: !7670)
!7672 = !DILocation(line: 580, column: 3, scope: !7666)
!7673 = distinct !DISubprogram(name: "op_nop", scope: !365, file: !365, line: 1469, type: !501, scopeLine: 1470, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !666)
!7674 = !DILocalVariable(name: "op", arg: 1, scope: !7673, file: !365, line: 1469, type: !83)
!7675 = !DILocation(line: 0, scope: !7673)
!7676 = !DILocalVariable(name: "oi", arg: 2, scope: !7673, file: !365, line: 1469, type: !503)
!7677 = !DILocation(line: 1471, column: 3, scope: !7678)
!7678 = distinct !DILexicalBlock(scope: !7679, file: !365, line: 1475, column: 3)
!7679 = distinct !DILexicalBlock(scope: !7680, file: !365, line: 1474, column: 3)
!7680 = distinct !DILexicalBlock(scope: !7673, file: !365, line: 1473, column: 3)
!7681 = !DILocation(line: 1471, column: 13, scope: !7678)
!7682 = !DILocation(line: 1471, column: 5, scope: !7683)
!7683 = distinct !DILexicalBlock(scope: !7678, file: !365, line: 1471, column: 13)
!7684 = !DILocation(line: 1474, column: 3, scope: !7678)
!7685 = !DILocation(line: 1472, column: 3, scope: !7680)
!7686 = distinct !DISubprogram(name: "op_ld_reg16_imm", scope: !365, file: !365, line: 937, type: !501, scopeLine: 938, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !666)
!7687 = !DILocalVariable(name: "op", arg: 1, scope: !7686, file: !365, line: 937, type: !83)
!7688 = !DILocation(line: 0, scope: !7686)
!7689 = !DILocalVariable(name: "oi", arg: 2, scope: !7686, file: !365, line: 937, type: !503)
!7690 = !DILocation(line: 939, column: 9, scope: !7691)
!7691 = distinct !DILexicalBlock(scope: !7692, file: !365, line: 945, column: 3)
!7692 = distinct !DILexicalBlock(scope: !7693, file: !365, line: 944, column: 3)
!7693 = distinct !DILexicalBlock(scope: !7686, file: !365, line: 943, column: 3)
!7694 = !DILocalVariable(name: "tmp", scope: !7686, file: !365, line: 940, type: !83)
!7695 = !DILocation(line: 939, column: 9, scope: !7692)
!7696 = !DILocalVariable(name: "val", scope: !7686, file: !365, line: 939, type: !15)
!7697 = !DILocation(line: 940, column: 21, scope: !7692)
!7698 = !DILocation(line: 940, column: 27, scope: !7692)
!7699 = !DILocation(line: 940, column: 9, scope: !7692)
!7700 = !DILocalVariable(name: "reg", scope: !7686, file: !365, line: 941, type: !15)
!7701 = !DILocation(line: 942, column: 22, scope: !7692)
!7702 = !DILocation(line: 942, column: 10, scope: !7692)
!7703 = !DILocation(line: 942, column: 7, scope: !7692)
!7704 = !DILocation(line: 943, column: 3, scope: !7705)
!7705 = distinct !DILexicalBlock(scope: !7706, file: !365, line: 945, column: 3)
!7706 = distinct !DILexicalBlock(scope: !7693, file: !365, line: 944, column: 3)
!7707 = !DILocation(line: 943, column: 13, scope: !7705)
!7708 = !DILocation(line: 943, column: 5, scope: !7709)
!7709 = distinct !DILexicalBlock(scope: !7705, file: !365, line: 943, column: 13)
!7710 = !DILocation(line: 946, column: 3, scope: !7705)
!7711 = !DILocation(line: 944, column: 48, scope: !7693)
!7712 = !DILocation(line: 944, column: 38, scope: !7693)
!7713 = !DILocation(line: 944, column: 20, scope: !7693)
!7714 = !DILocation(line: 944, column: 3, scope: !7693)
!7715 = !DILocation(line: 944, column: 46, scope: !7693)
!7716 = !DILocation(line: 945, column: 3, scope: !7693)
!7717 = distinct !DISubprogram(name: "op_ld_reg16_a", scope: !365, file: !365, line: 947, type: !501, scopeLine: 948, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !666)
!7718 = !DILocalVariable(name: "op", arg: 1, scope: !7717, file: !365, line: 947, type: !83)
!7719 = !DILocation(line: 0, scope: !7717)
!7720 = !DILocalVariable(name: "oi", arg: 2, scope: !7717, file: !365, line: 947, type: !503)
!7721 = !DILocation(line: 949, column: 21, scope: !7722)
!7722 = distinct !DILexicalBlock(scope: !7717, file: !365, line: 953, column: 3)
!7723 = !DILocation(line: 949, column: 27, scope: !7722)
!7724 = !DILocation(line: 949, column: 9, scope: !7722)
!7725 = !DILocalVariable(name: "reg", scope: !7717, file: !365, line: 949, type: !15)
!7726 = !DILocation(line: 952, column: 22, scope: !7722)
!7727 = !DILocation(line: 952, column: 10, scope: !7722)
!7728 = !DILocation(line: 952, column: 7, scope: !7722)
!7729 = !DILocation(line: 953, column: 10, scope: !7730)
!7730 = distinct !DILexicalBlock(scope: !7722, file: !365, line: 953, column: 7)
!7731 = !DILocation(line: 953, column: 7, scope: !7722)
!7732 = !DILocation(line: 954, column: 5, scope: !7733)
!7733 = distinct !DILexicalBlock(scope: !7734, file: !365, line: 955, column: 5)
!7734 = distinct !DILexicalBlock(scope: !7735, file: !365, line: 954, column: 5)
!7735 = distinct !DILexicalBlock(scope: !7730, file: !365, line: 953, column: 16)
!7736 = !DILocation(line: 954, column: 15, scope: !7733)
!7737 = !DILocation(line: 954, column: 7, scope: !7738)
!7738 = distinct !DILexicalBlock(scope: !7733, file: !365, line: 954, column: 15)
!7739 = !DILocation(line: 957, column: 5, scope: !7733)
!7740 = !DILocation(line: 955, column: 44, scope: !7741)
!7741 = distinct !DILexicalBlock(scope: !7735, file: !365, line: 960, column: 5)
!7742 = !DILocation(line: 955, column: 26, scope: !7741)
!7743 = !DILocation(line: 955, column: 9, scope: !7741)
!7744 = !DILocalVariable(name: "r", scope: !7717, file: !365, line: 950, type: !86)
!7745 = !DILocation(line: 955, column: 19, scope: !7746)
!7746 = distinct !DILexicalBlock(scope: !7741, file: !365, line: 956, column: 5)
!7747 = !DILocation(line: 955, column: 11, scope: !7746)
!7748 = !DILocalVariable(name: "tmp", scope: !7717, file: !365, line: 951, type: !83)
!7749 = !DILocation(line: 955, column: 23, scope: !7741)
!7750 = !DILocation(line: 955, column: 21, scope: !7741)
!7751 = !DILocation(line: 957, column: 3, scope: !7735)
!7752 = !DILocation(line: 957, column: 5, scope: !7753)
!7753 = distinct !DILexicalBlock(scope: !7754, file: !365, line: 959, column: 5)
!7754 = distinct !DILexicalBlock(scope: !7755, file: !365, line: 958, column: 5)
!7755 = distinct !DILexicalBlock(scope: !7730, file: !365, line: 957, column: 10)
!7756 = !DILocation(line: 957, column: 15, scope: !7753)
!7757 = !DILocation(line: 957, column: 7, scope: !7758)
!7758 = distinct !DILexicalBlock(scope: !7753, file: !365, line: 957, column: 15)
!7759 = !DILocation(line: 960, column: 5, scope: !7753)
!7760 = !DILocation(line: 958, column: 44, scope: !7761)
!7761 = distinct !DILexicalBlock(scope: !7755, file: !365, line: 963, column: 5)
!7762 = !DILocation(line: 958, column: 26, scope: !7761)
!7763 = !DILocation(line: 958, column: 9, scope: !7761)
!7764 = !DILocation(line: 958, column: 13, scope: !7765)
!7765 = distinct !DILexicalBlock(scope: !7761, file: !365, line: 959, column: 5)
!7766 = !DILocation(line: 958, column: 52, scope: !7765)
!7767 = !DILocation(line: 958, column: 27, scope: !7765)
!7768 = !DILocation(line: 958, column: 5, scope: !7765)
!7769 = !DILocation(line: 0, scope: !7730)
!7770 = !DILocation(line: 961, column: 11, scope: !7771)
!7771 = distinct !DILexicalBlock(scope: !7722, file: !365, line: 961, column: 7)
!7772 = !DILocation(line: 961, column: 7, scope: !7722)
!7773 = !DILocation(line: 962, column: 21, scope: !7774)
!7774 = distinct !DILexicalBlock(scope: !7771, file: !365, line: 961, column: 18)
!7775 = !DILocation(line: 962, column: 38, scope: !7774)
!7776 = !DILocation(line: 962, column: 45, scope: !7774)
!7777 = !DILocation(line: 962, column: 52, scope: !7774)
!7778 = !DILocation(line: 962, column: 58, scope: !7774)
!7779 = !DILocation(line: 962, column: 29, scope: !7774)
!7780 = !DILocation(line: 962, column: 9, scope: !7774)
!7781 = !DILocation(line: 963, column: 40, scope: !7774)
!7782 = !DILocation(line: 963, column: 22, scope: !7774)
!7783 = !DILocation(line: 963, column: 5, scope: !7774)
!7784 = !DILocation(line: 963, column: 48, scope: !7774)
!7785 = !DILocation(line: 964, column: 3, scope: !7774)
!7786 = !DILocation(line: 965, column: 3, scope: !7722)
!7787 = distinct !DISubprogram(name: "op_inc16", scope: !365, file: !365, line: 1018, type: !501, scopeLine: 1019, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !666)
!7788 = !DILocalVariable(name: "op", arg: 1, scope: !7787, file: !365, line: 1018, type: !83)
!7789 = !DILocation(line: 0, scope: !7787)
!7790 = !DILocalVariable(name: "oi", arg: 2, scope: !7787, file: !365, line: 1018, type: !503)
!7791 = !DILocation(line: 1020, column: 21, scope: !7792)
!7792 = distinct !DILexicalBlock(scope: !7787, file: !365, line: 1023, column: 3)
!7793 = !DILocation(line: 1020, column: 27, scope: !7792)
!7794 = !DILocation(line: 1020, column: 9, scope: !7792)
!7795 = !DILocalVariable(name: "reg", scope: !7787, file: !365, line: 1020, type: !15)
!7796 = !DILocation(line: 1021, column: 44, scope: !7792)
!7797 = !DILocation(line: 1021, column: 26, scope: !7792)
!7798 = !DILocation(line: 1021, column: 9, scope: !7792)
!7799 = !DILocalVariable(name: "res", scope: !7787, file: !365, line: 1021, type: !86)
!7800 = !DILocation(line: 1023, column: 3, scope: !7801)
!7801 = distinct !DILexicalBlock(scope: !7802, file: !365, line: 1023, column: 3)
!7802 = distinct !DILexicalBlock(scope: !7792, file: !365, line: 1022, column: 3)
!7803 = !DILocation(line: 1023, column: 13, scope: !7801)
!7804 = !DILocation(line: 1023, column: 5, scope: !7805)
!7805 = distinct !DILexicalBlock(scope: !7801, file: !365, line: 1023, column: 13)
!7806 = !DILocation(line: 1026, column: 3, scope: !7801)
!7807 = !DILocation(line: 1024, column: 21, scope: !7792)
!7808 = !DILocation(line: 1024, column: 31, scope: !7792)
!7809 = !DILocation(line: 1024, column: 9, scope: !7792)
!7810 = !DILocation(line: 1025, column: 38, scope: !7792)
!7811 = !DILocation(line: 1025, column: 20, scope: !7792)
!7812 = !DILocation(line: 1025, column: 3, scope: !7792)
!7813 = !DILocation(line: 1025, column: 46, scope: !7792)
!7814 = !DILocation(line: 1026, column: 3, scope: !7792)
!7815 = distinct !DISubprogram(name: "op_inc", scope: !365, file: !365, line: 1002, type: !501, scopeLine: 1003, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !666)
!7816 = !DILocalVariable(name: "op", arg: 1, scope: !7815, file: !365, line: 1002, type: !83)
!7817 = !DILocation(line: 0, scope: !7815)
!7818 = !DILocalVariable(name: "oi", arg: 2, scope: !7815, file: !365, line: 1002, type: !503)
!7819 = !DILocation(line: 1004, column: 21, scope: !7820)
!7820 = distinct !DILexicalBlock(scope: !7815, file: !365, line: 1009, column: 3)
!7821 = !DILocation(line: 1004, column: 27, scope: !7820)
!7822 = !DILocation(line: 1004, column: 9, scope: !7820)
!7823 = !DILocalVariable(name: "reg", scope: !7815, file: !365, line: 1004, type: !15)
!7824 = !DILocation(line: 1008, column: 3, scope: !7825)
!7825 = distinct !DILexicalBlock(scope: !7826, file: !365, line: 1006, column: 3)
!7826 = distinct !DILexicalBlock(scope: !7820, file: !365, line: 1005, column: 3)
!7827 = !DILocation(line: 1008, column: 13, scope: !7825)
!7828 = !DILocation(line: 1008, column: 5, scope: !7829)
!7829 = distinct !DILexicalBlock(scope: !7825, file: !365, line: 1008, column: 13)
!7830 = !DILocation(line: 1011, column: 3, scope: !7825)
!7831 = !DILocation(line: 1009, column: 3, scope: !7832)
!7832 = distinct !DILexicalBlock(scope: !7833, file: !365, line: 1015, column: 3)
!7833 = distinct !DILexicalBlock(scope: !7820, file: !365, line: 1014, column: 3)
!7834 = !DILocation(line: 1010, column: 9, scope: !7835)
!7835 = distinct !DILexicalBlock(scope: !7833, file: !365, line: 1011, column: 3)
!7836 = !DILocalVariable(name: "tmp", scope: !7815, file: !365, line: 1007, type: !83)
!7837 = !DILocation(line: 1010, column: 9, scope: !7833)
!7838 = !DILocalVariable(name: "res", scope: !7815, file: !365, line: 1005, type: !87)
!7839 = !DILocalVariable(name: "old", scope: !7815, file: !365, line: 1006, type: !87)
!7840 = !DILocation(line: 1011, column: 20, scope: !7833)
!7841 = !DILocation(line: 1011, column: 30, scope: !7833)
!7842 = !DILocation(line: 1011, column: 9, scope: !7833)
!7843 = !DILocation(line: 1012, column: 16, scope: !7844)
!7844 = distinct !DILexicalBlock(scope: !7833, file: !365, line: 1012, column: 3)
!7845 = !DILocation(line: 1012, column: 3, scope: !7844)
!7846 = !DILocation(line: 1013, column: 52, scope: !7833)
!7847 = !DILocation(line: 1013, column: 32, scope: !7833)
!7848 = !DILocation(line: 1013, column: 54, scope: !7833)
!7849 = !DILocation(line: 1013, column: 21, scope: !7833)
!7850 = !DILocation(line: 1013, column: 19, scope: !7833)
!7851 = !DILocation(line: 1014, column: 7, scope: !7852)
!7852 = distinct !DILexicalBlock(scope: !7820, file: !365, line: 1014, column: 7)
!7853 = !DILocation(line: 1014, column: 17, scope: !7852)
!7854 = !DILocation(line: 1014, column: 7, scope: !7820)
!7855 = !DILocation(line: 1014, column: 54, scope: !7856)
!7856 = distinct !DILexicalBlock(scope: !7852, file: !365, line: 1014, column: 23)
!7857 = !DILocation(line: 1014, column: 34, scope: !7856)
!7858 = !DILocation(line: 1014, column: 56, scope: !7856)
!7859 = !DILocation(line: 1014, column: 23, scope: !7856)
!7860 = !DILocation(line: 1014, column: 21, scope: !7856)
!7861 = !DILocation(line: 1015, column: 3, scope: !7856)
!7862 = !DILocation(line: 1015, column: 8, scope: !7863)
!7863 = distinct !DILexicalBlock(scope: !7820, file: !365, line: 1015, column: 7)
!7864 = !DILocation(line: 1015, column: 18, scope: !7863)
!7865 = !DILocation(line: 1015, column: 27, scope: !7863)
!7866 = !DILocation(line: 1015, column: 37, scope: !7863)
!7867 = !DILocation(line: 1015, column: 24, scope: !7863)
!7868 = !DILocation(line: 1015, column: 7, scope: !7820)
!7869 = !DILocation(line: 1015, column: 54, scope: !7870)
!7870 = distinct !DILexicalBlock(scope: !7863, file: !365, line: 1015, column: 44)
!7871 = !DILocation(line: 1015, column: 34, scope: !7870)
!7872 = !DILocation(line: 1015, column: 56, scope: !7870)
!7873 = !DILocation(line: 1015, column: 23, scope: !7870)
!7874 = !DILocation(line: 1015, column: 21, scope: !7870)
!7875 = !DILocation(line: 1016, column: 3, scope: !7870)
!7876 = !DILocation(line: 1016, column: 3, scope: !7820)
!7877 = distinct !DISubprogram(name: "op_dec", scope: !365, file: !365, line: 1028, type: !501, scopeLine: 1029, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !666)
!7878 = !DILocalVariable(name: "op", arg: 1, scope: !7877, file: !365, line: 1028, type: !83)
!7879 = !DILocation(line: 0, scope: !7877)
!7880 = !DILocalVariable(name: "oi", arg: 2, scope: !7877, file: !365, line: 1028, type: !503)
!7881 = !DILocation(line: 1030, column: 21, scope: !7882)
!7882 = distinct !DILexicalBlock(scope: !7877, file: !365, line: 1035, column: 3)
!7883 = !DILocation(line: 1030, column: 27, scope: !7882)
!7884 = !DILocation(line: 1030, column: 9, scope: !7882)
!7885 = !DILocalVariable(name: "reg", scope: !7877, file: !365, line: 1030, type: !15)
!7886 = !DILocation(line: 1034, column: 3, scope: !7887)
!7887 = distinct !DILexicalBlock(scope: !7888, file: !365, line: 1032, column: 3)
!7888 = distinct !DILexicalBlock(scope: !7882, file: !365, line: 1031, column: 3)
!7889 = !DILocation(line: 1034, column: 13, scope: !7887)
!7890 = !DILocation(line: 1034, column: 5, scope: !7891)
!7891 = distinct !DILexicalBlock(scope: !7887, file: !365, line: 1034, column: 13)
!7892 = !DILocation(line: 1037, column: 3, scope: !7887)
!7893 = !DILocation(line: 1035, column: 3, scope: !7894)
!7894 = distinct !DILexicalBlock(scope: !7895, file: !365, line: 1041, column: 3)
!7895 = distinct !DILexicalBlock(scope: !7882, file: !365, line: 1040, column: 3)
!7896 = !DILocation(line: 1036, column: 9, scope: !7897)
!7897 = distinct !DILexicalBlock(scope: !7895, file: !365, line: 1037, column: 3)
!7898 = !DILocalVariable(name: "tmp", scope: !7877, file: !365, line: 1033, type: !83)
!7899 = !DILocation(line: 1036, column: 9, scope: !7895)
!7900 = !DILocalVariable(name: "res", scope: !7877, file: !365, line: 1031, type: !87)
!7901 = !DILocalVariable(name: "old", scope: !7877, file: !365, line: 1032, type: !87)
!7902 = !DILocation(line: 1037, column: 20, scope: !7895)
!7903 = !DILocation(line: 1037, column: 30, scope: !7895)
!7904 = !DILocation(line: 1037, column: 9, scope: !7895)
!7905 = !DILocation(line: 1038, column: 16, scope: !7906)
!7906 = distinct !DILexicalBlock(scope: !7895, file: !365, line: 1038, column: 3)
!7907 = !DILocation(line: 1038, column: 3, scope: !7906)
!7908 = !DILocation(line: 1039, column: 52, scope: !7895)
!7909 = !DILocation(line: 1039, column: 32, scope: !7895)
!7910 = !DILocation(line: 1039, column: 54, scope: !7895)
!7911 = !DILocation(line: 1039, column: 21, scope: !7895)
!7912 = !DILocation(line: 1039, column: 19, scope: !7895)
!7913 = !DILocation(line: 1040, column: 52, scope: !7895)
!7914 = !DILocation(line: 1040, column: 32, scope: !7895)
!7915 = !DILocation(line: 1040, column: 54, scope: !7895)
!7916 = !DILocation(line: 1040, column: 21, scope: !7895)
!7917 = !DILocation(line: 1040, column: 19, scope: !7895)
!7918 = !DILocation(line: 1041, column: 7, scope: !7919)
!7919 = distinct !DILexicalBlock(scope: !7882, file: !365, line: 1041, column: 7)
!7920 = !DILocation(line: 1041, column: 17, scope: !7919)
!7921 = !DILocation(line: 1041, column: 7, scope: !7882)
!7922 = !DILocation(line: 1041, column: 54, scope: !7923)
!7923 = distinct !DILexicalBlock(scope: !7919, file: !365, line: 1041, column: 23)
!7924 = !DILocation(line: 1041, column: 34, scope: !7923)
!7925 = !DILocation(line: 1041, column: 56, scope: !7923)
!7926 = !DILocation(line: 1041, column: 23, scope: !7923)
!7927 = !DILocation(line: 1041, column: 21, scope: !7923)
!7928 = !DILocation(line: 1042, column: 3, scope: !7923)
!7929 = !DILocation(line: 1042, column: 8, scope: !7930)
!7930 = distinct !DILexicalBlock(scope: !7882, file: !365, line: 1042, column: 7)
!7931 = !DILocation(line: 1042, column: 18, scope: !7930)
!7932 = !DILocation(line: 1042, column: 27, scope: !7930)
!7933 = !DILocation(line: 1042, column: 37, scope: !7930)
!7934 = !DILocation(line: 1042, column: 24, scope: !7930)
!7935 = !DILocation(line: 1042, column: 7, scope: !7882)
!7936 = !DILocation(line: 1042, column: 54, scope: !7937)
!7937 = distinct !DILexicalBlock(scope: !7930, file: !365, line: 1042, column: 44)
!7938 = !DILocation(line: 1042, column: 34, scope: !7937)
!7939 = !DILocation(line: 1042, column: 56, scope: !7937)
!7940 = !DILocation(line: 1042, column: 23, scope: !7937)
!7941 = !DILocation(line: 1042, column: 21, scope: !7937)
!7942 = !DILocation(line: 1043, column: 3, scope: !7937)
!7943 = !DILocation(line: 1043, column: 3, scope: !7882)
!7944 = distinct !DISubprogram(name: "op_ld_reg8_imm", scope: !365, file: !365, line: 967, type: !501, scopeLine: 968, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !666)
!7945 = !DILocalVariable(name: "op", arg: 1, scope: !7944, file: !365, line: 967, type: !83)
!7946 = !DILocation(line: 0, scope: !7944)
!7947 = !DILocalVariable(name: "oi", arg: 2, scope: !7944, file: !365, line: 967, type: !503)
!7948 = !DILocation(line: 969, column: 9, scope: !7949)
!7949 = distinct !DILexicalBlock(scope: !7950, file: !365, line: 975, column: 3)
!7950 = distinct !DILexicalBlock(scope: !7951, file: !365, line: 974, column: 3)
!7951 = distinct !DILexicalBlock(scope: !7944, file: !365, line: 973, column: 3)
!7952 = !DILocalVariable(name: "tmp", scope: !7944, file: !365, line: 970, type: !83)
!7953 = !DILocation(line: 969, column: 9, scope: !7950)
!7954 = !DILocalVariable(name: "val", scope: !7944, file: !365, line: 969, type: !15)
!7955 = !DILocation(line: 970, column: 21, scope: !7950)
!7956 = !DILocation(line: 970, column: 27, scope: !7950)
!7957 = !DILocation(line: 970, column: 9, scope: !7950)
!7958 = !DILocalVariable(name: "reg", scope: !7944, file: !365, line: 971, type: !15)
!7959 = !DILocation(line: 972, column: 3, scope: !7960)
!7960 = distinct !DILexicalBlock(scope: !7961, file: !365, line: 973, column: 3)
!7961 = distinct !DILexicalBlock(scope: !7951, file: !365, line: 972, column: 3)
!7962 = !DILocation(line: 972, column: 13, scope: !7960)
!7963 = !DILocation(line: 972, column: 5, scope: !7964)
!7964 = distinct !DILexicalBlock(scope: !7960, file: !365, line: 972, column: 13)
!7965 = !DILocation(line: 975, column: 3, scope: !7960)
!7966 = !DILocation(line: 973, column: 3, scope: !7967)
!7967 = distinct !DILexicalBlock(scope: !7968, file: !365, line: 979, column: 3)
!7968 = distinct !DILexicalBlock(scope: !7951, file: !365, line: 978, column: 3)
!7969 = !DILocation(line: 974, column: 16, scope: !7970)
!7970 = distinct !DILexicalBlock(scope: !7968, file: !365, line: 975, column: 3)
!7971 = !DILocation(line: 974, column: 3, scope: !7970)
!7972 = !DILocation(line: 975, column: 3, scope: !7973)
!7973 = distinct !DILexicalBlock(scope: !7974, file: !365, line: 978, column: 3)
!7974 = distinct !DILexicalBlock(scope: !7951, file: !365, line: 977, column: 3)
!7975 = !DILocation(line: 975, column: 13, scope: !7973)
!7976 = !DILocation(line: 975, column: 5, scope: !7977)
!7977 = distinct !DILexicalBlock(scope: !7973, file: !365, line: 975, column: 13)
!7978 = !DILocation(line: 978, column: 3, scope: !7973)
!7979 = !DILocation(line: 976, column: 3, scope: !7951)
!7980 = distinct !DISubprogram(name: "op_rlca", scope: !365, file: !365, line: 723, type: !501, scopeLine: 724, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !666)
!7981 = !DILocalVariable(name: "op", arg: 1, scope: !7980, file: !365, line: 723, type: !83)
!7982 = !DILocation(line: 0, scope: !7980)
!7983 = !DILocalVariable(name: "oi", arg: 2, scope: !7980, file: !365, line: 723, type: !503)
!7984 = !DILocation(line: 727, column: 3, scope: !7985)
!7985 = distinct !DILexicalBlock(scope: !7986, file: !365, line: 729, column: 3)
!7986 = distinct !DILexicalBlock(scope: !7987, file: !365, line: 728, column: 3)
!7987 = distinct !DILexicalBlock(scope: !7980, file: !365, line: 727, column: 3)
!7988 = !DILocation(line: 727, column: 13, scope: !7985)
!7989 = !DILocation(line: 727, column: 5, scope: !7990)
!7990 = distinct !DILexicalBlock(scope: !7985, file: !365, line: 727, column: 13)
!7991 = !DILocation(line: 730, column: 3, scope: !7985)
!7992 = !DILocation(line: 728, column: 23, scope: !7987)
!7993 = !DILocalVariable(name: "res", scope: !7980, file: !365, line: 725, type: !87)
!7994 = !DILocation(line: 729, column: 20, scope: !7987)
!7995 = !DILocation(line: 729, column: 30, scope: !7987)
!7996 = !DILocation(line: 729, column: 9, scope: !7987)
!7997 = !DILocation(line: 730, column: 20, scope: !7987)
!7998 = !DILocation(line: 730, column: 53, scope: !7987)
!7999 = !DILocation(line: 730, column: 33, scope: !7987)
!8000 = !DILocation(line: 730, column: 55, scope: !7987)
!8001 = !DILocation(line: 730, column: 30, scope: !7987)
!8002 = !DILocation(line: 730, column: 9, scope: !7987)
!8003 = !DILocation(line: 731, column: 53, scope: !7987)
!8004 = !DILocation(line: 731, column: 33, scope: !7987)
!8005 = !DILocation(line: 731, column: 55, scope: !7987)
!8006 = !DILocation(line: 731, column: 61, scope: !7987)
!8007 = !DILocation(line: 731, column: 21, scope: !7987)
!8008 = !DILocation(line: 731, column: 19, scope: !7987)
!8009 = !DILocation(line: 732, column: 7, scope: !8010)
!8010 = distinct !DILexicalBlock(scope: !7987, file: !365, line: 732, column: 7)
!8011 = !DILocation(line: 732, column: 17, scope: !8010)
!8012 = !DILocation(line: 732, column: 7, scope: !7987)
!8013 = !DILocation(line: 732, column: 54, scope: !8014)
!8014 = distinct !DILexicalBlock(scope: !8010, file: !365, line: 732, column: 23)
!8015 = !DILocation(line: 732, column: 34, scope: !8014)
!8016 = !DILocation(line: 732, column: 56, scope: !8014)
!8017 = !DILocation(line: 732, column: 23, scope: !8014)
!8018 = !DILocation(line: 732, column: 21, scope: !8014)
!8019 = !DILocation(line: 733, column: 3, scope: !8014)
!8020 = !DILocation(line: 733, column: 19, scope: !7987)
!8021 = !DILocation(line: 734, column: 3, scope: !7987)
!8022 = distinct !DISubprogram(name: "op_ld_ind16_sp", scope: !365, file: !365, line: 907, type: !501, scopeLine: 908, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !666)
!8023 = !DILocalVariable(name: "op", arg: 1, scope: !8022, file: !365, line: 907, type: !83)
!8024 = !DILocation(line: 0, scope: !8022)
!8025 = !DILocalVariable(name: "oi", arg: 2, scope: !8022, file: !365, line: 907, type: !503)
!8026 = !DILocation(line: 909, column: 9, scope: !8027)
!8027 = distinct !DILexicalBlock(scope: !8028, file: !365, line: 915, column: 3)
!8028 = distinct !DILexicalBlock(scope: !8029, file: !365, line: 914, column: 3)
!8029 = distinct !DILexicalBlock(scope: !8022, file: !365, line: 913, column: 3)
!8030 = !DILocalVariable(name: "tmp", scope: !8022, file: !365, line: 910, type: !83)
!8031 = !DILocation(line: 909, column: 9, scope: !8028)
!8032 = !DILocalVariable(name: "ofs", scope: !8022, file: !365, line: 909, type: !15)
!8033 = !DILocation(line: 910, column: 15, scope: !8028)
!8034 = !DILocation(line: 910, column: 8, scope: !8028)
!8035 = !DILocalVariable(name: "sp", scope: !8022, file: !365, line: 911, type: !15)
!8036 = !DILocation(line: 912, column: 3, scope: !8037)
!8037 = distinct !DILexicalBlock(scope: !8038, file: !365, line: 913, column: 3)
!8038 = distinct !DILexicalBlock(scope: !8029, file: !365, line: 912, column: 3)
!8039 = !DILocation(line: 912, column: 13, scope: !8037)
!8040 = !DILocation(line: 912, column: 5, scope: !8041)
!8041 = distinct !DILexicalBlock(scope: !8037, file: !365, line: 912, column: 13)
!8042 = !DILocation(line: 915, column: 3, scope: !8037)
!8043 = !DILocation(line: 913, column: 11, scope: !8044)
!8044 = distinct !DILexicalBlock(scope: !8045, file: !365, line: 919, column: 3)
!8045 = distinct !DILexicalBlock(scope: !8029, file: !365, line: 918, column: 3)
!8046 = !DILocation(line: 913, column: 42, scope: !8044)
!8047 = !DILocation(line: 913, column: 27, scope: !8044)
!8048 = !DILocation(line: 913, column: 3, scope: !8044)
!8049 = !DILocation(line: 914, column: 27, scope: !8050)
!8050 = distinct !DILexicalBlock(scope: !8045, file: !365, line: 915, column: 3)
!8051 = !DILocation(line: 914, column: 11, scope: !8050)
!8052 = !DILocation(line: 914, column: 49, scope: !8050)
!8053 = !DILocation(line: 914, column: 34, scope: !8050)
!8054 = !DILocation(line: 914, column: 3, scope: !8050)
!8055 = !DILocation(line: 915, column: 3, scope: !8029)
!8056 = distinct !DISubprogram(name: "op_add_hl", scope: !365, file: !365, line: 1099, type: !501, scopeLine: 1100, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !666)
!8057 = !DILocalVariable(name: "op", arg: 1, scope: !8056, file: !365, line: 1099, type: !83)
!8058 = !DILocation(line: 0, scope: !8056)
!8059 = !DILocalVariable(name: "oi", arg: 2, scope: !8056, file: !365, line: 1099, type: !503)
!8060 = !DILocation(line: 1101, column: 21, scope: !8061)
!8061 = distinct !DILexicalBlock(scope: !8056, file: !365, line: 1105, column: 3)
!8062 = !DILocation(line: 1101, column: 27, scope: !8061)
!8063 = !DILocation(line: 1101, column: 9, scope: !8061)
!8064 = !DILocalVariable(name: "reg", scope: !8056, file: !365, line: 1101, type: !15)
!8065 = !DILocation(line: 1102, column: 9, scope: !8061)
!8066 = !DILocalVariable(name: "old", scope: !8056, file: !365, line: 1102, type: !86)
!8067 = !DILocalVariable(name: "new", scope: !8056, file: !365, line: 1103, type: !86)
!8068 = !DILocation(line: 1105, column: 22, scope: !8061)
!8069 = !DILocation(line: 1105, column: 10, scope: !8061)
!8070 = !DILocation(line: 1105, column: 7, scope: !8061)
!8071 = !DILocation(line: 1106, column: 3, scope: !8072)
!8072 = distinct !DILexicalBlock(scope: !8073, file: !365, line: 1107, column: 3)
!8073 = distinct !DILexicalBlock(scope: !8061, file: !365, line: 1106, column: 3)
!8074 = !DILocation(line: 1106, column: 13, scope: !8072)
!8075 = !DILocation(line: 1106, column: 5, scope: !8076)
!8076 = distinct !DILexicalBlock(scope: !8072, file: !365, line: 1106, column: 13)
!8077 = !DILocation(line: 1109, column: 3, scope: !8072)
!8078 = !DILocation(line: 1108, column: 21, scope: !8061)
!8079 = !DILocation(line: 1108, column: 74, scope: !8061)
!8080 = !DILocation(line: 1108, column: 56, scope: !8061)
!8081 = !DILocation(line: 1108, column: 39, scope: !8061)
!8082 = !DILocation(line: 1108, column: 33, scope: !8061)
!8083 = !DILocation(line: 1108, column: 31, scope: !8061)
!8084 = !DILocation(line: 1108, column: 9, scope: !8061)
!8085 = !DILocation(line: 1109, column: 39, scope: !8061)
!8086 = !DILocation(line: 1111, column: 52, scope: !8061)
!8087 = !DILocation(line: 1111, column: 32, scope: !8061)
!8088 = !DILocation(line: 1111, column: 54, scope: !8061)
!8089 = !DILocation(line: 1111, column: 21, scope: !8061)
!8090 = !DILocation(line: 1111, column: 19, scope: !8061)
!8091 = !DILocation(line: 1112, column: 7, scope: !8092)
!8092 = distinct !DILexicalBlock(scope: !8061, file: !365, line: 1112, column: 7)
!8093 = !DILocation(line: 1112, column: 19, scope: !8092)
!8094 = !DILocation(line: 1112, column: 17, scope: !8092)
!8095 = !DILocation(line: 1112, column: 7, scope: !8061)
!8096 = !DILocation(line: 1112, column: 54, scope: !8097)
!8097 = distinct !DILexicalBlock(scope: !8092, file: !365, line: 1112, column: 30)
!8098 = !DILocation(line: 1112, column: 34, scope: !8097)
!8099 = !DILocation(line: 1112, column: 56, scope: !8097)
!8100 = !DILocation(line: 1112, column: 23, scope: !8097)
!8101 = !DILocation(line: 1112, column: 21, scope: !8097)
!8102 = !DILocation(line: 1113, column: 3, scope: !8097)
!8103 = !DILocation(line: 1113, column: 8, scope: !8104)
!8104 = distinct !DILexicalBlock(scope: !8061, file: !365, line: 1113, column: 7)
!8105 = !DILocation(line: 1113, column: 18, scope: !8104)
!8106 = !DILocation(line: 1113, column: 29, scope: !8104)
!8107 = !DILocation(line: 1113, column: 39, scope: !8104)
!8108 = !DILocation(line: 1113, column: 26, scope: !8104)
!8109 = !DILocation(line: 1113, column: 7, scope: !8061)
!8110 = !DILocation(line: 1113, column: 54, scope: !8111)
!8111 = distinct !DILexicalBlock(scope: !8104, file: !365, line: 1113, column: 48)
!8112 = !DILocation(line: 1113, column: 34, scope: !8111)
!8113 = !DILocation(line: 1113, column: 56, scope: !8111)
!8114 = !DILocation(line: 1113, column: 23, scope: !8111)
!8115 = !DILocation(line: 1113, column: 21, scope: !8111)
!8116 = !DILocation(line: 1114, column: 3, scope: !8111)
!8117 = !DILocation(line: 1114, column: 3, scope: !8061)
!8118 = distinct !DISubprogram(name: "op_dec16", scope: !365, file: !365, line: 1045, type: !501, scopeLine: 1046, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !666)
!8119 = !DILocalVariable(name: "op", arg: 1, scope: !8118, file: !365, line: 1045, type: !83)
!8120 = !DILocation(line: 0, scope: !8118)
!8121 = !DILocalVariable(name: "oi", arg: 2, scope: !8118, file: !365, line: 1045, type: !503)
!8122 = !DILocation(line: 1047, column: 21, scope: !8123)
!8123 = distinct !DILexicalBlock(scope: !8118, file: !365, line: 1050, column: 3)
!8124 = !DILocation(line: 1047, column: 27, scope: !8123)
!8125 = !DILocation(line: 1047, column: 9, scope: !8123)
!8126 = !DILocalVariable(name: "reg", scope: !8118, file: !365, line: 1047, type: !15)
!8127 = !DILocation(line: 1048, column: 44, scope: !8123)
!8128 = !DILocation(line: 1048, column: 26, scope: !8123)
!8129 = !DILocation(line: 1048, column: 9, scope: !8123)
!8130 = !DILocalVariable(name: "res", scope: !8118, file: !365, line: 1048, type: !86)
!8131 = !DILocation(line: 1050, column: 3, scope: !8132)
!8132 = distinct !DILexicalBlock(scope: !8133, file: !365, line: 1050, column: 3)
!8133 = distinct !DILexicalBlock(scope: !8123, file: !365, line: 1049, column: 3)
!8134 = !DILocation(line: 1050, column: 13, scope: !8132)
!8135 = !DILocation(line: 1050, column: 5, scope: !8136)
!8136 = distinct !DILexicalBlock(scope: !8132, file: !365, line: 1050, column: 13)
!8137 = !DILocation(line: 1053, column: 3, scope: !8132)
!8138 = !DILocation(line: 1051, column: 21, scope: !8123)
!8139 = !DILocation(line: 1051, column: 31, scope: !8123)
!8140 = !DILocation(line: 1051, column: 9, scope: !8123)
!8141 = !DILocation(line: 1052, column: 38, scope: !8123)
!8142 = !DILocation(line: 1052, column: 20, scope: !8123)
!8143 = !DILocation(line: 1052, column: 3, scope: !8123)
!8144 = !DILocation(line: 1052, column: 46, scope: !8123)
!8145 = !DILocation(line: 1053, column: 3, scope: !8123)
!8146 = distinct !DISubprogram(name: "op_rrca", scope: !365, file: !365, line: 793, type: !501, scopeLine: 794, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !666)
!8147 = !DILocalVariable(name: "op", arg: 1, scope: !8146, file: !365, line: 793, type: !83)
!8148 = !DILocation(line: 0, scope: !8146)
!8149 = !DILocalVariable(name: "oi", arg: 2, scope: !8146, file: !365, line: 793, type: !503)
!8150 = !DILocation(line: 797, column: 3, scope: !8151)
!8151 = distinct !DILexicalBlock(scope: !8152, file: !365, line: 799, column: 3)
!8152 = distinct !DILexicalBlock(scope: !8153, file: !365, line: 798, column: 3)
!8153 = distinct !DILexicalBlock(scope: !8146, file: !365, line: 797, column: 3)
!8154 = !DILocation(line: 797, column: 13, scope: !8151)
!8155 = !DILocation(line: 797, column: 5, scope: !8156)
!8156 = distinct !DILexicalBlock(scope: !8151, file: !365, line: 797, column: 13)
!8157 = !DILocation(line: 800, column: 3, scope: !8151)
!8158 = !DILocation(line: 798, column: 23, scope: !8153)
!8159 = !DILocalVariable(name: "res", scope: !8146, file: !365, line: 795, type: !87)
!8160 = !DILocation(line: 799, column: 20, scope: !8153)
!8161 = !DILocation(line: 799, column: 30, scope: !8153)
!8162 = !DILocation(line: 799, column: 9, scope: !8153)
!8163 = !DILocation(line: 800, column: 20, scope: !8153)
!8164 = !DILocation(line: 800, column: 53, scope: !8153)
!8165 = !DILocation(line: 800, column: 33, scope: !8153)
!8166 = !DILocation(line: 800, column: 55, scope: !8153)
!8167 = !DILocation(line: 800, column: 30, scope: !8153)
!8168 = !DILocation(line: 800, column: 9, scope: !8153)
!8169 = !DILocation(line: 801, column: 53, scope: !8153)
!8170 = !DILocation(line: 801, column: 33, scope: !8153)
!8171 = !DILocation(line: 801, column: 55, scope: !8153)
!8172 = !DILocation(line: 801, column: 60, scope: !8153)
!8173 = !DILocation(line: 801, column: 21, scope: !8153)
!8174 = !DILocation(line: 801, column: 19, scope: !8153)
!8175 = !DILocation(line: 802, column: 7, scope: !8176)
!8176 = distinct !DILexicalBlock(scope: !8153, file: !365, line: 802, column: 7)
!8177 = !DILocation(line: 802, column: 17, scope: !8176)
!8178 = !DILocation(line: 802, column: 7, scope: !8153)
!8179 = !DILocation(line: 802, column: 54, scope: !8180)
!8180 = distinct !DILexicalBlock(scope: !8176, file: !365, line: 802, column: 23)
!8181 = !DILocation(line: 802, column: 34, scope: !8180)
!8182 = !DILocation(line: 802, column: 56, scope: !8180)
!8183 = !DILocation(line: 802, column: 23, scope: !8180)
!8184 = !DILocation(line: 802, column: 21, scope: !8180)
!8185 = !DILocation(line: 803, column: 3, scope: !8180)
!8186 = !DILocation(line: 803, column: 19, scope: !8153)
!8187 = !DILocation(line: 804, column: 3, scope: !8153)
!8188 = distinct !DISubprogram(name: "op_stop", scope: !365, file: !365, line: 1389, type: !501, scopeLine: 1390, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !666)
!8189 = !DILocalVariable(name: "op", arg: 1, scope: !8188, file: !365, line: 1389, type: !83)
!8190 = !DILocation(line: 0, scope: !8188)
!8191 = !DILocalVariable(name: "oi", arg: 2, scope: !8188, file: !365, line: 1389, type: !503)
!8192 = !DILocation(line: 1391, column: 3, scope: !8193)
!8193 = distinct !DILexicalBlock(scope: !8194, file: !365, line: 1395, column: 3)
!8194 = distinct !DILexicalBlock(scope: !8195, file: !365, line: 1394, column: 3)
!8195 = distinct !DILexicalBlock(scope: !8188, file: !365, line: 1393, column: 3)
!8196 = !DILocation(line: 1391, column: 13, scope: !8193)
!8197 = !DILocation(line: 1391, column: 5, scope: !8198)
!8198 = distinct !DILexicalBlock(scope: !8193, file: !365, line: 1391, column: 13)
!8199 = !DILocation(line: 1394, column: 3, scope: !8193)
!8200 = !DILocation(line: 1392, column: 3, scope: !8195)
!8201 = distinct !DISubprogram(name: "op_rla", scope: !365, file: !365, line: 695, type: !501, scopeLine: 696, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !666)
!8202 = !DILocalVariable(name: "op", arg: 1, scope: !8201, file: !365, line: 695, type: !83)
!8203 = !DILocation(line: 0, scope: !8201)
!8204 = !DILocalVariable(name: "oi", arg: 2, scope: !8201, file: !365, line: 695, type: !503)
!8205 = !DILocation(line: 699, column: 3, scope: !8206)
!8206 = distinct !DILexicalBlock(scope: !8207, file: !365, line: 701, column: 3)
!8207 = distinct !DILexicalBlock(scope: !8208, file: !365, line: 700, column: 3)
!8208 = distinct !DILexicalBlock(scope: !8201, file: !365, line: 699, column: 3)
!8209 = !DILocation(line: 699, column: 13, scope: !8206)
!8210 = !DILocation(line: 699, column: 5, scope: !8211)
!8211 = distinct !DILexicalBlock(scope: !8206, file: !365, line: 699, column: 13)
!8212 = !DILocation(line: 702, column: 3, scope: !8206)
!8213 = !DILocation(line: 700, column: 23, scope: !8208)
!8214 = !DILocalVariable(name: "res", scope: !8201, file: !365, line: 697, type: !87)
!8215 = !DILocation(line: 701, column: 20, scope: !8208)
!8216 = !DILocation(line: 701, column: 30, scope: !8208)
!8217 = !DILocation(line: 701, column: 9, scope: !8208)
!8218 = !DILocation(line: 702, column: 20, scope: !8208)
!8219 = !DILocation(line: 702, column: 54, scope: !8208)
!8220 = !DILocation(line: 702, column: 34, scope: !8208)
!8221 = !DILocation(line: 702, column: 56, scope: !8208)
!8222 = !DILocation(line: 702, column: 62, scope: !8208)
!8223 = !DILocation(line: 702, column: 30, scope: !8208)
!8224 = !DILocation(line: 702, column: 9, scope: !8208)
!8225 = !DILocation(line: 703, column: 53, scope: !8208)
!8226 = !DILocation(line: 703, column: 33, scope: !8208)
!8227 = !DILocation(line: 703, column: 55, scope: !8208)
!8228 = !DILocation(line: 703, column: 61, scope: !8208)
!8229 = !DILocation(line: 703, column: 21, scope: !8208)
!8230 = !DILocation(line: 703, column: 19, scope: !8208)
!8231 = !DILocation(line: 704, column: 7, scope: !8232)
!8232 = distinct !DILexicalBlock(scope: !8208, file: !365, line: 704, column: 7)
!8233 = !DILocation(line: 704, column: 17, scope: !8232)
!8234 = !DILocation(line: 704, column: 7, scope: !8208)
!8235 = !DILocation(line: 704, column: 54, scope: !8236)
!8236 = distinct !DILexicalBlock(scope: !8232, file: !365, line: 704, column: 23)
!8237 = !DILocation(line: 704, column: 34, scope: !8236)
!8238 = !DILocation(line: 704, column: 56, scope: !8236)
!8239 = !DILocation(line: 704, column: 23, scope: !8236)
!8240 = !DILocation(line: 704, column: 21, scope: !8236)
!8241 = !DILocation(line: 705, column: 3, scope: !8236)
!8242 = !DILocation(line: 705, column: 19, scope: !8208)
!8243 = !DILocation(line: 706, column: 3, scope: !8208)
!8244 = distinct !DISubprogram(name: "op_jr", scope: !365, file: !365, line: 1406, type: !501, scopeLine: 1407, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !666)
!8245 = !DILocalVariable(name: "op", arg: 1, scope: !8244, file: !365, line: 1406, type: !83)
!8246 = !DILocation(line: 0, scope: !8244)
!8247 = !DILocalVariable(name: "oi", arg: 2, scope: !8244, file: !365, line: 1406, type: !503)
!8248 = !DILocation(line: 1408, column: 9, scope: !8249)
!8249 = distinct !DILexicalBlock(scope: !8250, file: !365, line: 1413, column: 3)
!8250 = distinct !DILexicalBlock(scope: !8251, file: !365, line: 1412, column: 3)
!8251 = distinct !DILexicalBlock(scope: !8244, file: !365, line: 1411, column: 3)
!8252 = !DILocalVariable(name: "tmp", scope: !8244, file: !365, line: 1409, type: !83)
!8253 = !DILocation(line: 1408, column: 20, scope: !8250)
!8254 = !DILocation(line: 1408, column: 9, scope: !8250)
!8255 = !DILocalVariable(name: "ofs", scope: !8244, file: !365, line: 1408, type: !92)
!8256 = !DILocation(line: 1410, column: 7, scope: !8257)
!8257 = distinct !DILexicalBlock(scope: !8251, file: !365, line: 1410, column: 7)
!8258 = !DILocation(line: 1410, column: 17, scope: !8257)
!8259 = !DILocation(line: 1410, column: 7, scope: !8251)
!8260 = !DILocation(line: 1410, column: 5, scope: !8261)
!8261 = distinct !DILexicalBlock(scope: !8262, file: !365, line: 1412, column: 5)
!8262 = distinct !DILexicalBlock(scope: !8263, file: !365, line: 1411, column: 5)
!8263 = distinct !DILexicalBlock(scope: !8257, file: !365, line: 1410, column: 22)
!8264 = !DILocation(line: 1410, column: 15, scope: !8261)
!8265 = !DILocation(line: 1410, column: 7, scope: !8266)
!8266 = distinct !DILexicalBlock(scope: !8261, file: !365, line: 1410, column: 15)
!8267 = !DILocation(line: 1413, column: 5, scope: !8261)
!8268 = !DILocation(line: 1416, column: 3, scope: !8263)
!8269 = !DILocation(line: 1411, column: 5, scope: !8270)
!8270 = distinct !DILexicalBlock(scope: !8271, file: !365, line: 1418, column: 5)
!8271 = distinct !DILexicalBlock(scope: !8272, file: !365, line: 1417, column: 5)
!8272 = distinct !DILexicalBlock(scope: !8257, file: !365, line: 1416, column: 10)
!8273 = !DILocation(line: 1411, column: 15, scope: !8270)
!8274 = !DILocation(line: 1411, column: 7, scope: !8275)
!8275 = distinct !DILexicalBlock(scope: !8270, file: !365, line: 1411, column: 15)
!8276 = !DILocation(line: 1414, column: 5, scope: !8270)
!8277 = !DILocation(line: 1412, column: 60, scope: !8251)
!8278 = !DILocation(line: 1412, column: 54, scope: !8251)
!8279 = !DILocation(line: 1412, column: 99, scope: !8251)
!8280 = !DILocation(line: 1412, column: 97, scope: !8251)
!8281 = !DILocation(line: 1412, column: 42, scope: !8251)
!8282 = !DILocation(line: 1412, column: 40, scope: !8251)
!8283 = !DILocation(line: 1413, column: 3, scope: !8251)
!8284 = distinct !DISubprogram(name: "op_rra", scope: !365, file: !365, line: 765, type: !501, scopeLine: 766, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !666)
!8285 = !DILocalVariable(name: "op", arg: 1, scope: !8284, file: !365, line: 765, type: !83)
!8286 = !DILocation(line: 0, scope: !8284)
!8287 = !DILocalVariable(name: "oi", arg: 2, scope: !8284, file: !365, line: 765, type: !503)
!8288 = !DILocation(line: 769, column: 3, scope: !8289)
!8289 = distinct !DILexicalBlock(scope: !8290, file: !365, line: 771, column: 3)
!8290 = distinct !DILexicalBlock(scope: !8291, file: !365, line: 770, column: 3)
!8291 = distinct !DILexicalBlock(scope: !8284, file: !365, line: 769, column: 3)
!8292 = !DILocation(line: 769, column: 13, scope: !8289)
!8293 = !DILocation(line: 769, column: 5, scope: !8294)
!8294 = distinct !DILexicalBlock(scope: !8289, file: !365, line: 769, column: 13)
!8295 = !DILocation(line: 772, column: 3, scope: !8289)
!8296 = !DILocation(line: 770, column: 23, scope: !8291)
!8297 = !DILocalVariable(name: "res", scope: !8284, file: !365, line: 767, type: !87)
!8298 = !DILocation(line: 771, column: 20, scope: !8291)
!8299 = !DILocation(line: 771, column: 30, scope: !8291)
!8300 = !DILocation(line: 771, column: 9, scope: !8291)
!8301 = !DILocation(line: 772, column: 20, scope: !8291)
!8302 = !DILocation(line: 772, column: 54, scope: !8291)
!8303 = !DILocation(line: 772, column: 34, scope: !8291)
!8304 = !DILocation(line: 772, column: 56, scope: !8291)
!8305 = !DILocation(line: 772, column: 62, scope: !8291)
!8306 = !DILocation(line: 772, column: 30, scope: !8291)
!8307 = !DILocation(line: 772, column: 9, scope: !8291)
!8308 = !DILocation(line: 773, column: 53, scope: !8291)
!8309 = !DILocation(line: 773, column: 33, scope: !8291)
!8310 = !DILocation(line: 773, column: 55, scope: !8291)
!8311 = !DILocation(line: 773, column: 60, scope: !8291)
!8312 = !DILocation(line: 773, column: 21, scope: !8291)
!8313 = !DILocation(line: 773, column: 19, scope: !8291)
!8314 = !DILocation(line: 774, column: 7, scope: !8315)
!8315 = distinct !DILexicalBlock(scope: !8291, file: !365, line: 774, column: 7)
!8316 = !DILocation(line: 774, column: 17, scope: !8315)
!8317 = !DILocation(line: 774, column: 7, scope: !8291)
!8318 = !DILocation(line: 774, column: 54, scope: !8319)
!8319 = distinct !DILexicalBlock(scope: !8315, file: !365, line: 774, column: 23)
!8320 = !DILocation(line: 774, column: 34, scope: !8319)
!8321 = !DILocation(line: 774, column: 56, scope: !8319)
!8322 = !DILocation(line: 774, column: 23, scope: !8319)
!8323 = !DILocation(line: 774, column: 21, scope: !8319)
!8324 = !DILocation(line: 775, column: 3, scope: !8319)
!8325 = !DILocation(line: 775, column: 19, scope: !8291)
!8326 = !DILocation(line: 776, column: 3, scope: !8291)
!8327 = distinct !DISubprogram(name: "op_jr_cond", scope: !365, file: !365, line: 1415, type: !501, scopeLine: 1416, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !666)
!8328 = !DILocalVariable(name: "op", arg: 1, scope: !8327, file: !365, line: 1415, type: !83)
!8329 = !DILocation(line: 0, scope: !8327)
!8330 = !DILocalVariable(name: "oi", arg: 2, scope: !8327, file: !365, line: 1415, type: !503)
!8331 = !DILocation(line: 1417, column: 9, scope: !8332)
!8332 = distinct !DILexicalBlock(scope: !8333, file: !365, line: 1423, column: 3)
!8333 = distinct !DILexicalBlock(scope: !8334, file: !365, line: 1422, column: 3)
!8334 = distinct !DILexicalBlock(scope: !8327, file: !365, line: 1421, column: 3)
!8335 = !DILocalVariable(name: "tmp", scope: !8327, file: !365, line: 1418, type: !83)
!8336 = !DILocation(line: 1417, column: 20, scope: !8333)
!8337 = !DILocation(line: 1417, column: 9, scope: !8333)
!8338 = !DILocalVariable(name: "ofs", scope: !8327, file: !365, line: 1417, type: !92)
!8339 = !DILocation(line: 1418, column: 22, scope: !8333)
!8340 = !DILocation(line: 1418, column: 28, scope: !8333)
!8341 = !DILocation(line: 1418, column: 10, scope: !8333)
!8342 = !DILocalVariable(name: "cond", scope: !8327, file: !365, line: 1419, type: !15)
!8343 = !DILocation(line: 1420, column: 7, scope: !8344)
!8344 = distinct !DILexicalBlock(scope: !8334, file: !365, line: 1420, column: 7)
!8345 = !DILocation(line: 1420, column: 17, scope: !8344)
!8346 = !DILocation(line: 1420, column: 7, scope: !8334)
!8347 = !DILocation(line: 1420, column: 5, scope: !8348)
!8348 = distinct !DILexicalBlock(scope: !8349, file: !365, line: 1422, column: 5)
!8349 = distinct !DILexicalBlock(scope: !8350, file: !365, line: 1421, column: 5)
!8350 = distinct !DILexicalBlock(scope: !8344, file: !365, line: 1420, column: 22)
!8351 = !DILocation(line: 1420, column: 15, scope: !8348)
!8352 = !DILocation(line: 1420, column: 7, scope: !8353)
!8353 = distinct !DILexicalBlock(scope: !8348, file: !365, line: 1420, column: 15)
!8354 = !DILocation(line: 1423, column: 5, scope: !8348)
!8355 = !DILocation(line: 1426, column: 3, scope: !8350)
!8356 = !DILocation(line: 1421, column: 5, scope: !8357)
!8357 = distinct !DILexicalBlock(scope: !8358, file: !365, line: 1428, column: 5)
!8358 = distinct !DILexicalBlock(scope: !8359, file: !365, line: 1427, column: 5)
!8359 = distinct !DILexicalBlock(scope: !8344, file: !365, line: 1426, column: 10)
!8360 = !DILocation(line: 1421, column: 15, scope: !8357)
!8361 = !DILocation(line: 1421, column: 7, scope: !8362)
!8362 = distinct !DILexicalBlock(scope: !8357, file: !365, line: 1421, column: 15)
!8363 = !DILocation(line: 1424, column: 5, scope: !8357)
!8364 = !DILocation(line: 1423, column: 12, scope: !8365)
!8365 = distinct !DILexicalBlock(scope: !8366, file: !365, line: 1423, column: 7)
!8366 = distinct !DILexicalBlock(scope: !8334, file: !365, line: 1428, column: 3)
!8367 = !DILocation(line: 1423, column: 7, scope: !8366)
!8368 = !DILocation(line: 1423, column: 5, scope: !8369)
!8369 = distinct !DILexicalBlock(scope: !8365, file: !365, line: 1423, column: 19)
!8370 = !DILocation(line: 1424, column: 12, scope: !8371)
!8371 = distinct !DILexicalBlock(scope: !8366, file: !365, line: 1424, column: 7)
!8372 = !DILocation(line: 1424, column: 7, scope: !8366)
!8373 = !DILocation(line: 1424, column: 5, scope: !8374)
!8374 = distinct !DILexicalBlock(scope: !8371, file: !365, line: 1424, column: 19)
!8375 = !DILocation(line: 1425, column: 12, scope: !8376)
!8376 = distinct !DILexicalBlock(scope: !8366, file: !365, line: 1425, column: 7)
!8377 = !DILocation(line: 1425, column: 7, scope: !8366)
!8378 = !DILocation(line: 1425, column: 5, scope: !8379)
!8379 = distinct !DILexicalBlock(scope: !8376, file: !365, line: 1425, column: 19)
!8380 = !DILocation(line: 1426, column: 12, scope: !8381)
!8381 = distinct !DILexicalBlock(scope: !8366, file: !365, line: 1426, column: 7)
!8382 = !DILocation(line: 1426, column: 7, scope: !8366)
!8383 = !DILocation(line: 1426, column: 5, scope: !8384)
!8384 = distinct !DILexicalBlock(scope: !8381, file: !365, line: 1426, column: 19)
!8385 = !DILocation(line: 1422, column: 3, scope: !8366)
!8386 = !DILocation(line: 1423, column: 28, scope: !8387)
!8387 = distinct !DILexicalBlock(scope: !8366, file: !365, line: 1423, column: 7)
!8388 = !DILocation(line: 1423, column: 8, scope: !8387)
!8389 = !DILocation(line: 1423, column: 30, scope: !8387)
!8390 = !DILocation(line: 1423, column: 37, scope: !8387)
!8391 = !DILocation(line: 1423, column: 5, scope: !8392)
!8392 = distinct !DILexicalBlock(scope: !8387, file: !365, line: 1423, column: 43)
!8393 = !DILocation(line: 1423, column: 3, scope: !8366)
!8394 = !DILocation(line: 1424, column: 28, scope: !8395)
!8395 = distinct !DILexicalBlock(scope: !8366, file: !365, line: 1424, column: 7)
!8396 = !DILocation(line: 1424, column: 8, scope: !8395)
!8397 = !DILocation(line: 1424, column: 30, scope: !8395)
!8398 = !DILocation(line: 1424, column: 37, scope: !8395)
!8399 = !DILocation(line: 1424, column: 5, scope: !8400)
!8400 = distinct !DILexicalBlock(scope: !8395, file: !365, line: 1424, column: 43)
!8401 = !DILocation(line: 1424, column: 3, scope: !8366)
!8402 = !DILocation(line: 1425, column: 28, scope: !8403)
!8403 = distinct !DILexicalBlock(scope: !8366, file: !365, line: 1425, column: 7)
!8404 = !DILocation(line: 1425, column: 8, scope: !8403)
!8405 = !DILocation(line: 1425, column: 30, scope: !8403)
!8406 = !DILocation(line: 1425, column: 36, scope: !8403)
!8407 = !DILocation(line: 1425, column: 5, scope: !8408)
!8408 = distinct !DILexicalBlock(scope: !8403, file: !365, line: 1425, column: 42)
!8409 = !DILocation(line: 1425, column: 3, scope: !8366)
!8410 = !DILocation(line: 1426, column: 28, scope: !8411)
!8411 = distinct !DILexicalBlock(scope: !8366, file: !365, line: 1426, column: 7)
!8412 = !DILocation(line: 1426, column: 8, scope: !8411)
!8413 = !DILocation(line: 1426, column: 30, scope: !8411)
!8414 = !DILocation(line: 1426, column: 36, scope: !8411)
!8415 = !DILocation(line: 1426, column: 5, scope: !8416)
!8416 = distinct !DILexicalBlock(scope: !8411, file: !365, line: 1426, column: 42)
!8417 = !DILocation(line: 1426, column: 3, scope: !8366)
!8418 = !DILocation(line: 1428, column: 60, scope: !8334)
!8419 = !DILocation(line: 1428, column: 54, scope: !8334)
!8420 = !DILocation(line: 1428, column: 99, scope: !8334)
!8421 = !DILocation(line: 1428, column: 97, scope: !8334)
!8422 = !DILocation(line: 1428, column: 42, scope: !8334)
!8423 = !DILocation(line: 1428, column: 40, scope: !8334)
!8424 = !DILocation(line: 1429, column: 3, scope: !8334)
!8425 = !DILocation(line: 1431, column: 1, scope: !8327)
!8426 = distinct !DISubprogram(name: "op_unknown", scope: !365, file: !365, line: 642, type: !501, scopeLine: 643, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !666)
!8427 = !DILocalVariable(name: "op", arg: 1, scope: !8426, file: !365, line: 642, type: !83)
!8428 = !DILocation(line: 0, scope: !8426)
!8429 = !DILocalVariable(name: "oi", arg: 2, scope: !8426, file: !365, line: 642, type: !503)
!8430 = !DILocalVariable(name: "__cil_tmp3", scope: !8426, file: !365, line: 644, type: !16)
!8431 = !DILocation(line: 644, column: 9, scope: !8426)
!8432 = !DILocation(line: 644, column: 36, scope: !8433)
!8433 = distinct !DILexicalBlock(scope: !8434, file: !365, line: 648, column: 3)
!8434 = distinct !DILexicalBlock(scope: !8435, file: !365, line: 647, column: 3)
!8435 = distinct !DILexicalBlock(scope: !8426, file: !365, line: 646, column: 3)
!8436 = !DILocation(line: 645, column: 18, scope: !8433)
!8437 = !DILocation(line: 645, column: 11, scope: !8433)
!8438 = !DILocation(line: 644, column: 3, scope: !8433)
!8439 = !DILocation(line: 645, column: 17, scope: !8434)
!8440 = !DILocation(line: 646, column: 3, scope: !8435)
!8441 = distinct !DISubprogram(name: "op_cpl", scope: !365, file: !365, line: 1311, type: !501, scopeLine: 1312, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !666)
!8442 = !DILocalVariable(name: "op", arg: 1, scope: !8441, file: !365, line: 1311, type: !83)
!8443 = !DILocation(line: 0, scope: !8441)
!8444 = !DILocalVariable(name: "oi", arg: 2, scope: !8441, file: !365, line: 1311, type: !503)
!8445 = !DILocation(line: 1313, column: 3, scope: !8446)
!8446 = distinct !DILexicalBlock(scope: !8447, file: !365, line: 1317, column: 3)
!8447 = distinct !DILexicalBlock(scope: !8448, file: !365, line: 1316, column: 3)
!8448 = distinct !DILexicalBlock(scope: !8441, file: !365, line: 1315, column: 3)
!8449 = !DILocation(line: 1313, column: 13, scope: !8446)
!8450 = !DILocation(line: 1313, column: 5, scope: !8451)
!8451 = distinct !DILexicalBlock(scope: !8446, file: !365, line: 1313, column: 13)
!8452 = !DILocation(line: 1316, column: 3, scope: !8446)
!8453 = !DILocation(line: 1314, column: 55, scope: !8448)
!8454 = !DILocation(line: 1314, column: 35, scope: !8448)
!8455 = !DILocation(line: 1314, column: 32, scope: !8448)
!8456 = !DILocation(line: 1314, column: 21, scope: !8448)
!8457 = !DILocation(line: 1314, column: 19, scope: !8448)
!8458 = !DILocation(line: 1315, column: 52, scope: !8448)
!8459 = !DILocation(line: 1315, column: 32, scope: !8448)
!8460 = !DILocation(line: 1315, column: 54, scope: !8448)
!8461 = !DILocation(line: 1315, column: 21, scope: !8448)
!8462 = !DILocation(line: 1315, column: 19, scope: !8448)
!8463 = !DILocation(line: 1316, column: 3, scope: !8448)
!8464 = distinct !DISubprogram(name: "op_scf", scope: !365, file: !365, line: 1325, type: !501, scopeLine: 1326, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !666)
!8465 = !DILocalVariable(name: "op", arg: 1, scope: !8464, file: !365, line: 1325, type: !83)
!8466 = !DILocation(line: 0, scope: !8464)
!8467 = !DILocalVariable(name: "oi", arg: 2, scope: !8464, file: !365, line: 1325, type: !503)
!8468 = !DILocation(line: 1327, column: 3, scope: !8469)
!8469 = distinct !DILexicalBlock(scope: !8470, file: !365, line: 1331, column: 3)
!8470 = distinct !DILexicalBlock(scope: !8471, file: !365, line: 1330, column: 3)
!8471 = distinct !DILexicalBlock(scope: !8464, file: !365, line: 1329, column: 3)
!8472 = !DILocation(line: 1327, column: 13, scope: !8469)
!8473 = !DILocation(line: 1327, column: 5, scope: !8474)
!8474 = distinct !DILexicalBlock(scope: !8469, file: !365, line: 1327, column: 13)
!8475 = !DILocation(line: 1330, column: 3, scope: !8469)
!8476 = !DILocation(line: 1328, column: 52, scope: !8471)
!8477 = !DILocation(line: 1328, column: 32, scope: !8471)
!8478 = !DILocation(line: 1328, column: 54, scope: !8471)
!8479 = !DILocation(line: 1328, column: 21, scope: !8471)
!8480 = !DILocation(line: 1328, column: 19, scope: !8471)
!8481 = !DILocation(line: 1329, column: 52, scope: !8471)
!8482 = !DILocation(line: 1329, column: 32, scope: !8471)
!8483 = !DILocation(line: 1329, column: 54, scope: !8471)
!8484 = !DILocation(line: 1329, column: 21, scope: !8471)
!8485 = !DILocation(line: 1329, column: 19, scope: !8471)
!8486 = !DILocation(line: 1330, column: 3, scope: !8471)
!8487 = distinct !DISubprogram(name: "op_ccf", scope: !365, file: !365, line: 1318, type: !501, scopeLine: 1319, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !666)
!8488 = !DILocalVariable(name: "op", arg: 1, scope: !8487, file: !365, line: 1318, type: !83)
!8489 = !DILocation(line: 0, scope: !8487)
!8490 = !DILocalVariable(name: "oi", arg: 2, scope: !8487, file: !365, line: 1318, type: !503)
!8491 = !DILocation(line: 1320, column: 3, scope: !8492)
!8492 = distinct !DILexicalBlock(scope: !8493, file: !365, line: 1324, column: 3)
!8493 = distinct !DILexicalBlock(scope: !8494, file: !365, line: 1323, column: 3)
!8494 = distinct !DILexicalBlock(scope: !8487, file: !365, line: 1322, column: 3)
!8495 = !DILocation(line: 1320, column: 13, scope: !8492)
!8496 = !DILocation(line: 1320, column: 5, scope: !8497)
!8497 = distinct !DILexicalBlock(scope: !8492, file: !365, line: 1320, column: 13)
!8498 = !DILocation(line: 1323, column: 3, scope: !8492)
!8499 = !DILocation(line: 1321, column: 52, scope: !8494)
!8500 = !DILocation(line: 1321, column: 32, scope: !8494)
!8501 = !DILocation(line: 1321, column: 54, scope: !8494)
!8502 = !DILocation(line: 1321, column: 21, scope: !8494)
!8503 = !DILocation(line: 1321, column: 19, scope: !8494)
!8504 = !DILocation(line: 1322, column: 52, scope: !8494)
!8505 = !DILocation(line: 1322, column: 32, scope: !8494)
!8506 = !DILocation(line: 1322, column: 54, scope: !8494)
!8507 = !DILocation(line: 1322, column: 21, scope: !8494)
!8508 = !DILocation(line: 1322, column: 19, scope: !8494)
!8509 = !DILocation(line: 1323, column: 3, scope: !8494)
!8510 = distinct !DISubprogram(name: "op_ld", scope: !365, file: !365, line: 879, type: !501, scopeLine: 880, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !666)
!8511 = !DILocalVariable(name: "op", arg: 1, scope: !8510, file: !365, line: 879, type: !83)
!8512 = !DILocation(line: 0, scope: !8510)
!8513 = !DILocalVariable(name: "oi", arg: 2, scope: !8510, file: !365, line: 879, type: !503)
!8514 = !DILocation(line: 881, column: 20, scope: !8515)
!8515 = distinct !DILexicalBlock(scope: !8510, file: !365, line: 885, column: 3)
!8516 = !DILocation(line: 881, column: 9, scope: !8515)
!8517 = !DILocalVariable(name: "src", scope: !8510, file: !365, line: 881, type: !15)
!8518 = !DILocation(line: 882, column: 21, scope: !8515)
!8519 = !DILocation(line: 882, column: 27, scope: !8515)
!8520 = !DILocation(line: 882, column: 9, scope: !8515)
!8521 = !DILocalVariable(name: "dst", scope: !8510, file: !365, line: 882, type: !15)
!8522 = !DILocation(line: 884, column: 3, scope: !8523)
!8523 = distinct !DILexicalBlock(scope: !8524, file: !365, line: 884, column: 3)
!8524 = distinct !DILexicalBlock(scope: !8515, file: !365, line: 883, column: 3)
!8525 = !DILocation(line: 884, column: 13, scope: !8523)
!8526 = !DILocation(line: 884, column: 5, scope: !8527)
!8527 = distinct !DILexicalBlock(scope: !8523, file: !365, line: 884, column: 13)
!8528 = !DILocation(line: 887, column: 3, scope: !8523)
!8529 = !DILocation(line: 885, column: 3, scope: !8530)
!8530 = distinct !DILexicalBlock(scope: !8531, file: !365, line: 891, column: 3)
!8531 = distinct !DILexicalBlock(scope: !8515, file: !365, line: 890, column: 3)
!8532 = !DILocation(line: 886, column: 3, scope: !8533)
!8533 = distinct !DILexicalBlock(scope: !8534, file: !365, line: 889, column: 3)
!8534 = distinct !DILexicalBlock(scope: !8515, file: !365, line: 888, column: 3)
!8535 = !DILocation(line: 886, column: 13, scope: !8533)
!8536 = !DILocation(line: 886, column: 5, scope: !8537)
!8537 = distinct !DILexicalBlock(scope: !8533, file: !365, line: 886, column: 13)
!8538 = !DILocation(line: 889, column: 3, scope: !8533)
!8539 = !DILocation(line: 887, column: 3, scope: !8540)
!8540 = distinct !DILexicalBlock(scope: !8541, file: !365, line: 893, column: 3)
!8541 = distinct !DILexicalBlock(scope: !8515, file: !365, line: 892, column: 3)
!8542 = !DILocation(line: 888, column: 9, scope: !8543)
!8543 = distinct !DILexicalBlock(scope: !8541, file: !365, line: 889, column: 3)
!8544 = !DILocalVariable(name: "tmp", scope: !8510, file: !365, line: 883, type: !83)
!8545 = !DILocation(line: 888, column: 3, scope: !8546)
!8546 = distinct !DILexicalBlock(scope: !8541, file: !365, line: 890, column: 3)
!8547 = !DILocation(line: 889, column: 3, scope: !8515)
!8548 = distinct !DISubprogram(name: "op_halt", scope: !365, file: !365, line: 1383, type: !501, scopeLine: 1384, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !666)
!8549 = !DILocalVariable(name: "op", arg: 1, scope: !8548, file: !365, line: 1383, type: !83)
!8550 = !DILocation(line: 0, scope: !8548)
!8551 = !DILocalVariable(name: "oi", arg: 2, scope: !8548, file: !365, line: 1383, type: !503)
!8552 = !DILocation(line: 1385, column: 16, scope: !8553)
!8553 = distinct !DILexicalBlock(scope: !8548, file: !365, line: 1387, column: 3)
!8554 = !DILocation(line: 1386, column: 3, scope: !8555)
!8555 = distinct !DILexicalBlock(scope: !8556, file: !365, line: 1387, column: 3)
!8556 = distinct !DILexicalBlock(scope: !8553, file: !365, line: 1386, column: 3)
!8557 = !DILocation(line: 1386, column: 13, scope: !8555)
!8558 = !DILocation(line: 1386, column: 5, scope: !8559)
!8559 = distinct !DILexicalBlock(scope: !8555, file: !365, line: 1386, column: 13)
!8560 = !DILocation(line: 1389, column: 3, scope: !8555)
!8561 = !DILocation(line: 1387, column: 3, scope: !8553)
!8562 = distinct !DISubprogram(name: "op_add", scope: !365, file: !365, line: 1069, type: !501, scopeLine: 1070, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !666)
!8563 = !DILocalVariable(name: "op", arg: 1, scope: !8562, file: !365, line: 1069, type: !83)
!8564 = !DILocation(line: 0, scope: !8562)
!8565 = !DILocalVariable(name: "oi", arg: 2, scope: !8562, file: !365, line: 1069, type: !503)
!8566 = !DILocation(line: 1071, column: 23, scope: !8567)
!8567 = distinct !DILexicalBlock(scope: !8562, file: !365, line: 1075, column: 3)
!8568 = !DILocalVariable(name: "old", scope: !8562, file: !365, line: 1071, type: !87)
!8569 = !DILocation(line: 1074, column: 3, scope: !8570)
!8570 = distinct !DILexicalBlock(scope: !8571, file: !365, line: 1073, column: 3)
!8571 = distinct !DILexicalBlock(scope: !8567, file: !365, line: 1072, column: 3)
!8572 = !DILocation(line: 1074, column: 13, scope: !8570)
!8573 = !DILocation(line: 1074, column: 5, scope: !8574)
!8574 = distinct !DILexicalBlock(scope: !8570, file: !365, line: 1074, column: 13)
!8575 = !DILocation(line: 1077, column: 3, scope: !8570)
!8576 = !DILocation(line: 1075, column: 24, scope: !8577)
!8577 = distinct !DILexicalBlock(scope: !8578, file: !365, line: 1081, column: 3)
!8578 = distinct !DILexicalBlock(scope: !8567, file: !365, line: 1080, column: 3)
!8579 = !DILocation(line: 1075, column: 13, scope: !8577)
!8580 = !DILocation(line: 1075, column: 3, scope: !8577)
!8581 = !DILocation(line: 1076, column: 28, scope: !8582)
!8582 = distinct !DILexicalBlock(scope: !8578, file: !365, line: 1077, column: 3)
!8583 = !DILocation(line: 1076, column: 17, scope: !8582)
!8584 = !DILocation(line: 1076, column: 9, scope: !8582)
!8585 = !DILocalVariable(name: "tmp", scope: !8562, file: !365, line: 1073, type: !83)
!8586 = !DILocation(line: 1076, column: 57, scope: !8578)
!8587 = !DILocation(line: 1076, column: 32, scope: !8578)
!8588 = !DILocation(line: 1076, column: 59, scope: !8578)
!8589 = !DILocation(line: 1076, column: 21, scope: !8578)
!8590 = !DILocation(line: 1076, column: 19, scope: !8578)
!8591 = !DILocation(line: 1077, column: 23, scope: !8578)
!8592 = !DILocalVariable(name: "new", scope: !8562, file: !365, line: 1072, type: !87)
!8593 = !DILocation(line: 1078, column: 19, scope: !8578)
!8594 = !DILocation(line: 1079, column: 7, scope: !8595)
!8595 = distinct !DILexicalBlock(scope: !8567, file: !365, line: 1079, column: 7)
!8596 = !DILocation(line: 1079, column: 19, scope: !8595)
!8597 = !DILocation(line: 1079, column: 17, scope: !8595)
!8598 = !DILocation(line: 1079, column: 7, scope: !8567)
!8599 = !DILocation(line: 1079, column: 54, scope: !8600)
!8600 = distinct !DILexicalBlock(scope: !8595, file: !365, line: 1079, column: 30)
!8601 = !DILocation(line: 1079, column: 34, scope: !8600)
!8602 = !DILocation(line: 1079, column: 56, scope: !8600)
!8603 = !DILocation(line: 1079, column: 23, scope: !8600)
!8604 = !DILocation(line: 1079, column: 21, scope: !8600)
!8605 = !DILocation(line: 1080, column: 3, scope: !8600)
!8606 = !DILocation(line: 1080, column: 8, scope: !8607)
!8607 = distinct !DILexicalBlock(scope: !8567, file: !365, line: 1080, column: 7)
!8608 = !DILocation(line: 1080, column: 18, scope: !8607)
!8609 = !DILocation(line: 1080, column: 27, scope: !8607)
!8610 = !DILocation(line: 1080, column: 37, scope: !8607)
!8611 = !DILocation(line: 1080, column: 24, scope: !8607)
!8612 = !DILocation(line: 1080, column: 7, scope: !8567)
!8613 = !DILocation(line: 1080, column: 54, scope: !8614)
!8614 = distinct !DILexicalBlock(scope: !8607, file: !365, line: 1080, column: 44)
!8615 = !DILocation(line: 1080, column: 34, scope: !8614)
!8616 = !DILocation(line: 1080, column: 56, scope: !8614)
!8617 = !DILocation(line: 1080, column: 23, scope: !8614)
!8618 = !DILocation(line: 1080, column: 21, scope: !8614)
!8619 = !DILocation(line: 1081, column: 3, scope: !8614)
!8620 = !DILocation(line: 1081, column: 7, scope: !8621)
!8621 = distinct !DILexicalBlock(scope: !8567, file: !365, line: 1081, column: 7)
!8622 = !DILocation(line: 1081, column: 17, scope: !8621)
!8623 = !DILocation(line: 1081, column: 7, scope: !8567)
!8624 = !DILocation(line: 1081, column: 54, scope: !8625)
!8625 = distinct !DILexicalBlock(scope: !8621, file: !365, line: 1081, column: 23)
!8626 = !DILocation(line: 1081, column: 34, scope: !8625)
!8627 = !DILocation(line: 1081, column: 56, scope: !8625)
!8628 = !DILocation(line: 1081, column: 23, scope: !8625)
!8629 = !DILocation(line: 1081, column: 21, scope: !8625)
!8630 = !DILocation(line: 1082, column: 3, scope: !8625)
!8631 = !DILocation(line: 1082, column: 3, scope: !8567)
!8632 = distinct !DISubprogram(name: "op_adc", scope: !365, file: !365, line: 1116, type: !501, scopeLine: 1117, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !666)
!8633 = !DILocalVariable(name: "op", arg: 1, scope: !8632, file: !365, line: 1116, type: !83)
!8634 = !DILocation(line: 0, scope: !8632)
!8635 = !DILocalVariable(name: "oi", arg: 2, scope: !8632, file: !365, line: 1116, type: !503)
!8636 = !DILocation(line: 1118, column: 23, scope: !8637)
!8637 = distinct !DILexicalBlock(scope: !8632, file: !365, line: 1122, column: 3)
!8638 = !DILocalVariable(name: "old", scope: !8632, file: !365, line: 1118, type: !87)
!8639 = !DILocation(line: 1121, column: 3, scope: !8640)
!8640 = distinct !DILexicalBlock(scope: !8641, file: !365, line: 1120, column: 3)
!8641 = distinct !DILexicalBlock(scope: !8637, file: !365, line: 1119, column: 3)
!8642 = !DILocation(line: 1121, column: 13, scope: !8640)
!8643 = !DILocation(line: 1121, column: 5, scope: !8644)
!8644 = distinct !DILexicalBlock(scope: !8640, file: !365, line: 1121, column: 13)
!8645 = !DILocation(line: 1124, column: 3, scope: !8640)
!8646 = !DILocation(line: 1122, column: 24, scope: !8647)
!8647 = distinct !DILexicalBlock(scope: !8648, file: !365, line: 1128, column: 3)
!8648 = distinct !DILexicalBlock(scope: !8637, file: !365, line: 1127, column: 3)
!8649 = !DILocation(line: 1122, column: 13, scope: !8647)
!8650 = !DILocation(line: 1122, column: 3, scope: !8647)
!8651 = !DILocation(line: 1123, column: 28, scope: !8652)
!8652 = distinct !DILexicalBlock(scope: !8648, file: !365, line: 1124, column: 3)
!8653 = !DILocation(line: 1123, column: 17, scope: !8652)
!8654 = !DILocation(line: 1123, column: 9, scope: !8652)
!8655 = !DILocalVariable(name: "tmp", scope: !8632, file: !365, line: 1120, type: !83)
!8656 = !DILocation(line: 1123, column: 57, scope: !8648)
!8657 = !DILocation(line: 1123, column: 32, scope: !8648)
!8658 = !DILocation(line: 1123, column: 59, scope: !8648)
!8659 = !DILocation(line: 1123, column: 21, scope: !8648)
!8660 = !DILocation(line: 1123, column: 19, scope: !8648)
!8661 = !DILocation(line: 1124, column: 52, scope: !8648)
!8662 = !DILocation(line: 1124, column: 32, scope: !8648)
!8663 = !DILocation(line: 1124, column: 78, scope: !8648)
!8664 = !DILocation(line: 1124, column: 58, scope: !8648)
!8665 = !DILocation(line: 1124, column: 80, scope: !8648)
!8666 = !DILocation(line: 1124, column: 86, scope: !8648)
!8667 = !DILocation(line: 1124, column: 54, scope: !8648)
!8668 = !DILocation(line: 1124, column: 21, scope: !8648)
!8669 = !DILocation(line: 1124, column: 19, scope: !8648)
!8670 = !DILocation(line: 1125, column: 52, scope: !8648)
!8671 = !DILocation(line: 1125, column: 32, scope: !8648)
!8672 = !DILocation(line: 1125, column: 54, scope: !8648)
!8673 = !DILocation(line: 1125, column: 21, scope: !8648)
!8674 = !DILocation(line: 1125, column: 19, scope: !8648)
!8675 = !DILocation(line: 1126, column: 23, scope: !8648)
!8676 = !DILocalVariable(name: "new", scope: !8632, file: !365, line: 1119, type: !87)
!8677 = !DILocation(line: 1127, column: 7, scope: !8678)
!8678 = distinct !DILexicalBlock(scope: !8637, file: !365, line: 1127, column: 7)
!8679 = !DILocation(line: 1127, column: 19, scope: !8678)
!8680 = !DILocation(line: 1127, column: 17, scope: !8678)
!8681 = !DILocation(line: 1127, column: 7, scope: !8637)
!8682 = !DILocation(line: 1127, column: 54, scope: !8683)
!8683 = distinct !DILexicalBlock(scope: !8678, file: !365, line: 1127, column: 30)
!8684 = !DILocation(line: 1127, column: 34, scope: !8683)
!8685 = !DILocation(line: 1127, column: 56, scope: !8683)
!8686 = !DILocation(line: 1127, column: 23, scope: !8683)
!8687 = !DILocation(line: 1127, column: 21, scope: !8683)
!8688 = !DILocation(line: 1128, column: 3, scope: !8683)
!8689 = !DILocation(line: 1127, column: 54, scope: !8690)
!8690 = distinct !DILexicalBlock(scope: !8678, file: !365, line: 1128, column: 10)
!8691 = !DILocation(line: 1127, column: 34, scope: !8690)
!8692 = !DILocation(line: 1127, column: 56, scope: !8690)
!8693 = !DILocation(line: 1127, column: 23, scope: !8690)
!8694 = !DILocation(line: 1127, column: 21, scope: !8690)
!8695 = !DILocation(line: 1128, column: 8, scope: !8696)
!8696 = distinct !DILexicalBlock(scope: !8637, file: !365, line: 1128, column: 7)
!8697 = !DILocation(line: 1128, column: 18, scope: !8696)
!8698 = !DILocation(line: 1128, column: 27, scope: !8696)
!8699 = !DILocation(line: 1128, column: 37, scope: !8696)
!8700 = !DILocation(line: 1128, column: 24, scope: !8696)
!8701 = !DILocation(line: 1128, column: 7, scope: !8637)
!8702 = !DILocation(line: 1128, column: 54, scope: !8703)
!8703 = distinct !DILexicalBlock(scope: !8696, file: !365, line: 1128, column: 44)
!8704 = !DILocation(line: 1128, column: 34, scope: !8703)
!8705 = !DILocation(line: 1128, column: 56, scope: !8703)
!8706 = !DILocation(line: 1128, column: 23, scope: !8703)
!8707 = !DILocation(line: 1128, column: 21, scope: !8703)
!8708 = !DILocation(line: 1129, column: 3, scope: !8703)
!8709 = !DILocation(line: 1128, column: 54, scope: !8710)
!8710 = distinct !DILexicalBlock(scope: !8696, file: !365, line: 1129, column: 10)
!8711 = !DILocation(line: 1128, column: 34, scope: !8710)
!8712 = !DILocation(line: 1128, column: 56, scope: !8710)
!8713 = !DILocation(line: 1128, column: 23, scope: !8710)
!8714 = !DILocation(line: 1128, column: 21, scope: !8710)
!8715 = !DILocation(line: 1129, column: 7, scope: !8716)
!8716 = distinct !DILexicalBlock(scope: !8637, file: !365, line: 1129, column: 7)
!8717 = !DILocation(line: 1129, column: 17, scope: !8716)
!8718 = !DILocation(line: 1129, column: 7, scope: !8637)
!8719 = !DILocation(line: 1129, column: 54, scope: !8720)
!8720 = distinct !DILexicalBlock(scope: !8716, file: !365, line: 1129, column: 23)
!8721 = !DILocation(line: 1129, column: 34, scope: !8720)
!8722 = !DILocation(line: 1129, column: 56, scope: !8720)
!8723 = !DILocation(line: 1129, column: 23, scope: !8720)
!8724 = !DILocation(line: 1129, column: 21, scope: !8720)
!8725 = !DILocation(line: 1130, column: 3, scope: !8720)
!8726 = !DILocation(line: 1129, column: 54, scope: !8727)
!8727 = distinct !DILexicalBlock(scope: !8716, file: !365, line: 1130, column: 10)
!8728 = !DILocation(line: 1129, column: 34, scope: !8727)
!8729 = !DILocation(line: 1129, column: 56, scope: !8727)
!8730 = !DILocation(line: 1129, column: 23, scope: !8727)
!8731 = !DILocation(line: 1129, column: 21, scope: !8727)
!8732 = !DILocation(line: 1130, column: 3, scope: !8637)
!8733 = distinct !DISubprogram(name: "op_sub", scope: !365, file: !365, line: 1176, type: !501, scopeLine: 1177, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !666)
!8734 = !DILocalVariable(name: "op", arg: 1, scope: !8733, file: !365, line: 1176, type: !83)
!8735 = !DILocation(line: 0, scope: !8733)
!8736 = !DILocalVariable(name: "oi", arg: 2, scope: !8733, file: !365, line: 1176, type: !503)
!8737 = !DILocation(line: 1178, column: 23, scope: !8738)
!8738 = distinct !DILexicalBlock(scope: !8733, file: !365, line: 1182, column: 3)
!8739 = !DILocalVariable(name: "old", scope: !8733, file: !365, line: 1178, type: !87)
!8740 = !DILocation(line: 1181, column: 3, scope: !8741)
!8741 = distinct !DILexicalBlock(scope: !8742, file: !365, line: 1180, column: 3)
!8742 = distinct !DILexicalBlock(scope: !8738, file: !365, line: 1179, column: 3)
!8743 = !DILocation(line: 1181, column: 13, scope: !8741)
!8744 = !DILocation(line: 1181, column: 5, scope: !8745)
!8745 = distinct !DILexicalBlock(scope: !8741, file: !365, line: 1181, column: 13)
!8746 = !DILocation(line: 1184, column: 3, scope: !8741)
!8747 = !DILocation(line: 1182, column: 24, scope: !8748)
!8748 = distinct !DILexicalBlock(scope: !8749, file: !365, line: 1188, column: 3)
!8749 = distinct !DILexicalBlock(scope: !8738, file: !365, line: 1187, column: 3)
!8750 = !DILocation(line: 1182, column: 13, scope: !8748)
!8751 = !DILocation(line: 1182, column: 3, scope: !8748)
!8752 = !DILocation(line: 1183, column: 28, scope: !8753)
!8753 = distinct !DILexicalBlock(scope: !8749, file: !365, line: 1184, column: 3)
!8754 = !DILocation(line: 1183, column: 17, scope: !8753)
!8755 = !DILocation(line: 1183, column: 9, scope: !8753)
!8756 = !DILocalVariable(name: "tmp", scope: !8733, file: !365, line: 1180, type: !83)
!8757 = !DILocation(line: 1183, column: 57, scope: !8749)
!8758 = !DILocation(line: 1183, column: 32, scope: !8749)
!8759 = !DILocation(line: 1183, column: 59, scope: !8749)
!8760 = !DILocation(line: 1183, column: 21, scope: !8749)
!8761 = !DILocation(line: 1183, column: 19, scope: !8749)
!8762 = !DILocation(line: 1184, column: 23, scope: !8749)
!8763 = !DILocalVariable(name: "new", scope: !8733, file: !365, line: 1179, type: !87)
!8764 = !DILocation(line: 1185, column: 19, scope: !8749)
!8765 = !DILocation(line: 1186, column: 7, scope: !8766)
!8766 = distinct !DILexicalBlock(scope: !8738, file: !365, line: 1186, column: 7)
!8767 = !DILocation(line: 1186, column: 19, scope: !8766)
!8768 = !DILocation(line: 1186, column: 17, scope: !8766)
!8769 = !DILocation(line: 1186, column: 7, scope: !8738)
!8770 = !DILocation(line: 1186, column: 54, scope: !8771)
!8771 = distinct !DILexicalBlock(scope: !8766, file: !365, line: 1186, column: 30)
!8772 = !DILocation(line: 1186, column: 34, scope: !8771)
!8773 = !DILocation(line: 1186, column: 56, scope: !8771)
!8774 = !DILocation(line: 1186, column: 23, scope: !8771)
!8775 = !DILocation(line: 1186, column: 21, scope: !8771)
!8776 = !DILocation(line: 1187, column: 3, scope: !8771)
!8777 = !DILocation(line: 1187, column: 8, scope: !8778)
!8778 = distinct !DILexicalBlock(scope: !8738, file: !365, line: 1187, column: 7)
!8779 = !DILocation(line: 1187, column: 18, scope: !8778)
!8780 = !DILocation(line: 1187, column: 27, scope: !8778)
!8781 = !DILocation(line: 1187, column: 37, scope: !8778)
!8782 = !DILocation(line: 1187, column: 24, scope: !8778)
!8783 = !DILocation(line: 1187, column: 7, scope: !8738)
!8784 = !DILocation(line: 1187, column: 54, scope: !8785)
!8785 = distinct !DILexicalBlock(scope: !8778, file: !365, line: 1187, column: 44)
!8786 = !DILocation(line: 1187, column: 34, scope: !8785)
!8787 = !DILocation(line: 1187, column: 56, scope: !8785)
!8788 = !DILocation(line: 1187, column: 23, scope: !8785)
!8789 = !DILocation(line: 1187, column: 21, scope: !8785)
!8790 = !DILocation(line: 1188, column: 3, scope: !8785)
!8791 = !DILocation(line: 1188, column: 7, scope: !8792)
!8792 = distinct !DILexicalBlock(scope: !8738, file: !365, line: 1188, column: 7)
!8793 = !DILocation(line: 1188, column: 17, scope: !8792)
!8794 = !DILocation(line: 1188, column: 7, scope: !8738)
!8795 = !DILocation(line: 1188, column: 54, scope: !8796)
!8796 = distinct !DILexicalBlock(scope: !8792, file: !365, line: 1188, column: 23)
!8797 = !DILocation(line: 1188, column: 34, scope: !8796)
!8798 = !DILocation(line: 1188, column: 56, scope: !8796)
!8799 = !DILocation(line: 1188, column: 23, scope: !8796)
!8800 = !DILocation(line: 1188, column: 21, scope: !8796)
!8801 = !DILocation(line: 1189, column: 3, scope: !8796)
!8802 = !DILocation(line: 1189, column: 3, scope: !8738)
!8803 = distinct !DISubprogram(name: "op_sbc", scope: !365, file: !365, line: 1206, type: !501, scopeLine: 1207, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !666)
!8804 = !DILocalVariable(name: "op", arg: 1, scope: !8803, file: !365, line: 1206, type: !83)
!8805 = !DILocation(line: 0, scope: !8803)
!8806 = !DILocalVariable(name: "oi", arg: 2, scope: !8803, file: !365, line: 1206, type: !503)
!8807 = !DILocation(line: 1208, column: 23, scope: !8808)
!8808 = distinct !DILexicalBlock(scope: !8803, file: !365, line: 1212, column: 3)
!8809 = !DILocalVariable(name: "old", scope: !8803, file: !365, line: 1208, type: !87)
!8810 = !DILocation(line: 1211, column: 3, scope: !8811)
!8811 = distinct !DILexicalBlock(scope: !8812, file: !365, line: 1210, column: 3)
!8812 = distinct !DILexicalBlock(scope: !8808, file: !365, line: 1209, column: 3)
!8813 = !DILocation(line: 1211, column: 13, scope: !8811)
!8814 = !DILocation(line: 1211, column: 5, scope: !8815)
!8815 = distinct !DILexicalBlock(scope: !8811, file: !365, line: 1211, column: 13)
!8816 = !DILocation(line: 1214, column: 3, scope: !8811)
!8817 = !DILocation(line: 1212, column: 24, scope: !8818)
!8818 = distinct !DILexicalBlock(scope: !8819, file: !365, line: 1218, column: 3)
!8819 = distinct !DILexicalBlock(scope: !8808, file: !365, line: 1217, column: 3)
!8820 = !DILocation(line: 1212, column: 13, scope: !8818)
!8821 = !DILocation(line: 1212, column: 3, scope: !8818)
!8822 = !DILocation(line: 1213, column: 28, scope: !8823)
!8823 = distinct !DILexicalBlock(scope: !8819, file: !365, line: 1214, column: 3)
!8824 = !DILocation(line: 1213, column: 17, scope: !8823)
!8825 = !DILocation(line: 1213, column: 9, scope: !8823)
!8826 = !DILocalVariable(name: "tmp", scope: !8803, file: !365, line: 1210, type: !83)
!8827 = !DILocation(line: 1213, column: 57, scope: !8819)
!8828 = !DILocation(line: 1213, column: 32, scope: !8819)
!8829 = !DILocation(line: 1213, column: 59, scope: !8819)
!8830 = !DILocation(line: 1213, column: 21, scope: !8819)
!8831 = !DILocation(line: 1213, column: 19, scope: !8819)
!8832 = !DILocation(line: 1214, column: 52, scope: !8819)
!8833 = !DILocation(line: 1214, column: 32, scope: !8819)
!8834 = !DILocation(line: 1214, column: 78, scope: !8819)
!8835 = !DILocation(line: 1214, column: 58, scope: !8819)
!8836 = !DILocation(line: 1214, column: 80, scope: !8819)
!8837 = !DILocation(line: 1214, column: 86, scope: !8819)
!8838 = !DILocation(line: 1214, column: 54, scope: !8819)
!8839 = !DILocation(line: 1214, column: 21, scope: !8819)
!8840 = !DILocation(line: 1214, column: 19, scope: !8819)
!8841 = !DILocation(line: 1215, column: 23, scope: !8819)
!8842 = !DILocalVariable(name: "new", scope: !8803, file: !365, line: 1209, type: !87)
!8843 = !DILocation(line: 1216, column: 19, scope: !8819)
!8844 = !DILocation(line: 1217, column: 7, scope: !8845)
!8845 = distinct !DILexicalBlock(scope: !8808, file: !365, line: 1217, column: 7)
!8846 = !DILocation(line: 1217, column: 19, scope: !8845)
!8847 = !DILocation(line: 1217, column: 17, scope: !8845)
!8848 = !DILocation(line: 1217, column: 7, scope: !8808)
!8849 = !DILocation(line: 1217, column: 54, scope: !8850)
!8850 = distinct !DILexicalBlock(scope: !8845, file: !365, line: 1217, column: 30)
!8851 = !DILocation(line: 1217, column: 34, scope: !8850)
!8852 = !DILocation(line: 1217, column: 56, scope: !8850)
!8853 = !DILocation(line: 1217, column: 23, scope: !8850)
!8854 = !DILocation(line: 1217, column: 21, scope: !8850)
!8855 = !DILocation(line: 1218, column: 3, scope: !8850)
!8856 = !DILocation(line: 1218, column: 8, scope: !8857)
!8857 = distinct !DILexicalBlock(scope: !8808, file: !365, line: 1218, column: 7)
!8858 = !DILocation(line: 1218, column: 18, scope: !8857)
!8859 = !DILocation(line: 1218, column: 27, scope: !8857)
!8860 = !DILocation(line: 1218, column: 37, scope: !8857)
!8861 = !DILocation(line: 1218, column: 24, scope: !8857)
!8862 = !DILocation(line: 1218, column: 7, scope: !8808)
!8863 = !DILocation(line: 1218, column: 54, scope: !8864)
!8864 = distinct !DILexicalBlock(scope: !8857, file: !365, line: 1218, column: 44)
!8865 = !DILocation(line: 1218, column: 34, scope: !8864)
!8866 = !DILocation(line: 1218, column: 56, scope: !8864)
!8867 = !DILocation(line: 1218, column: 23, scope: !8864)
!8868 = !DILocation(line: 1218, column: 21, scope: !8864)
!8869 = !DILocation(line: 1219, column: 3, scope: !8864)
!8870 = !DILocation(line: 1219, column: 7, scope: !8871)
!8871 = distinct !DILexicalBlock(scope: !8808, file: !365, line: 1219, column: 7)
!8872 = !DILocation(line: 1219, column: 17, scope: !8871)
!8873 = !DILocation(line: 1219, column: 7, scope: !8808)
!8874 = !DILocation(line: 1219, column: 54, scope: !8875)
!8875 = distinct !DILexicalBlock(scope: !8871, file: !365, line: 1219, column: 23)
!8876 = !DILocation(line: 1219, column: 34, scope: !8875)
!8877 = !DILocation(line: 1219, column: 56, scope: !8875)
!8878 = !DILocation(line: 1219, column: 23, scope: !8875)
!8879 = !DILocation(line: 1219, column: 21, scope: !8875)
!8880 = !DILocation(line: 1220, column: 3, scope: !8875)
!8881 = !DILocation(line: 1220, column: 3, scope: !8808)
!8882 = distinct !DISubprogram(name: "op_and", scope: !365, file: !365, line: 1238, type: !501, scopeLine: 1239, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !666)
!8883 = !DILocalVariable(name: "op", arg: 1, scope: !8882, file: !365, line: 1238, type: !83)
!8884 = !DILocation(line: 0, scope: !8882)
!8885 = !DILocalVariable(name: "oi", arg: 2, scope: !8882, file: !365, line: 1238, type: !503)
!8886 = !DILocation(line: 1240, column: 3, scope: !8887)
!8887 = distinct !DILexicalBlock(scope: !8888, file: !365, line: 1244, column: 3)
!8888 = distinct !DILexicalBlock(scope: !8889, file: !365, line: 1243, column: 3)
!8889 = distinct !DILexicalBlock(scope: !8882, file: !365, line: 1242, column: 3)
!8890 = !DILocation(line: 1240, column: 13, scope: !8887)
!8891 = !DILocation(line: 1240, column: 5, scope: !8892)
!8892 = distinct !DILexicalBlock(scope: !8887, file: !365, line: 1240, column: 13)
!8893 = !DILocation(line: 1243, column: 3, scope: !8887)
!8894 = !DILocation(line: 1241, column: 24, scope: !8895)
!8895 = distinct !DILexicalBlock(scope: !8896, file: !365, line: 1247, column: 3)
!8896 = distinct !DILexicalBlock(scope: !8889, file: !365, line: 1246, column: 3)
!8897 = !DILocation(line: 1241, column: 13, scope: !8895)
!8898 = !DILocation(line: 1241, column: 3, scope: !8895)
!8899 = !DILocation(line: 1242, column: 28, scope: !8900)
!8900 = distinct !DILexicalBlock(scope: !8896, file: !365, line: 1243, column: 3)
!8901 = !DILocation(line: 1242, column: 17, scope: !8900)
!8902 = !DILocation(line: 1242, column: 9, scope: !8900)
!8903 = !DILocalVariable(name: "tmp", scope: !8882, file: !365, line: 1240, type: !83)
!8904 = !DILocation(line: 1242, column: 61, scope: !8896)
!8905 = !DILocation(line: 1242, column: 32, scope: !8896)
!8906 = !DILocation(line: 1242, column: 63, scope: !8896)
!8907 = !DILocation(line: 1242, column: 21, scope: !8896)
!8908 = !DILocation(line: 1242, column: 19, scope: !8896)
!8909 = !DILocation(line: 1243, column: 19, scope: !8896)
!8910 = !DILocation(line: 1244, column: 27, scope: !8911)
!8911 = distinct !DILexicalBlock(scope: !8889, file: !365, line: 1244, column: 7)
!8912 = !DILocation(line: 1244, column: 7, scope: !8911)
!8913 = !DILocation(line: 1244, column: 29, scope: !8911)
!8914 = !DILocation(line: 1244, column: 7, scope: !8889)
!8915 = !DILocation(line: 1244, column: 54, scope: !8916)
!8916 = distinct !DILexicalBlock(scope: !8911, file: !365, line: 1244, column: 35)
!8917 = !DILocation(line: 1244, column: 34, scope: !8916)
!8918 = !DILocation(line: 1244, column: 56, scope: !8916)
!8919 = !DILocation(line: 1244, column: 23, scope: !8916)
!8920 = !DILocation(line: 1244, column: 21, scope: !8916)
!8921 = !DILocation(line: 1245, column: 3, scope: !8916)
!8922 = !DILocation(line: 1245, column: 3, scope: !8889)
!8923 = distinct !DISubprogram(name: "op_xor", scope: !365, file: !365, line: 1276, type: !501, scopeLine: 1277, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !666)
!8924 = !DILocalVariable(name: "op", arg: 1, scope: !8923, file: !365, line: 1276, type: !83)
!8925 = !DILocation(line: 0, scope: !8923)
!8926 = !DILocalVariable(name: "oi", arg: 2, scope: !8923, file: !365, line: 1276, type: !503)
!8927 = !DILocation(line: 1278, column: 3, scope: !8928)
!8928 = distinct !DILexicalBlock(scope: !8929, file: !365, line: 1282, column: 3)
!8929 = distinct !DILexicalBlock(scope: !8930, file: !365, line: 1281, column: 3)
!8930 = distinct !DILexicalBlock(scope: !8923, file: !365, line: 1280, column: 3)
!8931 = !DILocation(line: 1278, column: 13, scope: !8928)
!8932 = !DILocation(line: 1278, column: 5, scope: !8933)
!8933 = distinct !DILexicalBlock(scope: !8928, file: !365, line: 1278, column: 13)
!8934 = !DILocation(line: 1281, column: 3, scope: !8928)
!8935 = !DILocation(line: 1279, column: 24, scope: !8936)
!8936 = distinct !DILexicalBlock(scope: !8937, file: !365, line: 1285, column: 3)
!8937 = distinct !DILexicalBlock(scope: !8930, file: !365, line: 1284, column: 3)
!8938 = !DILocation(line: 1279, column: 13, scope: !8936)
!8939 = !DILocation(line: 1279, column: 3, scope: !8936)
!8940 = !DILocation(line: 1280, column: 28, scope: !8941)
!8941 = distinct !DILexicalBlock(scope: !8937, file: !365, line: 1281, column: 3)
!8942 = !DILocation(line: 1280, column: 17, scope: !8941)
!8943 = !DILocation(line: 1280, column: 9, scope: !8941)
!8944 = !DILocalVariable(name: "tmp", scope: !8923, file: !365, line: 1278, type: !83)
!8945 = !DILocation(line: 1280, column: 61, scope: !8937)
!8946 = !DILocation(line: 1280, column: 32, scope: !8937)
!8947 = !DILocation(line: 1280, column: 63, scope: !8937)
!8948 = !DILocation(line: 1280, column: 21, scope: !8937)
!8949 = !DILocation(line: 1280, column: 19, scope: !8937)
!8950 = !DILocation(line: 1281, column: 19, scope: !8937)
!8951 = !DILocation(line: 1282, column: 27, scope: !8952)
!8952 = distinct !DILexicalBlock(scope: !8930, file: !365, line: 1282, column: 7)
!8953 = !DILocation(line: 1282, column: 7, scope: !8952)
!8954 = !DILocation(line: 1282, column: 29, scope: !8952)
!8955 = !DILocation(line: 1282, column: 7, scope: !8930)
!8956 = !DILocation(line: 1282, column: 54, scope: !8957)
!8957 = distinct !DILexicalBlock(scope: !8952, file: !365, line: 1282, column: 35)
!8958 = !DILocation(line: 1282, column: 34, scope: !8957)
!8959 = !DILocation(line: 1282, column: 56, scope: !8957)
!8960 = !DILocation(line: 1282, column: 23, scope: !8957)
!8961 = !DILocation(line: 1282, column: 21, scope: !8957)
!8962 = !DILocation(line: 1283, column: 3, scope: !8957)
!8963 = !DILocation(line: 1283, column: 3, scope: !8930)
!8964 = distinct !DISubprogram(name: "op_or", scope: !365, file: !365, line: 1257, type: !501, scopeLine: 1258, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !666)
!8965 = !DILocalVariable(name: "op", arg: 1, scope: !8964, file: !365, line: 1257, type: !83)
!8966 = !DILocation(line: 0, scope: !8964)
!8967 = !DILocalVariable(name: "oi", arg: 2, scope: !8964, file: !365, line: 1257, type: !503)
!8968 = !DILocation(line: 1259, column: 3, scope: !8969)
!8969 = distinct !DILexicalBlock(scope: !8970, file: !365, line: 1263, column: 3)
!8970 = distinct !DILexicalBlock(scope: !8971, file: !365, line: 1262, column: 3)
!8971 = distinct !DILexicalBlock(scope: !8964, file: !365, line: 1261, column: 3)
!8972 = !DILocation(line: 1259, column: 13, scope: !8969)
!8973 = !DILocation(line: 1259, column: 5, scope: !8974)
!8974 = distinct !DILexicalBlock(scope: !8969, file: !365, line: 1259, column: 13)
!8975 = !DILocation(line: 1262, column: 3, scope: !8969)
!8976 = !DILocation(line: 1260, column: 24, scope: !8977)
!8977 = distinct !DILexicalBlock(scope: !8978, file: !365, line: 1266, column: 3)
!8978 = distinct !DILexicalBlock(scope: !8971, file: !365, line: 1265, column: 3)
!8979 = !DILocation(line: 1260, column: 13, scope: !8977)
!8980 = !DILocation(line: 1260, column: 3, scope: !8977)
!8981 = !DILocation(line: 1261, column: 28, scope: !8982)
!8982 = distinct !DILexicalBlock(scope: !8978, file: !365, line: 1262, column: 3)
!8983 = !DILocation(line: 1261, column: 17, scope: !8982)
!8984 = !DILocation(line: 1261, column: 9, scope: !8982)
!8985 = !DILocalVariable(name: "tmp", scope: !8964, file: !365, line: 1259, type: !83)
!8986 = !DILocation(line: 1261, column: 61, scope: !8978)
!8987 = !DILocation(line: 1261, column: 32, scope: !8978)
!8988 = !DILocation(line: 1261, column: 63, scope: !8978)
!8989 = !DILocation(line: 1261, column: 21, scope: !8978)
!8990 = !DILocation(line: 1261, column: 19, scope: !8978)
!8991 = !DILocation(line: 1262, column: 19, scope: !8978)
!8992 = !DILocation(line: 1263, column: 27, scope: !8993)
!8993 = distinct !DILexicalBlock(scope: !8971, file: !365, line: 1263, column: 7)
!8994 = !DILocation(line: 1263, column: 7, scope: !8993)
!8995 = !DILocation(line: 1263, column: 29, scope: !8993)
!8996 = !DILocation(line: 1263, column: 7, scope: !8971)
!8997 = !DILocation(line: 1263, column: 54, scope: !8998)
!8998 = distinct !DILexicalBlock(scope: !8993, file: !365, line: 1263, column: 35)
!8999 = !DILocation(line: 1263, column: 34, scope: !8998)
!9000 = !DILocation(line: 1263, column: 56, scope: !8998)
!9001 = !DILocation(line: 1263, column: 23, scope: !8998)
!9002 = !DILocation(line: 1263, column: 21, scope: !8998)
!9003 = !DILocation(line: 1264, column: 3, scope: !8998)
!9004 = !DILocation(line: 1264, column: 3, scope: !8971)
!9005 = distinct !DISubprogram(name: "op_cp", scope: !365, file: !365, line: 1148, type: !501, scopeLine: 1149, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !666)
!9006 = !DILocalVariable(name: "op", arg: 1, scope: !9005, file: !365, line: 1148, type: !83)
!9007 = !DILocation(line: 0, scope: !9005)
!9008 = !DILocalVariable(name: "oi", arg: 2, scope: !9005, file: !365, line: 1148, type: !503)
!9009 = !DILocation(line: 1150, column: 23, scope: !9010)
!9010 = distinct !DILexicalBlock(scope: !9005, file: !365, line: 1154, column: 3)
!9011 = !DILocalVariable(name: "old", scope: !9005, file: !365, line: 1150, type: !87)
!9012 = !DILocalVariable(name: "new", scope: !9005, file: !365, line: 1151, type: !87)
!9013 = !DILocation(line: 1153, column: 3, scope: !9014)
!9014 = distinct !DILexicalBlock(scope: !9015, file: !365, line: 1153, column: 3)
!9015 = distinct !DILexicalBlock(scope: !9010, file: !365, line: 1152, column: 3)
!9016 = !DILocation(line: 1153, column: 13, scope: !9014)
!9017 = !DILocation(line: 1153, column: 5, scope: !9018)
!9018 = distinct !DILexicalBlock(scope: !9014, file: !365, line: 1153, column: 13)
!9019 = !DILocation(line: 1156, column: 3, scope: !9014)
!9020 = !DILocation(line: 1154, column: 24, scope: !9021)
!9021 = distinct !DILexicalBlock(scope: !9022, file: !365, line: 1160, column: 3)
!9022 = distinct !DILexicalBlock(scope: !9010, file: !365, line: 1159, column: 3)
!9023 = !DILocation(line: 1154, column: 13, scope: !9021)
!9024 = !DILocation(line: 1154, column: 3, scope: !9021)
!9025 = !DILocation(line: 1155, column: 28, scope: !9026)
!9026 = distinct !DILexicalBlock(scope: !9022, file: !365, line: 1156, column: 3)
!9027 = !DILocation(line: 1155, column: 17, scope: !9026)
!9028 = !DILocation(line: 1155, column: 9, scope: !9026)
!9029 = !DILocalVariable(name: "tmp", scope: !9005, file: !365, line: 1152, type: !83)
!9030 = !DILocation(line: 1155, column: 20, scope: !9022)
!9031 = !DILocation(line: 1155, column: 35, scope: !9022)
!9032 = !DILocation(line: 1155, column: 9, scope: !9022)
!9033 = !DILocation(line: 1156, column: 19, scope: !9022)
!9034 = !DILocation(line: 1157, column: 7, scope: !9035)
!9035 = distinct !DILexicalBlock(scope: !9010, file: !365, line: 1157, column: 7)
!9036 = !DILocation(line: 1157, column: 19, scope: !9035)
!9037 = !DILocation(line: 1157, column: 17, scope: !9035)
!9038 = !DILocation(line: 1157, column: 7, scope: !9010)
!9039 = !DILocation(line: 1157, column: 54, scope: !9040)
!9040 = distinct !DILexicalBlock(scope: !9035, file: !365, line: 1157, column: 30)
!9041 = !DILocation(line: 1157, column: 34, scope: !9040)
!9042 = !DILocation(line: 1157, column: 56, scope: !9040)
!9043 = !DILocation(line: 1157, column: 23, scope: !9040)
!9044 = !DILocation(line: 1157, column: 21, scope: !9040)
!9045 = !DILocation(line: 1158, column: 3, scope: !9040)
!9046 = !DILocation(line: 1158, column: 8, scope: !9047)
!9047 = distinct !DILexicalBlock(scope: !9010, file: !365, line: 1158, column: 7)
!9048 = !DILocation(line: 1158, column: 18, scope: !9047)
!9049 = !DILocation(line: 1158, column: 27, scope: !9047)
!9050 = !DILocation(line: 1158, column: 37, scope: !9047)
!9051 = !DILocation(line: 1158, column: 24, scope: !9047)
!9052 = !DILocation(line: 1158, column: 7, scope: !9010)
!9053 = !DILocation(line: 1158, column: 54, scope: !9054)
!9054 = distinct !DILexicalBlock(scope: !9047, file: !365, line: 1158, column: 44)
!9055 = !DILocation(line: 1158, column: 34, scope: !9054)
!9056 = !DILocation(line: 1158, column: 56, scope: !9054)
!9057 = !DILocation(line: 1158, column: 23, scope: !9054)
!9058 = !DILocation(line: 1158, column: 21, scope: !9054)
!9059 = !DILocation(line: 1159, column: 3, scope: !9054)
!9060 = !DILocation(line: 1159, column: 7, scope: !9061)
!9061 = distinct !DILexicalBlock(scope: !9010, file: !365, line: 1159, column: 7)
!9062 = !DILocation(line: 1159, column: 17, scope: !9061)
!9063 = !DILocation(line: 1159, column: 7, scope: !9010)
!9064 = !DILocation(line: 1159, column: 54, scope: !9065)
!9065 = distinct !DILexicalBlock(scope: !9061, file: !365, line: 1159, column: 23)
!9066 = !DILocation(line: 1159, column: 34, scope: !9065)
!9067 = !DILocation(line: 1159, column: 56, scope: !9065)
!9068 = !DILocation(line: 1159, column: 23, scope: !9065)
!9069 = !DILocation(line: 1159, column: 21, scope: !9065)
!9070 = !DILocation(line: 1160, column: 3, scope: !9065)
!9071 = !DILocation(line: 1160, column: 3, scope: !9010)
!9072 = distinct !DISubprogram(name: "op_ret_cond", scope: !365, file: !365, line: 1369, type: !501, scopeLine: 1370, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !666)
!9073 = !DILocalVariable(name: "op", arg: 1, scope: !9072, file: !365, line: 1369, type: !83)
!9074 = !DILocation(line: 0, scope: !9072)
!9075 = !DILocalVariable(name: "oi", arg: 2, scope: !9072, file: !365, line: 1369, type: !503)
!9076 = !DILocation(line: 1371, column: 22, scope: !9077)
!9077 = distinct !DILexicalBlock(scope: !9072, file: !365, line: 1374, column: 3)
!9078 = !DILocation(line: 1371, column: 28, scope: !9077)
!9079 = !DILocation(line: 1371, column: 10, scope: !9077)
!9080 = !DILocalVariable(name: "cond", scope: !9072, file: !365, line: 1371, type: !15)
!9081 = !DILocation(line: 1373, column: 3, scope: !9082)
!9082 = distinct !DILexicalBlock(scope: !9083, file: !365, line: 1373, column: 3)
!9083 = distinct !DILexicalBlock(scope: !9077, file: !365, line: 1372, column: 3)
!9084 = !DILocation(line: 1373, column: 13, scope: !9082)
!9085 = !DILocation(line: 1373, column: 5, scope: !9086)
!9086 = distinct !DILexicalBlock(scope: !9082, file: !365, line: 1373, column: 13)
!9087 = !DILocation(line: 1376, column: 3, scope: !9082)
!9088 = !DILocation(line: 1375, column: 12, scope: !9089)
!9089 = distinct !DILexicalBlock(scope: !9090, file: !365, line: 1375, column: 7)
!9090 = distinct !DILexicalBlock(scope: !9077, file: !365, line: 1379, column: 3)
!9091 = !DILocation(line: 1375, column: 7, scope: !9090)
!9092 = !DILocation(line: 1375, column: 5, scope: !9093)
!9093 = distinct !DILexicalBlock(scope: !9089, file: !365, line: 1375, column: 19)
!9094 = !DILocation(line: 1376, column: 12, scope: !9095)
!9095 = distinct !DILexicalBlock(scope: !9090, file: !365, line: 1376, column: 7)
!9096 = !DILocation(line: 1376, column: 7, scope: !9090)
!9097 = !DILocation(line: 1376, column: 5, scope: !9098)
!9098 = distinct !DILexicalBlock(scope: !9095, file: !365, line: 1376, column: 19)
!9099 = !DILocation(line: 1377, column: 12, scope: !9100)
!9100 = distinct !DILexicalBlock(scope: !9090, file: !365, line: 1377, column: 7)
!9101 = !DILocation(line: 1377, column: 7, scope: !9090)
!9102 = !DILocation(line: 1377, column: 5, scope: !9103)
!9103 = distinct !DILexicalBlock(scope: !9100, file: !365, line: 1377, column: 19)
!9104 = !DILocation(line: 1378, column: 12, scope: !9105)
!9105 = distinct !DILexicalBlock(scope: !9090, file: !365, line: 1378, column: 7)
!9106 = !DILocation(line: 1378, column: 7, scope: !9090)
!9107 = !DILocation(line: 1378, column: 5, scope: !9108)
!9108 = distinct !DILexicalBlock(scope: !9105, file: !365, line: 1378, column: 19)
!9109 = !DILocation(line: 1374, column: 3, scope: !9090)
!9110 = !DILocation(line: 1375, column: 28, scope: !9111)
!9111 = distinct !DILexicalBlock(scope: !9090, file: !365, line: 1375, column: 7)
!9112 = !DILocation(line: 1375, column: 8, scope: !9111)
!9113 = !DILocation(line: 1375, column: 30, scope: !9111)
!9114 = !DILocation(line: 1375, column: 37, scope: !9111)
!9115 = !DILocation(line: 1375, column: 5, scope: !9116)
!9116 = distinct !DILexicalBlock(scope: !9111, file: !365, line: 1375, column: 43)
!9117 = !DILocation(line: 1375, column: 3, scope: !9090)
!9118 = !DILocation(line: 1376, column: 28, scope: !9119)
!9119 = distinct !DILexicalBlock(scope: !9090, file: !365, line: 1376, column: 7)
!9120 = !DILocation(line: 1376, column: 8, scope: !9119)
!9121 = !DILocation(line: 1376, column: 30, scope: !9119)
!9122 = !DILocation(line: 1376, column: 37, scope: !9119)
!9123 = !DILocation(line: 1376, column: 5, scope: !9124)
!9124 = distinct !DILexicalBlock(scope: !9119, file: !365, line: 1376, column: 43)
!9125 = !DILocation(line: 1376, column: 3, scope: !9090)
!9126 = !DILocation(line: 1377, column: 28, scope: !9127)
!9127 = distinct !DILexicalBlock(scope: !9090, file: !365, line: 1377, column: 7)
!9128 = !DILocation(line: 1377, column: 8, scope: !9127)
!9129 = !DILocation(line: 1377, column: 30, scope: !9127)
!9130 = !DILocation(line: 1377, column: 36, scope: !9127)
!9131 = !DILocation(line: 1377, column: 5, scope: !9132)
!9132 = distinct !DILexicalBlock(scope: !9127, file: !365, line: 1377, column: 42)
!9133 = !DILocation(line: 1377, column: 3, scope: !9090)
!9134 = !DILocation(line: 1378, column: 28, scope: !9135)
!9135 = distinct !DILexicalBlock(scope: !9090, file: !365, line: 1378, column: 7)
!9136 = !DILocation(line: 1378, column: 8, scope: !9135)
!9137 = !DILocation(line: 1378, column: 30, scope: !9135)
!9138 = !DILocation(line: 1378, column: 36, scope: !9135)
!9139 = !DILocation(line: 1378, column: 5, scope: !9140)
!9140 = distinct !DILexicalBlock(scope: !9135, file: !365, line: 1378, column: 42)
!9141 = !DILocation(line: 1378, column: 3, scope: !9090)
!9142 = !DILocation(line: 1380, column: 9, scope: !9143)
!9143 = distinct !DILexicalBlock(scope: !9144, file: !365, line: 1382, column: 3)
!9144 = distinct !DILexicalBlock(scope: !9077, file: !365, line: 1381, column: 3)
!9145 = !DILocalVariable(name: "tmp", scope: !9072, file: !365, line: 1372, type: !83)
!9146 = !DILocation(line: 1380, column: 42, scope: !9144)
!9147 = !DILocation(line: 1380, column: 40, scope: !9144)
!9148 = !DILocation(line: 1381, column: 3, scope: !9077)
!9149 = !DILocation(line: 1383, column: 1, scope: !9072)
!9150 = distinct !DISubprogram(name: "op_pop", scope: !365, file: !365, line: 1303, type: !501, scopeLine: 1304, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !666)
!9151 = !DILocalVariable(name: "op", arg: 1, scope: !9150, file: !365, line: 1303, type: !83)
!9152 = !DILocation(line: 0, scope: !9150)
!9153 = !DILocalVariable(name: "oi", arg: 2, scope: !9150, file: !365, line: 1303, type: !503)
!9154 = !DILocation(line: 1305, column: 21, scope: !9155)
!9155 = distinct !DILexicalBlock(scope: !9156, file: !365, line: 1309, column: 3)
!9156 = distinct !DILexicalBlock(scope: !9150, file: !365, line: 1308, column: 3)
!9157 = !DILocation(line: 1305, column: 27, scope: !9155)
!9158 = !DILocation(line: 1305, column: 9, scope: !9155)
!9159 = !DILocalVariable(name: "reg", scope: !9150, file: !365, line: 1305, type: !15)
!9160 = !DILocation(line: 1307, column: 9, scope: !9161)
!9161 = distinct !DILexicalBlock(scope: !9155, file: !365, line: 1306, column: 3)
!9162 = !DILocalVariable(name: "tmp", scope: !9150, file: !365, line: 1306, type: !83)
!9163 = !DILocation(line: 1307, column: 48, scope: !9155)
!9164 = !DILocation(line: 1307, column: 38, scope: !9155)
!9165 = !DILocation(line: 1307, column: 20, scope: !9155)
!9166 = !DILocation(line: 1307, column: 3, scope: !9155)
!9167 = !DILocation(line: 1307, column: 46, scope: !9155)
!9168 = !DILocation(line: 1308, column: 3, scope: !9169)
!9169 = distinct !DILexicalBlock(scope: !9170, file: !365, line: 1310, column: 3)
!9170 = distinct !DILexicalBlock(scope: !9156, file: !365, line: 1309, column: 3)
!9171 = !DILocation(line: 1308, column: 13, scope: !9169)
!9172 = !DILocation(line: 1308, column: 5, scope: !9173)
!9173 = distinct !DILexicalBlock(scope: !9169, file: !365, line: 1308, column: 13)
!9174 = !DILocation(line: 1311, column: 3, scope: !9169)
!9175 = !DILocation(line: 1309, column: 3, scope: !9156)
!9176 = distinct !DISubprogram(name: "op_jp_cond", scope: !365, file: !365, line: 1445, type: !501, scopeLine: 1446, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !666)
!9177 = !DILocalVariable(name: "op", arg: 1, scope: !9176, file: !365, line: 1445, type: !83)
!9178 = !DILocation(line: 0, scope: !9176)
!9179 = !DILocalVariable(name: "oi", arg: 2, scope: !9176, file: !365, line: 1445, type: !503)
!9180 = !DILocation(line: 1447, column: 9, scope: !9181)
!9181 = distinct !DILexicalBlock(scope: !9182, file: !365, line: 1453, column: 3)
!9182 = distinct !DILexicalBlock(scope: !9183, file: !365, line: 1452, column: 3)
!9183 = distinct !DILexicalBlock(scope: !9176, file: !365, line: 1451, column: 3)
!9184 = !DILocalVariable(name: "tmp", scope: !9176, file: !365, line: 1448, type: !83)
!9185 = !DILocation(line: 1447, column: 9, scope: !9182)
!9186 = !DILocalVariable(name: "ofs", scope: !9176, file: !365, line: 1447, type: !86)
!9187 = !DILocation(line: 1448, column: 22, scope: !9182)
!9188 = !DILocation(line: 1448, column: 28, scope: !9182)
!9189 = !DILocation(line: 1448, column: 10, scope: !9182)
!9190 = !DILocalVariable(name: "cond", scope: !9176, file: !365, line: 1449, type: !15)
!9191 = !DILocation(line: 1450, column: 3, scope: !9192)
!9192 = distinct !DILexicalBlock(scope: !9193, file: !365, line: 1451, column: 3)
!9193 = distinct !DILexicalBlock(scope: !9183, file: !365, line: 1450, column: 3)
!9194 = !DILocation(line: 1450, column: 13, scope: !9192)
!9195 = !DILocation(line: 1450, column: 5, scope: !9196)
!9196 = distinct !DILexicalBlock(scope: !9192, file: !365, line: 1450, column: 13)
!9197 = !DILocation(line: 1453, column: 3, scope: !9192)
!9198 = !DILocation(line: 1452, column: 12, scope: !9199)
!9199 = distinct !DILexicalBlock(scope: !9200, file: !365, line: 1452, column: 7)
!9200 = distinct !DILexicalBlock(scope: !9183, file: !365, line: 1456, column: 3)
!9201 = !DILocation(line: 1452, column: 7, scope: !9200)
!9202 = !DILocation(line: 1452, column: 5, scope: !9203)
!9203 = distinct !DILexicalBlock(scope: !9199, file: !365, line: 1452, column: 19)
!9204 = !DILocation(line: 1453, column: 12, scope: !9205)
!9205 = distinct !DILexicalBlock(scope: !9200, file: !365, line: 1453, column: 7)
!9206 = !DILocation(line: 1453, column: 7, scope: !9200)
!9207 = !DILocation(line: 1453, column: 5, scope: !9208)
!9208 = distinct !DILexicalBlock(scope: !9205, file: !365, line: 1453, column: 19)
!9209 = !DILocation(line: 1454, column: 12, scope: !9210)
!9210 = distinct !DILexicalBlock(scope: !9200, file: !365, line: 1454, column: 7)
!9211 = !DILocation(line: 1454, column: 7, scope: !9200)
!9212 = !DILocation(line: 1454, column: 5, scope: !9213)
!9213 = distinct !DILexicalBlock(scope: !9210, file: !365, line: 1454, column: 19)
!9214 = !DILocation(line: 1455, column: 12, scope: !9215)
!9215 = distinct !DILexicalBlock(scope: !9200, file: !365, line: 1455, column: 7)
!9216 = !DILocation(line: 1455, column: 7, scope: !9200)
!9217 = !DILocation(line: 1455, column: 5, scope: !9218)
!9218 = distinct !DILexicalBlock(scope: !9215, file: !365, line: 1455, column: 19)
!9219 = !DILocation(line: 1451, column: 3, scope: !9200)
!9220 = !DILocation(line: 1452, column: 28, scope: !9221)
!9221 = distinct !DILexicalBlock(scope: !9200, file: !365, line: 1452, column: 7)
!9222 = !DILocation(line: 1452, column: 8, scope: !9221)
!9223 = !DILocation(line: 1452, column: 30, scope: !9221)
!9224 = !DILocation(line: 1452, column: 37, scope: !9221)
!9225 = !DILocation(line: 1452, column: 5, scope: !9226)
!9226 = distinct !DILexicalBlock(scope: !9221, file: !365, line: 1452, column: 43)
!9227 = !DILocation(line: 1452, column: 3, scope: !9200)
!9228 = !DILocation(line: 1453, column: 28, scope: !9229)
!9229 = distinct !DILexicalBlock(scope: !9200, file: !365, line: 1453, column: 7)
!9230 = !DILocation(line: 1453, column: 8, scope: !9229)
!9231 = !DILocation(line: 1453, column: 30, scope: !9229)
!9232 = !DILocation(line: 1453, column: 37, scope: !9229)
!9233 = !DILocation(line: 1453, column: 5, scope: !9234)
!9234 = distinct !DILexicalBlock(scope: !9229, file: !365, line: 1453, column: 43)
!9235 = !DILocation(line: 1453, column: 3, scope: !9200)
!9236 = !DILocation(line: 1454, column: 28, scope: !9237)
!9237 = distinct !DILexicalBlock(scope: !9200, file: !365, line: 1454, column: 7)
!9238 = !DILocation(line: 1454, column: 8, scope: !9237)
!9239 = !DILocation(line: 1454, column: 30, scope: !9237)
!9240 = !DILocation(line: 1454, column: 36, scope: !9237)
!9241 = !DILocation(line: 1454, column: 5, scope: !9242)
!9242 = distinct !DILexicalBlock(scope: !9237, file: !365, line: 1454, column: 42)
!9243 = !DILocation(line: 1454, column: 3, scope: !9200)
!9244 = !DILocation(line: 1455, column: 28, scope: !9245)
!9245 = distinct !DILexicalBlock(scope: !9200, file: !365, line: 1455, column: 7)
!9246 = !DILocation(line: 1455, column: 8, scope: !9245)
!9247 = !DILocation(line: 1455, column: 30, scope: !9245)
!9248 = !DILocation(line: 1455, column: 36, scope: !9245)
!9249 = !DILocation(line: 1455, column: 5, scope: !9250)
!9250 = distinct !DILexicalBlock(scope: !9245, file: !365, line: 1455, column: 42)
!9251 = !DILocation(line: 1455, column: 3, scope: !9200)
!9252 = !DILocation(line: 1457, column: 40, scope: !9183)
!9253 = !DILocation(line: 1458, column: 3, scope: !9183)
!9254 = !DILocation(line: 1460, column: 1, scope: !9176)
!9255 = distinct !DISubprogram(name: "op_jp", scope: !365, file: !365, line: 1431, type: !501, scopeLine: 1432, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !666)
!9256 = !DILocalVariable(name: "op", arg: 1, scope: !9255, file: !365, line: 1431, type: !83)
!9257 = !DILocation(line: 0, scope: !9255)
!9258 = !DILocalVariable(name: "oi", arg: 2, scope: !9255, file: !365, line: 1431, type: !503)
!9259 = !DILocation(line: 1433, column: 9, scope: !9260)
!9260 = distinct !DILexicalBlock(scope: !9261, file: !365, line: 1438, column: 3)
!9261 = distinct !DILexicalBlock(scope: !9262, file: !365, line: 1437, column: 3)
!9262 = distinct !DILexicalBlock(scope: !9255, file: !365, line: 1436, column: 3)
!9263 = !DILocalVariable(name: "tmp", scope: !9255, file: !365, line: 1434, type: !83)
!9264 = !DILocation(line: 1433, column: 9, scope: !9261)
!9265 = !DILocalVariable(name: "ofs", scope: !9255, file: !365, line: 1433, type: !86)
!9266 = !DILocation(line: 1435, column: 3, scope: !9267)
!9267 = distinct !DILexicalBlock(scope: !9268, file: !365, line: 1436, column: 3)
!9268 = distinct !DILexicalBlock(scope: !9262, file: !365, line: 1435, column: 3)
!9269 = !DILocation(line: 1435, column: 13, scope: !9267)
!9270 = !DILocation(line: 1435, column: 5, scope: !9271)
!9271 = distinct !DILexicalBlock(scope: !9267, file: !365, line: 1435, column: 13)
!9272 = !DILocation(line: 1438, column: 3, scope: !9267)
!9273 = !DILocation(line: 1436, column: 40, scope: !9262)
!9274 = !DILocation(line: 1437, column: 3, scope: !9262)
!9275 = distinct !DISubprogram(name: "op_call_cond", scope: !365, file: !365, line: 1341, type: !501, scopeLine: 1342, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !666)
!9276 = !DILocalVariable(name: "op", arg: 1, scope: !9275, file: !365, line: 1341, type: !83)
!9277 = !DILocation(line: 0, scope: !9275)
!9278 = !DILocalVariable(name: "oi", arg: 2, scope: !9275, file: !365, line: 1341, type: !503)
!9279 = !DILocation(line: 1343, column: 9, scope: !9280)
!9280 = distinct !DILexicalBlock(scope: !9281, file: !365, line: 1349, column: 3)
!9281 = distinct !DILexicalBlock(scope: !9282, file: !365, line: 1348, column: 3)
!9282 = distinct !DILexicalBlock(scope: !9275, file: !365, line: 1347, column: 3)
!9283 = !DILocalVariable(name: "tmp", scope: !9275, file: !365, line: 1344, type: !83)
!9284 = !DILocation(line: 1343, column: 9, scope: !9281)
!9285 = !DILocalVariable(name: "ofs", scope: !9275, file: !365, line: 1343, type: !86)
!9286 = !DILocation(line: 1344, column: 22, scope: !9281)
!9287 = !DILocation(line: 1344, column: 28, scope: !9281)
!9288 = !DILocation(line: 1344, column: 10, scope: !9281)
!9289 = !DILocalVariable(name: "cond", scope: !9275, file: !365, line: 1345, type: !15)
!9290 = !DILocation(line: 1346, column: 3, scope: !9291)
!9291 = distinct !DILexicalBlock(scope: !9292, file: !365, line: 1347, column: 3)
!9292 = distinct !DILexicalBlock(scope: !9282, file: !365, line: 1346, column: 3)
!9293 = !DILocation(line: 1346, column: 13, scope: !9291)
!9294 = !DILocation(line: 1346, column: 5, scope: !9295)
!9295 = distinct !DILexicalBlock(scope: !9291, file: !365, line: 1346, column: 13)
!9296 = !DILocation(line: 1349, column: 3, scope: !9291)
!9297 = !DILocation(line: 1348, column: 12, scope: !9298)
!9298 = distinct !DILexicalBlock(scope: !9299, file: !365, line: 1348, column: 7)
!9299 = distinct !DILexicalBlock(scope: !9282, file: !365, line: 1352, column: 3)
!9300 = !DILocation(line: 1348, column: 7, scope: !9299)
!9301 = !DILocation(line: 1348, column: 5, scope: !9302)
!9302 = distinct !DILexicalBlock(scope: !9298, file: !365, line: 1348, column: 19)
!9303 = !DILocation(line: 1349, column: 12, scope: !9304)
!9304 = distinct !DILexicalBlock(scope: !9299, file: !365, line: 1349, column: 7)
!9305 = !DILocation(line: 1349, column: 7, scope: !9299)
!9306 = !DILocation(line: 1349, column: 5, scope: !9307)
!9307 = distinct !DILexicalBlock(scope: !9304, file: !365, line: 1349, column: 19)
!9308 = !DILocation(line: 1350, column: 12, scope: !9309)
!9309 = distinct !DILexicalBlock(scope: !9299, file: !365, line: 1350, column: 7)
!9310 = !DILocation(line: 1350, column: 7, scope: !9299)
!9311 = !DILocation(line: 1350, column: 5, scope: !9312)
!9312 = distinct !DILexicalBlock(scope: !9309, file: !365, line: 1350, column: 19)
!9313 = !DILocation(line: 1351, column: 12, scope: !9314)
!9314 = distinct !DILexicalBlock(scope: !9299, file: !365, line: 1351, column: 7)
!9315 = !DILocation(line: 1351, column: 7, scope: !9299)
!9316 = !DILocation(line: 1351, column: 5, scope: !9317)
!9317 = distinct !DILexicalBlock(scope: !9314, file: !365, line: 1351, column: 19)
!9318 = !DILocation(line: 1347, column: 3, scope: !9299)
!9319 = !DILocation(line: 1348, column: 28, scope: !9320)
!9320 = distinct !DILexicalBlock(scope: !9299, file: !365, line: 1348, column: 7)
!9321 = !DILocation(line: 1348, column: 8, scope: !9320)
!9322 = !DILocation(line: 1348, column: 30, scope: !9320)
!9323 = !DILocation(line: 1348, column: 37, scope: !9320)
!9324 = !DILocation(line: 1348, column: 5, scope: !9325)
!9325 = distinct !DILexicalBlock(scope: !9320, file: !365, line: 1348, column: 43)
!9326 = !DILocation(line: 1348, column: 3, scope: !9299)
!9327 = !DILocation(line: 1349, column: 28, scope: !9328)
!9328 = distinct !DILexicalBlock(scope: !9299, file: !365, line: 1349, column: 7)
!9329 = !DILocation(line: 1349, column: 8, scope: !9328)
!9330 = !DILocation(line: 1349, column: 30, scope: !9328)
!9331 = !DILocation(line: 1349, column: 37, scope: !9328)
!9332 = !DILocation(line: 1349, column: 5, scope: !9333)
!9333 = distinct !DILexicalBlock(scope: !9328, file: !365, line: 1349, column: 43)
!9334 = !DILocation(line: 1349, column: 3, scope: !9299)
!9335 = !DILocation(line: 1350, column: 28, scope: !9336)
!9336 = distinct !DILexicalBlock(scope: !9299, file: !365, line: 1350, column: 7)
!9337 = !DILocation(line: 1350, column: 8, scope: !9336)
!9338 = !DILocation(line: 1350, column: 30, scope: !9336)
!9339 = !DILocation(line: 1350, column: 36, scope: !9336)
!9340 = !DILocation(line: 1350, column: 5, scope: !9341)
!9341 = distinct !DILexicalBlock(scope: !9336, file: !365, line: 1350, column: 42)
!9342 = !DILocation(line: 1350, column: 3, scope: !9299)
!9343 = !DILocation(line: 1351, column: 28, scope: !9344)
!9344 = distinct !DILexicalBlock(scope: !9299, file: !365, line: 1351, column: 7)
!9345 = !DILocation(line: 1351, column: 8, scope: !9344)
!9346 = !DILocation(line: 1351, column: 30, scope: !9344)
!9347 = !DILocation(line: 1351, column: 36, scope: !9344)
!9348 = !DILocation(line: 1351, column: 5, scope: !9349)
!9349 = distinct !DILexicalBlock(scope: !9344, file: !365, line: 1351, column: 42)
!9350 = !DILocation(line: 1351, column: 3, scope: !9299)
!9351 = !DILocation(line: 1353, column: 19, scope: !9352)
!9352 = distinct !DILexicalBlock(scope: !9353, file: !365, line: 1355, column: 3)
!9353 = distinct !DILexicalBlock(scope: !9282, file: !365, line: 1354, column: 3)
!9354 = !DILocation(line: 1353, column: 8, scope: !9352)
!9355 = !DILocation(line: 1353, column: 3, scope: !9352)
!9356 = !DILocation(line: 1354, column: 40, scope: !9353)
!9357 = !DILocation(line: 1355, column: 3, scope: !9282)
!9358 = !DILocation(line: 1357, column: 1, scope: !9275)
!9359 = distinct !DISubprogram(name: "op_push", scope: !365, file: !365, line: 1295, type: !501, scopeLine: 1296, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !666)
!9360 = !DILocalVariable(name: "op", arg: 1, scope: !9359, file: !365, line: 1295, type: !83)
!9361 = !DILocation(line: 0, scope: !9359)
!9362 = !DILocalVariable(name: "oi", arg: 2, scope: !9359, file: !365, line: 1295, type: !503)
!9363 = !DILocation(line: 1297, column: 21, scope: !9364)
!9364 = distinct !DILexicalBlock(scope: !9365, file: !365, line: 1300, column: 3)
!9365 = distinct !DILexicalBlock(scope: !9359, file: !365, line: 1299, column: 3)
!9366 = !DILocation(line: 1297, column: 27, scope: !9364)
!9367 = !DILocation(line: 1297, column: 9, scope: !9364)
!9368 = !DILocalVariable(name: "reg", scope: !9359, file: !365, line: 1297, type: !15)
!9369 = !DILocation(line: 1299, column: 54, scope: !9370)
!9370 = distinct !DILexicalBlock(scope: !9364, file: !365, line: 1298, column: 3)
!9371 = !DILocation(line: 1299, column: 36, scope: !9370)
!9372 = !DILocation(line: 1299, column: 19, scope: !9370)
!9373 = !DILocation(line: 1299, column: 8, scope: !9370)
!9374 = !DILocation(line: 1299, column: 3, scope: !9370)
!9375 = !DILocation(line: 1300, column: 3, scope: !9376)
!9376 = distinct !DILexicalBlock(scope: !9377, file: !365, line: 1303, column: 3)
!9377 = distinct !DILexicalBlock(scope: !9365, file: !365, line: 1302, column: 3)
!9378 = !DILocation(line: 1300, column: 13, scope: !9376)
!9379 = !DILocation(line: 1300, column: 5, scope: !9380)
!9380 = distinct !DILexicalBlock(scope: !9376, file: !365, line: 1300, column: 13)
!9381 = !DILocation(line: 1303, column: 3, scope: !9376)
!9382 = !DILocation(line: 1301, column: 3, scope: !9365)
!9383 = distinct !DISubprogram(name: "op_add_imm", scope: !365, file: !365, line: 1084, type: !501, scopeLine: 1085, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !666)
!9384 = !DILocalVariable(name: "op", arg: 1, scope: !9383, file: !365, line: 1084, type: !83)
!9385 = !DILocation(line: 0, scope: !9383)
!9386 = !DILocalVariable(name: "oi", arg: 2, scope: !9383, file: !365, line: 1084, type: !503)
!9387 = !DILocation(line: 1086, column: 9, scope: !9388)
!9388 = distinct !DILexicalBlock(scope: !9389, file: !365, line: 1093, column: 3)
!9389 = distinct !DILexicalBlock(scope: !9390, file: !365, line: 1092, column: 3)
!9390 = distinct !DILexicalBlock(scope: !9383, file: !365, line: 1091, column: 3)
!9391 = !DILocalVariable(name: "tmp", scope: !9383, file: !365, line: 1087, type: !83)
!9392 = !DILocation(line: 1086, column: 9, scope: !9389)
!9393 = !DILocalVariable(name: "imm", scope: !9383, file: !365, line: 1086, type: !87)
!9394 = !DILocation(line: 1087, column: 23, scope: !9389)
!9395 = !DILocalVariable(name: "old", scope: !9383, file: !365, line: 1088, type: !87)
!9396 = !DILocalVariable(name: "new", scope: !9383, file: !365, line: 1089, type: !87)
!9397 = !DILocation(line: 1090, column: 3, scope: !9398)
!9398 = distinct !DILexicalBlock(scope: !9399, file: !365, line: 1091, column: 3)
!9399 = distinct !DILexicalBlock(scope: !9390, file: !365, line: 1090, column: 3)
!9400 = !DILocation(line: 1090, column: 13, scope: !9398)
!9401 = !DILocation(line: 1090, column: 5, scope: !9402)
!9402 = distinct !DILexicalBlock(scope: !9398, file: !365, line: 1090, column: 13)
!9403 = !DILocation(line: 1093, column: 3, scope: !9398)
!9404 = !DILocation(line: 1091, column: 20, scope: !9390)
!9405 = !DILocation(line: 1091, column: 32, scope: !9390)
!9406 = !DILocation(line: 1091, column: 30, scope: !9390)
!9407 = !DILocation(line: 1091, column: 9, scope: !9390)
!9408 = !DILocation(line: 1092, column: 19, scope: !9390)
!9409 = !DILocation(line: 1093, column: 19, scope: !9390)
!9410 = !DILocation(line: 1094, column: 7, scope: !9411)
!9411 = distinct !DILexicalBlock(scope: !9390, file: !365, line: 1094, column: 7)
!9412 = !DILocation(line: 1094, column: 19, scope: !9411)
!9413 = !DILocation(line: 1094, column: 17, scope: !9411)
!9414 = !DILocation(line: 1094, column: 7, scope: !9390)
!9415 = !DILocation(line: 1094, column: 54, scope: !9416)
!9416 = distinct !DILexicalBlock(scope: !9411, file: !365, line: 1094, column: 30)
!9417 = !DILocation(line: 1094, column: 34, scope: !9416)
!9418 = !DILocation(line: 1094, column: 56, scope: !9416)
!9419 = !DILocation(line: 1094, column: 23, scope: !9416)
!9420 = !DILocation(line: 1094, column: 21, scope: !9416)
!9421 = !DILocation(line: 1095, column: 3, scope: !9416)
!9422 = !DILocation(line: 1095, column: 8, scope: !9423)
!9423 = distinct !DILexicalBlock(scope: !9390, file: !365, line: 1095, column: 7)
!9424 = !DILocation(line: 1095, column: 18, scope: !9423)
!9425 = !DILocation(line: 1095, column: 27, scope: !9423)
!9426 = !DILocation(line: 1095, column: 37, scope: !9423)
!9427 = !DILocation(line: 1095, column: 24, scope: !9423)
!9428 = !DILocation(line: 1095, column: 7, scope: !9390)
!9429 = !DILocation(line: 1095, column: 54, scope: !9430)
!9430 = distinct !DILexicalBlock(scope: !9423, file: !365, line: 1095, column: 44)
!9431 = !DILocation(line: 1095, column: 34, scope: !9430)
!9432 = !DILocation(line: 1095, column: 56, scope: !9430)
!9433 = !DILocation(line: 1095, column: 23, scope: !9430)
!9434 = !DILocation(line: 1095, column: 21, scope: !9430)
!9435 = !DILocation(line: 1096, column: 3, scope: !9430)
!9436 = !DILocation(line: 1096, column: 7, scope: !9437)
!9437 = distinct !DILexicalBlock(scope: !9390, file: !365, line: 1096, column: 7)
!9438 = !DILocation(line: 1096, column: 17, scope: !9437)
!9439 = !DILocation(line: 1096, column: 7, scope: !9390)
!9440 = !DILocation(line: 1096, column: 54, scope: !9441)
!9441 = distinct !DILexicalBlock(scope: !9437, file: !365, line: 1096, column: 23)
!9442 = !DILocation(line: 1096, column: 34, scope: !9441)
!9443 = !DILocation(line: 1096, column: 56, scope: !9441)
!9444 = !DILocation(line: 1096, column: 23, scope: !9441)
!9445 = !DILocation(line: 1096, column: 21, scope: !9441)
!9446 = !DILocation(line: 1097, column: 3, scope: !9441)
!9447 = !DILocation(line: 1097, column: 3, scope: !9390)
!9448 = distinct !DISubprogram(name: "op_rst", scope: !365, file: !365, line: 1460, type: !501, scopeLine: 1461, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !666)
!9449 = !DILocalVariable(name: "op", arg: 1, scope: !9448, file: !365, line: 1460, type: !83)
!9450 = !DILocation(line: 0, scope: !9448)
!9451 = !DILocalVariable(name: "oi", arg: 2, scope: !9448, file: !365, line: 1460, type: !503)
!9452 = !DILocation(line: 1462, column: 23, scope: !9453)
!9453 = distinct !DILexicalBlock(scope: !9448, file: !365, line: 1464, column: 3)
!9454 = !DILocation(line: 1462, column: 9, scope: !9453)
!9455 = !DILocalVariable(name: "ofs", scope: !9448, file: !365, line: 1462, type: !92)
!9456 = !DILocation(line: 1464, column: 3, scope: !9457)
!9457 = distinct !DILexicalBlock(scope: !9458, file: !365, line: 1464, column: 3)
!9458 = distinct !DILexicalBlock(scope: !9453, file: !365, line: 1463, column: 3)
!9459 = !DILocation(line: 1464, column: 13, scope: !9457)
!9460 = !DILocation(line: 1464, column: 5, scope: !9461)
!9461 = distinct !DILexicalBlock(scope: !9457, file: !365, line: 1464, column: 13)
!9462 = !DILocation(line: 1467, column: 3, scope: !9457)
!9463 = !DILocation(line: 1465, column: 19, scope: !9464)
!9464 = distinct !DILexicalBlock(scope: !9465, file: !365, line: 1471, column: 3)
!9465 = distinct !DILexicalBlock(scope: !9453, file: !365, line: 1470, column: 3)
!9466 = !DILocation(line: 1465, column: 8, scope: !9464)
!9467 = !DILocation(line: 1465, column: 3, scope: !9464)
!9468 = !DILocation(line: 1466, column: 40, scope: !9465)
!9469 = !DILocation(line: 1467, column: 3, scope: !9453)
!9470 = distinct !DISubprogram(name: "op_ret", scope: !365, file: !365, line: 1357, type: !501, scopeLine: 1358, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !666)
!9471 = !DILocalVariable(name: "op", arg: 1, scope: !9470, file: !365, line: 1357, type: !83)
!9472 = !DILocation(line: 0, scope: !9470)
!9473 = !DILocalVariable(name: "oi", arg: 2, scope: !9470, file: !365, line: 1357, type: !503)
!9474 = !DILocation(line: 1359, column: 9, scope: !9475)
!9475 = distinct !DILexicalBlock(scope: !9476, file: !365, line: 1363, column: 3)
!9476 = distinct !DILexicalBlock(scope: !9477, file: !365, line: 1362, column: 3)
!9477 = distinct !DILexicalBlock(scope: !9470, file: !365, line: 1361, column: 3)
!9478 = !DILocalVariable(name: "tmp", scope: !9470, file: !365, line: 1359, type: !83)
!9479 = !DILocation(line: 1359, column: 42, scope: !9476)
!9480 = !DILocation(line: 1359, column: 40, scope: !9476)
!9481 = !DILocation(line: 1360, column: 3, scope: !9482)
!9482 = distinct !DILexicalBlock(scope: !9483, file: !365, line: 1362, column: 3)
!9483 = distinct !DILexicalBlock(scope: !9477, file: !365, line: 1361, column: 3)
!9484 = !DILocation(line: 1360, column: 13, scope: !9482)
!9485 = !DILocation(line: 1360, column: 5, scope: !9486)
!9486 = distinct !DILexicalBlock(scope: !9482, file: !365, line: 1360, column: 13)
!9487 = !DILocation(line: 1363, column: 3, scope: !9482)
!9488 = !DILocation(line: 1361, column: 3, scope: !9477)
!9489 = distinct !DISubprogram(name: "op_cbprefix", scope: !365, file: !365, line: 862, type: !501, scopeLine: 863, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !666)
!9490 = !DILocalVariable(name: "op", arg: 1, scope: !9489, file: !365, line: 862, type: !83)
!9491 = !DILocation(line: 0, scope: !9489)
!9492 = !DILocalVariable(name: "oi", arg: 2, scope: !9489, file: !365, line: 862, type: !503)
!9493 = !DILocalVariable(name: "__cil_tmp4", scope: !9489, file: !365, line: 865, type: !16)
!9494 = !DILocation(line: 865, column: 9, scope: !9489)
!9495 = !DILocation(line: 864, column: 8, scope: !9496)
!9496 = distinct !DILexicalBlock(scope: !9497, file: !365, line: 868, column: 3)
!9497 = distinct !DILexicalBlock(scope: !9489, file: !365, line: 867, column: 3)
!9498 = !DILocalVariable(name: "pc", scope: !9489, file: !365, line: 864, type: !86)
!9499 = !DILocation(line: 866, column: 54, scope: !9496)
!9500 = !DILocation(line: 866, column: 63, scope: !9496)
!9501 = !DILocation(line: 866, column: 42, scope: !9496)
!9502 = !DILocation(line: 866, column: 40, scope: !9496)
!9503 = !DILocation(line: 867, column: 16, scope: !9504)
!9504 = distinct !DILexicalBlock(scope: !9496, file: !365, line: 867, column: 3)
!9505 = !DILocation(line: 867, column: 8, scope: !9504)
!9506 = !DILocation(line: 869, column: 10, scope: !9507)
!9507 = distinct !DILexicalBlock(scope: !9508, file: !365, line: 869, column: 7)
!9508 = distinct !DILexicalBlock(scope: !9497, file: !365, line: 870, column: 3)
!9509 = !DILocation(line: 869, column: 15, scope: !9507)
!9510 = !DILocation(line: 869, column: 7, scope: !9508)
!9511 = !DILocation(line: 869, column: 5, scope: !9512)
!9512 = distinct !DILexicalBlock(scope: !9507, file: !365, line: 869, column: 22)
!9513 = !DILocation(line: 871, column: 10, scope: !9514)
!9514 = distinct !DILexicalBlock(scope: !9508, file: !365, line: 871, column: 7)
!9515 = !DILocation(line: 871, column: 15, scope: !9514)
!9516 = !DILocation(line: 871, column: 7, scope: !9508)
!9517 = !DILocation(line: 871, column: 5, scope: !9518)
!9518 = distinct !DILexicalBlock(scope: !9514, file: !365, line: 871, column: 22)
!9519 = !DILocation(line: 872, column: 10, scope: !9520)
!9520 = distinct !DILexicalBlock(scope: !9508, file: !365, line: 872, column: 7)
!9521 = !DILocation(line: 872, column: 15, scope: !9520)
!9522 = !DILocation(line: 872, column: 7, scope: !9508)
!9523 = !DILocation(line: 872, column: 5, scope: !9524)
!9524 = distinct !DILexicalBlock(scope: !9520, file: !365, line: 872, column: 22)
!9525 = !DILocation(line: 873, column: 10, scope: !9526)
!9526 = distinct !DILexicalBlock(scope: !9508, file: !365, line: 873, column: 7)
!9527 = !DILocation(line: 873, column: 15, scope: !9526)
!9528 = !DILocation(line: 873, column: 7, scope: !9508)
!9529 = !DILocation(line: 873, column: 5, scope: !9530)
!9530 = distinct !DILexicalBlock(scope: !9526, file: !365, line: 873, column: 22)
!9531 = !DILocation(line: 868, column: 3, scope: !9508)
!9532 = !DILocation(line: 869, column: 16, scope: !9533)
!9533 = distinct !DILexicalBlock(scope: !9534, file: !365, line: 871, column: 3)
!9534 = distinct !DILexicalBlock(scope: !9508, file: !365, line: 870, column: 3)
!9535 = !DILocation(line: 869, column: 22, scope: !9533)
!9536 = !DILocation(line: 869, column: 6, scope: !9533)
!9537 = !DILocation(line: 869, column: 28, scope: !9533)
!9538 = !DILocation(line: 869, column: 49, scope: !9533)
!9539 = !DILocation(line: 869, column: 55, scope: !9533)
!9540 = !DILocation(line: 869, column: 39, scope: !9533)
!9541 = !DILocation(line: 869, column: 3, scope: !9533)
!9542 = !DILocation(line: 870, column: 3, scope: !9508)
!9543 = !DILocation(line: 871, column: 3, scope: !9544)
!9544 = distinct !DILexicalBlock(scope: !9545, file: !365, line: 873, column: 3)
!9545 = distinct !DILexicalBlock(scope: !9508, file: !365, line: 872, column: 3)
!9546 = !DILocation(line: 871, column: 3, scope: !9508)
!9547 = !DILocation(line: 872, column: 3, scope: !9548)
!9548 = distinct !DILexicalBlock(scope: !9549, file: !365, line: 874, column: 3)
!9549 = distinct !DILexicalBlock(scope: !9508, file: !365, line: 873, column: 3)
!9550 = !DILocation(line: 872, column: 3, scope: !9508)
!9551 = !DILocation(line: 873, column: 3, scope: !9552)
!9552 = distinct !DILexicalBlock(scope: !9553, file: !365, line: 875, column: 3)
!9553 = distinct !DILexicalBlock(scope: !9508, file: !365, line: 874, column: 3)
!9554 = !DILocation(line: 873, column: 3, scope: !9508)
!9555 = !DILocation(line: 875, column: 36, scope: !9556)
!9556 = distinct !DILexicalBlock(scope: !9557, file: !365, line: 877, column: 3)
!9557 = distinct !DILexicalBlock(scope: !9497, file: !365, line: 876, column: 3)
!9558 = !DILocation(line: 876, column: 18, scope: !9556)
!9559 = !DILocation(line: 876, column: 11, scope: !9556)
!9560 = !DILocation(line: 875, column: 3, scope: !9556)
!9561 = !DILocation(line: 876, column: 17, scope: !9557)
!9562 = !DILocation(line: 877, column: 3, scope: !9497)
!9563 = !DILocation(line: 879, column: 1, scope: !9489)
!9564 = distinct !DISubprogram(name: "op_call", scope: !365, file: !365, line: 1332, type: !501, scopeLine: 1333, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !666)
!9565 = !DILocalVariable(name: "op", arg: 1, scope: !9564, file: !365, line: 1332, type: !83)
!9566 = !DILocation(line: 0, scope: !9564)
!9567 = !DILocalVariable(name: "oi", arg: 2, scope: !9564, file: !365, line: 1332, type: !503)
!9568 = !DILocation(line: 1334, column: 9, scope: !9569)
!9569 = distinct !DILexicalBlock(scope: !9570, file: !365, line: 1339, column: 3)
!9570 = distinct !DILexicalBlock(scope: !9571, file: !365, line: 1338, column: 3)
!9571 = distinct !DILexicalBlock(scope: !9564, file: !365, line: 1337, column: 3)
!9572 = !DILocalVariable(name: "tmp", scope: !9564, file: !365, line: 1335, type: !83)
!9573 = !DILocation(line: 1334, column: 9, scope: !9570)
!9574 = !DILocalVariable(name: "ofs", scope: !9564, file: !365, line: 1334, type: !86)
!9575 = !DILocation(line: 1336, column: 3, scope: !9576)
!9576 = distinct !DILexicalBlock(scope: !9577, file: !365, line: 1337, column: 3)
!9577 = distinct !DILexicalBlock(scope: !9571, file: !365, line: 1336, column: 3)
!9578 = !DILocation(line: 1336, column: 13, scope: !9576)
!9579 = !DILocation(line: 1336, column: 5, scope: !9580)
!9580 = distinct !DILexicalBlock(scope: !9576, file: !365, line: 1336, column: 13)
!9581 = !DILocation(line: 1339, column: 3, scope: !9576)
!9582 = !DILocation(line: 1337, column: 19, scope: !9583)
!9583 = distinct !DILexicalBlock(scope: !9584, file: !365, line: 1343, column: 3)
!9584 = distinct !DILexicalBlock(scope: !9571, file: !365, line: 1342, column: 3)
!9585 = !DILocation(line: 1337, column: 8, scope: !9583)
!9586 = !DILocation(line: 1337, column: 3, scope: !9583)
!9587 = !DILocation(line: 1338, column: 40, scope: !9584)
!9588 = !DILocation(line: 1339, column: 3, scope: !9571)
!9589 = distinct !DISubprogram(name: "op_adc_imm", scope: !365, file: !365, line: 1132, type: !501, scopeLine: 1133, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !666)
!9590 = !DILocalVariable(name: "op", arg: 1, scope: !9589, file: !365, line: 1132, type: !83)
!9591 = !DILocation(line: 0, scope: !9589)
!9592 = !DILocalVariable(name: "oi", arg: 2, scope: !9589, file: !365, line: 1132, type: !503)
!9593 = !DILocation(line: 1134, column: 9, scope: !9594)
!9594 = distinct !DILexicalBlock(scope: !9595, file: !365, line: 1141, column: 3)
!9595 = distinct !DILexicalBlock(scope: !9596, file: !365, line: 1140, column: 3)
!9596 = distinct !DILexicalBlock(scope: !9589, file: !365, line: 1139, column: 3)
!9597 = !DILocalVariable(name: "tmp", scope: !9589, file: !365, line: 1135, type: !83)
!9598 = !DILocation(line: 1134, column: 9, scope: !9595)
!9599 = !DILocalVariable(name: "imm", scope: !9589, file: !365, line: 1134, type: !87)
!9600 = !DILocation(line: 1135, column: 23, scope: !9595)
!9601 = !DILocalVariable(name: "old", scope: !9589, file: !365, line: 1136, type: !87)
!9602 = !DILocalVariable(name: "new", scope: !9589, file: !365, line: 1137, type: !87)
!9603 = !DILocation(line: 1138, column: 3, scope: !9604)
!9604 = distinct !DILexicalBlock(scope: !9605, file: !365, line: 1139, column: 3)
!9605 = distinct !DILexicalBlock(scope: !9596, file: !365, line: 1138, column: 3)
!9606 = !DILocation(line: 1138, column: 13, scope: !9604)
!9607 = !DILocation(line: 1138, column: 5, scope: !9608)
!9608 = distinct !DILexicalBlock(scope: !9604, file: !365, line: 1138, column: 13)
!9609 = !DILocation(line: 1141, column: 3, scope: !9604)
!9610 = !DILocation(line: 1139, column: 20, scope: !9596)
!9611 = !DILocation(line: 1139, column: 32, scope: !9596)
!9612 = !DILocation(line: 1139, column: 30, scope: !9596)
!9613 = !DILocation(line: 1139, column: 9, scope: !9596)
!9614 = !DILocation(line: 1140, column: 20, scope: !9596)
!9615 = !DILocation(line: 1140, column: 54, scope: !9596)
!9616 = !DILocation(line: 1140, column: 34, scope: !9596)
!9617 = !DILocation(line: 1140, column: 56, scope: !9596)
!9618 = !DILocation(line: 1140, column: 62, scope: !9596)
!9619 = !DILocation(line: 1140, column: 30, scope: !9596)
!9620 = !DILocation(line: 1140, column: 9, scope: !9596)
!9621 = !DILocation(line: 1141, column: 52, scope: !9596)
!9622 = !DILocation(line: 1141, column: 32, scope: !9596)
!9623 = !DILocation(line: 1141, column: 54, scope: !9596)
!9624 = !DILocation(line: 1141, column: 21, scope: !9596)
!9625 = !DILocation(line: 1141, column: 19, scope: !9596)
!9626 = !DILocation(line: 1142, column: 19, scope: !9596)
!9627 = !DILocation(line: 1143, column: 7, scope: !9628)
!9628 = distinct !DILexicalBlock(scope: !9596, file: !365, line: 1143, column: 7)
!9629 = !DILocation(line: 1143, column: 19, scope: !9628)
!9630 = !DILocation(line: 1143, column: 17, scope: !9628)
!9631 = !DILocation(line: 1143, column: 7, scope: !9596)
!9632 = !DILocation(line: 1143, column: 54, scope: !9633)
!9633 = distinct !DILexicalBlock(scope: !9628, file: !365, line: 1143, column: 30)
!9634 = !DILocation(line: 1143, column: 34, scope: !9633)
!9635 = !DILocation(line: 1143, column: 56, scope: !9633)
!9636 = !DILocation(line: 1143, column: 23, scope: !9633)
!9637 = !DILocation(line: 1143, column: 21, scope: !9633)
!9638 = !DILocation(line: 1144, column: 3, scope: !9633)
!9639 = !DILocation(line: 1143, column: 54, scope: !9640)
!9640 = distinct !DILexicalBlock(scope: !9628, file: !365, line: 1144, column: 10)
!9641 = !DILocation(line: 1143, column: 34, scope: !9640)
!9642 = !DILocation(line: 1143, column: 56, scope: !9640)
!9643 = !DILocation(line: 1143, column: 23, scope: !9640)
!9644 = !DILocation(line: 1143, column: 21, scope: !9640)
!9645 = !DILocation(line: 1144, column: 8, scope: !9646)
!9646 = distinct !DILexicalBlock(scope: !9596, file: !365, line: 1144, column: 7)
!9647 = !DILocation(line: 1144, column: 18, scope: !9646)
!9648 = !DILocation(line: 1144, column: 27, scope: !9646)
!9649 = !DILocation(line: 1144, column: 37, scope: !9646)
!9650 = !DILocation(line: 1144, column: 24, scope: !9646)
!9651 = !DILocation(line: 1144, column: 7, scope: !9596)
!9652 = !DILocation(line: 1144, column: 54, scope: !9653)
!9653 = distinct !DILexicalBlock(scope: !9646, file: !365, line: 1144, column: 44)
!9654 = !DILocation(line: 1144, column: 34, scope: !9653)
!9655 = !DILocation(line: 1144, column: 56, scope: !9653)
!9656 = !DILocation(line: 1144, column: 23, scope: !9653)
!9657 = !DILocation(line: 1144, column: 21, scope: !9653)
!9658 = !DILocation(line: 1145, column: 3, scope: !9653)
!9659 = !DILocation(line: 1144, column: 54, scope: !9660)
!9660 = distinct !DILexicalBlock(scope: !9646, file: !365, line: 1145, column: 10)
!9661 = !DILocation(line: 1144, column: 34, scope: !9660)
!9662 = !DILocation(line: 1144, column: 56, scope: !9660)
!9663 = !DILocation(line: 1144, column: 23, scope: !9660)
!9664 = !DILocation(line: 1144, column: 21, scope: !9660)
!9665 = !DILocation(line: 1145, column: 7, scope: !9666)
!9666 = distinct !DILexicalBlock(scope: !9596, file: !365, line: 1145, column: 7)
!9667 = !DILocation(line: 1145, column: 17, scope: !9666)
!9668 = !DILocation(line: 1145, column: 7, scope: !9596)
!9669 = !DILocation(line: 1145, column: 54, scope: !9670)
!9670 = distinct !DILexicalBlock(scope: !9666, file: !365, line: 1145, column: 23)
!9671 = !DILocation(line: 1145, column: 34, scope: !9670)
!9672 = !DILocation(line: 1145, column: 56, scope: !9670)
!9673 = !DILocation(line: 1145, column: 23, scope: !9670)
!9674 = !DILocation(line: 1145, column: 21, scope: !9670)
!9675 = !DILocation(line: 1146, column: 3, scope: !9670)
!9676 = !DILocation(line: 1145, column: 54, scope: !9677)
!9677 = distinct !DILexicalBlock(scope: !9666, file: !365, line: 1146, column: 10)
!9678 = !DILocation(line: 1145, column: 34, scope: !9677)
!9679 = !DILocation(line: 1145, column: 56, scope: !9677)
!9680 = !DILocation(line: 1145, column: 23, scope: !9677)
!9681 = !DILocation(line: 1145, column: 21, scope: !9677)
!9682 = !DILocation(line: 1146, column: 3, scope: !9596)
!9683 = distinct !DISubprogram(name: "op_sub_imm", scope: !365, file: !365, line: 1191, type: !501, scopeLine: 1192, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !666)
!9684 = !DILocalVariable(name: "op", arg: 1, scope: !9683, file: !365, line: 1191, type: !83)
!9685 = !DILocation(line: 0, scope: !9683)
!9686 = !DILocalVariable(name: "oi", arg: 2, scope: !9683, file: !365, line: 1191, type: !503)
!9687 = !DILocation(line: 1193, column: 9, scope: !9688)
!9688 = distinct !DILexicalBlock(scope: !9689, file: !365, line: 1200, column: 3)
!9689 = distinct !DILexicalBlock(scope: !9690, file: !365, line: 1199, column: 3)
!9690 = distinct !DILexicalBlock(scope: !9683, file: !365, line: 1198, column: 3)
!9691 = !DILocalVariable(name: "tmp", scope: !9683, file: !365, line: 1194, type: !83)
!9692 = !DILocation(line: 1193, column: 9, scope: !9689)
!9693 = !DILocalVariable(name: "imm", scope: !9683, file: !365, line: 1193, type: !87)
!9694 = !DILocation(line: 1194, column: 23, scope: !9689)
!9695 = !DILocalVariable(name: "old", scope: !9683, file: !365, line: 1195, type: !87)
!9696 = !DILocalVariable(name: "new", scope: !9683, file: !365, line: 1196, type: !87)
!9697 = !DILocation(line: 1197, column: 3, scope: !9698)
!9698 = distinct !DILexicalBlock(scope: !9699, file: !365, line: 1198, column: 3)
!9699 = distinct !DILexicalBlock(scope: !9690, file: !365, line: 1197, column: 3)
!9700 = !DILocation(line: 1197, column: 13, scope: !9698)
!9701 = !DILocation(line: 1197, column: 5, scope: !9702)
!9702 = distinct !DILexicalBlock(scope: !9698, file: !365, line: 1197, column: 13)
!9703 = !DILocation(line: 1200, column: 3, scope: !9698)
!9704 = !DILocation(line: 1198, column: 20, scope: !9690)
!9705 = !DILocation(line: 1198, column: 32, scope: !9690)
!9706 = !DILocation(line: 1198, column: 30, scope: !9690)
!9707 = !DILocation(line: 1198, column: 9, scope: !9690)
!9708 = !DILocation(line: 1199, column: 19, scope: !9690)
!9709 = !DILocation(line: 1200, column: 19, scope: !9690)
!9710 = !DILocation(line: 1201, column: 7, scope: !9711)
!9711 = distinct !DILexicalBlock(scope: !9690, file: !365, line: 1201, column: 7)
!9712 = !DILocation(line: 1201, column: 19, scope: !9711)
!9713 = !DILocation(line: 1201, column: 17, scope: !9711)
!9714 = !DILocation(line: 1201, column: 7, scope: !9690)
!9715 = !DILocation(line: 1201, column: 54, scope: !9716)
!9716 = distinct !DILexicalBlock(scope: !9711, file: !365, line: 1201, column: 30)
!9717 = !DILocation(line: 1201, column: 34, scope: !9716)
!9718 = !DILocation(line: 1201, column: 56, scope: !9716)
!9719 = !DILocation(line: 1201, column: 23, scope: !9716)
!9720 = !DILocation(line: 1201, column: 21, scope: !9716)
!9721 = !DILocation(line: 1202, column: 3, scope: !9716)
!9722 = !DILocation(line: 1202, column: 8, scope: !9723)
!9723 = distinct !DILexicalBlock(scope: !9690, file: !365, line: 1202, column: 7)
!9724 = !DILocation(line: 1202, column: 18, scope: !9723)
!9725 = !DILocation(line: 1202, column: 27, scope: !9723)
!9726 = !DILocation(line: 1202, column: 37, scope: !9723)
!9727 = !DILocation(line: 1202, column: 24, scope: !9723)
!9728 = !DILocation(line: 1202, column: 7, scope: !9690)
!9729 = !DILocation(line: 1202, column: 54, scope: !9730)
!9730 = distinct !DILexicalBlock(scope: !9723, file: !365, line: 1202, column: 44)
!9731 = !DILocation(line: 1202, column: 34, scope: !9730)
!9732 = !DILocation(line: 1202, column: 56, scope: !9730)
!9733 = !DILocation(line: 1202, column: 23, scope: !9730)
!9734 = !DILocation(line: 1202, column: 21, scope: !9730)
!9735 = !DILocation(line: 1203, column: 3, scope: !9730)
!9736 = !DILocation(line: 1203, column: 7, scope: !9737)
!9737 = distinct !DILexicalBlock(scope: !9690, file: !365, line: 1203, column: 7)
!9738 = !DILocation(line: 1203, column: 17, scope: !9737)
!9739 = !DILocation(line: 1203, column: 7, scope: !9690)
!9740 = !DILocation(line: 1203, column: 54, scope: !9741)
!9741 = distinct !DILexicalBlock(scope: !9737, file: !365, line: 1203, column: 23)
!9742 = !DILocation(line: 1203, column: 34, scope: !9741)
!9743 = !DILocation(line: 1203, column: 56, scope: !9741)
!9744 = !DILocation(line: 1203, column: 23, scope: !9741)
!9745 = !DILocation(line: 1203, column: 21, scope: !9741)
!9746 = !DILocation(line: 1204, column: 3, scope: !9741)
!9747 = !DILocation(line: 1204, column: 3, scope: !9690)
!9748 = distinct !DISubprogram(name: "op_reti", scope: !365, file: !365, line: 1363, type: !501, scopeLine: 1364, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !666)
!9749 = !DILocalVariable(name: "op", arg: 1, scope: !9748, file: !365, line: 1363, type: !83)
!9750 = !DILocation(line: 0, scope: !9748)
!9751 = !DILocalVariable(name: "oi", arg: 2, scope: !9748, file: !365, line: 1363, type: !503)
!9752 = !DILocation(line: 1365, column: 9, scope: !9753)
!9753 = distinct !DILexicalBlock(scope: !9754, file: !365, line: 1369, column: 3)
!9754 = distinct !DILexicalBlock(scope: !9755, file: !365, line: 1368, column: 3)
!9755 = distinct !DILexicalBlock(scope: !9748, file: !365, line: 1367, column: 3)
!9756 = !DILocalVariable(name: "tmp", scope: !9748, file: !365, line: 1365, type: !83)
!9757 = !DILocation(line: 1365, column: 42, scope: !9754)
!9758 = !DILocation(line: 1365, column: 40, scope: !9754)
!9759 = !DILocation(line: 1366, column: 3, scope: !9760)
!9760 = distinct !DILexicalBlock(scope: !9761, file: !365, line: 1368, column: 3)
!9761 = distinct !DILexicalBlock(scope: !9755, file: !365, line: 1367, column: 3)
!9762 = !DILocation(line: 1366, column: 13, scope: !9760)
!9763 = !DILocation(line: 1366, column: 5, scope: !9764)
!9764 = distinct !DILexicalBlock(scope: !9760, file: !365, line: 1366, column: 13)
!9765 = !DILocation(line: 1369, column: 3, scope: !9760)
!9766 = !DILocation(line: 1367, column: 3, scope: !9755)
!9767 = distinct !DISubprogram(name: "op_sbc_imm", scope: !365, file: !365, line: 1222, type: !501, scopeLine: 1223, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !666)
!9768 = !DILocalVariable(name: "op", arg: 1, scope: !9767, file: !365, line: 1222, type: !83)
!9769 = !DILocation(line: 0, scope: !9767)
!9770 = !DILocalVariable(name: "oi", arg: 2, scope: !9767, file: !365, line: 1222, type: !503)
!9771 = !DILocation(line: 1224, column: 9, scope: !9772)
!9772 = distinct !DILexicalBlock(scope: !9773, file: !365, line: 1231, column: 3)
!9773 = distinct !DILexicalBlock(scope: !9774, file: !365, line: 1230, column: 3)
!9774 = distinct !DILexicalBlock(scope: !9767, file: !365, line: 1229, column: 3)
!9775 = !DILocalVariable(name: "tmp", scope: !9767, file: !365, line: 1225, type: !83)
!9776 = !DILocation(line: 1224, column: 9, scope: !9773)
!9777 = !DILocalVariable(name: "imm", scope: !9767, file: !365, line: 1224, type: !87)
!9778 = !DILocation(line: 1225, column: 23, scope: !9773)
!9779 = !DILocalVariable(name: "old", scope: !9767, file: !365, line: 1226, type: !87)
!9780 = !DILocalVariable(name: "new", scope: !9767, file: !365, line: 1227, type: !87)
!9781 = !DILocation(line: 1228, column: 3, scope: !9782)
!9782 = distinct !DILexicalBlock(scope: !9783, file: !365, line: 1229, column: 3)
!9783 = distinct !DILexicalBlock(scope: !9774, file: !365, line: 1228, column: 3)
!9784 = !DILocation(line: 1228, column: 13, scope: !9782)
!9785 = !DILocation(line: 1228, column: 5, scope: !9786)
!9786 = distinct !DILexicalBlock(scope: !9782, file: !365, line: 1228, column: 13)
!9787 = !DILocation(line: 1231, column: 3, scope: !9782)
!9788 = !DILocation(line: 1229, column: 20, scope: !9774)
!9789 = !DILocation(line: 1229, column: 32, scope: !9774)
!9790 = !DILocation(line: 1229, column: 30, scope: !9774)
!9791 = !DILocation(line: 1229, column: 9, scope: !9774)
!9792 = !DILocation(line: 1230, column: 20, scope: !9774)
!9793 = !DILocation(line: 1230, column: 54, scope: !9774)
!9794 = !DILocation(line: 1230, column: 34, scope: !9774)
!9795 = !DILocation(line: 1230, column: 56, scope: !9774)
!9796 = !DILocation(line: 1230, column: 62, scope: !9774)
!9797 = !DILocation(line: 1230, column: 30, scope: !9774)
!9798 = !DILocation(line: 1230, column: 9, scope: !9774)
!9799 = !DILocation(line: 1231, column: 19, scope: !9774)
!9800 = !DILocation(line: 1232, column: 19, scope: !9774)
!9801 = !DILocation(line: 1233, column: 7, scope: !9802)
!9802 = distinct !DILexicalBlock(scope: !9774, file: !365, line: 1233, column: 7)
!9803 = !DILocation(line: 1233, column: 19, scope: !9802)
!9804 = !DILocation(line: 1233, column: 17, scope: !9802)
!9805 = !DILocation(line: 1233, column: 7, scope: !9774)
!9806 = !DILocation(line: 1233, column: 54, scope: !9807)
!9807 = distinct !DILexicalBlock(scope: !9802, file: !365, line: 1233, column: 30)
!9808 = !DILocation(line: 1233, column: 34, scope: !9807)
!9809 = !DILocation(line: 1233, column: 56, scope: !9807)
!9810 = !DILocation(line: 1233, column: 23, scope: !9807)
!9811 = !DILocation(line: 1233, column: 21, scope: !9807)
!9812 = !DILocation(line: 1234, column: 3, scope: !9807)
!9813 = !DILocation(line: 1234, column: 8, scope: !9814)
!9814 = distinct !DILexicalBlock(scope: !9774, file: !365, line: 1234, column: 7)
!9815 = !DILocation(line: 1234, column: 18, scope: !9814)
!9816 = !DILocation(line: 1234, column: 27, scope: !9814)
!9817 = !DILocation(line: 1234, column: 37, scope: !9814)
!9818 = !DILocation(line: 1234, column: 24, scope: !9814)
!9819 = !DILocation(line: 1234, column: 7, scope: !9774)
!9820 = !DILocation(line: 1234, column: 54, scope: !9821)
!9821 = distinct !DILexicalBlock(scope: !9814, file: !365, line: 1234, column: 44)
!9822 = !DILocation(line: 1234, column: 34, scope: !9821)
!9823 = !DILocation(line: 1234, column: 56, scope: !9821)
!9824 = !DILocation(line: 1234, column: 23, scope: !9821)
!9825 = !DILocation(line: 1234, column: 21, scope: !9821)
!9826 = !DILocation(line: 1235, column: 3, scope: !9821)
!9827 = !DILocation(line: 1235, column: 7, scope: !9828)
!9828 = distinct !DILexicalBlock(scope: !9774, file: !365, line: 1235, column: 7)
!9829 = !DILocation(line: 1235, column: 17, scope: !9828)
!9830 = !DILocation(line: 1235, column: 7, scope: !9774)
!9831 = !DILocation(line: 1235, column: 54, scope: !9832)
!9832 = distinct !DILexicalBlock(scope: !9828, file: !365, line: 1235, column: 23)
!9833 = !DILocation(line: 1235, column: 34, scope: !9832)
!9834 = !DILocation(line: 1235, column: 56, scope: !9832)
!9835 = !DILocation(line: 1235, column: 23, scope: !9832)
!9836 = !DILocation(line: 1235, column: 21, scope: !9832)
!9837 = !DILocation(line: 1236, column: 3, scope: !9832)
!9838 = !DILocation(line: 1236, column: 3, scope: !9774)
!9839 = distinct !DISubprogram(name: "op_ldh", scope: !365, file: !365, line: 978, type: !501, scopeLine: 979, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !666)
!9840 = !DILocalVariable(name: "op", arg: 1, scope: !9839, file: !365, line: 978, type: !83)
!9841 = !DILocation(line: 0, scope: !9839)
!9842 = !DILocalVariable(name: "oi", arg: 2, scope: !9839, file: !365, line: 978, type: !503)
!9843 = !DILocation(line: 980, column: 10, scope: !9844)
!9844 = distinct !DILexicalBlock(scope: !9845, file: !365, line: 980, column: 7)
!9845 = distinct !DILexicalBlock(scope: !9839, file: !365, line: 985, column: 3)
!9846 = !DILocation(line: 980, column: 7, scope: !9845)
!9847 = !DILocalVariable(name: "tmp___0", scope: !9839, file: !365, line: 982, type: !83)
!9848 = !DILocation(line: 981, column: 3, scope: !9849)
!9849 = distinct !DILexicalBlock(scope: !9844, file: !365, line: 980, column: 16)
!9850 = !DILocation(line: 980, column: 11, scope: !9851)
!9851 = distinct !DILexicalBlock(scope: !9852, file: !365, line: 983, column: 5)
!9852 = distinct !DILexicalBlock(scope: !9853, file: !365, line: 982, column: 5)
!9853 = distinct !DILexicalBlock(scope: !9844, file: !365, line: 981, column: 10)
!9854 = !DILocalVariable(name: "tmp", scope: !9839, file: !365, line: 981, type: !83)
!9855 = !DILocation(line: 0, scope: !9844)
!9856 = !DILocation(line: 980, column: 9, scope: !9845)
!9857 = !DILocalVariable(name: "ofs", scope: !9839, file: !365, line: 980, type: !15)
!9858 = !DILocation(line: 982, column: 10, scope: !9859)
!9859 = distinct !DILexicalBlock(scope: !9845, file: !365, line: 982, column: 7)
!9860 = !DILocation(line: 982, column: 7, scope: !9845)
!9861 = !DILocation(line: 983, column: 5, scope: !9862)
!9862 = distinct !DILexicalBlock(scope: !9863, file: !365, line: 984, column: 5)
!9863 = distinct !DILexicalBlock(scope: !9864, file: !365, line: 983, column: 5)
!9864 = distinct !DILexicalBlock(scope: !9859, file: !365, line: 982, column: 17)
!9865 = !DILocation(line: 983, column: 15, scope: !9862)
!9866 = !DILocation(line: 983, column: 7, scope: !9867)
!9867 = distinct !DILexicalBlock(scope: !9862, file: !365, line: 983, column: 15)
!9868 = !DILocation(line: 986, column: 5, scope: !9862)
!9869 = !DILocation(line: 984, column: 13, scope: !9870)
!9870 = distinct !DILexicalBlock(scope: !9864, file: !365, line: 984, column: 9)
!9871 = !DILocation(line: 984, column: 19, scope: !9870)
!9872 = !DILocation(line: 984, column: 9, scope: !9864)
!9873 = !DILocation(line: 985, column: 7, scope: !9874)
!9874 = distinct !DILexicalBlock(scope: !9875, file: !365, line: 986, column: 7)
!9875 = distinct !DILexicalBlock(scope: !9876, file: !365, line: 985, column: 7)
!9876 = distinct !DILexicalBlock(scope: !9870, file: !365, line: 984, column: 26)
!9877 = !DILocation(line: 985, column: 17, scope: !9874)
!9878 = !DILocation(line: 985, column: 9, scope: !9879)
!9879 = distinct !DILexicalBlock(scope: !9874, file: !365, line: 985, column: 17)
!9880 = !DILocation(line: 988, column: 7, scope: !9874)
!9881 = !DILocation(line: 991, column: 5, scope: !9876)
!9882 = !DILocation(line: 987, column: 34, scope: !9883)
!9883 = distinct !DILexicalBlock(scope: !9870, file: !365, line: 991, column: 12)
!9884 = !DILocation(line: 987, column: 13, scope: !9883)
!9885 = !DILocation(line: 988, column: 7, scope: !9886)
!9886 = distinct !DILexicalBlock(scope: !9887, file: !365, line: 989, column: 7)
!9887 = distinct !DILexicalBlock(scope: !9883, file: !365, line: 988, column: 7)
!9888 = !DILocation(line: 988, column: 17, scope: !9886)
!9889 = !DILocation(line: 988, column: 9, scope: !9890)
!9890 = distinct !DILexicalBlock(scope: !9886, file: !365, line: 988, column: 17)
!9891 = !DILocation(line: 991, column: 7, scope: !9886)
!9892 = !DILocation(line: 0, scope: !9845)
!9893 = !DILocation(line: 990, column: 42, scope: !9894)
!9894 = distinct !DILexicalBlock(scope: !9895, file: !365, line: 996, column: 5)
!9895 = distinct !DILexicalBlock(scope: !9864, file: !365, line: 995, column: 5)
!9896 = !DILocation(line: 990, column: 23, scope: !9894)
!9897 = !DILocation(line: 990, column: 15, scope: !9894)
!9898 = !DILocalVariable(name: "tmp___1", scope: !9839, file: !365, line: 983, type: !83)
!9899 = !DILocation(line: 990, column: 23, scope: !9895)
!9900 = !DILocation(line: 990, column: 21, scope: !9895)
!9901 = !DILocation(line: 992, column: 3, scope: !9864)
!9902 = !DILocation(line: 992, column: 13, scope: !9903)
!9903 = distinct !DILexicalBlock(scope: !9904, file: !365, line: 992, column: 9)
!9904 = distinct !DILexicalBlock(scope: !9859, file: !365, line: 992, column: 10)
!9905 = !DILocation(line: 992, column: 19, scope: !9903)
!9906 = !DILocation(line: 992, column: 9, scope: !9904)
!9907 = !DILocation(line: 993, column: 7, scope: !9908)
!9908 = distinct !DILexicalBlock(scope: !9909, file: !365, line: 994, column: 7)
!9909 = distinct !DILexicalBlock(scope: !9910, file: !365, line: 993, column: 7)
!9910 = distinct !DILexicalBlock(scope: !9903, file: !365, line: 992, column: 26)
!9911 = !DILocation(line: 993, column: 17, scope: !9908)
!9912 = !DILocation(line: 993, column: 9, scope: !9913)
!9913 = distinct !DILexicalBlock(scope: !9908, file: !365, line: 993, column: 17)
!9914 = !DILocation(line: 996, column: 7, scope: !9908)
!9915 = !DILocation(line: 999, column: 5, scope: !9910)
!9916 = !DILocation(line: 995, column: 34, scope: !9917)
!9917 = distinct !DILexicalBlock(scope: !9903, file: !365, line: 999, column: 12)
!9918 = !DILocation(line: 995, column: 13, scope: !9917)
!9919 = !DILocation(line: 996, column: 7, scope: !9920)
!9920 = distinct !DILexicalBlock(scope: !9921, file: !365, line: 997, column: 7)
!9921 = distinct !DILexicalBlock(scope: !9917, file: !365, line: 996, column: 7)
!9922 = !DILocation(line: 996, column: 17, scope: !9920)
!9923 = !DILocation(line: 996, column: 9, scope: !9924)
!9924 = distinct !DILexicalBlock(scope: !9920, file: !365, line: 996, column: 17)
!9925 = !DILocation(line: 999, column: 7, scope: !9920)
!9926 = !DILocation(line: 998, column: 32, scope: !9927)
!9927 = distinct !DILexicalBlock(scope: !9928, file: !365, line: 1004, column: 5)
!9928 = distinct !DILexicalBlock(scope: !9904, file: !365, line: 1003, column: 5)
!9929 = !DILocation(line: 998, column: 13, scope: !9927)
!9930 = !DILocation(line: 998, column: 65, scope: !9927)
!9931 = !DILocation(line: 998, column: 40, scope: !9927)
!9932 = !DILocation(line: 998, column: 5, scope: !9927)
!9933 = !DILocation(line: 1000, column: 3, scope: !9845)
!9934 = distinct !DISubprogram(name: "op_and_imm", scope: !365, file: !365, line: 1247, type: !501, scopeLine: 1248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !666)
!9935 = !DILocalVariable(name: "op", arg: 1, scope: !9934, file: !365, line: 1247, type: !83)
!9936 = !DILocation(line: 0, scope: !9934)
!9937 = !DILocalVariable(name: "oi", arg: 2, scope: !9934, file: !365, line: 1247, type: !503)
!9938 = !DILocation(line: 1249, column: 9, scope: !9939)
!9939 = distinct !DILexicalBlock(scope: !9940, file: !365, line: 1254, column: 3)
!9940 = distinct !DILexicalBlock(scope: !9941, file: !365, line: 1253, column: 3)
!9941 = distinct !DILexicalBlock(scope: !9934, file: !365, line: 1252, column: 3)
!9942 = !DILocalVariable(name: "tmp", scope: !9934, file: !365, line: 1250, type: !83)
!9943 = !DILocation(line: 1249, column: 9, scope: !9940)
!9944 = !DILocalVariable(name: "imm", scope: !9934, file: !365, line: 1249, type: !87)
!9945 = !DILocation(line: 1251, column: 3, scope: !9946)
!9946 = distinct !DILexicalBlock(scope: !9947, file: !365, line: 1252, column: 3)
!9947 = distinct !DILexicalBlock(scope: !9941, file: !365, line: 1251, column: 3)
!9948 = !DILocation(line: 1251, column: 13, scope: !9946)
!9949 = !DILocation(line: 1251, column: 5, scope: !9950)
!9950 = distinct !DILexicalBlock(scope: !9946, file: !365, line: 1251, column: 13)
!9951 = !DILocation(line: 1254, column: 3, scope: !9946)
!9952 = !DILocation(line: 1252, column: 52, scope: !9941)
!9953 = !DILocation(line: 1252, column: 32, scope: !9941)
!9954 = !DILocation(line: 1252, column: 56, scope: !9941)
!9955 = !DILocation(line: 1252, column: 54, scope: !9941)
!9956 = !DILocation(line: 1252, column: 21, scope: !9941)
!9957 = !DILocation(line: 1252, column: 19, scope: !9941)
!9958 = !DILocation(line: 1253, column: 19, scope: !9941)
!9959 = !DILocation(line: 1254, column: 27, scope: !9960)
!9960 = distinct !DILexicalBlock(scope: !9941, file: !365, line: 1254, column: 7)
!9961 = !DILocation(line: 1254, column: 7, scope: !9960)
!9962 = !DILocation(line: 1254, column: 29, scope: !9960)
!9963 = !DILocation(line: 1254, column: 7, scope: !9941)
!9964 = !DILocation(line: 1254, column: 54, scope: !9965)
!9965 = distinct !DILexicalBlock(scope: !9960, file: !365, line: 1254, column: 35)
!9966 = !DILocation(line: 1254, column: 34, scope: !9965)
!9967 = !DILocation(line: 1254, column: 56, scope: !9965)
!9968 = !DILocation(line: 1254, column: 23, scope: !9965)
!9969 = !DILocation(line: 1254, column: 21, scope: !9965)
!9970 = !DILocation(line: 1255, column: 3, scope: !9965)
!9971 = !DILocation(line: 1255, column: 3, scope: !9941)
!9972 = distinct !DISubprogram(name: "op_add_sp_imm", scope: !365, file: !365, line: 1055, type: !501, scopeLine: 1056, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !666)
!9973 = !DILocalVariable(name: "op", arg: 1, scope: !9972, file: !365, line: 1055, type: !83)
!9974 = !DILocation(line: 0, scope: !9972)
!9975 = !DILocalVariable(name: "oi", arg: 2, scope: !9972, file: !365, line: 1055, type: !503)
!9976 = !DILocation(line: 1057, column: 9, scope: !9977)
!9977 = distinct !DILexicalBlock(scope: !9978, file: !365, line: 1064, column: 3)
!9978 = distinct !DILexicalBlock(scope: !9979, file: !365, line: 1063, column: 3)
!9979 = distinct !DILexicalBlock(scope: !9972, file: !365, line: 1062, column: 3)
!9980 = !DILocalVariable(name: "tmp", scope: !9972, file: !365, line: 1058, type: !83)
!9981 = !DILocation(line: 1057, column: 9, scope: !9978)
!9982 = !DILocalVariable(name: "imm", scope: !9972, file: !365, line: 1057, type: !281)
!9983 = !DILocation(line: 1058, column: 9, scope: !9978)
!9984 = !DILocalVariable(name: "old", scope: !9972, file: !365, line: 1059, type: !86)
!9985 = !DILocalVariable(name: "new", scope: !9972, file: !365, line: 1060, type: !86)
!9986 = !DILocation(line: 1061, column: 3, scope: !9987)
!9987 = distinct !DILexicalBlock(scope: !9988, file: !365, line: 1062, column: 3)
!9988 = distinct !DILexicalBlock(scope: !9979, file: !365, line: 1061, column: 3)
!9989 = !DILocation(line: 1061, column: 13, scope: !9987)
!9990 = !DILocation(line: 1061, column: 5, scope: !9991)
!9991 = distinct !DILexicalBlock(scope: !9987, file: !365, line: 1061, column: 13)
!9992 = !DILocation(line: 1064, column: 3, scope: !9987)
!9993 = !DILocation(line: 1062, column: 21, scope: !9979)
!9994 = !DILocation(line: 1062, column: 33, scope: !9979)
!9995 = !DILocation(line: 1062, column: 31, scope: !9979)
!9996 = !DILocation(line: 1062, column: 9, scope: !9979)
!9997 = !DILocation(line: 1063, column: 39, scope: !9979)
!9998 = !DILocation(line: 1064, column: 19, scope: !9979)
!9999 = !DILocation(line: 1065, column: 7, scope: !10000)
!10000 = distinct !DILexicalBlock(scope: !9979, file: !365, line: 1065, column: 7)
!10001 = !DILocation(line: 1065, column: 19, scope: !10000)
!10002 = !DILocation(line: 1065, column: 17, scope: !10000)
!10003 = !DILocation(line: 1065, column: 7, scope: !9979)
!10004 = !DILocation(line: 1065, column: 54, scope: !10005)
!10005 = distinct !DILexicalBlock(scope: !10000, file: !365, line: 1065, column: 30)
!10006 = !DILocation(line: 1065, column: 34, scope: !10005)
!10007 = !DILocation(line: 1065, column: 56, scope: !10005)
!10008 = !DILocation(line: 1065, column: 23, scope: !10005)
!10009 = !DILocation(line: 1065, column: 21, scope: !10005)
!10010 = !DILocation(line: 1066, column: 3, scope: !10005)
!10011 = !DILocation(line: 1066, column: 8, scope: !10012)
!10012 = distinct !DILexicalBlock(scope: !9979, file: !365, line: 1066, column: 7)
!10013 = !DILocation(line: 1066, column: 18, scope: !10012)
!10014 = !DILocation(line: 1066, column: 29, scope: !10012)
!10015 = !DILocation(line: 1066, column: 39, scope: !10012)
!10016 = !DILocation(line: 1066, column: 26, scope: !10012)
!10017 = !DILocation(line: 1066, column: 7, scope: !9979)
!10018 = !DILocation(line: 1066, column: 54, scope: !10019)
!10019 = distinct !DILexicalBlock(scope: !10012, file: !365, line: 1066, column: 48)
!10020 = !DILocation(line: 1066, column: 34, scope: !10019)
!10021 = !DILocation(line: 1066, column: 56, scope: !10019)
!10022 = !DILocation(line: 1066, column: 23, scope: !10019)
!10023 = !DILocation(line: 1066, column: 21, scope: !10019)
!10024 = !DILocation(line: 1067, column: 3, scope: !10019)
!10025 = !DILocation(line: 1067, column: 3, scope: !9979)
!10026 = distinct !DISubprogram(name: "op_jp_hl", scope: !365, file: !365, line: 1439, type: !501, scopeLine: 1440, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !666)
!10027 = !DILocalVariable(name: "op", arg: 1, scope: !10026, file: !365, line: 1439, type: !83)
!10028 = !DILocation(line: 0, scope: !10026)
!10029 = !DILocalVariable(name: "oi", arg: 2, scope: !10026, file: !365, line: 1439, type: !503)
!10030 = !DILocation(line: 1441, column: 3, scope: !10031)
!10031 = distinct !DILexicalBlock(scope: !10032, file: !365, line: 1445, column: 3)
!10032 = distinct !DILexicalBlock(scope: !10033, file: !365, line: 1444, column: 3)
!10033 = distinct !DILexicalBlock(scope: !10026, file: !365, line: 1443, column: 3)
!10034 = !DILocation(line: 1441, column: 13, scope: !10031)
!10035 = !DILocation(line: 1441, column: 5, scope: !10036)
!10036 = distinct !DILexicalBlock(scope: !10031, file: !365, line: 1441, column: 13)
!10037 = !DILocation(line: 1444, column: 3, scope: !10031)
!10038 = !DILocation(line: 1442, column: 42, scope: !10033)
!10039 = !DILocation(line: 1442, column: 40, scope: !10033)
!10040 = !DILocation(line: 1443, column: 3, scope: !10033)
!10041 = distinct !DISubprogram(name: "op_ld_ind16_a", scope: !365, file: !365, line: 899, type: !501, scopeLine: 900, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !666)
!10042 = !DILocalVariable(name: "op", arg: 1, scope: !10041, file: !365, line: 899, type: !83)
!10043 = !DILocation(line: 0, scope: !10041)
!10044 = !DILocalVariable(name: "oi", arg: 2, scope: !10041, file: !365, line: 899, type: !503)
!10045 = !DILocation(line: 901, column: 9, scope: !10046)
!10046 = distinct !DILexicalBlock(scope: !10047, file: !365, line: 906, column: 3)
!10047 = distinct !DILexicalBlock(scope: !10048, file: !365, line: 905, column: 3)
!10048 = distinct !DILexicalBlock(scope: !10041, file: !365, line: 904, column: 3)
!10049 = !DILocalVariable(name: "tmp", scope: !10041, file: !365, line: 902, type: !83)
!10050 = !DILocation(line: 901, column: 9, scope: !10047)
!10051 = !DILocalVariable(name: "ofs", scope: !10041, file: !365, line: 901, type: !15)
!10052 = !DILocation(line: 903, column: 3, scope: !10053)
!10053 = distinct !DILexicalBlock(scope: !10054, file: !365, line: 904, column: 3)
!10054 = distinct !DILexicalBlock(scope: !10048, file: !365, line: 903, column: 3)
!10055 = !DILocation(line: 903, column: 13, scope: !10053)
!10056 = !DILocation(line: 903, column: 5, scope: !10057)
!10057 = distinct !DILexicalBlock(scope: !10053, file: !365, line: 903, column: 13)
!10058 = !DILocation(line: 906, column: 3, scope: !10053)
!10059 = !DILocation(line: 904, column: 11, scope: !10060)
!10060 = distinct !DILexicalBlock(scope: !10061, file: !365, line: 910, column: 3)
!10061 = distinct !DILexicalBlock(scope: !10048, file: !365, line: 909, column: 3)
!10062 = !DILocation(line: 904, column: 52, scope: !10060)
!10063 = !DILocation(line: 904, column: 27, scope: !10060)
!10064 = !DILocation(line: 904, column: 3, scope: !10060)
!10065 = !DILocation(line: 905, column: 3, scope: !10048)
!10066 = distinct !DISubprogram(name: "op_xor_imm", scope: !365, file: !365, line: 1285, type: !501, scopeLine: 1286, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !666)
!10067 = !DILocalVariable(name: "op", arg: 1, scope: !10066, file: !365, line: 1285, type: !83)
!10068 = !DILocation(line: 0, scope: !10066)
!10069 = !DILocalVariable(name: "oi", arg: 2, scope: !10066, file: !365, line: 1285, type: !503)
!10070 = !DILocation(line: 1287, column: 9, scope: !10071)
!10071 = distinct !DILexicalBlock(scope: !10072, file: !365, line: 1292, column: 3)
!10072 = distinct !DILexicalBlock(scope: !10073, file: !365, line: 1291, column: 3)
!10073 = distinct !DILexicalBlock(scope: !10066, file: !365, line: 1290, column: 3)
!10074 = !DILocalVariable(name: "tmp", scope: !10066, file: !365, line: 1288, type: !83)
!10075 = !DILocation(line: 1287, column: 9, scope: !10072)
!10076 = !DILocalVariable(name: "imm", scope: !10066, file: !365, line: 1287, type: !87)
!10077 = !DILocation(line: 1289, column: 3, scope: !10078)
!10078 = distinct !DILexicalBlock(scope: !10079, file: !365, line: 1290, column: 3)
!10079 = distinct !DILexicalBlock(scope: !10073, file: !365, line: 1289, column: 3)
!10080 = !DILocation(line: 1289, column: 13, scope: !10078)
!10081 = !DILocation(line: 1289, column: 5, scope: !10082)
!10082 = distinct !DILexicalBlock(scope: !10078, file: !365, line: 1289, column: 13)
!10083 = !DILocation(line: 1292, column: 3, scope: !10078)
!10084 = !DILocation(line: 1290, column: 52, scope: !10073)
!10085 = !DILocation(line: 1290, column: 32, scope: !10073)
!10086 = !DILocation(line: 1290, column: 56, scope: !10073)
!10087 = !DILocation(line: 1290, column: 54, scope: !10073)
!10088 = !DILocation(line: 1290, column: 21, scope: !10073)
!10089 = !DILocation(line: 1290, column: 19, scope: !10073)
!10090 = !DILocation(line: 1291, column: 19, scope: !10073)
!10091 = !DILocation(line: 1292, column: 27, scope: !10092)
!10092 = distinct !DILexicalBlock(scope: !10073, file: !365, line: 1292, column: 7)
!10093 = !DILocation(line: 1292, column: 7, scope: !10092)
!10094 = !DILocation(line: 1292, column: 29, scope: !10092)
!10095 = !DILocation(line: 1292, column: 7, scope: !10073)
!10096 = !DILocation(line: 1292, column: 54, scope: !10097)
!10097 = distinct !DILexicalBlock(scope: !10092, file: !365, line: 1292, column: 35)
!10098 = !DILocation(line: 1292, column: 34, scope: !10097)
!10099 = !DILocation(line: 1292, column: 56, scope: !10097)
!10100 = !DILocation(line: 1292, column: 23, scope: !10097)
!10101 = !DILocation(line: 1292, column: 21, scope: !10097)
!10102 = !DILocation(line: 1293, column: 3, scope: !10097)
!10103 = !DILocation(line: 1293, column: 3, scope: !10073)
!10104 = distinct !DISubprogram(name: "op_di", scope: !365, file: !365, line: 1394, type: !501, scopeLine: 1395, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !666)
!10105 = !DILocalVariable(name: "op", arg: 1, scope: !10104, file: !365, line: 1394, type: !83)
!10106 = !DILocation(line: 0, scope: !10104)
!10107 = !DILocalVariable(name: "oi", arg: 2, scope: !10104, file: !365, line: 1394, type: !503)
!10108 = !DILocation(line: 1396, column: 12, scope: !10109)
!10109 = distinct !DILexicalBlock(scope: !10104, file: !365, line: 1398, column: 3)
!10110 = !DILocation(line: 1397, column: 3, scope: !10111)
!10111 = distinct !DILexicalBlock(scope: !10112, file: !365, line: 1398, column: 3)
!10112 = distinct !DILexicalBlock(scope: !10109, file: !365, line: 1397, column: 3)
!10113 = !DILocation(line: 1397, column: 13, scope: !10111)
!10114 = !DILocation(line: 1397, column: 5, scope: !10115)
!10115 = distinct !DILexicalBlock(scope: !10111, file: !365, line: 1397, column: 13)
!10116 = !DILocation(line: 1400, column: 3, scope: !10111)
!10117 = !DILocation(line: 1398, column: 3, scope: !10109)
!10118 = distinct !DISubprogram(name: "op_or_imm", scope: !365, file: !365, line: 1266, type: !501, scopeLine: 1267, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !666)
!10119 = !DILocalVariable(name: "op", arg: 1, scope: !10118, file: !365, line: 1266, type: !83)
!10120 = !DILocation(line: 0, scope: !10118)
!10121 = !DILocalVariable(name: "oi", arg: 2, scope: !10118, file: !365, line: 1266, type: !503)
!10122 = !DILocation(line: 1268, column: 9, scope: !10123)
!10123 = distinct !DILexicalBlock(scope: !10124, file: !365, line: 1273, column: 3)
!10124 = distinct !DILexicalBlock(scope: !10125, file: !365, line: 1272, column: 3)
!10125 = distinct !DILexicalBlock(scope: !10118, file: !365, line: 1271, column: 3)
!10126 = !DILocalVariable(name: "tmp", scope: !10118, file: !365, line: 1269, type: !83)
!10127 = !DILocation(line: 1268, column: 9, scope: !10124)
!10128 = !DILocalVariable(name: "imm", scope: !10118, file: !365, line: 1268, type: !87)
!10129 = !DILocation(line: 1270, column: 3, scope: !10130)
!10130 = distinct !DILexicalBlock(scope: !10131, file: !365, line: 1271, column: 3)
!10131 = distinct !DILexicalBlock(scope: !10125, file: !365, line: 1270, column: 3)
!10132 = !DILocation(line: 1270, column: 13, scope: !10130)
!10133 = !DILocation(line: 1270, column: 5, scope: !10134)
!10134 = distinct !DILexicalBlock(scope: !10130, file: !365, line: 1270, column: 13)
!10135 = !DILocation(line: 1273, column: 3, scope: !10130)
!10136 = !DILocation(line: 1271, column: 52, scope: !10125)
!10137 = !DILocation(line: 1271, column: 32, scope: !10125)
!10138 = !DILocation(line: 1271, column: 56, scope: !10125)
!10139 = !DILocation(line: 1271, column: 54, scope: !10125)
!10140 = !DILocation(line: 1271, column: 21, scope: !10125)
!10141 = !DILocation(line: 1271, column: 19, scope: !10125)
!10142 = !DILocation(line: 1272, column: 19, scope: !10125)
!10143 = !DILocation(line: 1273, column: 27, scope: !10144)
!10144 = distinct !DILexicalBlock(scope: !10125, file: !365, line: 1273, column: 7)
!10145 = !DILocation(line: 1273, column: 7, scope: !10144)
!10146 = !DILocation(line: 1273, column: 29, scope: !10144)
!10147 = !DILocation(line: 1273, column: 7, scope: !10125)
!10148 = !DILocation(line: 1273, column: 54, scope: !10149)
!10149 = distinct !DILexicalBlock(scope: !10144, file: !365, line: 1273, column: 35)
!10150 = !DILocation(line: 1273, column: 34, scope: !10149)
!10151 = !DILocation(line: 1273, column: 56, scope: !10149)
!10152 = !DILocation(line: 1273, column: 23, scope: !10149)
!10153 = !DILocation(line: 1273, column: 21, scope: !10149)
!10154 = !DILocation(line: 1274, column: 3, scope: !10149)
!10155 = !DILocation(line: 1274, column: 3, scope: !10125)
!10156 = distinct !DISubprogram(name: "op_ld_hlsp", scope: !365, file: !365, line: 917, type: !501, scopeLine: 918, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !666)
!10157 = !DILocalVariable(name: "op", arg: 1, scope: !10156, file: !365, line: 917, type: !83)
!10158 = !DILocation(line: 0, scope: !10156)
!10159 = !DILocalVariable(name: "oi", arg: 2, scope: !10156, file: !365, line: 917, type: !503)
!10160 = !DILocation(line: 919, column: 9, scope: !10161)
!10161 = distinct !DILexicalBlock(scope: !10162, file: !365, line: 926, column: 3)
!10162 = distinct !DILexicalBlock(scope: !10163, file: !365, line: 925, column: 3)
!10163 = distinct !DILexicalBlock(scope: !10156, file: !365, line: 924, column: 3)
!10164 = !DILocalVariable(name: "tmp", scope: !10156, file: !365, line: 920, type: !83)
!10165 = !DILocation(line: 919, column: 9, scope: !10162)
!10166 = !DILocalVariable(name: "ofs", scope: !10156, file: !365, line: 919, type: !281)
!10167 = !DILocation(line: 920, column: 9, scope: !10162)
!10168 = !DILocalVariable(name: "old", scope: !10156, file: !365, line: 921, type: !86)
!10169 = !DILocation(line: 921, column: 21, scope: !10162)
!10170 = !DILocation(line: 921, column: 33, scope: !10162)
!10171 = !DILocation(line: 921, column: 31, scope: !10162)
!10172 = !DILocation(line: 921, column: 9, scope: !10162)
!10173 = !DILocalVariable(name: "new", scope: !10156, file: !365, line: 922, type: !86)
!10174 = !DILocation(line: 923, column: 7, scope: !10175)
!10175 = distinct !DILexicalBlock(scope: !10163, file: !365, line: 923, column: 7)
!10176 = !DILocation(line: 923, column: 17, scope: !10175)
!10177 = !DILocation(line: 923, column: 7, scope: !10163)
!10178 = !DILocation(line: 923, column: 5, scope: !10179)
!10179 = distinct !DILexicalBlock(scope: !10180, file: !365, line: 925, column: 5)
!10180 = distinct !DILexicalBlock(scope: !10181, file: !365, line: 924, column: 5)
!10181 = distinct !DILexicalBlock(scope: !10175, file: !365, line: 923, column: 22)
!10182 = !DILocation(line: 923, column: 15, scope: !10179)
!10183 = !DILocation(line: 923, column: 7, scope: !10184)
!10184 = distinct !DILexicalBlock(scope: !10179, file: !365, line: 923, column: 15)
!10185 = !DILocation(line: 926, column: 5, scope: !10179)
!10186 = !DILocation(line: 929, column: 3, scope: !10181)
!10187 = !DILocation(line: 924, column: 5, scope: !10188)
!10188 = distinct !DILexicalBlock(scope: !10189, file: !365, line: 931, column: 5)
!10189 = distinct !DILexicalBlock(scope: !10190, file: !365, line: 930, column: 5)
!10190 = distinct !DILexicalBlock(scope: !10175, file: !365, line: 929, column: 10)
!10191 = !DILocation(line: 924, column: 15, scope: !10188)
!10192 = !DILocation(line: 924, column: 7, scope: !10193)
!10193 = distinct !DILexicalBlock(scope: !10188, file: !365, line: 924, column: 15)
!10194 = !DILocation(line: 927, column: 5, scope: !10188)
!10195 = !DILocation(line: 925, column: 39, scope: !10163)
!10196 = !DILocation(line: 926, column: 19, scope: !10163)
!10197 = !DILocation(line: 927, column: 7, scope: !10198)
!10198 = distinct !DILexicalBlock(scope: !10163, file: !365, line: 927, column: 7)
!10199 = !DILocation(line: 927, column: 19, scope: !10198)
!10200 = !DILocation(line: 927, column: 17, scope: !10198)
!10201 = !DILocation(line: 927, column: 7, scope: !10163)
!10202 = !DILocation(line: 927, column: 54, scope: !10203)
!10203 = distinct !DILexicalBlock(scope: !10198, file: !365, line: 927, column: 30)
!10204 = !DILocation(line: 927, column: 34, scope: !10203)
!10205 = !DILocation(line: 927, column: 56, scope: !10203)
!10206 = !DILocation(line: 927, column: 23, scope: !10203)
!10207 = !DILocation(line: 927, column: 21, scope: !10203)
!10208 = !DILocation(line: 928, column: 3, scope: !10203)
!10209 = !DILocation(line: 928, column: 8, scope: !10210)
!10210 = distinct !DILexicalBlock(scope: !10163, file: !365, line: 928, column: 7)
!10211 = !DILocation(line: 928, column: 18, scope: !10210)
!10212 = !DILocation(line: 928, column: 29, scope: !10210)
!10213 = !DILocation(line: 928, column: 39, scope: !10210)
!10214 = !DILocation(line: 928, column: 26, scope: !10210)
!10215 = !DILocation(line: 928, column: 7, scope: !10163)
!10216 = !DILocation(line: 928, column: 54, scope: !10217)
!10217 = distinct !DILexicalBlock(scope: !10210, file: !365, line: 928, column: 48)
!10218 = !DILocation(line: 928, column: 34, scope: !10217)
!10219 = !DILocation(line: 928, column: 56, scope: !10217)
!10220 = !DILocation(line: 928, column: 23, scope: !10217)
!10221 = !DILocation(line: 928, column: 21, scope: !10217)
!10222 = !DILocation(line: 929, column: 3, scope: !10217)
!10223 = !DILocation(line: 929, column: 3, scope: !10163)
!10224 = distinct !DISubprogram(name: "op_ld_sphl", scope: !365, file: !365, line: 931, type: !501, scopeLine: 932, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !666)
!10225 = !DILocalVariable(name: "op", arg: 1, scope: !10224, file: !365, line: 931, type: !83)
!10226 = !DILocation(line: 0, scope: !10224)
!10227 = !DILocalVariable(name: "oi", arg: 2, scope: !10224, file: !365, line: 931, type: !503)
!10228 = !DILocation(line: 933, column: 3, scope: !10229)
!10229 = distinct !DILexicalBlock(scope: !10230, file: !365, line: 937, column: 3)
!10230 = distinct !DILexicalBlock(scope: !10231, file: !365, line: 936, column: 3)
!10231 = distinct !DILexicalBlock(scope: !10224, file: !365, line: 935, column: 3)
!10232 = !DILocation(line: 933, column: 13, scope: !10229)
!10233 = !DILocation(line: 933, column: 5, scope: !10234)
!10234 = distinct !DILexicalBlock(scope: !10229, file: !365, line: 933, column: 13)
!10235 = !DILocation(line: 936, column: 3, scope: !10229)
!10236 = !DILocation(line: 934, column: 41, scope: !10231)
!10237 = !DILocation(line: 934, column: 39, scope: !10231)
!10238 = !DILocation(line: 935, column: 3, scope: !10231)
!10239 = distinct !DISubprogram(name: "op_ld_imm", scope: !365, file: !365, line: 891, type: !501, scopeLine: 892, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !666)
!10240 = !DILocalVariable(name: "op", arg: 1, scope: !10239, file: !365, line: 891, type: !83)
!10241 = !DILocation(line: 0, scope: !10239)
!10242 = !DILocalVariable(name: "oi", arg: 2, scope: !10239, file: !365, line: 891, type: !503)
!10243 = !DILocation(line: 893, column: 9, scope: !10244)
!10244 = distinct !DILexicalBlock(scope: !10245, file: !365, line: 899, column: 3)
!10245 = distinct !DILexicalBlock(scope: !10246, file: !365, line: 898, column: 3)
!10246 = distinct !DILexicalBlock(scope: !10239, file: !365, line: 897, column: 3)
!10247 = !DILocalVariable(name: "tmp", scope: !10239, file: !365, line: 894, type: !83)
!10248 = !DILocation(line: 893, column: 9, scope: !10245)
!10249 = !DILocalVariable(name: "ofs", scope: !10239, file: !365, line: 893, type: !15)
!10250 = !DILocation(line: 895, column: 3, scope: !10251)
!10251 = distinct !DILexicalBlock(scope: !10252, file: !365, line: 896, column: 3)
!10252 = distinct !DILexicalBlock(scope: !10246, file: !365, line: 895, column: 3)
!10253 = !DILocation(line: 895, column: 13, scope: !10251)
!10254 = !DILocation(line: 895, column: 5, scope: !10255)
!10255 = distinct !DILexicalBlock(scope: !10251, file: !365, line: 895, column: 13)
!10256 = !DILocation(line: 898, column: 3, scope: !10251)
!10257 = !DILocation(line: 896, column: 21, scope: !10258)
!10258 = distinct !DILexicalBlock(scope: !10259, file: !365, line: 902, column: 3)
!10259 = distinct !DILexicalBlock(scope: !10246, file: !365, line: 901, column: 3)
!10260 = !DILocation(line: 896, column: 13, scope: !10258)
!10261 = !DILocalVariable(name: "tmp___0", scope: !10239, file: !365, line: 895, type: !83)
!10262 = !DILocation(line: 896, column: 21, scope: !10259)
!10263 = !DILocation(line: 896, column: 19, scope: !10259)
!10264 = !DILocation(line: 897, column: 3, scope: !10246)
!10265 = distinct !DISubprogram(name: "op_ei", scope: !365, file: !365, line: 1400, type: !501, scopeLine: 1401, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !666)
!10266 = !DILocalVariable(name: "op", arg: 1, scope: !10265, file: !365, line: 1400, type: !83)
!10267 = !DILocation(line: 0, scope: !10265)
!10268 = !DILocalVariable(name: "oi", arg: 2, scope: !10265, file: !365, line: 1400, type: !503)
!10269 = !DILocation(line: 1402, column: 12, scope: !10270)
!10270 = distinct !DILexicalBlock(scope: !10265, file: !365, line: 1404, column: 3)
!10271 = !DILocation(line: 1403, column: 3, scope: !10272)
!10272 = distinct !DILexicalBlock(scope: !10273, file: !365, line: 1404, column: 3)
!10273 = distinct !DILexicalBlock(scope: !10270, file: !365, line: 1403, column: 3)
!10274 = !DILocation(line: 1403, column: 13, scope: !10272)
!10275 = !DILocation(line: 1403, column: 5, scope: !10276)
!10276 = distinct !DILexicalBlock(scope: !10272, file: !365, line: 1403, column: 13)
!10277 = !DILocation(line: 1406, column: 3, scope: !10272)
!10278 = !DILocation(line: 1404, column: 3, scope: !10270)
!10279 = distinct !DISubprogram(name: "op_cp_imm", scope: !365, file: !365, line: 1162, type: !501, scopeLine: 1163, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !666)
!10280 = !DILocalVariable(name: "op", arg: 1, scope: !10279, file: !365, line: 1162, type: !83)
!10281 = !DILocation(line: 0, scope: !10279)
!10282 = !DILocalVariable(name: "oi", arg: 2, scope: !10279, file: !365, line: 1162, type: !503)
!10283 = !DILocation(line: 1164, column: 9, scope: !10284)
!10284 = distinct !DILexicalBlock(scope: !10285, file: !365, line: 1171, column: 3)
!10285 = distinct !DILexicalBlock(scope: !10286, file: !365, line: 1170, column: 3)
!10286 = distinct !DILexicalBlock(scope: !10279, file: !365, line: 1169, column: 3)
!10287 = !DILocalVariable(name: "tmp", scope: !10279, file: !365, line: 1165, type: !83)
!10288 = !DILocation(line: 1164, column: 9, scope: !10285)
!10289 = !DILocalVariable(name: "imm", scope: !10279, file: !365, line: 1164, type: !87)
!10290 = !DILocation(line: 1165, column: 23, scope: !10285)
!10291 = !DILocalVariable(name: "old", scope: !10279, file: !365, line: 1166, type: !87)
!10292 = !DILocalVariable(name: "new", scope: !10279, file: !365, line: 1167, type: !87)
!10293 = !DILocation(line: 1168, column: 3, scope: !10294)
!10294 = distinct !DILexicalBlock(scope: !10295, file: !365, line: 1169, column: 3)
!10295 = distinct !DILexicalBlock(scope: !10286, file: !365, line: 1168, column: 3)
!10296 = !DILocation(line: 1168, column: 13, scope: !10294)
!10297 = !DILocation(line: 1168, column: 5, scope: !10298)
!10298 = distinct !DILexicalBlock(scope: !10294, file: !365, line: 1168, column: 13)
!10299 = !DILocation(line: 1171, column: 3, scope: !10294)
!10300 = !DILocation(line: 1169, column: 20, scope: !10286)
!10301 = !DILocation(line: 1169, column: 32, scope: !10286)
!10302 = !DILocation(line: 1169, column: 30, scope: !10286)
!10303 = !DILocation(line: 1169, column: 9, scope: !10286)
!10304 = !DILocation(line: 1170, column: 19, scope: !10286)
!10305 = !DILocation(line: 1171, column: 7, scope: !10306)
!10306 = distinct !DILexicalBlock(scope: !10286, file: !365, line: 1171, column: 7)
!10307 = !DILocation(line: 1171, column: 19, scope: !10306)
!10308 = !DILocation(line: 1171, column: 17, scope: !10306)
!10309 = !DILocation(line: 1171, column: 7, scope: !10286)
!10310 = !DILocation(line: 1171, column: 54, scope: !10311)
!10311 = distinct !DILexicalBlock(scope: !10306, file: !365, line: 1171, column: 30)
!10312 = !DILocation(line: 1171, column: 34, scope: !10311)
!10313 = !DILocation(line: 1171, column: 56, scope: !10311)
!10314 = !DILocation(line: 1171, column: 23, scope: !10311)
!10315 = !DILocation(line: 1171, column: 21, scope: !10311)
!10316 = !DILocation(line: 1172, column: 3, scope: !10311)
!10317 = !DILocation(line: 1172, column: 8, scope: !10318)
!10318 = distinct !DILexicalBlock(scope: !10286, file: !365, line: 1172, column: 7)
!10319 = !DILocation(line: 1172, column: 18, scope: !10318)
!10320 = !DILocation(line: 1172, column: 27, scope: !10318)
!10321 = !DILocation(line: 1172, column: 37, scope: !10318)
!10322 = !DILocation(line: 1172, column: 24, scope: !10318)
!10323 = !DILocation(line: 1172, column: 7, scope: !10286)
!10324 = !DILocation(line: 1172, column: 54, scope: !10325)
!10325 = distinct !DILexicalBlock(scope: !10318, file: !365, line: 1172, column: 44)
!10326 = !DILocation(line: 1172, column: 34, scope: !10325)
!10327 = !DILocation(line: 1172, column: 56, scope: !10325)
!10328 = !DILocation(line: 1172, column: 23, scope: !10325)
!10329 = !DILocation(line: 1172, column: 21, scope: !10325)
!10330 = !DILocation(line: 1173, column: 3, scope: !10325)
!10331 = !DILocation(line: 1173, column: 7, scope: !10332)
!10332 = distinct !DILexicalBlock(scope: !10286, file: !365, line: 1173, column: 7)
!10333 = !DILocation(line: 1173, column: 17, scope: !10332)
!10334 = !DILocation(line: 1173, column: 7, scope: !10286)
!10335 = !DILocation(line: 1173, column: 54, scope: !10336)
!10336 = distinct !DILexicalBlock(scope: !10332, file: !365, line: 1173, column: 23)
!10337 = !DILocation(line: 1173, column: 34, scope: !10336)
!10338 = !DILocation(line: 1173, column: 56, scope: !10336)
!10339 = !DILocation(line: 1173, column: 23, scope: !10336)
!10340 = !DILocation(line: 1173, column: 21, scope: !10336)
!10341 = !DILocation(line: 1174, column: 3, scope: !10336)
!10342 = !DILocation(line: 1174, column: 3, scope: !10286)
!10343 = distinct !DISubprogram(name: "get_imm16", scope: !365, file: !365, line: 612, type: !10344, scopeLine: 613, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !666)
!10344 = !DISubroutineType(types: !10345)
!10345 = !{!83}
!10346 = !DILocation(line: 614, column: 19, scope: !10347)
!10347 = distinct !DILexicalBlock(scope: !10348, file: !365, line: 620, column: 3)
!10348 = distinct !DILexicalBlock(scope: !10343, file: !365, line: 619, column: 3)
!10349 = !DILocation(line: 614, column: 8, scope: !10347)
!10350 = !DILocalVariable(name: "pc", scope: !10343, file: !365, line: 614, type: !83)
!10351 = !DILocation(line: 0, scope: !10343)
!10352 = !DILocation(line: 616, column: 57, scope: !10347)
!10353 = !DILocation(line: 616, column: 42, scope: !10347)
!10354 = !DILocation(line: 616, column: 40, scope: !10347)
!10355 = !DILocation(line: 617, column: 9, scope: !10356)
!10356 = distinct !DILexicalBlock(scope: !10347, file: !365, line: 617, column: 3)
!10357 = !DILocalVariable(name: "tmp", scope: !10343, file: !365, line: 616, type: !83)
!10358 = !DILocation(line: 617, column: 24, scope: !10359)
!10359 = distinct !DILexicalBlock(scope: !10347, file: !365, line: 619, column: 3)
!10360 = !DILocation(line: 617, column: 13, scope: !10359)
!10361 = !DILocalVariable(name: "tmp___0", scope: !10343, file: !365, line: 617, type: !83)
!10362 = !DILocation(line: 617, column: 24, scope: !10347)
!10363 = !DILocation(line: 617, column: 13, scope: !10347)
!10364 = !DILocalVariable(name: "res", scope: !10343, file: !365, line: 615, type: !83)
!10365 = !DILocation(line: 618, column: 3, scope: !10366)
!10366 = distinct !DILexicalBlock(scope: !10367, file: !365, line: 620, column: 3)
!10367 = distinct !DILexicalBlock(scope: !10348, file: !365, line: 619, column: 3)
!10368 = !DILocation(line: 618, column: 13, scope: !10366)
!10369 = !DILocation(line: 618, column: 5, scope: !10370)
!10370 = distinct !DILexicalBlock(scope: !10366, file: !365, line: 618, column: 13)
!10371 = !DILocation(line: 621, column: 3, scope: !10366)
!10372 = !DILocation(line: 619, column: 3, scope: !10348)
!10373 = distinct !DISubprogram(name: "print_reg", scope: !365, file: !365, line: 622, type: !1747, scopeLine: 623, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !666)
!10374 = !DILocalVariable(name: "i", arg: 1, scope: !10373, file: !365, line: 622, type: !15)
!10375 = !DILocation(line: 0, scope: !10373)
!10376 = !DILocation(line: 624, column: 9, scope: !10377)
!10377 = distinct !DILexicalBlock(scope: !10378, file: !365, line: 624, column: 7)
!10378 = distinct !DILexicalBlock(scope: !10373, file: !365, line: 626, column: 3)
!10379 = !DILocation(line: 624, column: 7, scope: !10378)
!10380 = !DILocation(line: 624, column: 5, scope: !10381)
!10381 = distinct !DILexicalBlock(scope: !10382, file: !365, line: 626, column: 5)
!10382 = distinct !DILexicalBlock(scope: !10383, file: !365, line: 625, column: 5)
!10383 = distinct !DILexicalBlock(scope: !10377, file: !365, line: 624, column: 16)
!10384 = !DILocation(line: 624, column: 15, scope: !10381)
!10385 = !DILocation(line: 624, column: 7, scope: !10386)
!10386 = distinct !DILexicalBlock(scope: !10381, file: !365, line: 624, column: 15)
!10387 = !DILocation(line: 627, column: 5, scope: !10381)
!10388 = !DILocation(line: 630, column: 3, scope: !10383)
!10389 = !DILocation(line: 625, column: 5, scope: !10390)
!10390 = distinct !DILexicalBlock(scope: !10391, file: !365, line: 632, column: 5)
!10391 = distinct !DILexicalBlock(scope: !10392, file: !365, line: 631, column: 5)
!10392 = distinct !DILexicalBlock(scope: !10377, file: !365, line: 630, column: 10)
!10393 = !DILocation(line: 625, column: 15, scope: !10390)
!10394 = !DILocation(line: 625, column: 7, scope: !10395)
!10395 = distinct !DILexicalBlock(scope: !10390, file: !365, line: 625, column: 15)
!10396 = !DILocation(line: 628, column: 5, scope: !10390)
!10397 = !DILocation(line: 626, column: 3, scope: !10378)
!10398 = distinct !DISubprogram(name: "get_reg", scope: !365, file: !365, line: 628, type: !10399, scopeLine: 629, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !666)
!10399 = !DISubroutineType(types: !10400)
!10400 = !{!83, !15}
!10401 = !DILocalVariable(name: "i", arg: 1, scope: !10398, file: !365, line: 628, type: !15)
!10402 = !DILocation(line: 0, scope: !10398)
!10403 = !DILocation(line: 630, column: 9, scope: !10404)
!10404 = distinct !DILexicalBlock(scope: !10405, file: !365, line: 630, column: 7)
!10405 = distinct !DILexicalBlock(scope: !10398, file: !365, line: 632, column: 3)
!10406 = !DILocation(line: 630, column: 7, scope: !10405)
!10407 = !DILocation(line: 631, column: 30, scope: !10408)
!10408 = distinct !DILexicalBlock(scope: !10409, file: !365, line: 632, column: 5)
!10409 = distinct !DILexicalBlock(scope: !10410, file: !365, line: 631, column: 5)
!10410 = distinct !DILexicalBlock(scope: !10404, file: !365, line: 630, column: 16)
!10411 = !DILocation(line: 631, column: 19, scope: !10408)
!10412 = !DILocation(line: 631, column: 11, scope: !10408)
!10413 = !DILocalVariable(name: "tmp", scope: !10398, file: !365, line: 630, type: !83)
!10414 = !DILocation(line: 631, column: 5, scope: !10410)
!10415 = !DILocation(line: 632, column: 38, scope: !10405)
!10416 = !DILocation(line: 632, column: 22, scope: !10405)
!10417 = !DILocation(line: 632, column: 11, scope: !10405)
!10418 = !DILocation(line: 632, column: 3, scope: !10405)
!10419 = !DILocation(line: 0, scope: !10405)
!10420 = !DILocation(line: 634, column: 1, scope: !10398)
!10421 = distinct !DISubprogram(name: "put_reg", scope: !365, file: !365, line: 635, type: !10422, scopeLine: 636, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !666)
!10422 = !DISubroutineType(types: !10423)
!10423 = !{null, !15, !83}
!10424 = !DILocalVariable(name: "i", arg: 1, scope: !10421, file: !365, line: 635, type: !15)
!10425 = !DILocation(line: 0, scope: !10421)
!10426 = !DILocalVariable(name: "val", arg: 2, scope: !10421, file: !365, line: 635, type: !83)
!10427 = !DILocation(line: 637, column: 9, scope: !10428)
!10428 = distinct !DILexicalBlock(scope: !10429, file: !365, line: 637, column: 7)
!10429 = distinct !DILexicalBlock(scope: !10421, file: !365, line: 639, column: 3)
!10430 = !DILocation(line: 637, column: 7, scope: !10429)
!10431 = !DILocation(line: 638, column: 24, scope: !10432)
!10432 = distinct !DILexicalBlock(scope: !10433, file: !365, line: 639, column: 5)
!10433 = distinct !DILexicalBlock(scope: !10434, file: !365, line: 638, column: 5)
!10434 = distinct !DILexicalBlock(scope: !10428, file: !365, line: 637, column: 16)
!10435 = !DILocation(line: 638, column: 13, scope: !10432)
!10436 = !DILocation(line: 638, column: 5, scope: !10432)
!10437 = !DILocation(line: 641, column: 3, scope: !10434)
!10438 = !DILocation(line: 639, column: 29, scope: !10439)
!10439 = distinct !DILexicalBlock(scope: !10428, file: !365, line: 641, column: 10)
!10440 = !DILocation(line: 639, column: 21, scope: !10439)
!10441 = !DILocation(line: 639, column: 5, scope: !10439)
!10442 = !DILocation(line: 639, column: 27, scope: !10439)
!10443 = !DILocation(line: 640, column: 3, scope: !10429)
!10444 = distinct !DISubprogram(name: "get_imm8", scope: !365, file: !365, line: 602, type: !10344, scopeLine: 603, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !666)
!10445 = !DILocation(line: 604, column: 19, scope: !10446)
!10446 = distinct !DILexicalBlock(scope: !10447, file: !365, line: 608, column: 3)
!10447 = distinct !DILexicalBlock(scope: !10444, file: !365, line: 607, column: 3)
!10448 = !DILocation(line: 604, column: 8, scope: !10446)
!10449 = !DILocalVariable(name: "pc", scope: !10444, file: !365, line: 604, type: !83)
!10450 = !DILocation(line: 0, scope: !10444)
!10451 = !DILocation(line: 606, column: 57, scope: !10446)
!10452 = !DILocation(line: 606, column: 42, scope: !10446)
!10453 = !DILocation(line: 606, column: 40, scope: !10446)
!10454 = !DILocation(line: 607, column: 9, scope: !10455)
!10455 = distinct !DILexicalBlock(scope: !10446, file: !365, line: 607, column: 3)
!10456 = !DILocalVariable(name: "res", scope: !10444, file: !365, line: 605, type: !83)
!10457 = !DILocation(line: 608, column: 3, scope: !10458)
!10458 = distinct !DILexicalBlock(scope: !10459, file: !365, line: 611, column: 3)
!10459 = distinct !DILexicalBlock(scope: !10447, file: !365, line: 610, column: 3)
!10460 = !DILocation(line: 608, column: 13, scope: !10458)
!10461 = !DILocation(line: 608, column: 5, scope: !10462)
!10462 = distinct !DILexicalBlock(scope: !10458, file: !365, line: 608, column: 13)
!10463 = !DILocation(line: 611, column: 3, scope: !10458)
!10464 = !DILocation(line: 609, column: 3, scope: !10447)
!10465 = distinct !DISubprogram(name: "pop", scope: !365, file: !365, line: 590, type: !10344, scopeLine: 591, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !666)
!10466 = !DILocation(line: 593, column: 19, scope: !10467)
!10467 = distinct !DILexicalBlock(scope: !10468, file: !365, line: 597, column: 3)
!10468 = distinct !DILexicalBlock(scope: !10465, file: !365, line: 596, column: 3)
!10469 = !DILocation(line: 593, column: 8, scope: !10467)
!10470 = !DILocalVariable(name: "sp", scope: !10465, file: !365, line: 593, type: !83)
!10471 = !DILocation(line: 0, scope: !10465)
!10472 = !DILocation(line: 595, column: 9, scope: !10473)
!10473 = distinct !DILexicalBlock(scope: !10467, file: !365, line: 594, column: 3)
!10474 = !DILocalVariable(name: "res", scope: !10465, file: !365, line: 592, type: !83)
!10475 = !DILocation(line: 596, column: 20, scope: !10476)
!10476 = distinct !DILexicalBlock(scope: !10467, file: !365, line: 597, column: 3)
!10477 = !DILocation(line: 596, column: 9, scope: !10476)
!10478 = !DILocalVariable(name: "tmp", scope: !10465, file: !365, line: 594, type: !83)
!10479 = !DILocation(line: 596, column: 14, scope: !10467)
!10480 = !DILocation(line: 596, column: 7, scope: !10467)
!10481 = !DILocation(line: 597, column: 56, scope: !10467)
!10482 = !DILocation(line: 597, column: 41, scope: !10467)
!10483 = !DILocation(line: 597, column: 39, scope: !10467)
!10484 = !DILocation(line: 599, column: 3, scope: !10468)
!10485 = distinct !DISubprogram(name: "op_bit", scope: !365, file: !365, line: 668, type: !1762, scopeLine: 669, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !666)
!10486 = !DILocalVariable(name: "op", arg: 1, scope: !10485, file: !365, line: 668, type: !83)
!10487 = !DILocation(line: 0, scope: !10485)
!10488 = !DILocation(line: 670, column: 20, scope: !10489)
!10489 = distinct !DILexicalBlock(scope: !10485, file: !365, line: 674, column: 3)
!10490 = !DILocation(line: 670, column: 9, scope: !10489)
!10491 = !DILocalVariable(name: "reg", scope: !10485, file: !365, line: 670, type: !15)
!10492 = !DILocation(line: 671, column: 30, scope: !10489)
!10493 = !DILocation(line: 671, column: 36, scope: !10489)
!10494 = !DILocation(line: 671, column: 9, scope: !10489)
!10495 = !DILocalVariable(name: "bit", scope: !10485, file: !365, line: 671, type: !22)
!10496 = !DILocation(line: 673, column: 3, scope: !10497)
!10497 = distinct !DILexicalBlock(scope: !10498, file: !365, line: 673, column: 3)
!10498 = distinct !DILexicalBlock(scope: !10489, file: !365, line: 672, column: 3)
!10499 = !DILocation(line: 673, column: 13, scope: !10497)
!10500 = !DILocation(line: 673, column: 5, scope: !10501)
!10501 = distinct !DILexicalBlock(scope: !10497, file: !365, line: 673, column: 13)
!10502 = !DILocation(line: 676, column: 3, scope: !10497)
!10503 = !DILocation(line: 674, column: 3, scope: !10504)
!10504 = distinct !DILexicalBlock(scope: !10505, file: !365, line: 680, column: 3)
!10505 = distinct !DILexicalBlock(scope: !10489, file: !365, line: 679, column: 3)
!10506 = !DILocation(line: 675, column: 52, scope: !10505)
!10507 = !DILocation(line: 675, column: 32, scope: !10505)
!10508 = !DILocation(line: 675, column: 54, scope: !10505)
!10509 = !DILocation(line: 675, column: 21, scope: !10505)
!10510 = !DILocation(line: 675, column: 19, scope: !10505)
!10511 = !DILocation(line: 676, column: 52, scope: !10505)
!10512 = !DILocation(line: 676, column: 32, scope: !10505)
!10513 = !DILocation(line: 676, column: 54, scope: !10505)
!10514 = !DILocation(line: 676, column: 21, scope: !10505)
!10515 = !DILocation(line: 676, column: 19, scope: !10505)
!10516 = !DILocation(line: 677, column: 9, scope: !10517)
!10517 = distinct !DILexicalBlock(scope: !10505, file: !365, line: 677, column: 3)
!10518 = !DILocalVariable(name: "tmp", scope: !10485, file: !365, line: 672, type: !83)
!10519 = !DILocation(line: 677, column: 61, scope: !10505)
!10520 = !DILocation(line: 677, column: 32, scope: !10505)
!10521 = !DILocation(line: 677, column: 72, scope: !10505)
!10522 = !DILocation(line: 677, column: 86, scope: !10505)
!10523 = !DILocation(line: 677, column: 78, scope: !10505)
!10524 = !DILocation(line: 677, column: 94, scope: !10505)
!10525 = !DILocation(line: 677, column: 63, scope: !10505)
!10526 = !DILocation(line: 677, column: 21, scope: !10505)
!10527 = !DILocation(line: 677, column: 19, scope: !10505)
!10528 = !DILocation(line: 678, column: 3, scope: !10489)
!10529 = distinct !DISubprogram(name: "op_res", scope: !365, file: !365, line: 658, type: !1762, scopeLine: 659, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !666)
!10530 = !DILocalVariable(name: "op", arg: 1, scope: !10529, file: !365, line: 658, type: !83)
!10531 = !DILocation(line: 0, scope: !10529)
!10532 = !DILocation(line: 660, column: 20, scope: !10533)
!10533 = distinct !DILexicalBlock(scope: !10529, file: !365, line: 664, column: 3)
!10534 = !DILocation(line: 660, column: 9, scope: !10533)
!10535 = !DILocalVariable(name: "reg", scope: !10529, file: !365, line: 660, type: !15)
!10536 = !DILocation(line: 661, column: 30, scope: !10533)
!10537 = !DILocation(line: 661, column: 36, scope: !10533)
!10538 = !DILocation(line: 661, column: 9, scope: !10533)
!10539 = !DILocalVariable(name: "bit", scope: !10529, file: !365, line: 661, type: !22)
!10540 = !DILocation(line: 663, column: 3, scope: !10541)
!10541 = distinct !DILexicalBlock(scope: !10542, file: !365, line: 663, column: 3)
!10542 = distinct !DILexicalBlock(scope: !10533, file: !365, line: 662, column: 3)
!10543 = !DILocation(line: 663, column: 13, scope: !10541)
!10544 = !DILocation(line: 663, column: 5, scope: !10545)
!10545 = distinct !DILexicalBlock(scope: !10541, file: !365, line: 663, column: 13)
!10546 = !DILocation(line: 666, column: 3, scope: !10541)
!10547 = !DILocation(line: 664, column: 3, scope: !10548)
!10548 = distinct !DILexicalBlock(scope: !10549, file: !365, line: 670, column: 3)
!10549 = distinct !DILexicalBlock(scope: !10533, file: !365, line: 669, column: 3)
!10550 = !DILocation(line: 665, column: 9, scope: !10551)
!10551 = distinct !DILexicalBlock(scope: !10549, file: !365, line: 666, column: 3)
!10552 = !DILocalVariable(name: "tmp", scope: !10529, file: !365, line: 662, type: !83)
!10553 = !DILocation(line: 665, column: 43, scope: !10554)
!10554 = distinct !DILexicalBlock(scope: !10549, file: !365, line: 667, column: 3)
!10555 = !DILocation(line: 665, column: 38, scope: !10554)
!10556 = !DILocation(line: 665, column: 20, scope: !10554)
!10557 = !DILocation(line: 665, column: 3, scope: !10554)
!10558 = !DILocation(line: 666, column: 3, scope: !10533)
!10559 = distinct !DISubprogram(name: "op_set", scope: !365, file: !365, line: 648, type: !1762, scopeLine: 649, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !666)
!10560 = !DILocalVariable(name: "op", arg: 1, scope: !10559, file: !365, line: 648, type: !83)
!10561 = !DILocation(line: 0, scope: !10559)
!10562 = !DILocation(line: 650, column: 20, scope: !10563)
!10563 = distinct !DILexicalBlock(scope: !10559, file: !365, line: 654, column: 3)
!10564 = !DILocation(line: 650, column: 9, scope: !10563)
!10565 = !DILocalVariable(name: "reg", scope: !10559, file: !365, line: 650, type: !15)
!10566 = !DILocation(line: 651, column: 30, scope: !10563)
!10567 = !DILocation(line: 651, column: 36, scope: !10563)
!10568 = !DILocation(line: 651, column: 9, scope: !10563)
!10569 = !DILocalVariable(name: "bit", scope: !10559, file: !365, line: 651, type: !22)
!10570 = !DILocation(line: 653, column: 3, scope: !10571)
!10571 = distinct !DILexicalBlock(scope: !10572, file: !365, line: 653, column: 3)
!10572 = distinct !DILexicalBlock(scope: !10563, file: !365, line: 652, column: 3)
!10573 = !DILocation(line: 653, column: 13, scope: !10571)
!10574 = !DILocation(line: 653, column: 5, scope: !10575)
!10575 = distinct !DILexicalBlock(scope: !10571, file: !365, line: 653, column: 13)
!10576 = !DILocation(line: 656, column: 3, scope: !10571)
!10577 = !DILocation(line: 654, column: 3, scope: !10578)
!10578 = distinct !DILexicalBlock(scope: !10579, file: !365, line: 660, column: 3)
!10579 = distinct !DILexicalBlock(scope: !10563, file: !365, line: 659, column: 3)
!10580 = !DILocation(line: 655, column: 9, scope: !10581)
!10581 = distinct !DILexicalBlock(scope: !10579, file: !365, line: 656, column: 3)
!10582 = !DILocalVariable(name: "tmp", scope: !10559, file: !365, line: 652, type: !83)
!10583 = !DILocation(line: 655, column: 40, scope: !10584)
!10584 = distinct !DILexicalBlock(scope: !10579, file: !365, line: 657, column: 3)
!10585 = !DILocation(line: 655, column: 20, scope: !10584)
!10586 = !DILocation(line: 655, column: 3, scope: !10584)
!10587 = !DILocation(line: 656, column: 3, scope: !10563)
!10588 = distinct !DISubprogram(name: "op_rlc", scope: !365, file: !365, line: 708, type: !501, scopeLine: 709, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !666)
!10589 = !DILocalVariable(name: "op", arg: 1, scope: !10588, file: !365, line: 708, type: !83)
!10590 = !DILocation(line: 0, scope: !10588)
!10591 = !DILocalVariable(name: "oi", arg: 2, scope: !10588, file: !365, line: 708, type: !503)
!10592 = !DILocation(line: 710, column: 20, scope: !10593)
!10593 = distinct !DILexicalBlock(scope: !10588, file: !365, line: 715, column: 3)
!10594 = !DILocation(line: 710, column: 9, scope: !10593)
!10595 = !DILocalVariable(name: "reg", scope: !10588, file: !365, line: 710, type: !15)
!10596 = !DILocation(line: 713, column: 3, scope: !10597)
!10597 = distinct !DILexicalBlock(scope: !10598, file: !365, line: 712, column: 3)
!10598 = distinct !DILexicalBlock(scope: !10593, file: !365, line: 711, column: 3)
!10599 = !DILocation(line: 713, column: 13, scope: !10597)
!10600 = !DILocation(line: 713, column: 5, scope: !10601)
!10601 = distinct !DILexicalBlock(scope: !10597, file: !365, line: 713, column: 13)
!10602 = !DILocation(line: 716, column: 3, scope: !10597)
!10603 = !DILocation(line: 714, column: 3, scope: !10604)
!10604 = distinct !DILexicalBlock(scope: !10605, file: !365, line: 720, column: 3)
!10605 = distinct !DILexicalBlock(scope: !10593, file: !365, line: 719, column: 3)
!10606 = !DILocation(line: 715, column: 9, scope: !10607)
!10607 = distinct !DILexicalBlock(scope: !10605, file: !365, line: 716, column: 3)
!10608 = !DILocalVariable(name: "tmp", scope: !10588, file: !365, line: 713, type: !83)
!10609 = !DILocation(line: 715, column: 9, scope: !10605)
!10610 = !DILocalVariable(name: "val", scope: !10588, file: !365, line: 712, type: !87)
!10611 = !DILocalVariable(name: "res", scope: !10588, file: !365, line: 711, type: !87)
!10612 = !DILocation(line: 716, column: 20, scope: !10605)
!10613 = !DILocation(line: 716, column: 30, scope: !10605)
!10614 = !DILocation(line: 716, column: 9, scope: !10605)
!10615 = !DILocation(line: 717, column: 20, scope: !10605)
!10616 = !DILocation(line: 717, column: 33, scope: !10605)
!10617 = !DILocation(line: 717, column: 43, scope: !10605)
!10618 = !DILocation(line: 717, column: 30, scope: !10605)
!10619 = !DILocation(line: 717, column: 9, scope: !10605)
!10620 = !DILocation(line: 718, column: 33, scope: !10605)
!10621 = !DILocation(line: 718, column: 43, scope: !10605)
!10622 = !DILocation(line: 718, column: 49, scope: !10605)
!10623 = !DILocation(line: 718, column: 21, scope: !10605)
!10624 = !DILocation(line: 718, column: 19, scope: !10605)
!10625 = !DILocation(line: 719, column: 7, scope: !10626)
!10626 = distinct !DILexicalBlock(scope: !10593, file: !365, line: 719, column: 7)
!10627 = !DILocation(line: 719, column: 17, scope: !10626)
!10628 = !DILocation(line: 719, column: 7, scope: !10593)
!10629 = !DILocation(line: 719, column: 54, scope: !10630)
!10630 = distinct !DILexicalBlock(scope: !10626, file: !365, line: 719, column: 23)
!10631 = !DILocation(line: 719, column: 34, scope: !10630)
!10632 = !DILocation(line: 719, column: 56, scope: !10630)
!10633 = !DILocation(line: 719, column: 23, scope: !10630)
!10634 = !DILocation(line: 719, column: 21, scope: !10630)
!10635 = !DILocation(line: 720, column: 3, scope: !10630)
!10636 = !DILocation(line: 720, column: 16, scope: !10637)
!10637 = distinct !DILexicalBlock(scope: !10638, file: !365, line: 722, column: 3)
!10638 = distinct !DILexicalBlock(scope: !10593, file: !365, line: 721, column: 3)
!10639 = !DILocation(line: 720, column: 3, scope: !10637)
!10640 = !DILocation(line: 721, column: 3, scope: !10593)
!10641 = distinct !DISubprogram(name: "op_rrc", scope: !365, file: !365, line: 778, type: !501, scopeLine: 779, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !666)
!10642 = !DILocalVariable(name: "op", arg: 1, scope: !10641, file: !365, line: 778, type: !83)
!10643 = !DILocation(line: 0, scope: !10641)
!10644 = !DILocalVariable(name: "oi", arg: 2, scope: !10641, file: !365, line: 778, type: !503)
!10645 = !DILocation(line: 780, column: 20, scope: !10646)
!10646 = distinct !DILexicalBlock(scope: !10641, file: !365, line: 785, column: 3)
!10647 = !DILocation(line: 780, column: 9, scope: !10646)
!10648 = !DILocalVariable(name: "reg", scope: !10641, file: !365, line: 780, type: !15)
!10649 = !DILocation(line: 783, column: 3, scope: !10650)
!10650 = distinct !DILexicalBlock(scope: !10651, file: !365, line: 782, column: 3)
!10651 = distinct !DILexicalBlock(scope: !10646, file: !365, line: 781, column: 3)
!10652 = !DILocation(line: 783, column: 13, scope: !10650)
!10653 = !DILocation(line: 783, column: 5, scope: !10654)
!10654 = distinct !DILexicalBlock(scope: !10650, file: !365, line: 783, column: 13)
!10655 = !DILocation(line: 786, column: 3, scope: !10650)
!10656 = !DILocation(line: 784, column: 3, scope: !10657)
!10657 = distinct !DILexicalBlock(scope: !10658, file: !365, line: 790, column: 3)
!10658 = distinct !DILexicalBlock(scope: !10646, file: !365, line: 789, column: 3)
!10659 = !DILocation(line: 785, column: 9, scope: !10660)
!10660 = distinct !DILexicalBlock(scope: !10658, file: !365, line: 786, column: 3)
!10661 = !DILocalVariable(name: "tmp", scope: !10641, file: !365, line: 783, type: !83)
!10662 = !DILocation(line: 785, column: 9, scope: !10658)
!10663 = !DILocalVariable(name: "val", scope: !10641, file: !365, line: 782, type: !87)
!10664 = !DILocalVariable(name: "res", scope: !10641, file: !365, line: 781, type: !87)
!10665 = !DILocation(line: 786, column: 20, scope: !10658)
!10666 = !DILocation(line: 786, column: 30, scope: !10658)
!10667 = !DILocation(line: 786, column: 9, scope: !10658)
!10668 = !DILocation(line: 787, column: 20, scope: !10658)
!10669 = !DILocation(line: 787, column: 33, scope: !10658)
!10670 = !DILocation(line: 787, column: 43, scope: !10658)
!10671 = !DILocation(line: 787, column: 30, scope: !10658)
!10672 = !DILocation(line: 787, column: 9, scope: !10658)
!10673 = !DILocation(line: 788, column: 33, scope: !10658)
!10674 = !DILocation(line: 788, column: 43, scope: !10658)
!10675 = !DILocation(line: 788, column: 48, scope: !10658)
!10676 = !DILocation(line: 788, column: 21, scope: !10658)
!10677 = !DILocation(line: 788, column: 19, scope: !10658)
!10678 = !DILocation(line: 789, column: 7, scope: !10679)
!10679 = distinct !DILexicalBlock(scope: !10646, file: !365, line: 789, column: 7)
!10680 = !DILocation(line: 789, column: 17, scope: !10679)
!10681 = !DILocation(line: 789, column: 7, scope: !10646)
!10682 = !DILocation(line: 789, column: 54, scope: !10683)
!10683 = distinct !DILexicalBlock(scope: !10679, file: !365, line: 789, column: 23)
!10684 = !DILocation(line: 789, column: 34, scope: !10683)
!10685 = !DILocation(line: 789, column: 56, scope: !10683)
!10686 = !DILocation(line: 789, column: 23, scope: !10683)
!10687 = !DILocation(line: 789, column: 21, scope: !10683)
!10688 = !DILocation(line: 790, column: 3, scope: !10683)
!10689 = !DILocation(line: 790, column: 16, scope: !10690)
!10690 = distinct !DILexicalBlock(scope: !10691, file: !365, line: 792, column: 3)
!10691 = distinct !DILexicalBlock(scope: !10646, file: !365, line: 791, column: 3)
!10692 = !DILocation(line: 790, column: 3, scope: !10690)
!10693 = !DILocation(line: 791, column: 3, scope: !10646)
!10694 = distinct !DISubprogram(name: "op_rl", scope: !365, file: !365, line: 680, type: !501, scopeLine: 681, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !666)
!10695 = !DILocalVariable(name: "op", arg: 1, scope: !10694, file: !365, line: 680, type: !83)
!10696 = !DILocation(line: 0, scope: !10694)
!10697 = !DILocalVariable(name: "oi", arg: 2, scope: !10694, file: !365, line: 680, type: !503)
!10698 = !DILocation(line: 682, column: 20, scope: !10699)
!10699 = distinct !DILexicalBlock(scope: !10694, file: !365, line: 687, column: 3)
!10700 = !DILocation(line: 682, column: 9, scope: !10699)
!10701 = !DILocalVariable(name: "reg", scope: !10694, file: !365, line: 682, type: !15)
!10702 = !DILocation(line: 685, column: 3, scope: !10703)
!10703 = distinct !DILexicalBlock(scope: !10704, file: !365, line: 684, column: 3)
!10704 = distinct !DILexicalBlock(scope: !10699, file: !365, line: 683, column: 3)
!10705 = !DILocation(line: 685, column: 13, scope: !10703)
!10706 = !DILocation(line: 685, column: 5, scope: !10707)
!10707 = distinct !DILexicalBlock(scope: !10703, file: !365, line: 685, column: 13)
!10708 = !DILocation(line: 688, column: 3, scope: !10703)
!10709 = !DILocation(line: 686, column: 3, scope: !10710)
!10710 = distinct !DILexicalBlock(scope: !10711, file: !365, line: 692, column: 3)
!10711 = distinct !DILexicalBlock(scope: !10699, file: !365, line: 691, column: 3)
!10712 = !DILocation(line: 687, column: 9, scope: !10713)
!10713 = distinct !DILexicalBlock(scope: !10711, file: !365, line: 688, column: 3)
!10714 = !DILocalVariable(name: "tmp", scope: !10694, file: !365, line: 685, type: !83)
!10715 = !DILocation(line: 687, column: 9, scope: !10711)
!10716 = !DILocalVariable(name: "val", scope: !10694, file: !365, line: 684, type: !87)
!10717 = !DILocalVariable(name: "res", scope: !10694, file: !365, line: 683, type: !87)
!10718 = !DILocation(line: 688, column: 20, scope: !10711)
!10719 = !DILocation(line: 688, column: 30, scope: !10711)
!10720 = !DILocation(line: 688, column: 9, scope: !10711)
!10721 = !DILocation(line: 689, column: 20, scope: !10711)
!10722 = !DILocation(line: 689, column: 54, scope: !10711)
!10723 = !DILocation(line: 689, column: 34, scope: !10711)
!10724 = !DILocation(line: 689, column: 56, scope: !10711)
!10725 = !DILocation(line: 689, column: 62, scope: !10711)
!10726 = !DILocation(line: 689, column: 30, scope: !10711)
!10727 = !DILocation(line: 689, column: 9, scope: !10711)
!10728 = !DILocation(line: 690, column: 33, scope: !10711)
!10729 = !DILocation(line: 690, column: 43, scope: !10711)
!10730 = !DILocation(line: 690, column: 49, scope: !10711)
!10731 = !DILocation(line: 690, column: 21, scope: !10711)
!10732 = !DILocation(line: 690, column: 19, scope: !10711)
!10733 = !DILocation(line: 691, column: 7, scope: !10734)
!10734 = distinct !DILexicalBlock(scope: !10699, file: !365, line: 691, column: 7)
!10735 = !DILocation(line: 691, column: 17, scope: !10734)
!10736 = !DILocation(line: 691, column: 7, scope: !10699)
!10737 = !DILocation(line: 691, column: 54, scope: !10738)
!10738 = distinct !DILexicalBlock(scope: !10734, file: !365, line: 691, column: 23)
!10739 = !DILocation(line: 691, column: 34, scope: !10738)
!10740 = !DILocation(line: 691, column: 56, scope: !10738)
!10741 = !DILocation(line: 691, column: 23, scope: !10738)
!10742 = !DILocation(line: 691, column: 21, scope: !10738)
!10743 = !DILocation(line: 692, column: 3, scope: !10738)
!10744 = !DILocation(line: 692, column: 16, scope: !10745)
!10745 = distinct !DILexicalBlock(scope: !10746, file: !365, line: 694, column: 3)
!10746 = distinct !DILexicalBlock(scope: !10699, file: !365, line: 693, column: 3)
!10747 = !DILocation(line: 692, column: 3, scope: !10745)
!10748 = !DILocation(line: 693, column: 3, scope: !10699)
!10749 = distinct !DISubprogram(name: "op_rr", scope: !365, file: !365, line: 750, type: !501, scopeLine: 751, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !666)
!10750 = !DILocalVariable(name: "op", arg: 1, scope: !10749, file: !365, line: 750, type: !83)
!10751 = !DILocation(line: 0, scope: !10749)
!10752 = !DILocalVariable(name: "oi", arg: 2, scope: !10749, file: !365, line: 750, type: !503)
!10753 = !DILocation(line: 752, column: 20, scope: !10754)
!10754 = distinct !DILexicalBlock(scope: !10749, file: !365, line: 757, column: 3)
!10755 = !DILocation(line: 752, column: 9, scope: !10754)
!10756 = !DILocalVariable(name: "reg", scope: !10749, file: !365, line: 752, type: !15)
!10757 = !DILocation(line: 755, column: 3, scope: !10758)
!10758 = distinct !DILexicalBlock(scope: !10759, file: !365, line: 754, column: 3)
!10759 = distinct !DILexicalBlock(scope: !10754, file: !365, line: 753, column: 3)
!10760 = !DILocation(line: 755, column: 13, scope: !10758)
!10761 = !DILocation(line: 755, column: 5, scope: !10762)
!10762 = distinct !DILexicalBlock(scope: !10758, file: !365, line: 755, column: 13)
!10763 = !DILocation(line: 758, column: 3, scope: !10758)
!10764 = !DILocation(line: 756, column: 3, scope: !10765)
!10765 = distinct !DILexicalBlock(scope: !10766, file: !365, line: 762, column: 3)
!10766 = distinct !DILexicalBlock(scope: !10754, file: !365, line: 761, column: 3)
!10767 = !DILocation(line: 757, column: 9, scope: !10768)
!10768 = distinct !DILexicalBlock(scope: !10766, file: !365, line: 758, column: 3)
!10769 = !DILocalVariable(name: "tmp", scope: !10749, file: !365, line: 755, type: !83)
!10770 = !DILocation(line: 757, column: 9, scope: !10766)
!10771 = !DILocalVariable(name: "val", scope: !10749, file: !365, line: 754, type: !87)
!10772 = !DILocalVariable(name: "res", scope: !10749, file: !365, line: 753, type: !87)
!10773 = !DILocation(line: 758, column: 20, scope: !10766)
!10774 = !DILocation(line: 758, column: 30, scope: !10766)
!10775 = !DILocation(line: 758, column: 9, scope: !10766)
!10776 = !DILocation(line: 759, column: 20, scope: !10766)
!10777 = !DILocation(line: 759, column: 54, scope: !10766)
!10778 = !DILocation(line: 759, column: 34, scope: !10766)
!10779 = !DILocation(line: 759, column: 56, scope: !10766)
!10780 = !DILocation(line: 759, column: 62, scope: !10766)
!10781 = !DILocation(line: 759, column: 30, scope: !10766)
!10782 = !DILocation(line: 759, column: 9, scope: !10766)
!10783 = !DILocation(line: 760, column: 33, scope: !10766)
!10784 = !DILocation(line: 760, column: 43, scope: !10766)
!10785 = !DILocation(line: 760, column: 48, scope: !10766)
!10786 = !DILocation(line: 760, column: 21, scope: !10766)
!10787 = !DILocation(line: 760, column: 19, scope: !10766)
!10788 = !DILocation(line: 761, column: 7, scope: !10789)
!10789 = distinct !DILexicalBlock(scope: !10754, file: !365, line: 761, column: 7)
!10790 = !DILocation(line: 761, column: 17, scope: !10789)
!10791 = !DILocation(line: 761, column: 7, scope: !10754)
!10792 = !DILocation(line: 761, column: 54, scope: !10793)
!10793 = distinct !DILexicalBlock(scope: !10789, file: !365, line: 761, column: 23)
!10794 = !DILocation(line: 761, column: 34, scope: !10793)
!10795 = !DILocation(line: 761, column: 56, scope: !10793)
!10796 = !DILocation(line: 761, column: 23, scope: !10793)
!10797 = !DILocation(line: 761, column: 21, scope: !10793)
!10798 = !DILocation(line: 762, column: 3, scope: !10793)
!10799 = !DILocation(line: 762, column: 16, scope: !10800)
!10800 = distinct !DILexicalBlock(scope: !10801, file: !365, line: 764, column: 3)
!10801 = distinct !DILexicalBlock(scope: !10754, file: !365, line: 763, column: 3)
!10802 = !DILocation(line: 762, column: 3, scope: !10800)
!10803 = !DILocation(line: 763, column: 3, scope: !10754)
!10804 = distinct !DISubprogram(name: "op_sla", scope: !365, file: !365, line: 736, type: !501, scopeLine: 737, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !666)
!10805 = !DILocalVariable(name: "op", arg: 1, scope: !10804, file: !365, line: 736, type: !83)
!10806 = !DILocation(line: 0, scope: !10804)
!10807 = !DILocalVariable(name: "oi", arg: 2, scope: !10804, file: !365, line: 736, type: !503)
!10808 = !DILocation(line: 738, column: 20, scope: !10809)
!10809 = distinct !DILexicalBlock(scope: !10804, file: !365, line: 743, column: 3)
!10810 = !DILocation(line: 738, column: 9, scope: !10809)
!10811 = !DILocalVariable(name: "reg", scope: !10804, file: !365, line: 738, type: !15)
!10812 = !DILocation(line: 741, column: 3, scope: !10813)
!10813 = distinct !DILexicalBlock(scope: !10814, file: !365, line: 740, column: 3)
!10814 = distinct !DILexicalBlock(scope: !10809, file: !365, line: 739, column: 3)
!10815 = !DILocation(line: 741, column: 13, scope: !10813)
!10816 = !DILocation(line: 741, column: 5, scope: !10817)
!10817 = distinct !DILexicalBlock(scope: !10813, file: !365, line: 741, column: 13)
!10818 = !DILocation(line: 744, column: 3, scope: !10813)
!10819 = !DILocation(line: 742, column: 3, scope: !10820)
!10820 = distinct !DILexicalBlock(scope: !10821, file: !365, line: 748, column: 3)
!10821 = distinct !DILexicalBlock(scope: !10809, file: !365, line: 747, column: 3)
!10822 = !DILocation(line: 743, column: 9, scope: !10823)
!10823 = distinct !DILexicalBlock(scope: !10821, file: !365, line: 744, column: 3)
!10824 = !DILocalVariable(name: "tmp", scope: !10804, file: !365, line: 741, type: !83)
!10825 = !DILocation(line: 743, column: 9, scope: !10821)
!10826 = !DILocalVariable(name: "val", scope: !10804, file: !365, line: 740, type: !87)
!10827 = !DILocalVariable(name: "res", scope: !10804, file: !365, line: 739, type: !87)
!10828 = !DILocation(line: 744, column: 20, scope: !10821)
!10829 = !DILocation(line: 744, column: 30, scope: !10821)
!10830 = !DILocation(line: 744, column: 9, scope: !10821)
!10831 = !DILocation(line: 745, column: 33, scope: !10821)
!10832 = !DILocation(line: 745, column: 43, scope: !10821)
!10833 = !DILocation(line: 745, column: 49, scope: !10821)
!10834 = !DILocation(line: 745, column: 21, scope: !10821)
!10835 = !DILocation(line: 745, column: 19, scope: !10821)
!10836 = !DILocation(line: 746, column: 7, scope: !10837)
!10837 = distinct !DILexicalBlock(scope: !10809, file: !365, line: 746, column: 7)
!10838 = !DILocation(line: 746, column: 17, scope: !10837)
!10839 = !DILocation(line: 746, column: 7, scope: !10809)
!10840 = !DILocation(line: 746, column: 54, scope: !10841)
!10841 = distinct !DILexicalBlock(scope: !10837, file: !365, line: 746, column: 23)
!10842 = !DILocation(line: 746, column: 34, scope: !10841)
!10843 = !DILocation(line: 746, column: 56, scope: !10841)
!10844 = !DILocation(line: 746, column: 23, scope: !10841)
!10845 = !DILocation(line: 746, column: 21, scope: !10841)
!10846 = !DILocation(line: 747, column: 3, scope: !10841)
!10847 = !DILocation(line: 747, column: 16, scope: !10848)
!10848 = distinct !DILexicalBlock(scope: !10849, file: !365, line: 749, column: 3)
!10849 = distinct !DILexicalBlock(scope: !10809, file: !365, line: 748, column: 3)
!10850 = !DILocation(line: 747, column: 3, scope: !10848)
!10851 = !DILocation(line: 748, column: 3, scope: !10809)
!10852 = distinct !DISubprogram(name: "op_sra", scope: !365, file: !365, line: 806, type: !501, scopeLine: 807, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !666)
!10853 = !DILocalVariable(name: "op", arg: 1, scope: !10852, file: !365, line: 806, type: !83)
!10854 = !DILocation(line: 0, scope: !10852)
!10855 = !DILocalVariable(name: "oi", arg: 2, scope: !10852, file: !365, line: 806, type: !503)
!10856 = !DILocation(line: 808, column: 20, scope: !10857)
!10857 = distinct !DILexicalBlock(scope: !10852, file: !365, line: 813, column: 3)
!10858 = !DILocation(line: 808, column: 9, scope: !10857)
!10859 = !DILocalVariable(name: "reg", scope: !10852, file: !365, line: 808, type: !15)
!10860 = !DILocation(line: 811, column: 3, scope: !10861)
!10861 = distinct !DILexicalBlock(scope: !10862, file: !365, line: 810, column: 3)
!10862 = distinct !DILexicalBlock(scope: !10857, file: !365, line: 809, column: 3)
!10863 = !DILocation(line: 811, column: 13, scope: !10861)
!10864 = !DILocation(line: 811, column: 5, scope: !10865)
!10865 = distinct !DILexicalBlock(scope: !10861, file: !365, line: 811, column: 13)
!10866 = !DILocation(line: 814, column: 3, scope: !10861)
!10867 = !DILocation(line: 812, column: 3, scope: !10868)
!10868 = distinct !DILexicalBlock(scope: !10869, file: !365, line: 818, column: 3)
!10869 = distinct !DILexicalBlock(scope: !10857, file: !365, line: 817, column: 3)
!10870 = !DILocation(line: 813, column: 9, scope: !10871)
!10871 = distinct !DILexicalBlock(scope: !10869, file: !365, line: 814, column: 3)
!10872 = !DILocalVariable(name: "tmp", scope: !10852, file: !365, line: 811, type: !83)
!10873 = !DILocation(line: 813, column: 9, scope: !10869)
!10874 = !DILocalVariable(name: "val", scope: !10852, file: !365, line: 810, type: !87)
!10875 = !DILocalVariable(name: "res", scope: !10852, file: !365, line: 809, type: !87)
!10876 = !DILocation(line: 814, column: 20, scope: !10869)
!10877 = !DILocation(line: 814, column: 30, scope: !10869)
!10878 = !DILocation(line: 814, column: 9, scope: !10869)
!10879 = !DILocation(line: 815, column: 20, scope: !10869)
!10880 = !DILocation(line: 815, column: 33, scope: !10869)
!10881 = !DILocation(line: 815, column: 43, scope: !10869)
!10882 = !DILocation(line: 815, column: 30, scope: !10869)
!10883 = !DILocation(line: 815, column: 9, scope: !10869)
!10884 = !DILocation(line: 816, column: 33, scope: !10869)
!10885 = !DILocation(line: 816, column: 43, scope: !10869)
!10886 = !DILocation(line: 816, column: 48, scope: !10869)
!10887 = !DILocation(line: 816, column: 21, scope: !10869)
!10888 = !DILocation(line: 816, column: 19, scope: !10869)
!10889 = !DILocation(line: 817, column: 7, scope: !10890)
!10890 = distinct !DILexicalBlock(scope: !10857, file: !365, line: 817, column: 7)
!10891 = !DILocation(line: 817, column: 17, scope: !10890)
!10892 = !DILocation(line: 817, column: 7, scope: !10857)
!10893 = !DILocation(line: 817, column: 54, scope: !10894)
!10894 = distinct !DILexicalBlock(scope: !10890, file: !365, line: 817, column: 23)
!10895 = !DILocation(line: 817, column: 34, scope: !10894)
!10896 = !DILocation(line: 817, column: 56, scope: !10894)
!10897 = !DILocation(line: 817, column: 23, scope: !10894)
!10898 = !DILocation(line: 817, column: 21, scope: !10894)
!10899 = !DILocation(line: 818, column: 3, scope: !10894)
!10900 = !DILocation(line: 818, column: 16, scope: !10901)
!10901 = distinct !DILexicalBlock(scope: !10902, file: !365, line: 820, column: 3)
!10902 = distinct !DILexicalBlock(scope: !10857, file: !365, line: 819, column: 3)
!10903 = !DILocation(line: 818, column: 3, scope: !10901)
!10904 = !DILocation(line: 819, column: 3, scope: !10857)
!10905 = distinct !DISubprogram(name: "op_swap", scope: !365, file: !365, line: 835, type: !501, scopeLine: 836, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !666)
!10906 = !DILocalVariable(name: "op", arg: 1, scope: !10905, file: !365, line: 835, type: !83)
!10907 = !DILocation(line: 0, scope: !10905)
!10908 = !DILocalVariable(name: "oi", arg: 2, scope: !10905, file: !365, line: 835, type: !503)
!10909 = !DILocation(line: 837, column: 20, scope: !10910)
!10910 = distinct !DILexicalBlock(scope: !10905, file: !365, line: 841, column: 3)
!10911 = !DILocation(line: 837, column: 9, scope: !10910)
!10912 = !DILocalVariable(name: "reg", scope: !10905, file: !365, line: 837, type: !15)
!10913 = !DILocation(line: 841, column: 3, scope: !10914)
!10914 = distinct !DILexicalBlock(scope: !10915, file: !365, line: 839, column: 3)
!10915 = distinct !DILexicalBlock(scope: !10910, file: !365, line: 838, column: 3)
!10916 = !DILocation(line: 841, column: 13, scope: !10914)
!10917 = !DILocation(line: 841, column: 5, scope: !10918)
!10918 = distinct !DILexicalBlock(scope: !10914, file: !365, line: 841, column: 13)
!10919 = !DILocation(line: 844, column: 3, scope: !10914)
!10920 = !DILocation(line: 842, column: 3, scope: !10921)
!10921 = distinct !DILexicalBlock(scope: !10922, file: !365, line: 848, column: 3)
!10922 = distinct !DILexicalBlock(scope: !10910, file: !365, line: 847, column: 3)
!10923 = !DILocation(line: 843, column: 9, scope: !10924)
!10924 = distinct !DILexicalBlock(scope: !10922, file: !365, line: 844, column: 3)
!10925 = !DILocalVariable(name: "val", scope: !10905, file: !365, line: 839, type: !83)
!10926 = !DILocation(line: 844, column: 14, scope: !10922)
!10927 = !DILocation(line: 844, column: 27, scope: !10922)
!10928 = !DILocation(line: 844, column: 20, scope: !10922)
!10929 = !DILocalVariable(name: "res", scope: !10905, file: !365, line: 838, type: !83)
!10930 = !DILocation(line: 846, column: 19, scope: !10922)
!10931 = !DILocation(line: 847, column: 11, scope: !10932)
!10932 = distinct !DILexicalBlock(scope: !10910, file: !365, line: 847, column: 7)
!10933 = !DILocation(line: 847, column: 7, scope: !10910)
!10934 = !DILocation(line: 847, column: 54, scope: !10935)
!10935 = distinct !DILexicalBlock(scope: !10932, file: !365, line: 847, column: 18)
!10936 = !DILocation(line: 847, column: 34, scope: !10935)
!10937 = !DILocation(line: 847, column: 56, scope: !10935)
!10938 = !DILocation(line: 847, column: 23, scope: !10935)
!10939 = !DILocation(line: 847, column: 21, scope: !10935)
!10940 = !DILocation(line: 848, column: 3, scope: !10935)
!10941 = !DILocation(line: 848, column: 3, scope: !10942)
!10942 = distinct !DILexicalBlock(scope: !10943, file: !365, line: 850, column: 3)
!10943 = distinct !DILexicalBlock(scope: !10910, file: !365, line: 849, column: 3)
!10944 = !DILocation(line: 849, column: 3, scope: !10910)
!10945 = distinct !DISubprogram(name: "op_srl", scope: !365, file: !365, line: 821, type: !501, scopeLine: 822, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !666)
!10946 = !DILocalVariable(name: "op", arg: 1, scope: !10945, file: !365, line: 821, type: !83)
!10947 = !DILocation(line: 0, scope: !10945)
!10948 = !DILocalVariable(name: "oi", arg: 2, scope: !10945, file: !365, line: 821, type: !503)
!10949 = !DILocation(line: 823, column: 20, scope: !10950)
!10950 = distinct !DILexicalBlock(scope: !10945, file: !365, line: 828, column: 3)
!10951 = !DILocation(line: 823, column: 9, scope: !10950)
!10952 = !DILocalVariable(name: "reg", scope: !10945, file: !365, line: 823, type: !15)
!10953 = !DILocation(line: 826, column: 3, scope: !10954)
!10954 = distinct !DILexicalBlock(scope: !10955, file: !365, line: 825, column: 3)
!10955 = distinct !DILexicalBlock(scope: !10950, file: !365, line: 824, column: 3)
!10956 = !DILocation(line: 826, column: 13, scope: !10954)
!10957 = !DILocation(line: 826, column: 5, scope: !10958)
!10958 = distinct !DILexicalBlock(scope: !10954, file: !365, line: 826, column: 13)
!10959 = !DILocation(line: 829, column: 3, scope: !10954)
!10960 = !DILocation(line: 827, column: 3, scope: !10961)
!10961 = distinct !DILexicalBlock(scope: !10962, file: !365, line: 833, column: 3)
!10962 = distinct !DILexicalBlock(scope: !10950, file: !365, line: 832, column: 3)
!10963 = !DILocation(line: 828, column: 9, scope: !10964)
!10964 = distinct !DILexicalBlock(scope: !10962, file: !365, line: 829, column: 3)
!10965 = !DILocalVariable(name: "tmp", scope: !10945, file: !365, line: 826, type: !83)
!10966 = !DILocation(line: 828, column: 9, scope: !10962)
!10967 = !DILocalVariable(name: "val", scope: !10945, file: !365, line: 825, type: !87)
!10968 = !DILocalVariable(name: "res", scope: !10945, file: !365, line: 824, type: !87)
!10969 = !DILocation(line: 829, column: 20, scope: !10962)
!10970 = !DILocation(line: 829, column: 30, scope: !10962)
!10971 = !DILocation(line: 829, column: 9, scope: !10962)
!10972 = !DILocation(line: 830, column: 33, scope: !10962)
!10973 = !DILocation(line: 830, column: 43, scope: !10962)
!10974 = !DILocation(line: 830, column: 48, scope: !10962)
!10975 = !DILocation(line: 830, column: 21, scope: !10962)
!10976 = !DILocation(line: 830, column: 19, scope: !10962)
!10977 = !DILocation(line: 831, column: 7, scope: !10978)
!10978 = distinct !DILexicalBlock(scope: !10950, file: !365, line: 831, column: 7)
!10979 = !DILocation(line: 831, column: 17, scope: !10978)
!10980 = !DILocation(line: 831, column: 7, scope: !10950)
!10981 = !DILocation(line: 831, column: 54, scope: !10982)
!10982 = distinct !DILexicalBlock(scope: !10978, file: !365, line: 831, column: 23)
!10983 = !DILocation(line: 831, column: 34, scope: !10982)
!10984 = !DILocation(line: 831, column: 56, scope: !10982)
!10985 = !DILocation(line: 831, column: 23, scope: !10982)
!10986 = !DILocation(line: 831, column: 21, scope: !10982)
!10987 = !DILocation(line: 832, column: 3, scope: !10982)
!10988 = !DILocation(line: 832, column: 16, scope: !10989)
!10989 = distinct !DILexicalBlock(scope: !10990, file: !365, line: 834, column: 3)
!10990 = distinct !DILexicalBlock(scope: !10950, file: !365, line: 833, column: 3)
!10991 = !DILocation(line: 832, column: 3, scope: !10989)
!10992 = !DILocation(line: 833, column: 3, scope: !10950)
!10993 = distinct !DISubprogram(name: "gb_flush_buffer", scope: !311, file: !311, line: 378, type: !272, scopeLine: 379, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !666)
!10994 = !DILocalVariable(name: "__cil_tmp5", scope: !10993, file: !311, line: 384, type: !16)
!10995 = !DILocation(line: 384, column: 9, scope: !10993)
!10996 = !DILocalVariable(name: "__cil_tmp6", scope: !10993, file: !311, line: 385, type: !16)
!10997 = !DILocation(line: 385, column: 9, scope: !10993)
!10998 = !DILocalVariable(name: "__cil_tmp7", scope: !10993, file: !311, line: 386, type: !16)
!10999 = !DILocation(line: 386, column: 9, scope: !10993)
!11000 = !DILocalVariable(name: "__cil_tmp8", scope: !10993, file: !311, line: 387, type: !16)
!11001 = !DILocation(line: 387, column: 9, scope: !10993)
!11002 = !DILocalVariable(name: "__cil_tmp9", scope: !10993, file: !311, line: 388, type: !16)
!11003 = !DILocation(line: 388, column: 9, scope: !10993)
!11004 = !DILocalVariable(name: "__cil_tmp10", scope: !10993, file: !311, line: 389, type: !16)
!11005 = !DILocation(line: 389, column: 9, scope: !10993)
!11006 = !DILocalVariable(name: "__cil_tmp11", scope: !10993, file: !311, line: 390, type: !16)
!11007 = !DILocation(line: 390, column: 9, scope: !10993)
!11008 = !DILocalVariable(name: "__cil_tmp12", scope: !10993, file: !311, line: 391, type: !16)
!11009 = !DILocation(line: 391, column: 9, scope: !10993)
!11010 = !DILocalVariable(name: "__cil_tmp13", scope: !10993, file: !311, line: 392, type: !16)
!11011 = !DILocation(line: 392, column: 9, scope: !10993)
!11012 = !DILocalVariable(name: "__cil_tmp14", scope: !10993, file: !311, line: 393, type: !16)
!11013 = !DILocation(line: 393, column: 9, scope: !10993)
!11014 = !DILocalVariable(name: "__cil_tmp15", scope: !10993, file: !311, line: 394, type: !16)
!11015 = !DILocation(line: 394, column: 9, scope: !10993)
!11016 = !DILocalVariable(name: "__cil_tmp16", scope: !10993, file: !311, line: 395, type: !16)
!11017 = !DILocation(line: 395, column: 9, scope: !10993)
!11018 = !DILocation(line: 384, column: 26, scope: !11019)
!11019 = distinct !DILexicalBlock(scope: !11020, file: !311, line: 384, column: 7)
!11020 = distinct !DILexicalBlock(scope: !10993, file: !311, line: 397, column: 3)
!11021 = !DILocation(line: 384, column: 10, scope: !11019)
!11022 = !DILocation(line: 384, column: 35, scope: !11019)
!11023 = !DILocation(line: 384, column: 7, scope: !11020)
!11024 = !DILocation(line: 384, column: 5, scope: !11025)
!11025 = distinct !DILexicalBlock(scope: !11026, file: !311, line: 386, column: 5)
!11026 = distinct !DILexicalBlock(scope: !11027, file: !311, line: 385, column: 5)
!11027 = distinct !DILexicalBlock(scope: !11019, file: !311, line: 384, column: 68)
!11028 = !DILocation(line: 385, column: 26, scope: !11029)
!11029 = distinct !DILexicalBlock(scope: !11020, file: !311, line: 385, column: 7)
!11030 = !DILocation(line: 385, column: 10, scope: !11029)
!11031 = !DILocation(line: 385, column: 33, scope: !11029)
!11032 = !DILocation(line: 385, column: 7, scope: !11020)
!11033 = !DILocation(line: 385, column: 5, scope: !11034)
!11034 = distinct !DILexicalBlock(scope: !11035, file: !311, line: 387, column: 5)
!11035 = distinct !DILexicalBlock(scope: !11036, file: !311, line: 386, column: 5)
!11036 = distinct !DILexicalBlock(scope: !11029, file: !311, line: 385, column: 66)
!11037 = !DILocation(line: 388, column: 12, scope: !11020)
!11038 = !DILocation(line: 388, column: 22, scope: !11020)
!11039 = !DILocalVariable(name: "l_smpl", scope: !10993, file: !311, line: 382, type: !15)
!11040 = !DILocation(line: 0, scope: !10993)
!11041 = !DILocation(line: 389, column: 12, scope: !11020)
!11042 = !DILocation(line: 389, column: 22, scope: !11020)
!11043 = !DILocalVariable(name: "r_smpl", scope: !10993, file: !311, line: 383, type: !15)
!11044 = !DILocalVariable(name: "i", scope: !10993, file: !311, line: 380, type: !15)
!11045 = !DILocation(line: 390, column: 3, scope: !11046)
!11046 = distinct !DILexicalBlock(scope: !11047, file: !311, line: 392, column: 3)
!11047 = distinct !DILexicalBlock(scope: !11020, file: !311, line: 391, column: 3)
!11048 = !DILocation(line: 0, scope: !11020)
!11049 = !DILocation(line: 390, column: 13, scope: !11046)
!11050 = !DILocation(line: 390, column: 16, scope: !11051)
!11051 = distinct !DILexicalBlock(scope: !11052, file: !311, line: 390, column: 9)
!11052 = distinct !DILexicalBlock(scope: !11046, file: !311, line: 390, column: 13)
!11053 = !DILocation(line: 390, column: 26, scope: !11051)
!11054 = !DILocation(line: 390, column: 14, scope: !11051)
!11055 = !DILocation(line: 390, column: 9, scope: !11052)
!11056 = !DILocation(line: 390, column: 7, scope: !11057)
!11057 = distinct !DILexicalBlock(scope: !11051, file: !311, line: 390, column: 36)
!11058 = !DILocation(line: 391, column: 24, scope: !11052)
!11059 = !DILocation(line: 391, column: 32, scope: !11052)
!11060 = !DILocation(line: 391, column: 41, scope: !11052)
!11061 = !DILocation(line: 391, column: 37, scope: !11052)
!11062 = !DILocation(line: 391, column: 22, scope: !11052)
!11063 = !DILocation(line: 391, column: 15, scope: !11052)
!11064 = !DILocation(line: 391, column: 12, scope: !11052)
!11065 = !DILocation(line: 392, column: 24, scope: !11052)
!11066 = !DILocation(line: 392, column: 32, scope: !11052)
!11067 = !DILocation(line: 392, column: 42, scope: !11052)
!11068 = !DILocation(line: 392, column: 47, scope: !11052)
!11069 = !DILocation(line: 392, column: 37, scope: !11052)
!11070 = !DILocation(line: 392, column: 22, scope: !11052)
!11071 = !DILocation(line: 392, column: 15, scope: !11052)
!11072 = !DILocation(line: 392, column: 12, scope: !11052)
!11073 = !DILocation(line: 393, column: 55, scope: !11052)
!11074 = !DILocation(line: 393, column: 53, scope: !11052)
!11075 = !DILocation(line: 393, column: 70, scope: !11052)
!11076 = !DILocation(line: 393, column: 34, scope: !11052)
!11077 = !DILocation(line: 393, column: 7, scope: !11052)
!11078 = !DILocation(line: 393, column: 17, scope: !11052)
!11079 = !DILocation(line: 393, column: 26, scope: !11052)
!11080 = !DILocation(line: 393, column: 22, scope: !11052)
!11081 = !DILocation(line: 393, column: 32, scope: !11052)
!11082 = !DILocation(line: 394, column: 62, scope: !11052)
!11083 = !DILocation(line: 394, column: 60, scope: !11052)
!11084 = !DILocation(line: 394, column: 77, scope: !11052)
!11085 = !DILocation(line: 394, column: 41, scope: !11052)
!11086 = !DILocation(line: 394, column: 7, scope: !11052)
!11087 = !DILocation(line: 394, column: 17, scope: !11052)
!11088 = !DILocation(line: 394, column: 27, scope: !11052)
!11089 = !DILocation(line: 394, column: 32, scope: !11052)
!11090 = !DILocation(line: 394, column: 22, scope: !11052)
!11091 = !DILocation(line: 394, column: 39, scope: !11052)
!11092 = !DILocation(line: 395, column: 18, scope: !11093)
!11093 = distinct !DILexicalBlock(scope: !11052, file: !311, line: 395, column: 9)
!11094 = !DILocation(line: 395, column: 16, scope: !11093)
!11095 = !DILocation(line: 395, column: 9, scope: !11052)
!11096 = !DILocation(line: 395, column: 15, scope: !11097)
!11097 = distinct !DILexicalBlock(scope: !11093, file: !311, line: 395, column: 27)
!11098 = !DILocation(line: 396, column: 5, scope: !11097)
!11099 = !DILocation(line: 396, column: 18, scope: !11100)
!11100 = distinct !DILexicalBlock(scope: !11052, file: !311, line: 396, column: 9)
!11101 = !DILocation(line: 396, column: 16, scope: !11100)
!11102 = !DILocation(line: 396, column: 9, scope: !11052)
!11103 = !DILocation(line: 396, column: 15, scope: !11104)
!11104 = distinct !DILexicalBlock(scope: !11100, file: !311, line: 396, column: 27)
!11105 = !DILocation(line: 397, column: 5, scope: !11104)
!11106 = !DILocation(line: 397, column: 18, scope: !11107)
!11107 = distinct !DILexicalBlock(scope: !11052, file: !311, line: 397, column: 9)
!11108 = !DILocation(line: 397, column: 16, scope: !11107)
!11109 = !DILocation(line: 397, column: 9, scope: !11052)
!11110 = !DILocation(line: 397, column: 15, scope: !11111)
!11111 = distinct !DILexicalBlock(scope: !11107, file: !311, line: 397, column: 27)
!11112 = !DILocation(line: 398, column: 5, scope: !11111)
!11113 = !DILocation(line: 398, column: 18, scope: !11114)
!11114 = distinct !DILexicalBlock(scope: !11052, file: !311, line: 398, column: 9)
!11115 = !DILocation(line: 398, column: 16, scope: !11114)
!11116 = !DILocation(line: 398, column: 9, scope: !11052)
!11117 = !DILocation(line: 398, column: 15, scope: !11118)
!11118 = distinct !DILexicalBlock(scope: !11114, file: !311, line: 398, column: 27)
!11119 = !DILocation(line: 399, column: 5, scope: !11118)
!11120 = !DILocation(line: 390, column: 7, scope: !11052)
!11121 = distinct !{!11121, !11045, !11122}
!11122 = !DILocation(line: 391, column: 3, scope: !11046)
!11123 = !DILocation(line: 393, column: 3, scope: !11046)
!11124 = !DILocation(line: 400, column: 19, scope: !11020)
!11125 = !DILocation(line: 400, column: 29, scope: !11020)
!11126 = !DILocation(line: 400, column: 3, scope: !11020)
!11127 = !DILocation(line: 400, column: 13, scope: !11020)
!11128 = !DILocation(line: 400, column: 17, scope: !11020)
!11129 = !DILocation(line: 401, column: 3, scope: !11020)
!11130 = !DILocation(line: 401, column: 13, scope: !11020)
!11131 = !DILocation(line: 401, column: 19, scope: !11020)
!11132 = !DILocation(line: 402, column: 3, scope: !11020)
!11133 = !DILocation(line: 402, column: 13, scope: !11020)
!11134 = !DILocation(line: 402, column: 19, scope: !11020)
!11135 = !DILocation(line: 404, column: 23, scope: !11136)
!11136 = distinct !DILexicalBlock(scope: !11020, file: !311, line: 404, column: 7)
!11137 = !DILocation(line: 404, column: 7, scope: !11136)
!11138 = !DILocation(line: 404, column: 32, scope: !11136)
!11139 = !DILocation(line: 404, column: 7, scope: !11020)
!11140 = !DILocation(line: 404, column: 7, scope: !11141)
!11141 = distinct !DILexicalBlock(scope: !11142, file: !311, line: 406, column: 5)
!11142 = distinct !DILexicalBlock(scope: !11143, file: !311, line: 405, column: 5)
!11143 = distinct !DILexicalBlock(scope: !11136, file: !311, line: 404, column: 64)
!11144 = !DILocation(line: 404, column: 17, scope: !11141)
!11145 = !DILocation(line: 404, column: 27, scope: !11141)
!11146 = !DILocation(line: 404, column: 5, scope: !11141)
!11147 = !DILocation(line: 407, column: 3, scope: !11143)
!11148 = !DILocation(line: 406, column: 13, scope: !11149)
!11149 = distinct !DILexicalBlock(scope: !11020, file: !311, line: 408, column: 3)
!11150 = !DILocation(line: 406, column: 21, scope: !11149)
!11151 = !DILocation(line: 406, column: 31, scope: !11149)
!11152 = !DILocation(line: 406, column: 41, scope: !11149)
!11153 = !DILocation(line: 406, column: 29, scope: !11149)
!11154 = !DILocalVariable(name: "overlap", scope: !10993, file: !311, line: 381, type: !15)
!11155 = !DILocation(line: 407, column: 19, scope: !11156)
!11156 = distinct !DILexicalBlock(scope: !11149, file: !311, line: 407, column: 3)
!11157 = !DILocation(line: 407, column: 27, scope: !11156)
!11158 = !DILocation(line: 407, column: 11, scope: !11156)
!11159 = !DILocation(line: 407, column: 50, scope: !11156)
!11160 = !DILocation(line: 407, column: 58, scope: !11156)
!11161 = !DILocation(line: 407, column: 70, scope: !11156)
!11162 = !DILocation(line: 407, column: 80, scope: !11156)
!11163 = !DILocation(line: 407, column: 68, scope: !11156)
!11164 = !DILocation(line: 407, column: 63, scope: !11156)
!11165 = !DILocation(line: 407, column: 33, scope: !11156)
!11166 = !DILocation(line: 408, column: 24, scope: !11156)
!11167 = !DILocation(line: 408, column: 11, scope: !11156)
!11168 = !DILocation(line: 407, column: 3, scope: !11156)
!11169 = !DILocation(line: 408, column: 19, scope: !11170)
!11170 = distinct !DILexicalBlock(scope: !11149, file: !311, line: 410, column: 3)
!11171 = !DILocation(line: 408, column: 27, scope: !11170)
!11172 = !DILocation(line: 408, column: 37, scope: !11170)
!11173 = !DILocation(line: 408, column: 32, scope: !11170)
!11174 = !DILocation(line: 408, column: 10, scope: !11170)
!11175 = !DILocation(line: 408, column: 62, scope: !11170)
!11176 = !DILocation(line: 408, column: 70, scope: !11170)
!11177 = !DILocation(line: 408, column: 81, scope: !11170)
!11178 = !DILocation(line: 408, column: 76, scope: !11170)
!11179 = !DILocation(line: 408, column: 52, scope: !11170)
!11180 = !DILocation(line: 408, column: 3, scope: !11170)
!11181 = !DILocation(line: 409, column: 10, scope: !11182)
!11182 = distinct !DILexicalBlock(scope: !11020, file: !311, line: 409, column: 7)
!11183 = !DILocation(line: 409, column: 18, scope: !11182)
!11184 = !DILocation(line: 409, column: 27, scope: !11182)
!11185 = !DILocation(line: 409, column: 35, scope: !11182)
!11186 = !DILocation(line: 409, column: 43, scope: !11182)
!11187 = !DILocation(line: 409, column: 24, scope: !11182)
!11188 = !DILocation(line: 409, column: 7, scope: !11020)
!11189 = !DILocation(line: 409, column: 5, scope: !11190)
!11190 = distinct !DILexicalBlock(scope: !11191, file: !311, line: 411, column: 5)
!11191 = distinct !DILexicalBlock(scope: !11192, file: !311, line: 410, column: 5)
!11192 = distinct !DILexicalBlock(scope: !11182, file: !311, line: 409, column: 50)
!11193 = !DILocation(line: 410, column: 10, scope: !11194)
!11194 = distinct !DILexicalBlock(scope: !11020, file: !311, line: 410, column: 7)
!11195 = !DILocation(line: 410, column: 20, scope: !11194)
!11196 = !DILocation(line: 410, column: 29, scope: !11194)
!11197 = !DILocation(line: 410, column: 39, scope: !11194)
!11198 = !DILocation(line: 410, column: 47, scope: !11194)
!11199 = !DILocation(line: 410, column: 26, scope: !11194)
!11200 = !DILocation(line: 410, column: 7, scope: !11020)
!11201 = !DILocation(line: 410, column: 5, scope: !11202)
!11202 = distinct !DILexicalBlock(scope: !11203, file: !311, line: 412, column: 5)
!11203 = distinct !DILexicalBlock(scope: !11204, file: !311, line: 411, column: 5)
!11204 = distinct !DILexicalBlock(scope: !11194, file: !311, line: 410, column: 54)
!11205 = !DILocation(line: 411, column: 18, scope: !11206)
!11206 = distinct !DILexicalBlock(scope: !11207, file: !311, line: 416, column: 3)
!11207 = distinct !DILexicalBlock(scope: !11020, file: !311, line: 415, column: 3)
!11208 = !DILocation(line: 411, column: 28, scope: !11206)
!11209 = !DILocation(line: 411, column: 10, scope: !11206)
!11210 = !DILocation(line: 411, column: 46, scope: !11206)
!11211 = !DILocation(line: 411, column: 56, scope: !11206)
!11212 = !DILocation(line: 411, column: 37, scope: !11206)
!11213 = !DILocation(line: 411, column: 3, scope: !11206)
!11214 = !DILocation(line: 412, column: 3, scope: !11207)
!11215 = !DILocation(line: 412, column: 13, scope: !11207)
!11216 = !DILocation(line: 412, column: 17, scope: !11207)
!11217 = !DILocation(line: 414, column: 40, scope: !11207)
!11218 = !DILocation(line: 414, column: 48, scope: !11207)
!11219 = !DILocation(line: 414, column: 58, scope: !11207)
!11220 = !DILocation(line: 414, column: 85, scope: !11207)
!11221 = !DILocation(line: 414, column: 95, scope: !11207)
!11222 = !DILocation(line: 414, column: 71, scope: !11207)
!11223 = !DILocation(line: 414, column: 104, scope: !11207)
!11224 = !DILocation(line: 414, column: 55, scope: !11207)
!11225 = !DILocation(line: 414, column: 3, scope: !11207)
!11226 = !DILocation(line: 414, column: 11, scope: !11207)
!11227 = !DILocation(line: 414, column: 18, scope: !11207)
!11228 = !DILocation(line: 415, column: 3, scope: !11020)
!11229 = distinct !DISubprogram(name: "gb_change_level", scope: !311, file: !311, line: 417, type: !2788, scopeLine: 418, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !666)
!11230 = !DILocalVariable(name: "l_ofs", arg: 1, scope: !11229, file: !311, line: 417, type: !15)
!11231 = !DILocation(line: 0, scope: !11229)
!11232 = !DILocalVariable(name: "r_ofs", arg: 2, scope: !11229, file: !311, line: 417, type: !15)
!11233 = !DILocalVariable(name: "__cil_tmp11", scope: !11229, file: !311, line: 427, type: !16)
!11234 = !DILocation(line: 427, column: 9, scope: !11229)
!11235 = !DILocalVariable(name: "__cil_tmp12", scope: !11229, file: !311, line: 428, type: !16)
!11236 = !DILocation(line: 428, column: 9, scope: !11229)
!11237 = !DILocalVariable(name: "__cil_tmp13", scope: !11229, file: !311, line: 429, type: !16)
!11238 = !DILocation(line: 429, column: 9, scope: !11229)
!11239 = !DILocalVariable(name: "__cil_tmp14", scope: !11229, file: !311, line: 430, type: !16)
!11240 = !DILocation(line: 430, column: 9, scope: !11229)
!11241 = !DILocalVariable(name: "__cil_tmp15", scope: !11229, file: !311, line: 431, type: !16)
!11242 = !DILocation(line: 431, column: 9, scope: !11229)
!11243 = !DILocalVariable(name: "__cil_tmp16", scope: !11229, file: !311, line: 432, type: !16)
!11244 = !DILocation(line: 432, column: 9, scope: !11229)
!11245 = !DILocalVariable(name: "__cil_tmp17", scope: !11229, file: !311, line: 433, type: !16)
!11246 = !DILocation(line: 433, column: 9, scope: !11229)
!11247 = !DILocalVariable(name: "__cil_tmp18", scope: !11229, file: !311, line: 434, type: !16)
!11248 = !DILocation(line: 434, column: 9, scope: !11229)
!11249 = !DILocalVariable(name: "__cil_tmp19", scope: !11229, file: !311, line: 435, type: !16)
!11250 = !DILocation(line: 435, column: 9, scope: !11229)
!11251 = !DILocation(line: 421, column: 27, scope: !11252)
!11252 = distinct !DILexicalBlock(scope: !11229, file: !311, line: 437, column: 3)
!11253 = !DILocation(line: 421, column: 24, scope: !11252)
!11254 = !DILocation(line: 421, column: 19, scope: !11252)
!11255 = !DILocation(line: 421, column: 44, scope: !11252)
!11256 = !DILocation(line: 421, column: 11, scope: !11252)
!11257 = !DILocalVariable(name: "imp_l", scope: !11229, file: !311, line: 421, type: !15)
!11258 = !DILocation(line: 422, column: 25, scope: !11252)
!11259 = !DILocation(line: 422, column: 22, scope: !11252)
!11260 = !DILocation(line: 422, column: 42, scope: !11252)
!11261 = !DILocation(line: 422, column: 11, scope: !11252)
!11262 = !DILocalVariable(name: "imp_r", scope: !11229, file: !311, line: 422, type: !15)
!11263 = !DILocation(line: 424, column: 9, scope: !11252)
!11264 = !DILocalVariable(name: "ptr", scope: !11229, file: !311, line: 424, type: !89)
!11265 = !DILocation(line: 426, column: 26, scope: !11266)
!11266 = distinct !DILexicalBlock(scope: !11252, file: !311, line: 426, column: 7)
!11267 = !DILocation(line: 426, column: 10, scope: !11266)
!11268 = !DILocation(line: 426, column: 33, scope: !11266)
!11269 = !DILocation(line: 426, column: 7, scope: !11252)
!11270 = !DILocation(line: 426, column: 5, scope: !11271)
!11271 = distinct !DILexicalBlock(scope: !11272, file: !311, line: 428, column: 5)
!11272 = distinct !DILexicalBlock(scope: !11273, file: !311, line: 427, column: 5)
!11273 = distinct !DILexicalBlock(scope: !11266, file: !311, line: 426, column: 66)
!11274 = !DILocation(line: 427, column: 30, scope: !11252)
!11275 = !DILocation(line: 427, column: 38, scope: !11252)
!11276 = !DILocation(line: 427, column: 45, scope: !11252)
!11277 = !DILocation(line: 427, column: 58, scope: !11252)
!11278 = !DILocation(line: 427, column: 56, scope: !11252)
!11279 = !DILocalVariable(name: "pos", scope: !11229, file: !311, line: 419, type: !15)
!11280 = !DILocation(line: 428, column: 35, scope: !11252)
!11281 = !DILocation(line: 428, column: 43, scope: !11252)
!11282 = !DILocation(line: 428, column: 53, scope: !11252)
!11283 = !DILocation(line: 428, column: 50, scope: !11252)
!11284 = !DILocation(line: 428, column: 70, scope: !11252)
!11285 = !DILocation(line: 428, column: 83, scope: !11252)
!11286 = !DILocation(line: 428, column: 81, scope: !11252)
!11287 = !DILocation(line: 428, column: 113, scope: !11252)
!11288 = !DILocation(line: 428, column: 110, scope: !11252)
!11289 = !DILocation(line: 428, column: 130, scope: !11252)
!11290 = !DILocation(line: 428, column: 99, scope: !11252)
!11291 = !DILocation(line: 428, column: 97, scope: !11252)
!11292 = !DILocalVariable(name: "imp_idx", scope: !11229, file: !311, line: 420, type: !15)
!11293 = !DILocation(line: 429, column: 14, scope: !11294)
!11294 = distinct !DILexicalBlock(scope: !11252, file: !311, line: 429, column: 7)
!11295 = !DILocation(line: 429, column: 24, scope: !11294)
!11296 = !DILocation(line: 429, column: 32, scope: !11294)
!11297 = !DILocation(line: 429, column: 22, scope: !11294)
!11298 = !DILocation(line: 429, column: 7, scope: !11252)
!11299 = !DILocation(line: 429, column: 5, scope: !11300)
!11300 = distinct !DILexicalBlock(scope: !11301, file: !311, line: 431, column: 5)
!11301 = distinct !DILexicalBlock(scope: !11302, file: !311, line: 430, column: 5)
!11302 = distinct !DILexicalBlock(scope: !11294, file: !311, line: 429, column: 42)
!11303 = !DILocation(line: 430, column: 14, scope: !11304)
!11304 = distinct !DILexicalBlock(scope: !11252, file: !311, line: 430, column: 7)
!11305 = !DILocation(line: 430, column: 22, scope: !11304)
!11306 = !DILocation(line: 430, column: 7, scope: !11252)
!11307 = !DILocation(line: 430, column: 5, scope: !11308)
!11308 = distinct !DILexicalBlock(scope: !11309, file: !311, line: 432, column: 5)
!11309 = distinct !DILexicalBlock(scope: !11310, file: !311, line: 431, column: 5)
!11310 = distinct !DILexicalBlock(scope: !11304, file: !311, line: 430, column: 30)
!11311 = !DILocation(line: 432, column: 33, scope: !11252)
!11312 = !DILocation(line: 432, column: 30, scope: !11252)
!11313 = !DILocation(line: 432, column: 20, scope: !11252)
!11314 = !DILocation(line: 432, column: 18, scope: !11252)
!11315 = !DILocation(line: 432, column: 7, scope: !11252)
!11316 = !DILocalVariable(name: "i", scope: !11229, file: !311, line: 423, type: !15)
!11317 = !DILocation(line: 434, column: 3, scope: !11318)
!11318 = distinct !DILexicalBlock(scope: !11319, file: !311, line: 436, column: 3)
!11319 = distinct !DILexicalBlock(scope: !11252, file: !311, line: 435, column: 3)
!11320 = !DILocation(line: 0, scope: !11252)
!11321 = !DILocation(line: 434, column: 13, scope: !11318)
!11322 = !DILocation(line: 434, column: 14, scope: !11323)
!11323 = distinct !DILexicalBlock(scope: !11324, file: !311, line: 434, column: 9)
!11324 = distinct !DILexicalBlock(scope: !11318, file: !311, line: 434, column: 13)
!11325 = !DILocation(line: 434, column: 9, scope: !11324)
!11326 = !DILocation(line: 434, column: 7, scope: !11327)
!11327 = distinct !DILexicalBlock(scope: !11323, file: !311, line: 434, column: 24)
!11328 = !DILocation(line: 435, column: 16, scope: !11324)
!11329 = !DILocalVariable(name: "bufi", scope: !11229, file: !311, line: 425, type: !15)
!11330 = !DILocation(line: 436, column: 30, scope: !11324)
!11331 = !DILocation(line: 436, column: 27, scope: !11324)
!11332 = !DILocation(line: 436, column: 47, scope: !11324)
!11333 = !DILocation(line: 436, column: 16, scope: !11324)
!11334 = !DILocation(line: 436, column: 14, scope: !11324)
!11335 = !DILocalVariable(name: "impi", scope: !11229, file: !311, line: 426, type: !15)
!11336 = !DILocation(line: 437, column: 55, scope: !11324)
!11337 = !DILocation(line: 437, column: 63, scope: !11324)
!11338 = !DILocation(line: 437, column: 75, scope: !11324)
!11339 = !DILocation(line: 437, column: 68, scope: !11324)
!11340 = !DILocation(line: 437, column: 53, scope: !11324)
!11341 = !DILocation(line: 437, column: 46, scope: !11324)
!11342 = !DILocation(line: 437, column: 96, scope: !11324)
!11343 = !DILocation(line: 437, column: 90, scope: !11324)
!11344 = !DILocation(line: 437, column: 83, scope: !11324)
!11345 = !DILocation(line: 437, column: 104, scope: !11324)
!11346 = !DILocation(line: 437, column: 81, scope: !11324)
!11347 = !DILocation(line: 437, column: 35, scope: !11324)
!11348 = !DILocation(line: 437, column: 7, scope: !11324)
!11349 = !DILocation(line: 437, column: 15, scope: !11324)
!11350 = !DILocation(line: 437, column: 27, scope: !11324)
!11351 = !DILocation(line: 437, column: 20, scope: !11324)
!11352 = !DILocation(line: 437, column: 33, scope: !11324)
!11353 = !DILocation(line: 438, column: 62, scope: !11324)
!11354 = !DILocation(line: 438, column: 70, scope: !11324)
!11355 = !DILocation(line: 438, column: 83, scope: !11324)
!11356 = !DILocation(line: 438, column: 88, scope: !11324)
!11357 = !DILocation(line: 438, column: 75, scope: !11324)
!11358 = !DILocation(line: 438, column: 60, scope: !11324)
!11359 = !DILocation(line: 438, column: 53, scope: !11324)
!11360 = !DILocation(line: 438, column: 110, scope: !11324)
!11361 = !DILocation(line: 438, column: 104, scope: !11324)
!11362 = !DILocation(line: 438, column: 97, scope: !11324)
!11363 = !DILocation(line: 438, column: 118, scope: !11324)
!11364 = !DILocation(line: 438, column: 95, scope: !11324)
!11365 = !DILocation(line: 438, column: 42, scope: !11324)
!11366 = !DILocation(line: 438, column: 7, scope: !11324)
!11367 = !DILocation(line: 438, column: 15, scope: !11324)
!11368 = !DILocation(line: 438, column: 28, scope: !11324)
!11369 = !DILocation(line: 438, column: 33, scope: !11324)
!11370 = !DILocation(line: 438, column: 20, scope: !11324)
!11371 = !DILocation(line: 438, column: 40, scope: !11324)
!11372 = !DILocation(line: 434, column: 7, scope: !11324)
!11373 = distinct !{!11373, !11317, !11374}
!11374 = !DILocation(line: 435, column: 3, scope: !11318)
!11375 = !DILocation(line: 437, column: 3, scope: !11318)
!11376 = !DILocation(line: 441, column: 26, scope: !11252)
!11377 = !DILocation(line: 441, column: 3, scope: !11252)
!11378 = !DILocation(line: 441, column: 11, scope: !11252)
!11379 = !DILocation(line: 441, column: 17, scope: !11252)
!11380 = !DILocation(line: 442, column: 26, scope: !11252)
!11381 = !DILocation(line: 442, column: 3, scope: !11252)
!11382 = !DILocation(line: 442, column: 11, scope: !11252)
!11383 = !DILocation(line: 442, column: 17, scope: !11252)
!11384 = !DILocation(line: 443, column: 3, scope: !11252)
!11385 = distinct !DISubprogram(name: "gb_sound_sweep", scope: !311, file: !311, line: 310, type: !272, scopeLine: 311, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !666)
!11386 = !DILocation(line: 314, column: 18, scope: !11387)
!11387 = distinct !DILexicalBlock(scope: !11388, file: !311, line: 314, column: 7)
!11388 = distinct !DILexicalBlock(scope: !11385, file: !311, line: 315, column: 3)
!11389 = !DILocation(line: 314, column: 7, scope: !11387)
!11390 = !DILocation(line: 314, column: 7, scope: !11388)
!11391 = !DILocation(line: 315, column: 28, scope: !11392)
!11392 = distinct !DILexicalBlock(scope: !11387, file: !311, line: 314, column: 28)
!11393 = !DILocation(line: 316, column: 20, scope: !11394)
!11394 = distinct !DILexicalBlock(scope: !11392, file: !311, line: 316, column: 9)
!11395 = !DILocation(line: 316, column: 30, scope: !11394)
!11396 = !DILocation(line: 316, column: 9, scope: !11392)
!11397 = !DILocation(line: 317, column: 24, scope: !11398)
!11398 = distinct !DILexicalBlock(scope: !11394, file: !311, line: 316, column: 36)
!11399 = !DILocation(line: 317, column: 45, scope: !11398)
!11400 = !DILocation(line: 317, column: 31, scope: !11398)
!11401 = !DILocalVariable(name: "val", scope: !11385, file: !311, line: 313, type: !15)
!11402 = !DILocation(line: 0, scope: !11385)
!11403 = !DILocation(line: 319, column: 41, scope: !11398)
!11404 = !DILocation(line: 319, column: 28, scope: !11398)
!11405 = !DILocation(line: 320, column: 22, scope: !11406)
!11406 = distinct !DILexicalBlock(scope: !11398, file: !311, line: 320, column: 11)
!11407 = !DILocation(line: 320, column: 11, scope: !11406)
!11408 = !DILocation(line: 320, column: 11, scope: !11398)
!11409 = !DILocation(line: 321, column: 24, scope: !11410)
!11410 = distinct !DILexicalBlock(scope: !11411, file: !311, line: 321, column: 13)
!11411 = distinct !DILexicalBlock(scope: !11406, file: !311, line: 320, column: 33)
!11412 = !DILocation(line: 321, column: 39, scope: !11410)
!11413 = !DILocation(line: 321, column: 31, scope: !11410)
!11414 = !DILocation(line: 321, column: 13, scope: !11411)
!11415 = !DILocation(line: 321, column: 29, scope: !11416)
!11416 = distinct !DILexicalBlock(scope: !11410, file: !311, line: 321, column: 46)
!11417 = !DILocation(line: 322, column: 9, scope: !11416)
!11418 = !DILocation(line: 323, column: 7, scope: !11411)
!11419 = !DILocation(line: 323, column: 22, scope: !11420)
!11420 = distinct !DILexicalBlock(scope: !11406, file: !311, line: 323, column: 11)
!11421 = !DILocation(line: 323, column: 29, scope: !11420)
!11422 = !DILocation(line: 323, column: 11, scope: !11406)
!11423 = !DILocation(line: 323, column: 27, scope: !11424)
!11424 = distinct !DILexicalBlock(scope: !11420, file: !311, line: 323, column: 36)
!11425 = !DILocation(line: 324, column: 7, scope: !11424)
!11426 = !DILocation(line: 325, column: 40, scope: !11398)
!11427 = !DILocation(line: 325, column: 60, scope: !11398)
!11428 = !DILocation(line: 325, column: 47, scope: !11398)
!11429 = !DILocation(line: 325, column: 70, scope: !11398)
!11430 = !DILocation(line: 325, column: 26, scope: !11398)
!11431 = !DILocation(line: 326, column: 5, scope: !11398)
!11432 = !DILocation(line: 327, column: 3, scope: !11392)
!11433 = !DILocalVariable(name: "i", scope: !11385, file: !311, line: 312, type: !15)
!11434 = !DILocation(line: 328, column: 3, scope: !11435)
!11435 = distinct !DILexicalBlock(scope: !11436, file: !311, line: 330, column: 3)
!11436 = distinct !DILexicalBlock(scope: !11388, file: !311, line: 329, column: 3)
!11437 = !DILocation(line: 0, scope: !11388)
!11438 = !DILocation(line: 328, column: 13, scope: !11435)
!11439 = !DILocation(line: 328, column: 14, scope: !11440)
!11440 = distinct !DILexicalBlock(scope: !11441, file: !311, line: 328, column: 9)
!11441 = distinct !DILexicalBlock(scope: !11435, file: !311, line: 328, column: 13)
!11442 = !DILocation(line: 328, column: 9, scope: !11441)
!11443 = !DILocation(line: 328, column: 7, scope: !11444)
!11444 = distinct !DILexicalBlock(scope: !11440, file: !311, line: 328, column: 21)
!11445 = !DILocation(line: 329, column: 9, scope: !11446)
!11446 = distinct !DILexicalBlock(scope: !11441, file: !311, line: 329, column: 9)
!11447 = !DILocation(line: 329, column: 20, scope: !11446)
!11448 = !DILocation(line: 329, column: 24, scope: !11446)
!11449 = !DILocation(line: 329, column: 9, scope: !11441)
!11450 = !DILocation(line: 329, column: 11, scope: !11451)
!11451 = distinct !DILexicalBlock(scope: !11452, file: !311, line: 329, column: 11)
!11452 = distinct !DILexicalBlock(scope: !11446, file: !311, line: 329, column: 30)
!11453 = !DILocation(line: 329, column: 22, scope: !11451)
!11454 = !DILocation(line: 329, column: 11, scope: !11452)
!11455 = !DILocation(line: 330, column: 10, scope: !11456)
!11456 = distinct !DILexicalBlock(scope: !11451, file: !311, line: 329, column: 34)
!11457 = !DILocation(line: 330, column: 21, scope: !11456)
!11458 = !DILocation(line: 330, column: 26, scope: !11456)
!11459 = !DILocation(line: 331, column: 13, scope: !11460)
!11460 = distinct !DILexicalBlock(scope: !11456, file: !311, line: 331, column: 13)
!11461 = !DILocation(line: 331, column: 24, scope: !11460)
!11462 = !DILocation(line: 331, column: 28, scope: !11460)
!11463 = !DILocation(line: 331, column: 13, scope: !11456)
!11464 = !DILocation(line: 332, column: 11, scope: !11465)
!11465 = distinct !DILexicalBlock(scope: !11460, file: !311, line: 331, column: 35)
!11466 = !DILocation(line: 332, column: 22, scope: !11465)
!11467 = !DILocation(line: 332, column: 29, scope: !11465)
!11468 = !DILocation(line: 333, column: 11, scope: !11465)
!11469 = !DILocation(line: 333, column: 22, scope: !11465)
!11470 = !DILocation(line: 333, column: 29, scope: !11465)
!11471 = !DILocation(line: 334, column: 9, scope: !11465)
!11472 = !DILocation(line: 335, column: 7, scope: !11456)
!11473 = !DILocation(line: 336, column: 5, scope: !11452)
!11474 = !DILocation(line: 336, column: 9, scope: !11475)
!11475 = distinct !DILexicalBlock(scope: !11441, file: !311, line: 336, column: 9)
!11476 = !DILocation(line: 336, column: 20, scope: !11475)
!11477 = !DILocation(line: 336, column: 9, scope: !11441)
!11478 = !DILocation(line: 337, column: 8, scope: !11479)
!11479 = distinct !DILexicalBlock(scope: !11475, file: !311, line: 336, column: 28)
!11480 = !DILocation(line: 337, column: 19, scope: !11479)
!11481 = !DILocation(line: 337, column: 28, scope: !11479)
!11482 = !DILocation(line: 338, column: 11, scope: !11483)
!11483 = distinct !DILexicalBlock(scope: !11479, file: !311, line: 338, column: 11)
!11484 = !DILocation(line: 338, column: 22, scope: !11483)
!11485 = !DILocation(line: 338, column: 30, scope: !11483)
!11486 = !DILocation(line: 338, column: 11, scope: !11479)
!11487 = !DILocation(line: 339, column: 30, scope: !11488)
!11488 = distinct !DILexicalBlock(scope: !11483, file: !311, line: 338, column: 37)
!11489 = !DILocation(line: 339, column: 41, scope: !11488)
!11490 = !DILocation(line: 339, column: 9, scope: !11488)
!11491 = !DILocation(line: 339, column: 20, scope: !11488)
!11492 = !DILocation(line: 339, column: 28, scope: !11488)
!11493 = !DILocation(line: 340, column: 15, scope: !11494)
!11494 = distinct !DILexicalBlock(scope: !11488, file: !311, line: 340, column: 13)
!11495 = !DILocation(line: 340, column: 26, scope: !11494)
!11496 = !DILocation(line: 340, column: 13, scope: !11488)
!11497 = !DILocation(line: 341, column: 15, scope: !11498)
!11498 = distinct !DILexicalBlock(scope: !11499, file: !311, line: 341, column: 15)
!11499 = distinct !DILexicalBlock(scope: !11494, file: !311, line: 340, column: 35)
!11500 = !DILocation(line: 341, column: 26, scope: !11498)
!11501 = !DILocation(line: 341, column: 33, scope: !11498)
!11502 = !DILocation(line: 341, column: 15, scope: !11499)
!11503 = !DILocation(line: 342, column: 14, scope: !11504)
!11504 = distinct !DILexicalBlock(scope: !11498, file: !311, line: 341, column: 39)
!11505 = !DILocation(line: 342, column: 25, scope: !11504)
!11506 = !DILocation(line: 342, column: 33, scope: !11504)
!11507 = !DILocation(line: 343, column: 11, scope: !11504)
!11508 = !DILocation(line: 344, column: 9, scope: !11499)
!11509 = !DILocation(line: 344, column: 13, scope: !11510)
!11510 = distinct !DILexicalBlock(scope: !11494, file: !311, line: 344, column: 13)
!11511 = !DILocation(line: 344, column: 24, scope: !11510)
!11512 = !DILocation(line: 344, column: 31, scope: !11510)
!11513 = !DILocation(line: 344, column: 13, scope: !11494)
!11514 = !DILocation(line: 345, column: 12, scope: !11515)
!11515 = distinct !DILexicalBlock(scope: !11510, file: !311, line: 344, column: 38)
!11516 = !DILocation(line: 345, column: 23, scope: !11515)
!11517 = !DILocation(line: 345, column: 31, scope: !11515)
!11518 = !DILocation(line: 346, column: 9, scope: !11515)
!11519 = !DILocation(line: 347, column: 7, scope: !11488)
!11520 = !DILocation(line: 348, column: 5, scope: !11479)
!11521 = !DILocation(line: 328, column: 7, scope: !11441)
!11522 = distinct !{!11522, !11434, !11523}
!11523 = !DILocation(line: 329, column: 3, scope: !11435)
!11524 = !DILocation(line: 331, column: 3, scope: !11435)
!11525 = !DILocation(line: 350, column: 7, scope: !11526)
!11526 = distinct !DILexicalBlock(scope: !11388, file: !311, line: 350, column: 7)
!11527 = !DILocation(line: 350, column: 7, scope: !11388)
!11528 = !DILocation(line: 351, column: 22, scope: !11529)
!11529 = distinct !DILexicalBlock(scope: !11526, file: !311, line: 350, column: 20)
!11530 = !DILocation(line: 351, column: 19, scope: !11529)
!11531 = !DILocation(line: 352, column: 9, scope: !11532)
!11532 = distinct !DILexicalBlock(scope: !11529, file: !311, line: 352, column: 9)
!11533 = !DILocation(line: 352, column: 21, scope: !11532)
!11534 = !DILocation(line: 352, column: 9, scope: !11529)
!11535 = !DILocation(line: 352, column: 11, scope: !11536)
!11536 = distinct !DILexicalBlock(scope: !11537, file: !311, line: 352, column: 11)
!11537 = distinct !DILexicalBlock(scope: !11532, file: !311, line: 352, column: 27)
!11538 = !DILocation(line: 352, column: 28, scope: !11536)
!11539 = !DILocation(line: 352, column: 25, scope: !11536)
!11540 = !DILocation(line: 352, column: 11, scope: !11537)
!11541 = !DILocation(line: 356, column: 21, scope: !11542)
!11542 = distinct !DILexicalBlock(scope: !11536, file: !311, line: 352, column: 43)
!11543 = !DILocation(line: 357, column: 25, scope: !11542)
!11544 = !DILocation(line: 357, column: 23, scope: !11542)
!11545 = !DILocation(line: 358, column: 7, scope: !11542)
!11546 = !DILocation(line: 352, column: 9, scope: !11547)
!11547 = distinct !DILexicalBlock(scope: !11536, file: !311, line: 358, column: 14)
!11548 = !DILocation(line: 354, column: 5, scope: !11537)
!11549 = !DILocation(line: 352, column: 9, scope: !11550)
!11550 = distinct !DILexicalBlock(scope: !11532, file: !311, line: 352, column: 9)
!11551 = !DILocation(line: 352, column: 21, scope: !11550)
!11552 = !DILocation(line: 352, column: 11, scope: !11553)
!11553 = distinct !DILexicalBlock(scope: !11554, file: !311, line: 352, column: 11)
!11554 = distinct !DILexicalBlock(scope: !11550, file: !311, line: 352, column: 27)
!11555 = !DILocation(line: 352, column: 28, scope: !11553)
!11556 = !DILocation(line: 352, column: 25, scope: !11553)
!11557 = !DILocation(line: 352, column: 11, scope: !11554)
!11558 = !DILocation(line: 356, column: 21, scope: !11559)
!11559 = distinct !DILexicalBlock(scope: !11553, file: !311, line: 352, column: 43)
!11560 = !DILocation(line: 357, column: 25, scope: !11559)
!11561 = !DILocation(line: 357, column: 23, scope: !11559)
!11562 = !DILocation(line: 358, column: 7, scope: !11559)
!11563 = !DILocation(line: 359, column: 5, scope: !11554)
!11564 = !DILocation(line: 360, column: 3, scope: !11529)
!11565 = !DILocation(line: 361, column: 3, scope: !11388)
!11566 = distinct !DISubprogram(name: "version___0", scope: !451, file: !451, line: 375, type: !272, scopeLine: 376, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !666)
!11567 = !DILocalVariable(name: "__cil_tmp1", scope: !11566, file: !451, line: 377, type: !16)
!11568 = !DILocation(line: 377, column: 9, scope: !11566)
!11569 = !DILocation(line: 377, column: 3, scope: !11570)
!11570 = distinct !DILexicalBlock(scope: !11571, file: !451, line: 381, column: 3)
!11571 = distinct !DILexicalBlock(scope: !11572, file: !451, line: 380, column: 3)
!11572 = distinct !DILexicalBlock(scope: !11566, file: !451, line: 379, column: 3)
!11573 = !DILocation(line: 378, column: 3, scope: !11574)
!11574 = distinct !DILexicalBlock(scope: !11571, file: !451, line: 379, column: 3)
!11575 = !DILocation(line: 382, column: 1, scope: !11566)
!11576 = distinct !DISubprogram(name: "is_le_machine", scope: !1414, file: !1414, line: 113, type: !1783, scopeLine: 114, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !666)
!11577 = !DILocation(line: 114, column: 3, scope: !11578)
!11578 = distinct !DILexicalBlock(scope: !11576, file: !1414, line: 117, column: 3)
!11579 = distinct !DISubprogram(name: "swap_endian", scope: !451, file: !451, line: 176, type: !4076, scopeLine: 177, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !666)
!11580 = !DILocalVariable(name: "buf___3", arg: 1, scope: !11579, file: !451, line: 176, type: !151)
!11581 = !DILocation(line: 0, scope: !11579)
!11582 = !DILocalVariable(name: "i", scope: !11579, file: !451, line: 178, type: !15)
!11583 = !DILocation(line: 180, column: 3, scope: !11584)
!11584 = distinct !DILexicalBlock(scope: !11585, file: !451, line: 182, column: 3)
!11585 = distinct !DILexicalBlock(scope: !11586, file: !451, line: 181, column: 3)
!11586 = distinct !DILexicalBlock(scope: !11579, file: !451, line: 181, column: 3)
!11587 = !DILocation(line: 0, scope: !11586)
!11588 = !DILocation(line: 180, column: 13, scope: !11584)
!11589 = !DILocation(line: 180, column: 57, scope: !11590)
!11590 = distinct !DILexicalBlock(scope: !11591, file: !451, line: 180, column: 9)
!11591 = distinct !DILexicalBlock(scope: !11584, file: !451, line: 180, column: 13)
!11592 = !DILocation(line: 180, column: 63, scope: !11590)
!11593 = !DILocation(line: 180, column: 30, scope: !11590)
!11594 = !DILocation(line: 180, column: 9, scope: !11591)
!11595 = !DILocation(line: 180, column: 7, scope: !11596)
!11596 = distinct !DILexicalBlock(scope: !11590, file: !451, line: 180, column: 82)
!11597 = !DILocation(line: 181, column: 20, scope: !11591)
!11598 = !DILocation(line: 181, column: 25, scope: !11591)
!11599 = !DILocation(line: 181, column: 9, scope: !11591)
!11600 = !DILocalVariable(name: "x", scope: !11579, file: !451, line: 179, type: !90)
!11601 = !DILocation(line: 182, column: 41, scope: !11591)
!11602 = !DILocation(line: 182, column: 49, scope: !11591)
!11603 = !DILocation(line: 182, column: 56, scope: !11591)
!11604 = !DILocation(line: 182, column: 65, scope: !11591)
!11605 = !DILocation(line: 182, column: 73, scope: !11591)
!11606 = !DILocation(line: 182, column: 62, scope: !11591)
!11607 = !DILocation(line: 182, column: 28, scope: !11591)
!11608 = !DILocation(line: 182, column: 16, scope: !11591)
!11609 = !DILocation(line: 182, column: 21, scope: !11591)
!11610 = !DILocation(line: 182, column: 26, scope: !11591)
!11611 = !DILocation(line: 180, column: 7, scope: !11591)
!11612 = distinct !{!11612, !11583, !11613}
!11613 = !DILocation(line: 181, column: 3, scope: !11584)
!11614 = !DILocation(line: 183, column: 3, scope: !11584)
!11615 = !DILocation(line: 184, column: 3, scope: !11586)
!11616 = distinct !DISubprogram(name: "is_be_machine", scope: !1414, file: !1414, line: 117, type: !1783, scopeLine: 118, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !666)
!11617 = !DILocation(line: 118, column: 3, scope: !11618)
!11618 = distinct !DILexicalBlock(scope: !11616, file: !1414, line: 121, column: 3)
!11619 = distinct !DISubprogram(name: "get_next_subsong", scope: !451, file: !451, line: 220, type: !2818, scopeLine: 221, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !666)
!11620 = !DILocalVariable(name: "gbs", arg: 1, scope: !11619, file: !451, line: 220, type: !96)
!11621 = !DILocation(line: 0, scope: !11619)
!11622 = !DILocalVariable(name: "next", scope: !11619, file: !451, line: 222, type: !15)
!11623 = !DILocation(line: 226, column: 7, scope: !11624)
!11624 = distinct !DILexicalBlock(scope: !11625, file: !451, line: 226, column: 7)
!11625 = distinct !DILexicalBlock(scope: !11626, file: !451, line: 224, column: 3)
!11626 = distinct !DILexicalBlock(scope: !11619, file: !451, line: 224, column: 3)
!11627 = !DILocation(line: 226, column: 16, scope: !11624)
!11628 = !DILocation(line: 226, column: 7, scope: !11625)
!11629 = !DILocation(line: 226, column: 5, scope: !11630)
!11630 = distinct !DILexicalBlock(scope: !11624, file: !451, line: 226, column: 23)
!11631 = !DILocation(line: 230, column: 7, scope: !11632)
!11632 = distinct !DILexicalBlock(scope: !11625, file: !451, line: 230, column: 7)
!11633 = !DILocation(line: 230, column: 16, scope: !11632)
!11634 = !DILocation(line: 230, column: 7, scope: !11625)
!11635 = !DILocation(line: 230, column: 5, scope: !11636)
!11636 = distinct !DILexicalBlock(scope: !11632, file: !451, line: 230, column: 23)
!11637 = !DILocation(line: 241, column: 7, scope: !11638)
!11638 = distinct !DILexicalBlock(scope: !11625, file: !451, line: 241, column: 7)
!11639 = !DILocation(line: 241, column: 16, scope: !11638)
!11640 = !DILocation(line: 241, column: 7, scope: !11625)
!11641 = !DILocation(line: 241, column: 5, scope: !11642)
!11642 = distinct !DILexicalBlock(scope: !11638, file: !451, line: 241, column: 23)
!11643 = !DILocation(line: 224, column: 3, scope: !11625)
!11644 = !DILocation(line: 227, column: 25, scope: !11645)
!11645 = distinct !DILexicalBlock(scope: !11646, file: !451, line: 227, column: 3)
!11646 = distinct !DILexicalBlock(scope: !11625, file: !451, line: 226, column: 3)
!11647 = !DILocation(line: 227, column: 10, scope: !11645)
!11648 = !DILocation(line: 228, column: 3, scope: !11625)
!11649 = !DILocation(line: 231, column: 24, scope: !11625)
!11650 = !DILocation(line: 232, column: 7, scope: !11651)
!11651 = distinct !DILexicalBlock(scope: !11625, file: !451, line: 232, column: 7)
!11652 = !DILocation(line: 232, column: 36, scope: !11651)
!11653 = !DILocation(line: 232, column: 28, scope: !11651)
!11654 = !DILocation(line: 232, column: 7, scope: !11625)
!11655 = !DILocation(line: 233, column: 18, scope: !11656)
!11656 = distinct !DILexicalBlock(scope: !11657, file: !451, line: 234, column: 5)
!11657 = distinct !DILexicalBlock(scope: !11658, file: !451, line: 233, column: 5)
!11658 = distinct !DILexicalBlock(scope: !11651, file: !451, line: 232, column: 43)
!11659 = !DILocation(line: 233, column: 10, scope: !11656)
!11660 = !DILocation(line: 233, column: 5, scope: !11656)
!11661 = !DILocation(line: 234, column: 17, scope: !11657)
!11662 = !DILocation(line: 235, column: 44, scope: !11663)
!11663 = distinct !DILexicalBlock(scope: !11657, file: !451, line: 235, column: 5)
!11664 = !DILocation(line: 235, column: 24, scope: !11663)
!11665 = !DILocation(line: 235, column: 22, scope: !11663)
!11666 = !DILocation(line: 236, column: 26, scope: !11657)
!11667 = !DILocation(line: 238, column: 3, scope: !11658)
!11668 = !DILocation(line: 238, column: 12, scope: !11625)
!11669 = !DILocation(line: 238, column: 31, scope: !11625)
!11670 = !DILocation(line: 238, column: 29, scope: !11625)
!11671 = !DILocation(line: 238, column: 10, scope: !11625)
!11672 = !DILocation(line: 239, column: 3, scope: !11625)
!11673 = !DILocation(line: 242, column: 15, scope: !11625)
!11674 = !DILocation(line: 242, column: 23, scope: !11625)
!11675 = !DILocation(line: 243, column: 3, scope: !11625)
!11676 = !DILocation(line: 0, scope: !11626)
!11677 = !DILocation(line: 245, column: 3, scope: !11626)
!11678 = distinct !DISubprogram(name: "setup_playlist", scope: !451, file: !451, line: 202, type: !11679, scopeLine: 203, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !666)
!11679 = !DISubroutineType(types: !11680)
!11680 = !{!21, !15}
!11681 = !DILocalVariable(name: "songs", arg: 1, scope: !11678, file: !451, line: 202, type: !15)
!11682 = !DILocation(line: 0, scope: !11678)
!11683 = !DILocation(line: 208, column: 16, scope: !11684)
!11684 = distinct !DILexicalBlock(scope: !11685, file: !451, line: 210, column: 3)
!11685 = distinct !DILexicalBlock(scope: !11686, file: !451, line: 209, column: 3)
!11686 = distinct !DILexicalBlock(scope: !11678, file: !451, line: 208, column: 3)
!11687 = !DILocation(line: 208, column: 9, scope: !11684)
!11688 = !DILocalVariable(name: "tmp", scope: !11678, file: !451, line: 206, type: !23)
!11689 = !DILocation(line: 208, column: 14, scope: !11685)
!11690 = !DILocalVariable(name: "playlist", scope: !11678, file: !451, line: 205, type: !21)
!11691 = !DILocalVariable(name: "i", scope: !11678, file: !451, line: 204, type: !15)
!11692 = !DILocation(line: 209, column: 3, scope: !11693)
!11693 = distinct !DILexicalBlock(scope: !11694, file: !451, line: 212, column: 3)
!11694 = distinct !DILexicalBlock(scope: !11686, file: !451, line: 211, column: 3)
!11695 = !DILocation(line: 0, scope: !11686)
!11696 = !DILocation(line: 209, column: 13, scope: !11693)
!11697 = !DILocation(line: 209, column: 14, scope: !11698)
!11698 = distinct !DILexicalBlock(scope: !11699, file: !451, line: 209, column: 9)
!11699 = distinct !DILexicalBlock(scope: !11693, file: !451, line: 209, column: 13)
!11700 = !DILocation(line: 209, column: 9, scope: !11699)
!11701 = !DILocation(line: 209, column: 7, scope: !11702)
!11702 = distinct !DILexicalBlock(scope: !11698, file: !451, line: 209, column: 24)
!11703 = !DILocation(line: 210, column: 16, scope: !11699)
!11704 = !DILocation(line: 210, column: 21, scope: !11699)
!11705 = !DILocation(line: 209, column: 7, scope: !11699)
!11706 = distinct !{!11706, !11692, !11707}
!11707 = !DILocation(line: 210, column: 3, scope: !11693)
!11708 = !DILocation(line: 212, column: 3, scope: !11693)
!11709 = !DILocation(line: 214, column: 24, scope: !11710)
!11710 = distinct !DILexicalBlock(scope: !11711, file: !451, line: 216, column: 3)
!11711 = distinct !DILexicalBlock(scope: !11686, file: !451, line: 215, column: 3)
!11712 = !DILocation(line: 214, column: 9, scope: !11710)
!11713 = !DILocation(line: 214, column: 3, scope: !11710)
!11714 = !DILocation(line: 215, column: 3, scope: !11715)
!11715 = distinct !DILexicalBlock(scope: !11711, file: !451, line: 216, column: 3)
!11716 = !DILocation(line: 217, column: 3, scope: !11686)
!11717 = distinct !DISubprogram(name: "volstring", scope: !451, file: !451, line: 524, type: !5592, scopeLine: 525, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !666)
!11718 = !DILocalVariable(name: "v", arg: 1, scope: !11717, file: !451, line: 524, type: !15)
!11719 = !DILocation(line: 0, scope: !11717)
!11720 = !DILocation(line: 526, column: 9, scope: !11721)
!11721 = distinct !DILexicalBlock(scope: !11722, file: !451, line: 526, column: 7)
!11722 = distinct !DILexicalBlock(scope: !11717, file: !451, line: 528, column: 3)
!11723 = !DILocation(line: 526, column: 7, scope: !11722)
!11724 = !DILocation(line: 527, column: 3, scope: !11725)
!11725 = distinct !DILexicalBlock(scope: !11721, file: !451, line: 526, column: 15)
!11726 = !DILocation(line: 527, column: 9, scope: !11727)
!11727 = distinct !DILexicalBlock(scope: !11722, file: !451, line: 527, column: 7)
!11728 = !DILocation(line: 527, column: 7, scope: !11722)
!11729 = !DILocation(line: 528, column: 3, scope: !11730)
!11730 = distinct !DILexicalBlock(scope: !11727, file: !451, line: 527, column: 16)
!11731 = !DILocation(line: 0, scope: !11722)
!11732 = !DILocation(line: 529, column: 26, scope: !11722)
!11733 = !DILocation(line: 529, column: 13, scope: !11722)
!11734 = !DILocation(line: 529, column: 3, scope: !11722)
!11735 = distinct !DISubprogram(name: "reverse_vol", scope: !451, file: !451, line: 144, type: !11736, scopeLine: 145, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !666)
!11736 = !DISubroutineType(types: !11737)
!11737 = !{!16, !16}
!11738 = !DILocalVariable(name: "s", arg: 1, scope: !11735, file: !451, line: 144, type: !16)
!11739 = !DILocation(line: 0, scope: !11735)
!11740 = !DILocalVariable(name: "i", scope: !11735, file: !451, line: 146, type: !15)
!11741 = !DILocation(line: 149, column: 3, scope: !11742)
!11742 = distinct !DILexicalBlock(scope: !11743, file: !451, line: 151, column: 3)
!11743 = distinct !DILexicalBlock(scope: !11744, file: !451, line: 150, column: 3)
!11744 = distinct !DILexicalBlock(scope: !11735, file: !451, line: 148, column: 3)
!11745 = !DILocation(line: 0, scope: !11744)
!11746 = !DILocation(line: 149, column: 13, scope: !11742)
!11747 = !DILocation(line: 149, column: 14, scope: !11748)
!11748 = distinct !DILexicalBlock(scope: !11749, file: !451, line: 149, column: 9)
!11749 = distinct !DILexicalBlock(scope: !11742, file: !451, line: 149, column: 13)
!11750 = !DILocation(line: 149, column: 9, scope: !11749)
!11751 = !DILocation(line: 149, column: 7, scope: !11752)
!11752 = distinct !DILexicalBlock(scope: !11748, file: !451, line: 149, column: 21)
!11753 = !DILocation(line: 150, column: 28, scope: !11749)
!11754 = !DILocation(line: 150, column: 22, scope: !11749)
!11755 = !DILocation(line: 150, column: 18, scope: !11749)
!11756 = !DILocation(line: 150, column: 5, scope: !11749)
!11757 = !DILocation(line: 150, column: 16, scope: !11749)
!11758 = !DILocation(line: 149, column: 7, scope: !11749)
!11759 = distinct !{!11759, !11741, !11760}
!11760 = !DILocation(line: 150, column: 3, scope: !11742)
!11761 = !DILocation(line: 152, column: 3, scope: !11742)
!11762 = !DILocation(line: 152, column: 14, scope: !11744)
!11763 = !DILocation(line: 154, column: 3, scope: !11744)
!11764 = distinct !DISubprogram(name: "chvol", scope: !451, file: !451, line: 510, type: !2603, scopeLine: 511, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !666)
!11765 = !DILocalVariable(name: "ch", arg: 1, scope: !11764, file: !451, line: 510, type: !15)
!11766 = !DILocation(line: 0, scope: !11764)
!11767 = !DILocation(line: 514, column: 7, scope: !11768)
!11768 = distinct !DILexicalBlock(scope: !11769, file: !451, line: 514, column: 7)
!11769 = distinct !DILexicalBlock(scope: !11764, file: !451, line: 514, column: 3)
!11770 = !DILocation(line: 514, column: 19, scope: !11768)
!11771 = !DILocation(line: 514, column: 7, scope: !11769)
!11772 = !DILocation(line: 515, column: 5, scope: !11773)
!11773 = distinct !DILexicalBlock(scope: !11768, file: !451, line: 514, column: 25)
!11774 = !DILocation(line: 514, column: 7, scope: !11775)
!11775 = distinct !DILexicalBlock(scope: !11768, file: !451, line: 514, column: 7)
!11776 = !DILocation(line: 514, column: 19, scope: !11775)
!11777 = !DILocation(line: 514, column: 26, scope: !11775)
!11778 = !DILocation(line: 515, column: 5, scope: !11779)
!11779 = distinct !DILexicalBlock(scope: !11775, file: !451, line: 514, column: 33)
!11780 = !DILocation(line: 517, column: 10, scope: !11781)
!11781 = distinct !DILexicalBlock(scope: !11769, file: !451, line: 517, column: 7)
!11782 = !DILocation(line: 517, column: 7, scope: !11769)
!11783 = !DILocation(line: 518, column: 28, scope: !11784)
!11784 = distinct !DILexicalBlock(scope: !11781, file: !451, line: 517, column: 17)
!11785 = !DILocation(line: 518, column: 35, scope: !11784)
!11786 = !DILocation(line: 518, column: 41, scope: !11784)
!11787 = !DILocation(line: 518, column: 13, scope: !11784)
!11788 = !DILocation(line: 518, column: 48, scope: !11784)
!11789 = !DILocalVariable(name: "v", scope: !11764, file: !451, line: 512, type: !15)
!11790 = !DILocation(line: 519, column: 3, scope: !11784)
!11791 = !DILocation(line: 519, column: 9, scope: !11792)
!11792 = distinct !DILexicalBlock(scope: !11781, file: !451, line: 519, column: 10)
!11793 = !DILocation(line: 519, column: 21, scope: !11792)
!11794 = !DILocation(line: 0, scope: !11781)
!11795 = !DILocation(line: 521, column: 3, scope: !11769)
!11796 = !DILocation(line: 0, scope: !11769)
!11797 = !DILocation(line: 523, column: 1, scope: !11764)
!11798 = distinct !DISubprogram(name: "notestring", scope: !451, file: !451, line: 496, type: !5592, scopeLine: 497, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !666)
!11799 = !DILocalVariable(name: "ch", arg: 1, scope: !11798, file: !451, line: 496, type: !15)
!11800 = !DILocation(line: 0, scope: !11798)
!11801 = !DILocalVariable(name: "__cil_tmp3", scope: !11798, file: !451, line: 499, type: !16)
!11802 = !DILocation(line: 499, column: 9, scope: !11798)
!11803 = !DILocalVariable(name: "__cil_tmp4", scope: !11798, file: !451, line: 500, type: !16)
!11804 = !DILocation(line: 500, column: 9, scope: !11798)
!11805 = !DILocalVariable(name: "__cil_tmp5", scope: !11798, file: !451, line: 501, type: !16)
!11806 = !DILocation(line: 501, column: 9, scope: !11798)
!11807 = !DILocalVariable(name: "__cil_tmp6", scope: !11798, file: !451, line: 502, type: !16)
!11808 = !DILocation(line: 502, column: 9, scope: !11798)
!11809 = !DILocation(line: 500, column: 7, scope: !11810)
!11810 = distinct !DILexicalBlock(scope: !11811, file: !451, line: 500, column: 7)
!11811 = distinct !DILexicalBlock(scope: !11798, file: !451, line: 504, column: 3)
!11812 = !DILocation(line: 500, column: 19, scope: !11810)
!11813 = !DILocation(line: 500, column: 7, scope: !11811)
!11814 = !DILocation(line: 500, column: 5, scope: !11815)
!11815 = distinct !DILexicalBlock(scope: !11810, file: !451, line: 500, column: 25)
!11816 = !DILocation(line: 502, column: 7, scope: !11817)
!11817 = distinct !DILexicalBlock(scope: !11811, file: !451, line: 502, column: 7)
!11818 = !DILocation(line: 502, column: 19, scope: !11817)
!11819 = !DILocation(line: 502, column: 26, scope: !11817)
!11820 = !DILocation(line: 502, column: 7, scope: !11811)
!11821 = !DILocation(line: 503, column: 5, scope: !11822)
!11822 = distinct !DILexicalBlock(scope: !11817, file: !451, line: 502, column: 33)
!11823 = !DILocation(line: 502, column: 7, scope: !11824)
!11824 = distinct !DILexicalBlock(scope: !11817, file: !451, line: 502, column: 7)
!11825 = !DILocation(line: 502, column: 19, scope: !11824)
!11826 = !DILocation(line: 502, column: 26, scope: !11824)
!11827 = !DILocation(line: 503, column: 5, scope: !11828)
!11828 = distinct !DILexicalBlock(scope: !11824, file: !451, line: 502, column: 33)
!11829 = !DILocation(line: 505, column: 15, scope: !11830)
!11830 = distinct !DILexicalBlock(scope: !11831, file: !451, line: 506, column: 3)
!11831 = distinct !DILexicalBlock(scope: !11811, file: !451, line: 505, column: 3)
!11832 = !DILocation(line: 505, column: 27, scope: !11830)
!11833 = !DILocation(line: 505, column: 7, scope: !11830)
!11834 = !DILocalVariable(name: "n", scope: !11798, file: !451, line: 498, type: !15)
!11835 = !DILocation(line: 506, column: 10, scope: !11836)
!11836 = distinct !DILexicalBlock(scope: !11811, file: !451, line: 506, column: 7)
!11837 = !DILocation(line: 506, column: 7, scope: !11811)
!11838 = !DILocation(line: 506, column: 29, scope: !11839)
!11839 = distinct !DILexicalBlock(scope: !11836, file: !451, line: 506, column: 17)
!11840 = !DILocation(line: 506, column: 15, scope: !11839)
!11841 = !DILocation(line: 506, column: 5, scope: !11839)
!11842 = !DILocation(line: 507, column: 5, scope: !11843)
!11843 = distinct !DILexicalBlock(scope: !11836, file: !451, line: 507, column: 10)
!11844 = !DILocation(line: 0, scope: !11811)
!11845 = !DILocation(line: 510, column: 1, scope: !11798)
!11846 = distinct !DISubprogram(name: "getnote", scope: !451, file: !451, line: 109, type: !2603, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !666)
!11847 = !DILocalVariable(name: "div___2", arg: 1, scope: !11846, file: !451, line: 109, type: !15)
!11848 = !DILocation(line: 0, scope: !11846)
!11849 = !DILocalVariable(name: "n", scope: !11846, file: !451, line: 111, type: !15)
!11850 = !DILocation(line: 113, column: 15, scope: !11851)
!11851 = distinct !DILexicalBlock(scope: !11852, file: !451, line: 113, column: 7)
!11852 = distinct !DILexicalBlock(scope: !11846, file: !451, line: 114, column: 3)
!11853 = !DILocation(line: 113, column: 7, scope: !11852)
!11854 = !DILocation(line: 114, column: 33, scope: !11855)
!11855 = distinct !DILexicalBlock(scope: !11856, file: !451, line: 115, column: 5)
!11856 = distinct !DILexicalBlock(scope: !11857, file: !451, line: 114, column: 5)
!11857 = distinct !DILexicalBlock(scope: !11851, file: !451, line: 113, column: 21)
!11858 = !DILocation(line: 114, column: 15, scope: !11855)
!11859 = !DILocation(line: 114, column: 11, scope: !11855)
!11860 = !DILocalVariable(name: "tmp", scope: !11846, file: !451, line: 112, type: !91)
!11861 = !DILocation(line: 114, column: 22, scope: !11856)
!11862 = !DILocation(line: 114, column: 46, scope: !11856)
!11863 = !DILocation(line: 114, column: 72, scope: !11856)
!11864 = !DILocation(line: 114, column: 86, scope: !11856)
!11865 = !DILocation(line: 114, column: 9, scope: !11856)
!11866 = !DILocation(line: 116, column: 3, scope: !11857)
!11867 = !DILocation(line: 0, scope: !11852)
!11868 = !DILocation(line: 117, column: 9, scope: !11869)
!11869 = distinct !DILexicalBlock(scope: !11852, file: !451, line: 117, column: 7)
!11870 = !DILocation(line: 117, column: 7, scope: !11852)
!11871 = !DILocation(line: 119, column: 3, scope: !11872)
!11872 = distinct !DILexicalBlock(scope: !11869, file: !451, line: 117, column: 15)
!11873 = !DILocation(line: 119, column: 9, scope: !11874)
!11874 = distinct !DILexicalBlock(scope: !11869, file: !451, line: 119, column: 7)
!11875 = !DILocation(line: 119, column: 7, scope: !11869)
!11876 = !DILocation(line: 121, column: 3, scope: !11877)
!11877 = distinct !DILexicalBlock(scope: !11874, file: !451, line: 119, column: 18)
!11878 = !DILocation(line: 0, scope: !11869)
!11879 = !DILocation(line: 123, column: 3, scope: !11852)
!11880 = distinct !DISubprogram(name: "get_prev_subsong", scope: !451, file: !451, line: 248, type: !11881, scopeLine: 249, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !666)
!11881 = !DISubroutineType(types: !11882)
!11882 = !{!14, !96}
!11883 = !DILocalVariable(name: "gbs", arg: 1, scope: !11880, file: !451, line: 248, type: !96)
!11884 = !DILocation(line: 0, scope: !11880)
!11885 = !DILocalVariable(name: "prev", scope: !11880, file: !451, line: 250, type: !14)
!11886 = !DILocation(line: 254, column: 7, scope: !11887)
!11887 = distinct !DILexicalBlock(scope: !11888, file: !451, line: 254, column: 7)
!11888 = distinct !DILexicalBlock(scope: !11889, file: !451, line: 252, column: 3)
!11889 = distinct !DILexicalBlock(scope: !11880, file: !451, line: 253, column: 3)
!11890 = !DILocation(line: 254, column: 16, scope: !11887)
!11891 = !DILocation(line: 254, column: 7, scope: !11888)
!11892 = !DILocation(line: 254, column: 5, scope: !11893)
!11893 = distinct !DILexicalBlock(scope: !11887, file: !451, line: 254, column: 23)
!11894 = !DILocation(line: 258, column: 7, scope: !11895)
!11895 = distinct !DILexicalBlock(scope: !11888, file: !451, line: 258, column: 7)
!11896 = !DILocation(line: 258, column: 16, scope: !11895)
!11897 = !DILocation(line: 258, column: 7, scope: !11888)
!11898 = !DILocation(line: 258, column: 5, scope: !11899)
!11899 = distinct !DILexicalBlock(scope: !11895, file: !451, line: 258, column: 23)
!11900 = !DILocation(line: 269, column: 7, scope: !11901)
!11901 = distinct !DILexicalBlock(scope: !11888, file: !451, line: 269, column: 7)
!11902 = !DILocation(line: 269, column: 16, scope: !11901)
!11903 = !DILocation(line: 269, column: 7, scope: !11888)
!11904 = !DILocation(line: 269, column: 5, scope: !11905)
!11905 = distinct !DILexicalBlock(scope: !11901, file: !451, line: 269, column: 23)
!11906 = !DILocation(line: 252, column: 3, scope: !11888)
!11907 = !DILocation(line: 255, column: 24, scope: !11908)
!11908 = distinct !DILexicalBlock(scope: !11909, file: !451, line: 255, column: 3)
!11909 = distinct !DILexicalBlock(scope: !11888, file: !451, line: 254, column: 3)
!11910 = !DILocation(line: 255, column: 9, scope: !11908)
!11911 = !DILocalVariable(name: "tmp", scope: !11880, file: !451, line: 251, type: !15)
!11912 = !DILocation(line: 255, column: 10, scope: !11909)
!11913 = !DILocation(line: 256, column: 3, scope: !11888)
!11914 = !DILocation(line: 259, column: 24, scope: !11888)
!11915 = !DILocation(line: 260, column: 7, scope: !11916)
!11916 = distinct !DILexicalBlock(scope: !11888, file: !451, line: 260, column: 7)
!11917 = !DILocation(line: 260, column: 28, scope: !11916)
!11918 = !DILocation(line: 260, column: 7, scope: !11888)
!11919 = !DILocation(line: 261, column: 18, scope: !11920)
!11920 = distinct !DILexicalBlock(scope: !11921, file: !451, line: 262, column: 5)
!11921 = distinct !DILexicalBlock(scope: !11922, file: !451, line: 261, column: 5)
!11922 = distinct !DILexicalBlock(scope: !11916, file: !451, line: 260, column: 36)
!11923 = !DILocation(line: 261, column: 10, scope: !11920)
!11924 = !DILocation(line: 261, column: 5, scope: !11920)
!11925 = !DILocation(line: 262, column: 17, scope: !11921)
!11926 = !DILocation(line: 263, column: 44, scope: !11927)
!11927 = distinct !DILexicalBlock(scope: !11921, file: !451, line: 263, column: 5)
!11928 = !DILocation(line: 263, column: 24, scope: !11927)
!11929 = !DILocation(line: 263, column: 22, scope: !11927)
!11930 = !DILocation(line: 264, column: 33, scope: !11921)
!11931 = !DILocation(line: 264, column: 39, scope: !11921)
!11932 = !DILocation(line: 264, column: 26, scope: !11921)
!11933 = !DILocation(line: 266, column: 3, scope: !11922)
!11934 = !DILocation(line: 266, column: 18, scope: !11888)
!11935 = !DILocation(line: 266, column: 37, scope: !11888)
!11936 = !DILocation(line: 266, column: 35, scope: !11888)
!11937 = !DILocation(line: 266, column: 16, scope: !11888)
!11938 = !DILocation(line: 266, column: 10, scope: !11888)
!11939 = !DILocation(line: 267, column: 3, scope: !11888)
!11940 = !DILocation(line: 270, column: 22, scope: !11888)
!11941 = !DILocation(line: 270, column: 30, scope: !11888)
!11942 = !DILocation(line: 270, column: 10, scope: !11888)
!11943 = !DILocation(line: 271, column: 3, scope: !11888)
!11944 = !DILocation(line: 0, scope: !11889)
!11945 = !DILocation(line: 273, column: 3, scope: !11889)
